{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:44:31"}, "code_repository": [{"result": {"value": "https://github.com/rbardenet/dppmc", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "rbardenet", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2016-11-08T22:55:11Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2022-11-02T05:42:24Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "description": [{"result": {"value": "Monte Carlo with determinantal point processes", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "This package implements sampling from multivariate Jacobi ensembles, as used in the paper \n", "original_header": "dppmc"}, "confidence": 0.8324045223650124, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/rbardenet/dppmc/master/README.md"}], "name": [{"result": {"value": "dppmc", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "rbardenet/dppmc", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/rbardenet/dppmc/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/rbardenet/dppmc/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 2, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 0, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/rbardenet/dppmc/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 483837}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 17764}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C", "name": "C", "type": "Programming_language", "size": 597}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/rbardenet/dppmc/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/rbardenet/dppmc/master/dppmc/docs/examples.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/rbardenet/dppmc/master/dppmc/docs/examples.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/rbardenet/dppmc/master/dppmc/docs/.ipynb_checkpoints/examples-checkpoint.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/rbardenet/dppmc/master/dppmc/docs/.ipynb_checkpoints/examples-checkpoint.ipynb"}], "installation": [{"result": {"value": "Start by cloning this repository\n```\ngit clone https://github.com/rbardenet/dppmc.git\ncd dppmc\n```\nthen run `setup.py`, e.g. using `pip`\n```\npip install .\n```\nand compile the following shared C library\n```\ngcc -shared -o myJacobiPoly.so myJacobiPoly.c\n```\nYou should now be able to run the example\n```\ncd dppmc/examples\npython example1.py\n```\nSuch examples, along with various illustrations of the notions in the paper, like the graded lexicographic order or the bound used in rejection sampling, can be found in a Jupyter notebook\n```\ncd dppmc/docs\njupyter notebook examples.ipynb\n```\n", "type": "Text_excerpt", "original_header": "Install from sources", "parent_header": ["dppmc"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/rbardenet/dppmc/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Our instructions cover Linux and Mac only. You need the [gcc](https://gcc.gnu.org/) C compiler installed. On Linux, it usually comes preinstalled. On Mac, you can install it as part of the [XCode command line tools](https://developer.apple.com/xcode/).\n \n", "original_header": "Prerequirements"}, "confidence": 0.9664203923457445, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/rbardenet/dppmc/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "dppmc"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/rbardenet/dppmc/master/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/abs/1605.00361]\n\n## Prerequirements\nOur instructions cover Linux and Mac only. You need the [gcc](https://gcc.gnu.org/"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/rbardenet/dppmc/master/README.md"}]}