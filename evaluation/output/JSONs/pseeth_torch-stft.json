{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:00:00"}, "code_repository": [{"result": {"value": "https://github.com/pseeth/torch-stft", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "pseeth", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2017-11-18T09:00:39Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T03:27:36Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/bsd-3-clause", "type": "License", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "url": "https://api.github.com/licenses/bsd-3-clause", "spdx_id": "BSD-3-Clause"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "BSD 3-Clause License\n\nCopyright (c) 2017, Prem Seetharaman\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/LICENSE"}], "description": [{"result": {"value": "An STFT/iSTFT for PyTorch.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "An STFT/iSTFT written up in PyTorch using 1D Convolutions. Requirements are a recent version PyTorch, numpy, and librosa (for loading audio in test_stft.py). Thanks to Shrikant Venkataramani for sharing code this was based off of and Rafael Valle for catching bugs and adding the proper windowing logic. Uses Python 3.\n \n", "original_header": "STFT/iSTFT in PyTorch"}, "confidence": 0.9299645668682253, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Unfortunately, since it's implemented with 1D Convolutions, some filter_length/hop_length \ncombinations can result in out of memory errors on your GPU when run on sufficiently large input. \n", "original_header": "Tests"}, "confidence": 0.8372243745064664, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}], "name": [{"result": {"value": "torch-stft", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "pseeth/torch-stft", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/pseeth/torch-stft/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/pseeth/torch-stft/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 314, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 52, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/pseeth/torch-stft/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 16137}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 130}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "Install easily with pip:\n```\npip install torch-stft\n```\n", "type": "Text_excerpt", "original_header": "Installation", "parent_header": ["STFT/iSTFT in PyTorch"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Test it by just cloning this repo and running\n    \n```\npip install -r requirements.txt\npython -m pytest .\n``` \n", "original_header": "Tests"}, "confidence": 0.9812612549459744, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}], "usage": [{"result": {"value": "```\nimport torch\nfrom torch_stft import STFT\nimport numpy as np\nimport librosa \nimport matplotlib.pyplot as plt\n\naudio = librosa.load(librosa.util.example_audio_file(), duration=10.0, offset=30)[0]\ndevice = 'cpu'\nfilter_length = 1024\nhop_length = 256\nwin_length = 1024 # doesn't need to be specified. if not specified, it's the same as filter_length\nwindow = 'hann'\n\naudio = torch.FloatTensor(audio)\naudio = audio.unsqueeze(0)\naudio = audio.to(device)\n\nstft = STFT(\n    filter_length=filter_length, \n    hop_length=hop_length, \n    win_length=win_length,\n    window=window\n).to(device)\n\nmagnitude, phase = stft.transform(audio)\noutput = stft.inverse(magnitude, phase)\noutput = output.cpu().data.numpy()[..., :]\naudio = audio.cpu().data.numpy()[..., :]\nprint(np.mean((output - audio) ** 2)) # on order of 1e-16\n```\n\nOutput of [`compare_stft.py`](compare_stft.py):\n\n![images/stft.png](images/stft.png)\n", "type": "Text_excerpt", "original_header": "Usage", "parent_header": ["STFT/iSTFT in PyTorch"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}], "contributing_guidelines": [{"result": {"value": "Pull requests welcome.\n\n", "type": "Text_excerpt", "original_header": "Contributing", "parent_header": ["STFT/iSTFT in PyTorch"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "STFT/iSTFT in PyTorch"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}], "image": [{"result": {"type": "Url", "value": "https://raw.githubusercontent.com/pseeth/torch-stft/master/images/stft.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/pseeth/torch-stft/master/README.md"}]}