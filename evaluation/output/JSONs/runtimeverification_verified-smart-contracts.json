{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:57:06"}, "code_repository": [{"result": {"value": "https://github.com/runtimeverification/verified-smart-contracts", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "runtimeverification", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2018-02-24T20:36:23Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-12T14:52:28Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": null, "type": "License", "name": "Other", "url": null, "spdx_id": "NOASSERTION"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "# Reproducibility License 1.1.0\n\n## Acceptance\n\nIn order to get any license under these terms, you must\nagree to their rules.  Those rules are both obligations\nunder your agreement and conditions to all your licenses.\n\n## <a id=\"reproducibility\">Reproducibility</a>\n\nThese terms license you _only_ for the following purposes:\n\n1.  You may reproduce published research results that the\n    licensor achieved using this software.\n\n2.  You may produce and reproduce research results of your\n    own, and of others, only for noncommercial purposes.\n\nThese terms do _not_ license you for any other purpose,\nsuch as producing or reproducing new research results for\ncommercial purposes.\n\n## Copyright\n\nThe licensor grants you a copyright license for\nthe software.  That license covers everything you\nmight do with the software that would infringe the\nlicensor's copyright in it, for the purposes permitted\nin [Reproducibility](#reproducibility).  That license\ndoes _not_ cover making changes or new work based on the\nsoftware or removing this license from the software.\n\n## Patent\n\nThe licensor grants you a patent license for the software.\nThat license covers patent claims the licensor can\nlicense, or becomes able to license, that you would have to\ninfringe to use the software for the purposes permitted in\n[Reproducibility](#reproducibility).  That license does\n_not_ cover selling the software.\n\n## Patent Defense\n\nIf you or any affiliated company makes any written claim\nalleging that the software infringes or contributes to\ninfringement of a patent, your patent license under these\nterms ends immediately.\n\n## No Other Rights\n\nThese terms do not allow you to sublicense or transfer\nany licenses to anyone else, or prevent the licensor from\ngranting licenses to anyone else.  These terms do not\nimply any other licenses.\n\n## Reliability\n\nThe licensor may not revoke any license under these terms.\n\n## No Liability\n\n***As far as the law allows, this software comes as is,\nwithout any warranty or condition, and the licensor will\nnot be liable to anyone for any damages related to this\nsoftware or this license, under any kind of legal claim.***\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/LICENSE.md"}, {"result": {"value": "Copyrightable work in this repository is licensed by Runtime Verification, Inc. under the terms of [The Reproducibility License 1.1.0](/LICENSE.md), a restrictive license.  That license is very readable, and you should read it.  Most will want to pay special attention to its [Reproducibility section](./LICENSE.md#reproducibility).\n\nOther parts of the proof toolchain, including the K-framework, are licensed under different, open source terms, like those of The University of Illinois/NCSA Open Source License.\n", "type": "Text_excerpt", "original_header": "License", "parent_header": ["Formally Verified Smart Contracts"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}], "description": [{"result": {"value": "Smart contracts which are formally verified", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "This repository contains smart contracts that have been formally verified by\n[Runtime Verification](http://runtimeverification.com) and/or collaborators. \nTo verify a smart contract, we need to first produce a formal specification\nstating *what* the smart contract is supposed to do.\nThis is often the most difficult part of the verification effort, requiring\nsometimes several rounds of discussions and meetings with the owners of the\nsmart contract, to ensure that everybody is on the same page regarding the\nintended functionality of the smart contract.\nNot surprisingly, many bugs or opportunities for improvement in the smart\ncontract code are found at this early stage.\nThen we need to show that the binary or low-level code\n(e.g., [EVM binary][KEVM] or [IELE code][IELE]) generated\nby the compiler from the smart contract high level code\n(e.g., [Solidity] or [Vyper]) indeed satisfies the specification.\nIn our approach the proofs use [reachability logic],\na generalization of Hoare logic, separation logic and modal logic, and are\nperformed using the [K-framework].\nThe K framework takes a formal semantics of a language as trusted input\n(e.g., that of [EVM][KEVM] or [IELE]), and then uses\nit to symbolically execute the smart contract exhaustively on all paths,\nmaking use of SMT solvers like [Z3] to solve the mathematical domain constraints. \n", "original_header": "Formally Verified Smart Contracts"}, "confidence": 0.9687757979314746, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "We use the [K-framework] and its verification infrastructure throughout the formal verification effort.\nAll of the formal specifications are mechanized within the K-framework as well.\nTherefore, some background knowledge about the K-framework would be necessary for reading and fully understanding the formal specifications and reproducing the mechanized proofs.\nWe refer the reader to the following resources for background knowledge about the K-framework and its verification infrastructure. \n* [K-framework]\n  * [Download] and [install]\n  * [K tutorial]\n  * [K editor support]\n* [KEVM]: an executable formal semantics of the EVM in K\n  * [Jellopaper]: reader-friendly formatting of KEVM\n  * [KEVM research paper]\n* [K reachability logic prover]\n  * [eDSL]: domain-specific language for EVM-level specifications\n* [ERC20-K]: a formal specification of the high-level business logic of [ERC20]\n* [ERC20-EVM]: an EVM-level refinement of ERC20-K\n* [ERC777-K]: a formal specification of the high-level business logic of [ERC777]\n \n", "original_header": "Resources"}, "confidence": 0.9634533793955377, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "This repository does not constitute legal or investment advice. The preparers of this repository present it as an informational exercise documenting the due diligence involved in the secure development of the target contract only, and make no material claims or guarantees concerning the contract's operation post-deployment. The preparers of this repository assume no liability for any and all potential consequences of the deployment or use of this contract. \n*The formal verification results presented here only show that the target contract behaviors meet the formal (functional) specifications. Moreover, the correctness of the generated formal proofs assumes the correctness of the specifications and their refinement, the correctness of [KEVM], the correctness of the [K-framework]'s [reachability logic theorem prover], and the correctness of the [Z3] SMT solver. The presented result makes no guarantee about properties not specified in the formal specification. Importantly, the presented formal specification considers only the behaviors within the EVM, without considering the block/transaction level properties or off-chain behaviors, meaning that the verification result does not completely rule out the possibility of the contract being vulnerable to existing and/or unknown attacks.* \nSmart contracts are still a nascent software arena, and their deployment and public offering carries substantial risk. This repository makes no claims that its analysis is fully comprehensive, and recommends always seeking multiple opinions and audits. \nThis repository is also not comprehensive in scope, excluding a number of components critical to the correct operation of this system. \nThe possibility of human error in the manual review process is very real, and we recommend seeking multiple independent opinions on any claims which impact a large quantity of funds. \n", "original_header": "Disclaimer"}, "confidence": 0.9840861278112646, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}], "name": [{"result": {"value": "verified-smart-contracts", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "runtimeverification/verified-smart-contracts", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/runtimeverification/verified-smart-contracts/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/runtimeverification/verified-smart-contracts/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 687, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 145, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/runtimeverification/verified-smart-contracts/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Solidity", "name": "Solidity", "type": "Programming_language", "size": 688808}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 49289}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 37574}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 4407}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "TeX", "name": "TeX", "type": "Programming_language", "size": 3745}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Dockerfile", "name": "Dockerfile", "type": "Programming_language", "size": 1960}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "SMT", "name": "SMT", "type": "Programming_language", "size": 1823}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Lua", "name": "Lua", "type": "Programming_language", "size": 671}, "confidence": 1, "technique": "GitHub_API"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/Dockerfile"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/run-proofs.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/deposit/algorithm-correctness/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/resources/build-html.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/script/dkprove.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "application_domain": [{"result": {"type": "String", "value": "Natural Language Processing"}, "confidence": 0.9024407328364108, "technique": "supervised_classification"}], "installation": [{"result": {"type": "Text_excerpt", "value": "\n[KEVM]: <https://github.com/kframework/evm-semantics>\n[K-framework]: <http://www.kframework.org>\n[reachability logic theorem prover]: <http://fsl.cs.illinois.edu/index.php/Semantics-Based_Program_Verifiers_for_All_Languages>\n[K reachability logic prover]: <http://fsl.cs.illinois.edu/index.php/Semantics-Based_Program_Verifiers_for_All_Languages>\n[Download]: <https://github.com/kframework/k5/releases>\n[install]: <https://github.com/kframework/k5/blob/master/README.md>\n[K tutorial]: <https://github.com/kframework/k5/tree/master/k-distribution/tutorial>\n[K editor support]: <https://github.com/kframework/k-editor-support>\n[Jellopaper]: <https://jellopaper.org/>\n[KEVM technical report]: <https://www.ideals.illinois.edu/handle/2142/97207>\n[KEVM research paper]: <http://fsl.cs.illinois.edu/FSL/papers/2018/hildenbrandt-saxena-zhu-rodrigues-daian-guth-moore-zhang-park-rosu-2018-csf/hildenbrandt-saxena-zhu-rodrigues-daian-guth-moore-zhang-park-rosu-2018-csf-public.pdf>\n[Z3]: <https://github.com/Z3Prover/z3>\n[eDSL]: </resources/edsl.md>\n[ERC20]: <https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md>\n[ERC20-K]: <https://github.com/runtimeverification/erc20-semantics>\n[ERC20-EVM]: </resources/erc20-evm.md>\n[ERC777]: <https://github.com/ethereum/eips/issues/777> \n[IELE]: <https://github.com/runtimeverification/iele-semantics>\n[Solidity]: <https://solidity.readthedocs.io/en/develop/>\n[Vyper]: <https://github.com/ethereum/vyper>\n[reachability logic]: <http://fsl.cs.illinois.edu/index.php/Reachability_Logic>\n[ERC777-K]: <https://github.com/runtimeverification/erc777-semantics>\n \n", "original_header": "Disclaimer"}, "confidence": 0.8546902205721136, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "Formally Verified Smart Contracts"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}], "related_documentation": [{"result": {"type": "Url", "value": "https://solidity.readthedocs.io/", "format": "readthedocs"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}], "documentation": [{"result": {"type": "Url", "value": "https://github.com/runtimeverification/verified-smart-contracts/wiki", "format": "wiki"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/runtimeverification/verified-smart-contracts/master/README.md"}]}