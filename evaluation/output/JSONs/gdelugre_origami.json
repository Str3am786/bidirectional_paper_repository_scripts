{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:49:04"}, "code_repository": [{"result": {"value": "https://github.com/gdelugre/origami", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "gdelugre", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2016-08-19T12:32:55Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-06T08:49:43Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/lgpl-3.0", "type": "License", "name": "GNU Lesser General Public License v3.0", "url": "https://api.github.com/licenses/lgpl-3.0", "spdx_id": "LGPL-3.0"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Origami is distributed under the [LGPL](COPYING.LESSER) license.\n\nCopyright \u00a9 2019 Guillaume Delugr\u00e9.\n\n[the-ruby-racer]: https://rubygems.org/gems/therubyracer\n[pdfwalker-gem]: https://rubygems.org/gems/pdfwalker\n[pdfwalker-repo]: https://github.com/gdelugre/pdfwalker\n", "type": "Text_excerpt", "original_header": "License", "parent_header": ["Origami"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}], "description": [{"result": {"value": "Origami is a pure Ruby library to parse, modify and generate PDF documents.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "Origami is a framework written in pure Ruby to manipulate PDF files. \nIt offers the possibility to parse the PDF contents, modify and save the PDF\nstructure, as well as creating new documents. \nOrigami supports some advanced features of the PDF specification: \n  * Compression filters with predictor functions\n  * Encryption using RC4 or AES, including the undocumented Revision 6 derivation algorithm\n  * Digital signatures and Usage Rights\n  * File attachments\n  * AcroForm and XFA forms\n  * Object streams \nOrigami is able to parse PDF, FDF and PPKLite (Adobe certificate store) files.\n \n", "original_header": "Overview"}, "confidence": 0.9261619494181048, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Origami comes with a set of tools to manipulate PDF documents from the command line. \n  * [pdfcop](bin/pdfcop): Runs some heuristic checks to detect dangerous contents.\n  * [pdfdecompress](bin/pdfdecompress): Strips compression filters out of a document.\n  * [pdfdecrypt](bin/pdfdecrypt): Removes encrypted contents from a document.\n  * [pdfencrypt](bin/pdfencrypt): Encrypts a PDF document.\n  * [pdfexplode](bin/pdfexplode): Explodes a document into several documents, each of them having one deleted resource. Useful for reduction of crash cases after a fuzzing session.\n  * [pdfextract](bin/pdfextract): Extracts binary resources of a document (images, scripts, fonts, etc.).\n  * [pdfmetadata](bin/pdfmetadata): Displays the metadata contained in a document.\n  * [pdf2ruby](bin/pdf2ruby): Converts a PDF into an Origami script rebuilding an equivalent document (experimental).\n  * [pdfsh](bin/pdfsh): An IRB shell running inside the Origami namespace. \n", "original_header": "Tools"}, "confidence": 0.8805134108393915, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}], "name": [{"result": {"value": "origami", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "gdelugre/origami", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/gdelugre/origami/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/gdelugre/origami/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 302, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "parser, pdf, ruby, writer", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 107, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/gdelugre/origami/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Ruby", "name": "Ruby", "type": "Programming_language", "size": 817465}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "requirements": [{"result": {"value": "As of version 2, the minimal version required to run Origami is Ruby 2.1.\n\nSome optional features require additional gems:\n\n  * [therubyracer][the-ruby-racer] for JavaScript emulation of PDF scripts\n", "type": "Text_excerpt", "original_header": "Requirements", "parent_header": ["Origami"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}], "usage": [{"result": {"value": "First install Origami using the latest gem available:\n\n    $ gem install origami\n\nThen import Origami with:\n\n```ruby\nrequire 'origami'\n```\n\nTo process a PDF document, you can use the ``PDF.read`` method:\n\n```ruby\npdf = Origami::PDF.read \"something.pdf\"\n\nputs \"This document has #{pdf.pages.size} page(s)\"\n```\n\nThe default behavior is to parse the entire contents of the document at once. This can be changed by passing the ``lazy`` flag to parse objects on demand.\n\n```ruby\npdf = Origami::PDF.read \"something.pdf\", lazy: true\n\npdf.each_page do |page|\n    page.each_font do |name, font|\n        # ... only parse the necessary bits\n    end\nend\n```\n\nYou can also create documents directly by instanciating a new PDF object:\n\n```ruby\npdf = Origami::PDF.new\n\npdf.append_page\npdf.pages.first.write \"Hello\", size: 30\n\npdf.save(\"example.pdf\")\n\n# Another way of doing it\nOrigami::PDF.write(\"example.pdf\") do |pdf|\n    pdf.append_page do |page|\n        page.write \"Hello\", size: 30\n    end\nend\n```\n\nTake a look at the [examples](examples) and [bin](bin) directories for some examples of advanced usage.\n", "type": "Text_excerpt", "original_header": "Quick start", "parent_header": ["Origami"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}], "installation": [{"result": {"type": "Text_excerpt", "value": "**Note**: Since version 2.1, [pdfwalker][pdfwalker-gem] has been moved to a [separate repository][pdfwalker-repo].\n \n", "original_header": "Tools"}, "confidence": 0.8887287390344718, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "Origami"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}], "logo": [{"result": {"type": "Url", "value": "https://secure.travis-ci.org/gdelugre/origami.svg?branch=master"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/gdelugre/origami/master/README.md"}]}