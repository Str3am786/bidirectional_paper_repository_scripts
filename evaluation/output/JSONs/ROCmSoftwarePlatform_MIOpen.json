{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:56:05"}, "code_repository": [{"result": {"value": "https://github.com/ROCm/MIOpen", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "ROCm", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2017-06-27T17:51:22Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T03:24:22Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "# License\n\n```{include} ../LICENSE.txt\n```\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/docs/license.md"}], "description": [{"result": {"value": "AMD's Machine Intelligence Library", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "MIOpen supports two programming models, or backends: \n", "original_header": "MIOpen"}, "confidence": 0.8534048526806752, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "Users can also disable the cache during runtime using the environmental variable set as `MIOPEN_DISABLE_CACHE=1`.\n \n", "original_header": "Persistent Program Cache"}, "confidence": 0.8375925146791858, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "MIOpen provides an [application-driver](https://github.com/ROCm/MIOpen/tree/master/driver) which can be used to execute any one particular layer in isolation and measure performance and verification of the library. \nDocumentation on how to run the driver is [here](https://rocm.docs.amd.com/projects/MIOpen/en/latest/driver.html).\n \n", "original_header": "Building the driver"}, "confidence": 0.8763338519201735, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}], "name": [{"result": {"value": "MIOpen", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "ROCm/MIOpen", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/ROCm/MIOpen/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/ROCm/MIOpen/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 911, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 188, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/ROCmSoftwarePlatform/MIOpen/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Assembly", "name": "Assembly", "type": "Programming_language", "size": 304072315}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C++", "name": "C++", "type": "Programming_language", "size": 13281669}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "NASL", "name": "NASL", "type": "Programming_language", "size": 7782350}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C", "name": "C", "type": "Programming_language", "size": 2996457}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "CMake", "name": "CMake", "type": "Programming_language", "size": 379369}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 45936}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Pawn", "name": "Pawn", "type": "Programming_language", "size": 22205}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 9224}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "PHP", "name": "PHP", "type": "Programming_language", "size": 6215}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Dockerfile", "name": "Dockerfile", "type": "Programming_language", "size": 4292}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/134128235", "tag": "rocm-6.0.0", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v6.0.0", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-6.0.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-6.0.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-6.0.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/134128235", "release_id": 134128235, "date_created": "2023-12-15T17:46:24Z", "date_published": "2023-12-15T17:46:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/125041095", "tag": "rocm-5.7.1", "name": "MIOpen 2.19.0 for ROCm 5.7.1", "author": {"name": "rocm-ci", "type": "User"}, "description": "MIOpen code for ROCm 5.7.1 did not change. The library was rebuilt for the updated ROCm 5.7.1 stack.", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.7.1", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.7.1", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.7.1", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/125041095", "release_id": 125041095, "date_created": "2023-10-13T17:45:10Z", "date_published": "2023-10-13T18:57:15Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/121338060", "tag": "rocm-5.7.0", "name": "MIOpen 2.19.0 for ROCm 5.7.0", "author": {"name": "rocm-ci", "type": "User"}, "description": "MIOpen code for ROCm 5.7.0 did not change. The library was rebuilt for the updated ROCm 5.7.0 stack.", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.7.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.7.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.7.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/121338060", "release_id": 121338060, "date_created": "2023-09-08T14:43:30Z", "date_published": "2023-09-15T17:29:54Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/119133384", "tag": "rocm-5.6.1", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.6.1", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.6.1", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.6.1", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.6.1", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/119133384", "release_id": 119133384, "date_created": "2023-08-29T20:07:27Z", "date_published": "2023-08-29T20:07:34Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/110289505", "tag": "rocm-5.6.0", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.6.0", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.6.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.6.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.6.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/110289505", "release_id": 110289505, "date_created": "2023-06-28T23:10:09Z", "date_published": "2023-06-28T23:10:16Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/101495443", "tag": "rocm-5.5.0", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.5.0", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.5.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.5.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.5.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/101495443", "release_id": 101495443, "date_created": "2023-05-01T19:53:00Z", "date_published": "2023-05-01T19:53:06Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/104161398", "tag": "rocm-5.5.1", "name": "MIOpen 2.19.0 for ROCm 5.5.1", "author": {"name": "rocm-ci", "type": "User"}, "description": "MIOpen code for ROCm 5.5.1 did not change. The library was rebuilt for the updated ROCm 5.5.1 stack.", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.5.1", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.5.1", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.5.1", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/104161398", "release_id": 104161398, "date_created": "2023-04-17T20:38:54Z", "date_published": "2023-05-24T19:00:25Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/96540675", "tag": "rocm-5.4.4", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.4.4", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.4.4", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.4.4", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.4.4", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/96540675", "release_id": 96540675, "date_created": "2023-03-22T19:22:47Z", "date_published": "2023-03-22T19:22:52Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/91631718", "tag": "rocm-5.4.3", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.4.3", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.4.3", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.4.3", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.4.3", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/91631718", "release_id": 91631718, "date_created": "2023-02-07T16:51:49Z", "date_published": "2023-02-07T16:51:56Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/88880563", "tag": "rocm-5.4.2", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.4.2", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.4.2", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.4.2", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.4.2", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/88880563", "release_id": 88880563, "date_created": "2023-01-13T16:17:13Z", "date_published": "2023-01-13T16:17:18Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/86191578", "tag": "rocm-5.4.1", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.4.1", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.4.1", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.4.1", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.4.1", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/86191578", "release_id": 86191578, "date_created": "2022-12-15T16:29:48Z", "date_published": "2022-12-15T16:29:54Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/84603859", "tag": "rocm-5.4.0", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.4.0", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.4.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.4.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.4.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/84603859", "release_id": 84603859, "date_created": "2022-11-30T17:08:31Z", "date_published": "2022-11-30T17:08:36Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/83447307", "tag": "rocm-5.3.3", "name": "rocm-5.3.3", "author": {"name": "zhang2amd", "type": "User"}, "description": "ROCm release v5.3.3", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.3.3", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.3.3", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.3.3", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/83447307", "release_id": 83447307, "date_created": "2022-11-17T17:15:44Z", "date_published": "2022-11-17T19:09:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/82615639", "tag": "rocm-5.3.2", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.3.2", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.3.2", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.3.2", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.3.2", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/82615639", "release_id": 82615639, "date_created": "2022-11-09T23:52:19Z", "date_published": "2022-11-09T23:52:24Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/81374096", "tag": "rocm-5.3.1", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.3.1", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.3.1", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.3.1", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.3.1", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/81374096", "release_id": 81374096, "date_created": "2022-10-28T16:56:52Z", "date_published": "2022-10-28T16:56:57Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/79098759", "tag": "2.18.0", "name": " MIOpen v2.18.0", "author": {"name": "JehandadKhan", "type": "User"}, "description": "## Notes\r\n\r\n - This release announces the deprecation of MIOpen's OpenCL backend and updates the distribution mechanism for MIOpen kernels along with a few other documentation changes.\r\n\r\n## Changes\r\n\r\n- Deprecate MIOpen's OpenCL backend\r\n- Integrate Kernel DB files into MIOpen using Git LFS\r\n- Add and update MIOpen porting guide\r\n- Fix an issue in the pooling kernels\r\n- Fix address calculation issue in Image to Column kernel\r\n- Various performance tuning and updates\r\n- Fix an issue in the Winograd kernels \r\n- Enable MIOpen to restrict to deterministic kernels\r\n- Various other internal improvements and fixes", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.18.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.18.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.18.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/79098759", "release_id": 79098759, "date_created": "2022-10-04T23:43:39Z", "date_published": "2022-10-05T20:23:33Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/78718962", "tag": "rocm-5.3.0", "author": {"name": "rocm-ci", "type": "User"}, "description": "ROCm release v5.3.0", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-5.3.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-5.3.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-5.3.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/78718962", "release_id": 78718962, "date_created": "2022-09-30T17:19:33Z", "date_published": "2022-09-30T17:19:35Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/64285586", "tag": "2.16.0", "name": "MIOpen v2.16.0", "author": {"name": "JehandadKhan", "type": "User"}, "description": "## Notes\r\n\r\n - This release includes enhanced support for MI210 and MI250 and various other improvements.\r\n\r\n## Changes\r\n\r\n - This release consists of various bug fixes and performance improvements\r\n - Improved support for Navi21\r\n - Performance improvements via performance database updates\r\n - Fix various issues in convolution kernels specific to certain ASICs\r\n - Fix an accuracy issue in reduction kernels\r\n - Fix an accuracy issue in Batchnormalization kernels\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.16.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.16.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.16.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/64285586", "release_id": 64285586, "date_created": "2022-04-12T19:08:29Z", "date_published": "2022-04-12T19:24:15Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/52556375", "tag": "2.14.0", "name": "MIOpen v2.14.0", "author": {"name": "JehandadKhan", "type": "User"}, "description": "## Notes\r\n\r\n- This release consists of various bug fixes and performance improvements\r\n\r\n## Changes\r\n\r\n- Improved support for Navi21\r\n\r\n- Performance improvements via performance database updates\r\n\r\n- Fix various issues in convolution kernels specific to certain ASICs\r\n\r\n- Fix an accuracy issue in reduction kernels\r\n\r\n- Fix an accuracy issue in Batchnormalization kernels\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.14.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.14.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.14.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/52556375", "release_id": 52556375, "date_created": "2021-12-20T17:04:07Z", "date_published": "2021-12-20T18:44:00Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/47257287", "tag": "2.12.0", "name": "MIOpen v2.12.0", "author": {"name": "JehandadKhan", "type": "User"}, "description": "## Notes\r\n\r\n- This release includes support for Navi21 and various other bug fixes and performance improvements\r\n\r\n## Changes\r\n\r\n - MIOpen now supports Navi21!! (via MIOpen PRs 973, 780, 764, 740, 739, 677, 660, 653, 493, 498)\r\n - Fixed a correctness issue with ImplicitGemm algorithm\r\n - Updated the performance data for new kernel versions\r\n - Improved MIOpen build time by splitting large kernel header files\r\n - Fixed an issue in reduction kernels for padded tensors\r\n - Various other bug fixes and performance improvements\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.12.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.12.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.12.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/47257287", "release_id": 47257287, "date_created": "2021-08-03T22:05:52Z", "date_published": "2021-08-03T22:17:28Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/43082387", "tag": "2.11.0", "name": "MIOpen v2.11.0", "author": {"name": "JehandadKhan", "type": "User"}, "description": "## Notes\r\n\r\n- This release contains various bug fixes and performance improvements.\r\n\r\n## Changes\r\n\r\n- Updates for Target ID features in ROCm stack\r\n- Correctness fix in Batchnorm kernels\r\n- Various bug fixes for MIOpenGEMM on the OpenCL backend\r\n- Various bug fixes in 3x3 assembly kernels", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.11.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.11.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.11.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/43082387", "release_id": 43082387, "date_created": "2021-06-04T14:53:12Z", "date_published": "2021-05-17T19:31:55Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/40425201", "tag": "2.10.0", "name": "MIOpen v2.10.0", "author": {"name": "JehandadKhan", "type": "User"}, "description": "## Notes\r\n - This release contains new reduction operations, Winograd algorithm performance improvements as well as bug fixes. Various host side performance improvements have been added as well.\r\n\r\n## Changes\r\n - Added a GPU reference kernel implementation for faster testing.\r\n - Add TargetID support for new AMD GPU architectures.\r\n - Implementation of four additional generic tensor reduction operations (AVG, AMAX, NORM1, NORM2).\r\n - Fixed a bug where Batchnorm would give incorrect results when the product of image height and image width is not a factor of four.\r\n - Various host side improvements for better find and tuning performance.\r\n - Added support for AMD Code Object V4.", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.10.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.10.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.10.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/40425201", "release_id": 40425201, "date_created": "2021-03-25T15:48:24Z", "date_published": "2021-03-25T15:55:20Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/34665802", "tag": "2.9.0", "name": "MIOpen v2.9.0", "author": {"name": "daniellowell", "type": "User"}, "description": "Notes: \r\n\r\n- This release contains implicit GEMM algorithm performance updates and bug fixes. Additional performance improvements have been implement for batch normalization.\r\n\r\nChanges:\r\n\r\n - Added new assembly implicit GEMM kernels\r\n - Added batch normalization optimizations\r\n - Fixed issue where miopen-hip backend install would not search for rocBLAS dependency\r\n - Removed missing tunings from previous release cycle\r\n - Removed deprecated implicit GEMM xDLOPs solvers\r\n - Removed incorrect error messages from implicit GEMM solvers\r\n - Disabled ConvAsmBwdWrW3x3 solver for stride > 1 cases\r\n - Disabled bidirectional multi-pass kernels due to stability issues", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.9.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.9.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.9.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/34665802", "release_id": 34665802, "date_created": "2020-12-02T02:08:54Z", "date_published": "2020-12-02T02:15:40Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/33194119", "tag": "2.8.0", "name": "MIOpen v2.8.0", "author": {"name": "daniellowell", "type": "User"}, "description": "Notes:\r\n\r\n- This release provides additional bug fixes and support for embedded builds using MIOpen as a static library.\r\n\r\n\r\nChanges:\r\n\r\n- Fixed workspace size calculation for GEMM group convolutions\r\n- Fixed performance regression for M/N\r\n- Fixed issue with faulty compiler option\r\n- Fixed typo in components dependency variable in CMakeLists.txt\r\n- Fixed issues with COMgr backed online compilation for HIP kernels\r\n- Added cmake flag for embedding system databases when building a static library\r\n- Added a way to disable building MIOpenDriver when building a static library\r\n- Added CC compiler detection in ROCm environment\r\n- Known issue: This release may show warnings for \"obsolete configs\" in the performance database. This can be fixed by rerunning tuning on a specific network; [see tuning documentation](https://rocmsoftwareplatform.github.io/MIOpen/doc/html/perfdatabase.html#miopen-find-enforce)\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.8.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.8.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.8.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/33194119", "release_id": 33194119, "date_created": "2020-10-27T18:53:51Z", "date_published": "2020-10-29T00:57:46Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/31545643", "tag": "2.7.0", "name": "MIOpen v2.7.0", "author": {"name": "daniellowell", "type": "User"}, "description": "Notes: \r\n\r\n- This release contains a new reduction API; see [API documentation](https://rocmsoftwareplatform.github.io/MIOpen/doc/html/apireference.html) for more information. Additional features for embedded builds have been added, and further support for 3D convolutional networks.\r\n\r\n\r\nChanges: \r\n\r\n- Added additional tunings into performance database\r\n- Added general reduction API\r\n- Added cmake flag for embedding binary database into a static MIOpen build\r\n- Added cmake flag for embedding system find-db text files into static MIOpen build\r\n- Fixed issue with GEMM workspace size calculation for backwards data convolutions [#381](https://github.com/ROCmSoftwarePlatform/MIOpen/issues/381)\r\n- Fixed issue with 3D pooling indexing [#365](https://github.com/ROCmSoftwarePlatform/MIOpen/issues/365)\r\n\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.7.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.7.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.7.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/31545643", "release_id": 31545643, "date_created": "2020-09-18T21:05:50Z", "date_published": "2020-09-18T21:13:16Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/29946418", "tag": "rocm-3.7.0", "name": "MIOpen v2.6.0", "author": {"name": "daniellowell", "type": "User"}, "description": "Notes: \r\n\r\n- This release contains convolution performance improvements, improved multi-threading behavior, and improved stability for half precision convolutions. Initial iteration time has been reduced with the introduction of hybrid find mode. Builds for a static library have been refined for this release.\r\n\r\nChanges:\r\n\r\n- Added MIOPEN_FIND_MODE=3 as the new default convolution Find mode; see documentation [here](https://rocmsoftwareplatform.github.io/MIOpen/doc/html/find_and_immediate.html#find-modes) for details\r\n- Added a more runtime-parameterized version of pooling to reduce the number of online compilations\r\n- Improved the performance of backwards spatial batch normalization for small images\r\n- Fixed issue with std::logic_error in SQLite deleter [#306](https://github.com/ROCmSoftwarePlatform/MIOpen/issues/306)\r\n- Fixed issues with half precision stability for convolutions\r\n- Fixed issues with multi-threaded SQLite database accesses\r\n- Fixed issues with 3-D convolutions and incorrect parameters\r\n- Fixed various issues with implicit GEMM static assert failures\r\n- Removed inactive implicit GEMM convolution solvers\r\n- Removed SCGEMM convolutional algorithm from MIOpen\r\n\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/rocm-3.7.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/rocm-3.7.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/rocm-3.7.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/29946418", "release_id": 29946418, "date_created": "2020-08-08T20:44:58Z", "date_published": "2020-08-20T19:40:43Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/28458347", "tag": "2.5.0", "name": "MIOpen v2.5.0", "author": {"name": "daniellowell", "type": "User"}, "description": "\r\nNotes:\r\n\r\n- This release contains convolution performance improvements, various minor fixes and documentation updates.\r\n\r\n\r\nChanges:\r\n\r\n- Added a script to detect and install appropriate precompiled kernels\r\n- Added 3D convolution backwards weights implicit GEMM implementation \r\n- Improve performance of convolution implicit GEMM algorithm\r\n- Improved database coverage for batch size 1\r\n- Improved logging and error reporting\r\n- Improved documentation for debugging with numeric checks\r\n- Fixed issue with potential infinities and NaNs appearing during low precision training on CNNs", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.5.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.5.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.5.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/28458347", "release_id": 28458347, "date_created": "2020-07-10T21:48:23Z", "date_published": "2020-07-10T21:52:49Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/27160389", "tag": "2.4.0", "name": "MIOpen v2.4.0", "author": {"name": "daniellowell", "type": "User"}, "description": "\r\n\r\nNotes:\r\n\r\n- This release contains new implementations of 3D convolutions using implicitGEMM, general performance improvements for convolutions, bug fixes, better versioning in directories, integration with the new rocclr, and dropout support in RNNs.\r\n\r\n\r\nChanges:\r\n\r\n- Added 3D convolutions for the implicitGEMM algorithm in the forward and backward-data passes\r\n- Added dropout support for RNN layer; e.g., RNN-vanilla, GRU, and LSTM\r\n- Added support for AMD's rocclr runtime and compiler\r\n- Improved performance for implicitGEMM and Winograd algorithms\r\n- Improved database locking\r\n- Fixed issue with GPU memory segmentation fault on asymmetric padding #142\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.4.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.4.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.4.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/27160389", "release_id": 27160389, "date_created": "2020-05-08T02:31:24Z", "date_published": "2020-06-03T02:29:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/25064000", "tag": "2.3.0", "name": "MIOpen v2.3.0", "author": {"name": "daniellowell", "type": "User"}, "description": "Notes:\r\n\r\n- This release contains new implementations of the implicitGEMM and Winograd algorithms, performance improvements for convolutions, further support for 3D convolutional networks, and various bug fixes.\r\n\r\nChanges: \r\n\r\n- Added 3D Pooling layers\r\n- Added backwards data algorithm for implicitGEMM\r\n- Added GEMM performance improvements via relaxed constraints in rocBLAS-Tensile\r\n- Added full CO v3 support for all kernels in MIOpen\r\n- Added new Winograd group convolution kernels\r\n- Added an API to query MIOpen's version\r\n- Added parallel compilation in initial convolutional algorithm search; partial solution to [#130](https://github.com/ROCmSoftwarePlatform/MIOpen/issues/130)\r\n- Added SQLite binary program cache\r\n- Improved logging across all layers\r\n- Improved MIOpen's internal design for calling convolutional solvers\r\n- Fixed various bugs for the implicitGEMM algorithm\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.3.0", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.3.0", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.3.0", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/25064000", "release_id": 25064000, "date_created": "2020-03-26T14:05:55Z", "date_published": "2020-03-31T21:45:41Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/ROCm/MIOpen/releases/24016838", "tag": "2.2.1", "name": "MIOpen v2.2.1", "author": {"name": "daniellowell", "type": "User"}, "description": "Notes:\r\n\r\n- This release contains bug fixes, documentation updates, and further code object version 3 support\r\n\r\n\r\nChanges:\r\n\r\n- Added support for multiple ROCm installations\r\n- Added additional support for code object v3\r\n- Fixed issue with incorrect LRN calculation [#127](https://github.com/ROCmSoftwarePlatform/MIOpen/issues/127)\r\n- Fixed incorrect performance database documentation\r\n- Fixed issue with incorrect workspace calculation in group convolutions\r\n- Fixed issue with unsupported hardware instructions used with inline assembly\r\n", "tarball_url": "https://api.github.com/repos/ROCm/MIOpen/tarball/2.2.1", "zipball_url": "https://api.github.com/repos/ROCm/MIOpen/zipball/2.2.1", "html_url": "https://github.com/ROCm/MIOpen/releases/tag/2.2.1", "url": "https://api.github.com/repos/ROCm/MIOpen/releases/24016838", "release_id": 24016838, "date_created": "2020-01-29T14:37:04Z", "date_published": "2020-02-26T20:39:01Z"}, "confidence": 1, "technique": "GitHub_API"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/Dockerfile"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "contributing_guidelines": [{"result": {"value": "# MIOpen Contributing Guide\nTo ensure the quality of the MIOpen code base, the MIOpen team has \nestablished a code review process to inform developers of the steps \nthat are required to shepherd a change-set into the repository.\n\n#### Table Of Contents\n\n[How to get started](#How-to-get-started)\n\n[How do I contribute?](#how-do-i-contribute)\n  * [Reporting Issues](#reporting-issues)\n  * [Creating a Pull Request](#Creating-a-Pull-Request)\n\n[Responsibility of the Author](#Responsibility-of-the-Author)\n\n[Responsibility of the Reviewer](#Responsibility-of-the-Reviewer)\n\n[Passing CI](#Passing-CI)\n\n[The Review](#the-review)\n## How to get started\nMIOpen is AMD\u2019s deep learning primitives library which\nprovides highly optimized, and hand-tuned implementations of\ndifferent operators such as convolution, batch normalization,\npooling, softmax, activation and layers for Recurrent Neural\nNetworks (RNNs), used in both training and inference.\n\nThe easiest way to get started is to check out [MIOpen documentation](https://rocm.docs.amd.com/projects/MIOpen/en/latest/) and [MIOpen: An Open Source Library For Deep Learning Primitives](https://arxiv.org/pdf/1910.00078.pdf).\n\nAll contributions you make will be under the [MIT Software License](LICENSE.txt). \n## How do I contribute\n### Reporting Issues\nWe use [GitHub Issues](https://github.com/ROCm/MIOpen/issues) to track public **bugs** and **enhancement requests**.\n\nIf you have found an issue, please check [MIOpen documentation](https://rocm.docs.amd.com/projects/MIOpen/en/latest/) to see if it is a bug or new feature enhancement which is not supported in the latest version of MIOpen:\n\n#### Bugs\nPlease follow the template below to report any bugs found in MIOpen:\n\n1. Description: ***Please be clear and descriptive***\n2. How to Reproduce the issue:\n* Hardware Information:\n* Docker environment or Software Version:\n* Expected behavior:\n* Actual behavior:\n3. Any additional information:\n\n#### Enhancement Requests\nPlease follow the template below to report any enhancement requests for MIOpen:\n\n1. Description: ***Please be clear and descriptive***\n2. Value and Motivation:\n* Feature and functionalities enabled:\n* Any alternatives:\n3. Any additional information:\n\nThe author must set labels (and assigns a miliestone) according to his/her own understanding.\n\nOther contributors can change these values if they disagree. That being said, \nadding a small comment explaining the motivation is highly recommended. \nIn this way, we keep the process flexible while cultivating mutual understanding.\n\n[**Note**] Most likely, the labels like \"bug\", \"feature\" or \"complexity*\" \nwould not be changed. However, \"value*\" or \"urgency*\" might be from mutual \nunderstanding.\n### Creating a Pull Request\nNo changes are allowed to be directly committed to the develop \nbranch of the MIOpen repository. All authors are required to \ndevelop their change sets on a separate branch and then create \na pull request (PR) to merge their changes into the develop branch.\n\nOnce a PR has been created, a developer must choose two reviewers \nto review the changes made. The first reviewer should be a \ntechnical expert in the portion of the library that the changes \nare being made in. You can find a list of these experts in \n[MIOpen Issue #789](https://github.com/ROCm/MIOpen/issues/789)\n. The second reviewer should be a peer reviewer. This reviewer \ncan be any other MIOpen developer.\n\n## Responsibility of the Author\nThe author of a PR is responsible for:\n * Writing clear, well documented code\n * Meeting expectations of code quality\n * Verifying that the changes do not break current functionality\n * Writing tests to ensure code coverage\n * Report on the impact to performance\n\n## Responsibility of the Reviewer\nEach reviewer is responsible for verifying that the changes are \nclearly written in keeping with the coding styles of the library, \nare documented in a way that future developers will be able to \nunderstand the intent of the added functionality, and will \nmaintain or improve the overall quality of the codebase.\n\nReviewer's task checklist:\n1. Has the PR passed [necessary CI](https://github.com/ROCm/MIOpen/pull/932#discussion_r634835432)?\n2. Does the PR consist of a well-organized sequence of small commits, \neach of which is designed to make one specific feature or fix \n(and ideally should be able to pass CI testing)?\n3. Does the PR only include a reviewable amount of changes? Or it is a \nconsolidation of already reviewed small batches? e.g. break it into smaller \ntestable and reviewable tasks instead of a huge chunk at once.\n4. Does the PR have sufficient documentation and easy to read and understand, \nfeasible for test and future maintainence, related docs already in place? \ne.g. revise or add to \n[MIOpen documentation](https://rocm.docs.amd.com/projects/MIOpen/en/latest/) \nif API or functionality has changed?\n5. For bugfixes and new features, new regression test created and included in CI,\n or some other holistic test pipeline?\n6. Is every PR associated with a ticket or issue number for tracking purposes?\n\n## Passing CI\nThe most critical component of the PR process is the CI testing. \nAll PRs must pass the CI in order to be considered for merger. \nReviewers may choose to defer their review until the CI testing \nhas passed. \n\n## The Review\nDuring the review, reviewers will look over the changes and make \nsuggestions or requests for changes.\n\nIn order to assist the reviewer in prioritizing their efforts, \nauthors can take the following actions:\n\n* Set the urgency and value labels\n* Set the milestone where the changes need to be delivered\n* Describe the testing procedure and post the measured effect of \n  the change\n* Remind reviewers via email if a PR needs attention\n* If a PR needs to be reviewed as soon as possible, explain to \n  the reviewers why a review may need to take priority\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/CONTRIBUTING.md"}], "documentation": [{"result": {"value": "https://github.com/ROCmSoftwarePlatform/MIOpen/tree/develop/docs", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "For a detailed description of the **MIOpen** library see the [Documentation](https://rocmdocs.amd.com/projects/MIOpen/en/latest/).\n", "type": "Text_excerpt", "original_header": "Documentation", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "Run the steps below to build documentation locally.\n\n```shell\ncd docs\n\npip3 install -r sphinx/requirements.txt\n\npython3 -m sphinx -T -E -b html -d _build/doctrees -D language=en . _build/html\n```\n", "type": "Text_excerpt", "original_header": "How to build documentation", "parent_header": ["MIOpen", "Documentation"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/test/perf_models/resnet50_v1.5.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/utils/install_precompiled_kernels.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/src/composable_kernel/script/cmake-rocm.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/src/composable_kernel/script/count_vgpr.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/src/composable_kernel/script/hipclang_opt.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/src/composable_kernel/script/docker-rocm4.1.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/src/composable_kernel/script/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "## Prerequisites\n\n* More information about ROCm stack via [ROCm Information Portal](https://docs.amd.com/).\n* A ROCm enabled platform, more info [here](https://rocm.github.io/install.html).\n* Base software stack, which includes:\n  * HIP - \n    * HIP and HCC libraries and header files.\n  * OpenCL - OpenCL libraries and header files.\n* [ROCm cmake](https://github.com/RadeonOpenCompute/rocm-cmake) - provide cmake modules for common build tasks needed for the ROCM software stack.\n* [Half](http://half.sourceforge.net/) - IEEE 754-based half-precision floating point library\n* [Boost](http://www.boost.org/) \n  * MIOpen uses `boost-system` and `boost-filesystem` packages\n  * Version 1.83 is recommended\n* [SQLite3](https://sqlite.org/index.html) - reading and writing performance database, enabling persistent [kernel cache](https://rocm.docs.amd.com/projects/MIOpen/en/latest/cache.html)\n* [rocBLAS](https://github.com/ROCm/rocBLAS) - AMD library for Basic Linear Algebra Subprograms (BLAS) on the ROCm platform.\n  * Minimum version branch for pre-ROCm 3.5 [master-rocm-2.10](https://github.com/ROCm/rocBLAS/tree/master-rocm-2.10)\n  * Minimum version branch for post-ROCm 3.5 [master-rocm-3.5](https://github.com/ROCm/rocBLAS/releases/tag/rocm-3.5.0)\n* [MLIR](https://github.com/ROCm/llvm-project-mlir) - (Multi-Level Intermediate Representation) with its MIOpen dialect to support and complement kernel development.\n* [Composable Kernel](https://github.com/ROCm/composable_kernel) - C++ templated device library for GEMM-like and reduction-like operators.\n\n## Installing MIOpen with pre-built packages\n\nMIOpen can be installed on Ubuntu using `apt-get`.\n\nFor OpenCL backend: `apt-get install miopen-opencl`\n\nFor HIP backend: `apt-get install miopen-hip`\n\nCurrently both the backends cannot be installed on the same system simultaneously. If a different backend other than what currently exists on the system is desired, please uninstall the existing backend completely and then install the new backend.\n\n## Installing MIOpen kernels package\n\nMIOpen provides an optional pre-compiled kernels package to reduce the startup latency. These precompiled kernels comprise a select set of popular input configurations and will expand in future release to contain additional coverage.\n\nNote that all compiled kernels are locally cached in the folder `$HOME/.cache/miopen/`, so precompiled kernels reduce the startup latency only for the first execution of a neural network. Precompiled kernels do not reduce startup time on subsequent runs.\n\nTo install the kernels package for your GPU architecture, use the following command:\n\n```\napt-get install miopenkernels-<arch>-<num cu>\n```\n\nWhere `<arch>` is the GPU architecture ( for example, `gfx900`, `gfx906`, `gfx1030` ) and `<num cu>` is the number of CUs available in the GPU (for example 56 or 64 etc). \n\nNot installing these packages would not impact the functioning of MIOpen, since MIOpen will compile these kernels on the target machine once the kernel is run. However, the compilation step may significantly increase the startup time for different operations.\n\nThe script `utils/install_precompiled_kernels.sh` provided as part of MIOpen automates the above process, it queries the user machine for the GPU architecture and then installs the appropriate package. It may be invoked as: \n\n```\n./utils/install_precompiled_kernels.sh\n```\n\nThe above script depends on the __rocminfo__ package to query the GPU architecture.\n\nMore info can be found [here](https://github.com/ROCm/MIOpen/blob/develop/docs/cache.md#installing-pre-compiled-kernels).\n\n## Installing the dependencies\n\nThe dependencies can be installed with the `install_deps.cmake`, script: `cmake -P install_deps.cmake`\n\nThis will install by default to `/usr/local` but it can be installed in another location with `--prefix` argument:\n```\ncmake -P install_deps.cmake --prefix <miopen-dependency-path>\n```\nAn example cmake step can be:\n```\ncmake -P install_deps.cmake --minimum --prefix /root/MIOpen/install_dir\n```\nThis prefix can used to specify the dependency path during the configuration phase using the `CMAKE_PREFIX_PATH`.\n\n* MIOpen's HIP backend uses [rocBLAS](https://github.com/ROCm/rocBLAS) by default. Users can install rocBLAS minimum release by using `apt-get install rocblas`. To disable using rocBLAS set the configuration flag `-DMIOPEN_USE_ROCBLAS=Off`. rocBLAS is *not* available for the OpenCL backend.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/docs/install.md"}, {"result": {"value": "MIOpen can be installed on Ubuntu using `apt-get`.\n\nFor OpenCL backend: `apt-get install miopen-opencl`\n\nFor HIP backend: `apt-get install miopen-hip`\n\nCurrently both the backends cannot be installed on the same system simultaneously. If a different backend other than what currently exists on the system is desired, please uninstall the existing backend completely and then install the new backend.\n", "type": "Text_excerpt", "original_header": "Installing MIOpen with pre-built packages", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "MIOpen provides an optional pre-compiled kernels package to reduce the startup latency. These precompiled kernels comprise a select set of popular input configurations and will expand in future release to contain additional coverage.\n\nNote that all compiled kernels are locally cached in the folder `$HOME/.cache/miopen/`, so precompiled kernels reduce the startup latency only for the first execution of a neural network. Precompiled kernels do not reduce startup time on subsequent runs.\n\nTo install the kernels package for your GPU architecture, use the following command:\n\n```shell\napt-get install miopenkernels-<arch>-<num cu>\n```\n\nWhere `<arch>` is the GPU architecture ( for example, `gfx900`, `gfx906`, `gfx1030` ) and `<num cu>` is the number of CUs available in the GPU (for example 56 or 64 etc).\n\nNot installing these packages would not impact the functioning of MIOpen, since MIOpen will compile these kernels on the target machine once the kernel is run. However, the compilation step may significantly increase the startup time for different operations.\n\nThe script `utils/install_precompiled_kernels.sh` provided as part of MIOpen automates the above process, it queries the user machine for the GPU architecture and then installs the appropriate package. It may be invoked as:\n\n```shell\n./utils/install_precompiled_kernels.sh\n```\n\nThe above script depends on the *rocminfo* package to query the GPU architecture.\n\nMore info can be found [here](https://github.com/ROCm/MIOpen/blob/develop/docs/cache.md#installing-pre-compiled-kernels).\n", "type": "Text_excerpt", "original_header": "Installing MIOpen kernels package", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "The dependencies can be installed with the `install_deps.cmake`, script: `cmake -P install_deps.cmake`\n\nThis will install by default to `/usr/local` but it can be installed in another location with `--prefix` argument:\n\n```shell\ncmake -P install_deps.cmake --prefix <miopen-dependency-path>\n```\n\nAn example cmake step can be:\n\n```shell\ncmake -P install_deps.cmake --minimum --prefix /root/MIOpen/install_dir\n```\n\nThis prefix can used to specify the dependency path during the configuration phase using the `CMAKE_PREFIX_PATH`.\n\n* MIOpen's HIP backend uses [rocBLAS](https://github.com/ROCm/rocBLAS) by default. Users can install rocBLAS minimum release by using `apt-get install rocblas`. To disable using rocBLAS set the configuration flag `-DMIOPEN_USE_ROCBLAS=Off`. rocBLAS is *not* available for the OpenCL backend.\n", "type": "Text_excerpt", "original_header": "Installing the dependencies", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "By default the install location is set to '/opt/rocm', this can be set by using `CMAKE_INSTALL_PREFIX`:\n\n```shell\ncmake -DMIOPEN_BACKEND=OpenCL -DCMAKE_INSTALL_PREFIX=<miopen-installed-path> ..\n```\n", "type": "Text_excerpt", "original_header": "Setting Up Locations", "parent_header": ["MIOpen", "Building MIOpen from source"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "If Ubuntu v16 is used then the `Boost` packages can also be installed by:\n\n```shell\nsudo apt-get install libboost-dev\nsudo apt-get install libboost-system-dev\nsudo apt-get install libboost-filesystem-dev\n```\n\n*Note:* MIOpen by default will attempt to build with Boost statically linked libraries. If it is needed, the user can build with dynamically linked Boost libraries by using this flag during the configruation stage:\n\n```shell\n-DBoost_USE_STATIC_LIBS=Off\n```\n\nhowever, this is not recommended.\n\nThe `half` header needs to be installed from [here](http://half.sourceforge.net/).\n", "type": "Text_excerpt", "original_header": "Installing the dependencies manually", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "First create a build directory:\n```shell\nmkdir build; cd build;\n```\n \n", "original_header": "Configuring with cmake"}, "confidence": 0.9858742179240071, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "The default path to the System PerfDb is `miopen/share/miopen/db/` within install location. The default path to the User PerfDb is `~/.config/miopen/`. For development purposes, setting `BUILD_DEV` will change default path to both database files to the source directory:\n```shell\ncmake -DMIOPEN_BACKEND=OpenCL -DBUILD_DEV=On ..\n```\n \n", "original_header": "System Performance Database and User Database"}, "confidence": 0.9435750427991223, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "If the compiler changes, or the user modifies the kernels then the cache must be deleted for the MIOpen version in use; e.g., `rm -rf ~/.cache/miopen/<miopen-version-number>`. More information about the cache can be found [here](https://rocm.docs.amd.com/projects/MIOpen/en/latest/cache.html).\n \n", "original_header": "For MIOpen version 2.3 and earlier"}, "confidence": 0.9005664849571148, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "MIOpen's kernel cache directory is versioned so that users' cached kernels will not collide when upgrading from earlier version.\n \n", "original_header": "For MIOpen version 2.4 and later"}, "confidence": 0.8595978400085514, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "The `ccmake` program can be downloaded as the Linux package `cmake-curses-gui`, but is not available on windows.\n \n", "original_header": "Changing the cmake configuration"}, "confidence": 0.8816897035773187, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "The library can be built, from the `build` directory using the 'Release' configuration: \n`cmake --build . --config Release` **OR** `make` \nAnd can be installed by using the 'install' target: \n`cmake --build . --config Release --target install` **OR** `make install` \nThis will install the library to the `CMAKE_INSTALL_PREFIX` path that was set.\n \n", "original_header": "Building the library"}, "confidence": 0.9357002703888373, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "` cmake --build . --config Release --target MIOpenDriver ` **OR** ` make MIOpenDriver ` \n", "original_header": "Building the driver"}, "confidence": 0.9315143584729958, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Text_excerpt", "value": "Git LFS can be installed and set up by:\n```shell\nsudo apt install git-lfs\ngit lfs install\n```\nIn the Git repository that you want to use Git LFS, track the file type that you's like by (if the file type has been tracked, this step can be skipped):\n```shell\ngit lfs track \"*.file_type\"\ngit add .gitattributes\n```\nPull all or a single large file that you would like to update by:\n```shell\ngit lfs pull --exclude=\nor\ngit lfs pull --exclude= --include \"filename\"\n```\nUpdate the large files and push to the github by:\n```shell\ngit add my_large_files\ngit commit -m \"the message\"\ngit push\n```\n \n", "original_header": "Storing large file using Git LFS"}, "confidence": 0.9832576694060068, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}], "requirements": [{"result": {"value": "* More information about ROCm stack via [ROCm Information Portal](https://docs.amd.com/).\n* A ROCm enabled platform, more info [here](https://rocmdocs.amd.com/en/latest/).\n* Base software stack, which includes:\n  * HIP -\n    * HIP and HCC libraries and header files.\n  * OpenCL - OpenCL libraries and header files.\n* [ROCm cmake](https://github.com/RadeonOpenCompute/rocm-cmake) - provide cmake modules for common build tasks needed for the ROCM software stack.\n* [Half](http://half.sourceforge.net/) - IEEE 754-based half-precision floating point library\n* [Boost](http://www.boost.org/)\n  * MIOpen uses `boost-system` and `boost-filesystem` packages to enable persistent [kernel cache](https://rocm.docs.amd.com/projects/MIOpen/en/latest/cache.html)\n  * Version 1.79 is recommended, older version may need patches to work on newer systems, e.g. boost1{69,70,72} w/glibc-2.34\n* [SQLite3](https://sqlite.org/index.html) - reading and writing performance database\n* lbzip2 - multi-threaded compress or decompress utility\n* [rocBLAS](https://github.com/ROCm/rocBLAS) - AMD library for Basic Linear Algebra Subprograms (BLAS) on the ROCm platform.\n  * Minimum version branch for pre-ROCm 3.5 [master-rocm-2.10](https://github.com/ROCm/rocBLAS/tree/master-rocm-2.10)\n  * Minimum version branch for post-ROCm 3.5 [master-rocm-3.5](https://github.com/ROCm/rocBLAS/releases/tag/rocm-3.5.0)\n* [MLIR](https://github.com/ROCm/llvm-project-mlir) - (Multi-Level Intermediate Representation) with its MIOpen dialect to support and complement kernel development.\n* [Composable Kernel](https://github.com/ROCm/composable_kernel) - C++ templated device library for GEMM-like and reduction-like operators.\n", "type": "Text_excerpt", "original_header": "Prerequisites", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "The dependencies can be installed with the `install_deps.cmake`, script: `cmake -P install_deps.cmake`\n\nThis will install by default to `/usr/local` but it can be installed in another location with `--prefix` argument:\n\n```shell\ncmake -P install_deps.cmake --prefix <miopen-dependency-path>\n```\n\nAn example cmake step can be:\n\n```shell\ncmake -P install_deps.cmake --minimum --prefix /root/MIOpen/install_dir\n```\n\nThis prefix can used to specify the dependency path during the configuration phase using the `CMAKE_PREFIX_PATH`.\n\n* MIOpen's HIP backend uses [rocBLAS](https://github.com/ROCm/rocBLAS) by default. Users can install rocBLAS minimum release by using `apt-get install rocblas`. To disable using rocBLAS set the configuration flag `-DMIOPEN_USE_ROCBLAS=Off`. rocBLAS is *not* available for the OpenCL backend.\n", "type": "Text_excerpt", "original_header": "Installing the dependencies", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "If Ubuntu v16 is used then the `Boost` packages can also be installed by:\n\n```shell\nsudo apt-get install libboost-dev\nsudo apt-get install libboost-system-dev\nsudo apt-get install libboost-filesystem-dev\n```\n\n*Note:* MIOpen by default will attempt to build with Boost statically linked libraries. If it is needed, the user can build with dynamically linked Boost libraries by using this flag during the configruation stage:\n\n```shell\n-DBoost_USE_STATIC_LIBS=Off\n```\n\nhowever, this is not recommended.\n\nThe `half` header needs to be installed from [here](http://half.sourceforge.net/).\n", "type": "Text_excerpt", "original_header": "Installing the dependencies manually", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}], "run": [{"result": {"value": "Set the C++ compiler to `clang++`.\n\n```shell\nexport CXX=<location-of-clang++-compiler>\ncmake -DMIOPEN_BACKEND=HIP -DCMAKE_PREFIX_PATH=\"<hip-installed-path>;<rocm-installed-path>;<miopen-dependency-path>\" ..\n```\n\nAn example cmake step can be:\n\n```shell\nexport CXX=/opt/rocm/llvm/bin/clang++ && \\\ncmake -DMIOPEN_BACKEND=HIP -DCMAKE_PREFIX_PATH=\"/opt/rocm/;/opt/rocm/hip;/root/MIOpen/install_dir\" ..\n```\n\nNote: When specifying the path for the `CMAKE_PREFIX_PATH` variable, **do not** use the `~` shorthand for the user home directory.\n", "type": "Text_excerpt", "original_header": "For the HIP backend (ROCm 3.5 and later), run", "parent_header": ["MIOpen", "Building MIOpen from source"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "```shell\ncmake -DMIOPEN_BACKEND=OpenCL ..\n```\n\nThe above assumes that OpenCL is installed in one of the standard locations. If not, then manually set these cmake variables:\n\n```shell\ncmake -DMIOPEN_BACKEND=OpenCL -DMIOPEN_HIP_COMPILER=<hip-compiler-path> -DOPENCL_LIBRARIES=<opencl-library-path> -DOPENCL_INCLUDE_DIRS=<opencl-headers-path> ..\n```\n\nAnd an example setting the dependency path for an envirnment in ROCm 3.5 and later:\n\n```shell\ncmake -DMIOPEN_BACKEND=OpenCL -DMIOPEN_HIP_COMPILER=/opt/rocm/llvm/bin/clang++ -DCMAKE_PREFIX_PATH=\"/opt/rocm/;/opt/rocm/hip;/root/MIOpen/install_dir\" ..\n```\n", "type": "Text_excerpt", "original_header": "For OpenCL, run", "parent_header": ["MIOpen", "Building MIOpen from source"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "The tests can be run by using the 'check' target:\n\n` cmake --build . --config Release --target check ` **OR** ` make check `\n\nA single test can be built and ran, by doing:\n\n```shell\ncmake --build . --config Release --target test_tensor\n./bin/test_tensor\n```\n", "type": "Text_excerpt", "original_header": "Running the tests", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}], "citation": [{"result": {"value": "MIOpen's paper is freely available and can be accessed on arXiv:  \n[MIOpen: An Open Source Library For Deep Learning Primitives](https://arxiv.org/abs/1910.00078)\n", "type": "Text_excerpt", "original_header": "Citing MIOpen", "parent_header": ["MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "```bibtex\n@misc{jeh2019miopen,\n    title={MIOpen: An Open Source Library For Deep Learning Primitives},\n    author={Jehandad Khan and Paul Fultz and Artem Tamazov and Daniel Lowell and Chao Liu and Michael Melesse and Murali Nandhimandalam and Kamil Nasyrov and Ilya Perminov and Tejash Shah and Vasilii Filippov and Jing Zhang and Jing Zhou and Bragadeesh Natarajan and Mayank Daga},\n    year={2019},\n    eprint={1910.00078},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG}\n}\n```\n", "type": "Text_excerpt", "original_header": "Citation BibTeX", "parent_header": ["MIOpen", "Citing MIOpen"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"value": "@misc{jeh2019miopen,\n    title={MIOpen: An Open Source Library For Deep Learning Primitives},\n    author={Jehandad Khan and Paul Fultz and Artem Tamazov and Daniel Lowell and Chao Liu and Michael Melesse and Murali Nandhimandalam and Kamil Nasyrov and Ilya Perminov and Tejash Shah and Vasilii Filippov and Jing Zhang and Jing Zhou and Bragadeesh Natarajan and Mayank Daga},\n    year={2019},\n    eprint={1910.00078},\n    archivePrefix={arXiv},\n    primaryClass={cs.LG}\n}", "type": "Text_excerpt", "format": "bibtex"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}], "full_title": [{"result": {"type": "String", "value": "MIOpen"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/abs/  \n[MIOpen: An Open Source Library For Deep Learning Primitives](https://arxiv.org/abs/1910.00078)\n\n### Citation BibTeX\n\n```bibtex\n@misc{jeh2019miopen,\n    title={MIOpen: An Open Source Library For Deep Learning Primitives"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1910.00078"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ROCmSoftwarePlatform/MIOpen/develop/README.md"}]}