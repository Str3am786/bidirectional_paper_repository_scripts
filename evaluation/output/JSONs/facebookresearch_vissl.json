{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:19:22"}, "code_repository": [{"result": {"value": "https://github.com/facebookresearch/vissl", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "facebookresearch", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2020-04-09T19:40:33Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-21T12:51:28Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MIT License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/LICENSE"}, {"result": {"value": "VISSL is released under [MIT license](LICENSE).\n", "type": "Text_excerpt", "original_header": "License"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "description": [{"result": {"value": "VISSL is FAIR's library of extensible, modular and scalable components for SOTA Self-Supervised Learning with images.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "VISSL is a computer **VI**sion library for state-of-the-art **S**elf-**S**upervised **L**earning research with [PyTorch](https://pytorch.org). VISSL aims to accelerate research cycle in self-supervised learning: from designing a new self-supervised task to evaluating the learned representations. Key features include:\n\n- **Reproducible implementation of SOTA in Self-Supervision**: All existing SOTA in Self-Supervision are implemented - [SwAV](https://arxiv.org/abs/2006.09882), [SimCLR](https://arxiv.org/abs/2002.05709), [MoCo(v2)](https://arxiv.org/abs/1911.05722), [PIRL](https://arxiv.org/abs/1912.01991), [NPID](https://arxiv.org/pdf/1805.01978.pdf), [NPID++](https://arxiv.org/abs/1912.01991), [DeepClusterV2](https://arxiv.org/abs/2006.09882), [ClusterFit](https://openaccess.thecvf.com/content_CVPR_2020/papers/Yan_ClusterFit_Improving_Generalization_of_Visual_Representations_CVPR_2020_paper.pdf), [RotNet](https://arxiv.org/abs/1803.07728), [Jigsaw](https://arxiv.org/abs/1603.09246). Also supports supervised trainings.\n\n- **Benchmark suite**: Variety of benchmarks tasks including [linear image classification (places205, imagenet1k, voc07, food, CLEVR, dsprites, UCF101, stanford cars and many more)](https://github.com/facebookresearch/vissl/tree/main/configs/config/benchmark/linear_image_classification), [full finetuning](https://github.com/facebookresearch/vissl/tree/main/configs/config/benchmark/fulltune), [semi-supervised benchmark](https://github.com/facebookresearch/vissl/tree/main/configs/config/benchmark/semi_supervised), [nearest neighbor benchmark](https://github.com/facebookresearch/vissl/tree/main/configs/config/benchmark/nearest_neighbor), [object detection (Pascal VOC and COCO)](https://github.com/facebookresearch/vissl/tree/main/configs/config/benchmark/object_detection).\n\n- **Ease of Usability**: easy to use using yaml configuration system based on [Hydra](https://github.com/facebookresearch/hydra).\n\n- **Modular**: Easy to design new tasks and reuse the existing components from other tasks (objective functions, model trunk and heads, data transforms, etc.). The modular components are simple *drop-in replacements* in yaml config files.\n\n- **Scalability**: Easy to train model on 1-gpu, multi-gpu and multi-node. Several components for large scale trainings provided as simple config file plugs: [Activation checkpointing](https://pytorch.org/docs/stable/checkpoint.html), [ZeRO](https://arxiv.org/abs/1910.02054), [FP16](https://nvidia.github.io/apex/amp.html#o1-mixed-precision-recommended-for-typical-use), [LARC](https://arxiv.org/abs/1708.03888), Stateful data sampler, data class to handle invalid images, large model backbones like [RegNets](https://arxiv.org/abs/2003.13678), etc.\n\n- **Model Zoo**: Over *60 pre-trained self-supervised model* weights.\n", "type": "Text_excerpt", "original_header": "Introduction"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Text_excerpt", "value": "Below we share, in reverse chronological order, the updates and new releases in VISSL. All VISSL releases are available [here](https://github.com/facebookresearch/vissl/releases).\n- **[Feb 2022]**: Releasing [SEER 10B parameters](https://arxiv.org/abs/2202.08360) model [implementation and model weights](projects/SEER/README.md).\n- **[Feb 2022]**: Releasing [implementation of Fairness Benchmarks](projects/fairness_indicators/README.md) for computer vision models proposed in [the paper](http://arxiv.org/abs/2202.07603).\n- **[Jan 2022]**: [Implementation for Geolocalization test](https://github.com/facebookresearch/vissl/commit/d372304c22482bc5521fbaf422ea936ff1dcc531) (gps prediction for an image) released in VISSL.\n- **[Jan 2022]**: Add [BEiT](https://arxiv.org/pdf/2106.08254.pdf) transformer [implementation](https://github.com/facebookresearch/vissl/commit/722a7ccb35561d9b536cc756b3c000dddf5a1806) and [ClassyVision ViT](https://github.com/facebookresearch/vissl/commit/dc59f077449b7582cd3135f6996dc42930cc5247).\n- **[Nov 2021]**: [Vissl Release 0.1.6](https://github.com/facebookresearch/vissl/releases/tag/v0.1.6) We have released a new version of VISSL. Please see our [release notes](https://github.com/facebookresearch/vissl/releases/tag/v0.1.6) for more information.\n- **[Oct 2021]**: [AugLy](https://github.com/facebookresearch/AugLy) data augmentations support introduced in this [commit](https://github.com/facebookresearch/vissl/commit/dd9971a0c1fb17c96fd4994d73ebbda6f82c8f03).\n- **[Oct 2021]**: [XCiT: Cross-Covariance Image Transformers](https://arxiv.org/pdf/2106.09681.pdf) code released in this [commit](https://github.com/facebookresearch/vissl/commit/056e695a84ed1e1c63320ddeecb577a9e03cde63).\n- **[Sept 2021]**: VISSL master branch renamed to main in this [PR](https://github.com/facebookresearch/vissl/pull/425) in VISSL.\n- **[August 2021]**: Instance Retrieval benchmark implemented and [available](https://github.com/facebookresearch/vissl/pull/394) in VISSL.\n- **[July 2021]**: [Fully Sharded Data Parallel](https://github.com/facebookresearch/fairscale/pull/413) integrated in VISSL and announced in [blog](https://engineering.fb.com/2021/07/15/open-source/fsdp/).\n- **[May 2021]**: [DINO: Emerging Properties in Self-Supervised Vision Transformers](https://arxiv.org/pdf/2104.14294.pdf) code released.\n- **[May 2021]**: VISSL relicensed under [MIT License](LICENSE).\n- **[May 2021]**: [Barlow Twins: Self-Supervised Learning via Redundancy Reduction](https://arxiv.org/abs/2103.03230) code released.\n- **[April 2021]**: [ConViT: Improving Vision Transformers with Soft Convolutional Inductive Biases](https://arxiv.org/pdf/2103.10697.pdf) code released.\n- **[March 2021]**: Added most benchmark datasets used in [VTAB](https://arxiv.org/pdf/1910.04867.pdf) and [CLIP](https://arxiv.org/abs/2103.00020) benchmark tasks.\n- **[February 2021]**: Added [Vision Transformers](https://arxiv.org/pdf/2010.11929v1.pdf) (ViT) backbone and [training self-supervision with ViT](https://github.com/facebookresearch/vissl/tree/main/configs/config/pretrain/vision_transformer).\n- **[January 2021]**: VISSL v0.1.5 released.\n \n", "original_header": "What's New"}, "confidence": 0.9646350210278583, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Text_excerpt", "value": "We welcome new contributions to VISSL and we will be actively maintaining this library! Please refer to [`CONTRIBUTING.md`](./.github/CONTRIBUTING.md) for full instructions on how to run the code, tests and linter, and submit your pull requests.\n \n", "original_header": "Development"}, "confidence": 0.9570563292779016, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "name": [{"result": {"value": "vissl", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "facebookresearch/vissl", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/facebookresearch/vissl/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/facebookresearch/vissl/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 3166, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 326, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/facebookresearch/vissl/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 21377655}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 2167538}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 27305}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "JavaScript", "name": "JavaScript", "type": "Programming_language", "size": 25231}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "CSS", "name": "CSS", "type": "Programming_language", "size": 9568}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Dockerfile", "name": "Dockerfile", "type": "Programming_language", "size": 3393}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/facebookresearch/vissl/releases/51218897", "tag": "v0.1.6", "name": "v0.1.6", "author": {"name": "iseessel", "type": "User"}, "description": "# Vissl Release Overview 0.1.6\r\n\r\n* VISSL relicenses with MIT license to enable broader use. This includes personal, university, and commercial use. \r\n* VISSL master branch renamed to main.\r\n* We now recommend [building VISSL from source](https://github.com/facebookresearch/vissl/blob/v0.1.6/INSTALL.md#installing-vissl-from-source-recommended). Since VISSL is designed to be a hackable research library, we believe this method of installation gives the user the most flexibility to hack on VISSL as they like.\r\n* Added the following SSL approaches and architectures to VISSL:  \r\n    * [XCiT: Cross-Covariance Image Transformers](https://arxiv.org/pdf/2106.09681.pdf), \r\n    * [DINO: Emerging Properties in Self-Supervised Vision Transformers](https://arxiv.org/pdf/2104.14294.pdf), \r\n    * [Barlow Twins: Self-Supervised Learning via Redundancy Reduction](https://arxiv.org/abs/2103.03230), \r\n    * [ConViT: Improving Vision Transformers with Soft Convolutional Inductive Biases](https://arxiv.org/pdf/2103.10697.pdf), and the \r\n    * [Vision Transformers](https://arxiv.org/pdf/2010.11929v1.pdf) (ViT) backbone with optional [gradient clipping](https://vissl.readthedocs.io/en/v0.1.6/ssl_approaches/vision_transformers.html?highlight=GRAD_CLIP#supervised-vit-training-on-1-gpu). \r\n* Integrated [Fully Sharded Data Parallel](https://github.com/facebookresearch/fairscale/pull/413) into VISSL, tested on SwAV, Regnet models. \r\n    * To aid its development, we have added enhanced tooling for [memory profiling](https://github.com/facebookresearch/vissl/blob/v0.1.6/vissl/config/defaults.yaml#L168).\r\n* Full support for the newest [Pytorch](https://pytorch.org/get-started/locally/) versions: 1.8.1, 1.9, and 1.9.1.\r\n* Added [CLIP](https://openai.com/blog/clip/) and [VTAB](https://ai.googleblog.com/2019/11/the-visual-task-adaptation-benchmark.html) benchmarks. See our [docs](https://vissl.readthedocs.io/en/v0.1.5/evaluations/linear_benchmark.html) for more information on how to set these up.\r\n* Updated all [tutorials](https://vissl.ai/tutorials/) and improved versioning for future stability. We now suggest to install VISSL from [source]() for ease-of-use. \r\n* Improved support for reproducibility and debugging, as well as increased unit testing. Including new [DATA_LIMIT options](https://github.com/facebookresearch/vissl/blob/v0.1.6/vissl/config/defaults.yaml#L353), the [debugging sampler(https://github.com/facebookresearch/vissl/blob/v0.1.6/vissl/config/defaults.yaml#L374), [CUDA reproducibility settings](https://github.com/facebookresearch/vissl/blob/v0.1.6/vissl/config/defaults.yaml#L83), and [dataloader seeding improvements](https://github.com/facebookresearch/vissl/pull/299). For more information see our [docs](https://vissl.readthedocs.io/en/v0.1.6/vissl_modules/train.html?highlight=debugging#debugging-trainings)\r\n* Enhanced metrics support. We now have the ability to [log multiple metrics](https://github.com/facebookresearch/vissl/issues/313) to [stdout and tensorboard](https://github.com/facebookresearch/vissl/issues/330). \r\n* Added support for the [Precision@k and Recall@k]( https://github.com/facebookresearch/vissl/pull/448) metrics. See our [docs](https://vissl.readthedocs.io/en/v0.1.6/vissl_modules/meters.html?highlight=precision%40k#using-meters) for more info.\r\n* Updated [DOCKERFILE](https://github.com/facebookresearch/vissl/tree/v0.1.6/docker) to reflect the newest version.\r\n* Enhanced support for [image retrieval benchmarks](https://vissl.readthedocs.io/en/v0.1.6/evaluations/instance_retrieval.html) for the Copydays, ROxford, and RParis benchmark datasets.\r\n* Support for image transformations using the [Augly](https://vissl.readthedocs.io/en/v0.1.6/vissl_modules/data.html?highlight=augly#using-data-transforms) library.\r\n* Added flexibility to register own [custom base model class](https://vissl.readthedocs.io/en/v0.1.6/extend_modules/models.html#adding-new-base-model).\r\n\r\n# How to Upgrade\r\n\r\nWe encourage users to [build from source](https://github.com/facebookresearch/vissl/blob/v0.1.6/INSTALL.md#installing-vissl-from-source-recommended). However, if you still wish to use the binaries you can upgrade by following the following steps:\r\n\r\n\r\n## Conda environment\r\n```\r\nconda install -c vissl vissl==0.1.6\r\n```\r\n\r\n## Python venv\r\n```\r\n# Uninstall fairscale, as we now include the library in the package \r\n# because we rely on a specific commit that is not part of a PyPi release. \r\npip uninstall fairscale\r\npip install vissl==0.1.6\r\n```\r\n\r\nIf you are installing for the first time, please see [our installation instructions](https://github.com/facebookresearch/vissl/blob/v0.1.6/INSTALL.md).\r\n\r\nAs always, thank you all so much for your contributions and feedback. Please feel free to continue to reach out in our issues for any questions, suggestions, or if you wish to contribute. We hope you are finding VISSL useful to pushing the state-of-the-art in self-supervised learning!", "tarball_url": "https://api.github.com/repos/facebookresearch/vissl/tarball/v0.1.6", "zipball_url": "https://api.github.com/repos/facebookresearch/vissl/zipball/v0.1.6", "html_url": "https://github.com/facebookresearch/vissl/releases/tag/v0.1.6", "url": "https://api.github.com/repos/facebookresearch/vissl/releases/51218897", "release_id": 51218897, "date_created": "2021-11-02T17:06:28Z", "date_published": "2021-11-02T17:21:02Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/facebookresearch/vissl/releases/39136810", "tag": "v0.1.5", "name": "v0.1.5 Initial Release", "author": {"name": "prigoyal", "type": "User"}, "description": "Initial release of VISSL", "tarball_url": "https://api.github.com/repos/facebookresearch/vissl/tarball/v0.1.5", "zipball_url": "https://api.github.com/repos/facebookresearch/vissl/zipball/v0.1.5", "html_url": "https://github.com/facebookresearch/vissl/releases/tag/v0.1.5", "url": "https://api.github.com/repos/facebookresearch/vissl/releases/39136810", "release_id": 39136810, "date_created": "2021-03-02T00:51:05Z", "date_published": "2021-03-02T18:51:51Z"}, "confidence": 1, "technique": "GitHub_API"}], "installation": [{"result": {"value": "# Installation\n\nOur installation is simple and we provide pre-built binaries (pip, conda) and also instructions for building from source (pip, conda).\n\n## Table of Contents\n- [Requirements](#requirements)\n- [Installing VISSL from source](#Installing-VISSL-from-source)\n    - [Install from source in Conda environment](#Install-from-source-in-Conda-environment)\n    - [Install from source in PIP environment](#Install-from-source-in-PIP-environment)\n- [Installing VISSL from pre-built binaries](#Installing-VISSL-from-pre-built-binaries)\n   - [Install VISSL conda package](#Install-VISSL-conda-package)\n   - [Install VISSL pip package](#Install-VISSL-pip-package)\n\n\n## Requirements\n\nAt a high level, project requires following system dependencies.\n\n- Linux\n- Python>=3.6.2 and <3.9\n- PyTorch>=1.4\n- torchvision (matching PyTorch install)\n- CUDA (must be a version supported by the pytorch version)\n- OpenCV (optional)\n\n## Installing VISSL from source (recommended)\nThe following instructions assume that you have desired CUDA version installed and working.\n\n### Install from source in Conda environment\n\n#### Step 1: Create Conda environment\n\nIf you don't have anaconda, [run this bash scrip to install conda](https://github.com/facebookresearch/vissl/blob/main/docker/common/install_conda.sh).\n\n```bash\nconda create -n vissl_env python=3.8\nsource activate vissl_env\n```\n\n#### Step 2: Install PyTorch (conda)\n\n```bash\nconda install pytorch==1.8.1 torchvision==0.9.1 cudatoolkit=10.2 -c pytorch\n```\n\n#### Step 3: Install APEX (conda)\n\n```bash\nconda install -c vissl apex\n```\n\n#### Step 4: Install VISSL\n\n```bash\n# clone vissl repository\ncd $HOME && git clone --recursive https://github.com/facebookresearch/vissl.git && cd $HOME/vissl/\n# Optional, checkout stable v0.1.6 branch. While our docs are versioned, the tutorials\n# use v0.1.6 and the docs are more likely to be up-to-date.\ngit checkout v0.1.6\ngit checkout -b v0.1.6\n# install vissl dependencies\npip install --progress-bar off -r requirements.txt\npip install opencv-python\n# update classy vision install to commit stable for vissl.\n# Note: If building from vissl main, use classyvision main.\npip uninstall -y classy_vision\npip install classy-vision@https://github.com/facebookresearch/ClassyVision/tarball/4785d5ee19d3bcedd5b28c1eb51ea1f59188b54d\n# update fairscale install to commit stable for vissl.\npip uninstall -y fairscale\npip install fairscale==0.4.6\n# install vissl dev mode (e stands for editable)\npip install -e \".[dev]\"\n# verify installation\npython -c 'import vissl, apex'\n```\n\n### Install from source in PIP environment\n\n#### Step 1: Create Virtual environment (pip)\n```bash\npython3 -m venv ~/venv\n. ~/venv/bin/activate\n```\n\n#### Step 2: Install PyTorch (pip)\n\n```bash\npip install torch==1.8.1+cu102 torchvision==0.9.1+cu102 -f https://download.pytorch.org/whl/torch_stable.html\n```\n\n#### Step 3: Install APEX (pip)\n\n```bash\npip install -f https://dl.fbaipublicfiles.com/vissl/packaging/apexwheels/py38_cu102_pyt181/download.html apex\n```\n\n#### Step 4: Install VISSL\nFollow [step4 instructions from the PIP installation](#step-4-install-vissl)\n\n## Installing VISSL from pre-built binaries\n\n### Install VISSL conda package\n\nThis assumes you have CUDA 10.2.\n\n```bash\nconda create -n vissl python=3.8\nconda activate vissl\nconda install pytorch==1.8.1 torchvision==0.9.1 cudatoolkit=10.2 -c pytorch\nconda install -c vissl -c iopath -c conda-forge -c pytorch -c defaults apex vissl\n```\n\nThe package also contains code for the fairscale and ClassyVision libraries. Ensure you do not have them installed separately.\n\nFor other versions of PyTorch, Python, CUDA, please modify the above instructions with the\ndesired version. VISSL provides Apex packages for all combinations of pytorch, python and compatible cuda.\n\n### Install VISSL pip package\n\nThis example is with pytorch 1.5.1 and cuda 10.1. Please modify the PyTorch version, cuda version and accordingly apex version below for the desired settings.\n\n#### Step 1: Create Virtual environment (pip)\n```bash\npython3 -m venv ~/venv\n. ~/venv/bin/activate\n```\n\n#### Step 2: Install PyTorch, OpenCV and APEX (pip)\n\n- We use PyTorch=1.8.1 with CUDA 10.2 in the following instruction (you can chose your desired version).\n- There are several ways to install opencv, one possibility is as follows.\n- For APEX, we provide pre-built binary built with optimized C++/CUDA extensions provided by APEX.\n\n```bash\npip install torch==1.8.1+cu102 torchvision==0.9.1+cu102 -f https://download.pytorch.org/whl/torch_stable.html\npip install opencv-python\npip install -f https://dl.fbaipublicfiles.com/vissl/packaging/apexwheels/py38_cu102_pyt181/download.html apex\n```\n\nNote that, for the APEX install, you need to get the versions of CUDA, PyTorch, and Python correct in the URL. We provide APEX versions with all possible combinations of Python, PyTorch, CUDA. Select the right APEX Wheels if you desire a different combination.\n\nOn Google Colab, everything until this point is already set up. You install APEX there as follows.\n```\nimport sys\nimport torch\nversion_str=\"\".join([\n    f\"py3{sys.version_info.minor}_cu\",\n    torch.version.cuda.replace(\".\",\"\"),\n    f\"_pyt{torch.__version__[0:5:2]}\"\n])\n!pip install -f https://dl.fbaipublicfiles.com/vissl/packaging/apexwheels/{version_str}/download.html apex\n```\n\n#### Step 3: Install VISSL\n\n```bash\npip install vissl\n# verify installation\npython -c 'import vissl'\n```\n\nThe package also contains code for the ClassyVision library. Ensure you do not have it installed separately.\n\nThat's it! You are now ready to use this code.\n\n\n### Optional: Install Apex from source (common for both pip and conda)\n\nApex installation requires that you have a latest nvcc so the c++ extensions can be compiled with latest gcc (>=7.4). Check the APEX website for more instructions.\n\n```bash\n# see https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#virtual-architecture-feature-list to select cuda architecture you want to build\nCUDA_VER=10.1 TORCH_CUDA_ARCH_LIST=\"5.0;5.2;5.3;6.0;6.1;6.2;7.0;7.5\" ./docker/common/install_apex.sh\n```\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/INSTALL.md"}, {"result": {"value": "See [`INSTALL.md`](https://github.com/facebookresearch/vissl/blob/main/INSTALL.md).\n", "type": "Text_excerpt", "original_header": "Installation"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "documentation": [{"result": {"value": "https://github.com/facebookresearch/vissl/tree/main/docs", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "Learn more about VISSL at our [documentation](https://vissl.readthedocs.io). And see the [projects/](projects/) for some projects built on top of VISSL.\n", "type": "Text_excerpt", "original_header": "Documentation"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/docker/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/docker/Dockerfile"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/docker/conda/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/docker/conda/Dockerfile"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/docker/build_docker.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/docker/common/install_apex.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/docker/common/install_conda.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/run_quick_tests.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/launch_benchmark_suite_scheduler_slurm.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/linter.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/low_resource_1gpu_train_wrapper.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/launch_slurm.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/run_quick_integration_tests.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_pip/go.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_pip/to_pypi.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_pip/inside.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_pip/after.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_pip/test/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_pip/test/test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/apex_pip/go.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/apex_pip/after.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/apex_pip/inside/a.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/apex_conda/go.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/apex_conda/upload.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_conda/upload.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_conda/build_all_conda.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/packaging/vissl_conda/build_conda.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/website_docs/build_website.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/dev/website_docs/publish_website.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "code_of_conduct": [{"result": {"value": "# Code of Conduct\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the [full text](https://code.fb.com/codeofconduct/)\nso that you can understand what actions will and will not be tolerated.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/.github/CODE_OF_CONDUCT.md"}], "contributing_guidelines": [{"result": {"value": "# Contributing to VISSL\nWe want to make contributing to this project as easy and transparent as possible.\n\n## Our Development Process\nMinor changes and improvements will be released on an ongoing basis. Larger changes (e.g., changesets implementing a new SSL approach, benchmark, new scaling feature etc) will be released on a more periodic basis.\n\n## Issues\nWe use GitHub issues to track public bugs and questions. Please make sure to follow one of the\n[issue templates](https://github.com/facebookresearch/vissl/issues/new/choose)\nwhen reporting any issues.\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## Pull Requests\nWe actively welcome your pull requests.\n\nHowever, if you're adding any significant features (e.g. > 50 lines), please\nmake sure to have a corresponding issue to discuss your motivation and proposals,\nbefore sending a PR. We do not always accept new features, and we take the following\nfactors into consideration:\n\n1. Whether the same feature can be achieved without modifying vissl.\nVISSL is designed to be extensible so that it's easy to extend any modular component and train custom models. If some part is not as extensible, you can also bring up the issue to make it more extensible.\n2. Whether the feature is potentially useful to a large audience, or only to a small portion of users.\n3. Whether the proposed solution has a good design / interface.\n4. Whether the proposed solution adds extra mental/practical overhead to users who don't\n   need such feature.\n5. Whether the proposed solution breaks existing APIs.\n\nWhen sending a PR, please do:\n\n1. Fork the repo and create your branch from `main`.\n2. If a PR contains multiple orthogonal changes, split it to several PRs.\n3. If you've added code that should be tested, add tests.\n4. If you've changed APIs, update the documentation.\n5. Ensure the test suite passes. Follow [cpu test instructions](https://github.com/facebookresearch/vissl/blob/main/tests/README.md) and [integration tests][https://github.com/facebookresearch/vissl/blob/main/dev/run_quick_tests.sh].\n6. Make sure your code follows our coding practices (see next section).\n7. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Coding Style\n\nPlease follow [our coding practices](https://github.com/facebookresearch/vissl/blob/main/dev/README.md#practices-for-coding-quality) and choose either option to properly format your code before submitting PRs.\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## License\nBy contributing to ssl_framework, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/.github/CONTRIBUTING.md"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Understanding_VISSL_Training_and_YAML_Config_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Understanding_VISSL_Training_and_YAML_Config_V0_1_6.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Train_SimCLR_on_1_gpu_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Train_SimCLR_on_1_gpu_V0_1_6.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Using_a_pretrained_model_for_inference_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Using_a_pretrained_model_for_inference_V0_1_6.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Large_Scale_Training_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Large_Scale_Training_V0_1_6.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Feature_Extraction_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Feature_Extraction_V0_1_6.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Benchmark_Full_Finetuning_on_ImageNet_1K_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Benchmark_Full_Finetuning_on_ImageNet_1K_V0_1_6.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Installation_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Installation_V0_1_6.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Benchmark_Linear_Image_Classification_on_ImageNet_1K_V0_1_6.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/tutorials/Benchmark_Linear_Image_Classification_on_ImageNet_1K_V0_1_6.ipynb"}], "usage": [{"result": {"value": "Install VISSL by following the [installation instructions](https://github.com/facebookresearch/vissl/blob/main/INSTALL.md).\nAfter installation, please see [Getting Started with VISSL](https://github.com/facebookresearch/vissl/blob/main/GETTING_STARTED.md) and the [Colab Notebook](https://colab.research.google.com/github/facebookresearch/vissl/blob/v0.1.6/tutorials/Understanding_VISSL_Training_and_YAML_Config_V0_1_6.ipynb) to learn about basic usage.\n", "type": "Text_excerpt", "original_header": "Getting Started"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"value": "Get started with VISSL by trying one of the **Colab tutorial notebooks**.\n\n- [Train SimCLR on 1-gpu](https://colab.research.google.com/github/facebookresearch/vissl/blob/v0.1.6/tutorials/Train_SimCLR_on_1_gpu_V0_1_6.ipynb)\n- [Extracting Features from a pretrained model](https://colab.research.google.com/github/facebookresearch/vissl/blob/v0.1.6/tutorials/Using_a_pretrained_model_for_inference_V0_1_6.ipynb)\n- [Benchmark task: Full finetuning on ImageNet-1K](https://colab.research.google.com/github/facebookresearch/vissl/blob/v0.1.6/tutorials/Benchmark_Full_Finetuning_on_ImageNet_1K_V0_1_6.ipynb)\n- [Benchmark task: Linear image classification on ImageNet-1K](https://colab.research.google.com/github/facebookresearch/vissl/blob/v0.1.6/tutorials/Benchmark_Linear_Image_Classification_on_ImageNet_1K_V0_1_6.ipynb)\n- [Large scale training (fp16, LARC, ZeRO)](https://colab.research.google.com/github/facebookresearch/vissl/blob/v0.1.6/tutorials/Large_Scale_Training_V0_1_6.ipynb)\n- [Using a pre-trained model in inference mode](https://colab.research.google.com/github/facebookresearch/vissl/blob/v0.1.6/tutorials/Using_a_pretrained_model_for_inference_V0_1_6.ipynb)\n\n", "type": "Text_excerpt", "original_header": "Tutorials"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "contributors": [{"result": {"value": "VISSL is written and maintained by the Facebook AI Research.\n", "type": "Text_excerpt", "original_header": "Contributors"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "citation": [{"result": {"value": "If you find VISSL useful in your research or wish to refer to the baseline results published in the [Model Zoo](https://github.com/facebookresearch/vissl/blob/main/MODEL_ZOO.md), please use the following BibTeX entry.\n\n```BibTeX\n@misc{goyal2021vissl,\n  author =       {Priya Goyal and Quentin Duval and Jeremy Reizenstein and Matthew Leavitt and Min Xu and\n                  Benjamin Lefaudeux and Mannat Singh and Vinicius Reis and Mathilde Caron and Piotr Bojanowski and\n                  Armand Joulin and Ishan Misra},\n  title =        {VISSL},\n  howpublished = {\\url{https://github.com/facebookresearch/vissl}},\n  year =         {2021}\n}\n```\n", "type": "Text_excerpt", "original_header": "Citing VISSL"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"value": "@misc{goyal2021vissl,\n  author =       {Priya Goyal and Quentin Duval and Jeremy Reizenstein and Matthew Leavitt and Min Xu and\n                  Benjamin Lefaudeux and Mannat Singh and Vinicius Reis and Mathilde Caron and Piotr Bojanowski and\n                  Armand Joulin and Ishan Misra},\n  title =        {VISSL},\n  howpublished = {\\url{https://github.com/facebookresearch/vissl}},\n  year =         {2021}\n}", "type": "Text_excerpt", "format": "bibtex"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "application_domain": [{"result": {"type": "String", "value": "Computer Vision"}, "confidence": 0.9627671312833751, "technique": "supervised_classification"}], "full_title": [{"result": {"type": "String", "value": ""}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "logo": [{"result": {"type": "Url", "value": "https://raw.githubusercontent.com/facebookresearch/vissl/main/.github/logo/Logo_Color_Light_BG.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "image": [{"result": {"type": "Url", "value": "https://circleci.com/gh/facebookresearch/vissl.svg?style=svg&amp;circle-token=a0c1dfc4edf0ebe523700b95a563e74eb4d4e5a8"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/abs/2202.08360"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/pdf/2106.09681.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/2002.05709"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1911.05722"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/2103.03230"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/pdf/1910.04867.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/pdf/2104.14294.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/pdf/2010.11929v1.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1708.03888"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1603.09246"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/2103.00020"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/2003.13678"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/pdf/2103.10697.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/pdf/1805.01978.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1803.07728"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/pdf/2106.08254.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1910.02054"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1912.01991"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/2006.09882"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/facebookresearch/vissl/main/README.md"}]}