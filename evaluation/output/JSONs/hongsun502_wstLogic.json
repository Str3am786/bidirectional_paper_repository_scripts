{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:10:35"}, "code_repository": [{"result": {"value": "https://github.com/hongsun502/wstLogic", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "hongsun502", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2018-03-16T08:40:05Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2021-02-14T20:21:40Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}], "name": [{"result": {"value": "wstLogic", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "hongsun502/wstLogic", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/hongsun502/wstLogic/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/hongsun502/wstLogic/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 3, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 0, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/hongsun502/wstLogic/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 22429757}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "HTML", "name": "HTML", "type": "Programming_language", "size": 20891346}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 8716}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/notebook/GPS4IC-demonstration-visualization.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/notebook/GPS4IC-demonstration-visualization.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/notebook/GPS4IC-demonstration-execution.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/notebook/GPS4IC-demonstration-execution.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/notebook/GPS4IC-demonstration-data.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/notebook/GPS4IC-demonstration-data.ipynb"}], "run": [{"result": {"value": "Download/clone this github project, \ninstall the EYE reasoning engine following the [install instruction](https://github.com/josd/eye/blob/master/INSTALL), \nenter the /notebook folder to run the notebooks for the demonstration.\n", "type": "Text_excerpt", "original_header": "How to run the demonstration", "parent_header": ["Weighted state transition logic (wstLogic) for future state prediction"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}], "contact": [{"result": {"value": "Hong Sun (hongsun502@gmail.com)\n\nJos De Roo (josderoo@gmail.com)\n\nDoerthe Arndt (mailandoerthe@gmail.com)\n", "type": "Text_excerpt", "original_header": "Contact information", "parent_header": ["Weighted state transition logic (wstLogic) for future state prediction"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}], "description": [{"result": {"type": "Text_excerpt", "value": "Current adaptive systems are mostly built on detecting an event and take corresponding adaptations. \nWeighted state transition logic aims to model the future state, and allows to carry adaptive pathway management based on the predicted future state.\nThe weighted state transition logic is developed in the GPS4IC project to perform adaptive clinical pathway management.\nNevertheless, the application of such a logic is not limited to the clinical domain, \nbut can also be extended to other domains for adaptive workflow management. \nThis repository provides a semantic web based implementation of the wstLogic. \nSample scenarios of using wstLogic for adaptive clinical pathway management to cope with comorbidity is also provided. \n", "original_header": "Weighted state transition logic (wstLogic) for future state prediction"}, "confidence": 0.9864944379492424, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The basic concept of wstLogic is inspired from [linear logic](https://girard.perso.math.cnrs.fr/Synsem.pdf) that during a state transition,\nthe expired state (represented as 'From') can be retracted, \nand the new state (represented as 'To') can be asserted. \nThe wstLogic extends the linear logic to include weights, \nconditions and transition state during state transition\n \n", "original_header": "Basic concept of weighted"}, "confidence": 0.9184643070557053, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The wstLogic is implemented with semantic representation as backward rules \nin N3 language. \nA set of ontology named as [gps-schema](http://josd.github.io/eye/reasoning/gps/gps-schema) \nis created to enable a semantic representation of state change. \nThe current state of a patient is represented with RDF graphs, \nand the target to reach is represented as an N3 query. \nBackground knowledge is also introduced as RDF graphs or N3 rules. \nA semantic reasoning engine ([EYE](https://github.com/josd/eye)) is used \nto execute a set of tasks for adaptive pathway management.\n \n", "original_header": "A semantic web based implementation"}, "confidence": 0.9948555642981751, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Once the state transitions and background knowledge of a relevant domain are set up, \nit is possible to automatically generate a set of potential paths from the current state of a patient towards a target state. \nThe EYE reasoning engine takes the current state of the patient, \ntogether with background knowledge and state transition descriptions of the relevant domain as inputs of a reasoning process for path generation.\nThis path search approach is largely inspired by the [RESTdesc](https://arxiv.org/pdf/1512.07780.pdf), \nwith the improvement to make use of wstLogic for state transition description, \nas well as some refinements in the path search process. \n", "original_header": "Path generation"}, "confidence": 0.9643359810879716, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The implementation made in this repository is also able to support the following functions: \nThese functions are all executed by the EYE reasoning engine with [a set of plugins developed in this repository](https://github.com/hongsun502/wstLogic/tree/master/engine)\n \n", "original_header": "Other functions"}, "confidence": 0.9531427290983214, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "This folder contains a set of rules and plugins that implement the wstLogic with semantic web language.\n \n", "original_header": "Implementation of wstLogic"}, "confidence": 0.9768337765037156, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "**/data** \nThis folder contains different sample data to represent different states of a patient in the demonstration. \n**/colon-cancer and /parkinson** \nThese two folders are about two application domains of the demonstration. \nEach contains relevant state transitions, as well as goals, and domain relevant background knowledge. \nThis folder contains background knowledge that is independent of the colon cancer and Parkinson domain. \nE.g. stating conflicts between actions. \nThis folder stores different types of paths generated in the demonstration. \nThis folder uses jupyter notebooks as the interface to demonstrate \nthe adaptive clinical pathway management with the wstLogic.\nIt contains three jupyter notebooks to display the data, \nexecute the pathway management, and visualize the output.\n \n", "original_header": "Scenario of adaptive clinical pathway management (A demonstration for the <a href=\"https://www.imec-int.com/en/what-we-offer/research-portfolio/gps4integratedcare\">GPS4IC project</a>)"}, "confidence": 0.9197695830691847, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Predicting future state for adaptive clinical pathway management, in submission to Journal of Biomedical Informatics\n \n", "original_header": "Publications"}, "confidence": 0.8525601572599896, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}], "installation": [{"result": {"type": "Text_excerpt", "value": "**Path validation** \n", "original_header": "Other functions"}, "confidence": 0.8057675898656085, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "**/path** \n", "original_header": "Scenario of adaptive clinical pathway management (A demonstration for the <a href=\"https://www.imec-int.com/en/what-we-offer/research-portfolio/gps4integratedcare\">GPS4IC project</a>)"}, "confidence": 0.8057675898656085, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "<br />\n<img src=\"state-transition.png\" width=\"350\" height=\"226\"/>\n<br /> \n", "original_header": "Basic concept of weighted"}, "confidence": 0.8691500573590117, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "<br />\n<img src=\"path-generation.png\" width=\"600\" height=\"388\"/>\n<br /> \n", "original_header": "Path generation"}, "confidence": 0.8793020090061964, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "Weighted state transition logic (wstLogic) for future state prediction"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}], "image": [{"result": {"type": "Url", "value": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/state-transition.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}, {"result": {"type": "Url", "value": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/path-generation.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/pdf/1512.07780.pdf"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/hongsun502/wstLogic/master/README.md"}]}