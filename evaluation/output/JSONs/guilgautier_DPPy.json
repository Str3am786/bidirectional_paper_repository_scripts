{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:44:35"}, "code_repository": [{"result": {"value": "https://github.com/guilgautier/DPPy", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "guilgautier", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2018-04-13T13:13:26Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-21T16:42:49Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MIT License\n\nCopyright (c) 2017 CRIStAL-PADR\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/LICENSE"}], "description": [{"result": {"value": "Python toolbox for sampling Determinantal Point Processes", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Determinantal point processes (DPPs) are specific probability\ndistributions over clouds of points that have been popular as models or\ncomputational tools across physics, probability, statistics, and more\nrecently of booming interest in machine learning. Sampling from DPPs is\na nontrivial matter, and many approaches have been proposed. DPPy is a\n`Python <https://www.python.org/>`__ library that puts together all\nexact and approximate sampling algorithms for DPPs.\n", "type": "Text_excerpt", "original_header": "Introduction", "parent_header": ["DPPy: Sampling Determinantal Point Processes with Python"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst"}], "name": [{"result": {"value": "DPPy", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "guilgautier/DPPy", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/guilgautier/DPPy/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/guilgautier/DPPy/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 214, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "determinantal-point-processes, determinantal-processes, python, random-matrix-theory, sampling-methods", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 49, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/guilgautier/DPPy/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 441355}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 408222}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 1694}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/guilgautier/DPPy/releases/34402583", "tag": "v0.3.2", "name": "v0.3.2 addition of alpha-dpp sampler", "author": {"name": "guilgautier", "type": "User"}, "description": "New version following #62 \r\n\r\n@danielecc contributed with an implementation of a fast exact Finite DPP sampling algorithm which does not require looking at all items and applies to both DPPs and k-DPPs.\r\n\r\n*[Sampling from a k-DPP without looking at all items](https://papers.nips.cc/paper/2020/hash/4d410063822cd9be28f86701c0bc3a31-Abstract.html)*\r\nDaniele Calandriello, Michal Derezinski, Michal Valko, NeurIPS, 2020.", "tarball_url": "https://api.github.com/repos/guilgautier/DPPy/tarball/v0.3.2", "zipball_url": "https://api.github.com/repos/guilgautier/DPPy/zipball/v0.3.2", "html_url": "https://github.com/guilgautier/DPPy/releases/tag/v0.3.2", "url": "https://api.github.com/repos/guilgautier/DPPy/releases/34402583", "release_id": 34402583, "date_created": "2020-11-25T08:45:08Z", "date_published": "2020-11-25T08:46:46Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/guilgautier/DPPy/releases/33045202", "tag": "v0.3.1", "name": "v0.3.1 Reduce dependencies, addition of some continuous DPP samplers", "author": {"name": "guilgautier", "type": "User"}, "description": "@danielecc simplified installation instructions to work with minimal dependencies: `numpy`, `scipy`, `matplotlib`.\r\nSee also [`README`](https://github.com/guilgautier/DPPy) for more details.\r\nAdditional dependencies: \r\n- `zonotope` for the zonotope MCMC based sampler using `cvxopt`, \r\n- `trees` for uniform spanning tree samplers using `networkx`,\r\n- `docs` for the documentation using `sphinxcontrib-bibtex`and `sphinx_rtd_theme`,\r\n\r\ncan be installed locally after cloning the repo.\r\n\r\n@guilgautier contributed with (see also [`/notebooks`](https://github.com/guilgautier/DPPy/tree/master/notebooks)):\r\n- an exact sampler for multivariate Jacobi ensembles used to do Monte Carlo integration\r\n    [*On two ways to use determinantal point processes for Monte Carlo integration*](https://papers.nips.cc/paper/8992-on-two-ways-to-use-determinantal-point-processes-for-monte-carlo-integration)\r\n    G. Gautier, R. Bardenet, M.Valko, NeurIPS, 2019.\r\n\r\n- a Markov chain based sampler for beta-ensembles with polynomial potential\r\n    [*Fast sampling from beta-ensembles*](http://arxiv.org/abs/2003.02344)\r\n    G. Gautier, R. Bardenet, M.Valko, arXiv preprint, 2020.", "tarball_url": "https://api.github.com/repos/guilgautier/DPPy/tarball/v0.3.1", "zipball_url": "https://api.github.com/repos/guilgautier/DPPy/zipball/v0.3.1", "html_url": "https://github.com/guilgautier/DPPy/releases/tag/v0.3.1", "url": "https://api.github.com/repos/guilgautier/DPPy/releases/33045202", "release_id": 33045202, "date_created": "2020-10-23T08:11:02Z", "date_published": "2020-10-26T08:21:54Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/guilgautier/DPPy/releases/21555800", "tag": "v0.3.0", "name": "v0.3.0 Addition of vfx sampler for finite DPPs", "author": {"name": "guilgautier", "type": "User"}, "description": "@danielecc contributed with an implementation of the `vfx` sampler, the associated documentation and tests.\r\n\r\nIn practice\r\n```python\r\nDPP = FiniteDPP('likelihood', **{'L_eval_X_data': (eval_L, X_data)})\r\nDPP.sample_exact(mode='vfx')\r\n```\r\n\r\nSee the corresponding NeurIPS 2019 paper of Derezinski, Calandriello, and Valko [Exact sampling of determinantal point processes with sublinear time preprocessing](https://papers.nips.cc/paper/9330-exact-sampling-of-determinantal-point-processes-with-sublinear-time-preprocessing) ", "tarball_url": "https://api.github.com/repos/guilgautier/DPPy/tarball/v0.3.0", "zipball_url": "https://api.github.com/repos/guilgautier/DPPy/zipball/v0.3.0", "html_url": "https://github.com/guilgautier/DPPy/releases/tag/v0.3.0", "url": "https://api.github.com/repos/guilgautier/DPPy/releases/21555800", "release_id": 21555800, "date_created": "2019-10-31T18:07:31Z", "date_published": "2019-11-18T14:45:11Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/guilgautier/DPPy/releases/19262560", "tag": "v0.2.0", "name": "v0.2.0 Resubmission to MLOSS", "author": {"name": "guilgautier", "type": "User"}, "description": "Since the last submission, we have put efforts on:\r\n- the coverage rate 14% -> 90% \r\n    - [Travis build + 90% coverage](https://travis-ci.com/guilgautier/DPPy/builds/123017755)\r\n    - [Coveralls](https://coveralls.io/github/guilgautier/DPPy?branch=master)\r\n- the documentation with better explanations, illustrations, docstrings\r\n    - [Documentation build](https://readthedocs.org/projects/dppy/builds/9510168/)\r\n- the implementation of the [multivariate Jacobi Ensemble](https://dppy.readthedocs.io/en/latest/continuous_dpps/multivariate_jacobi_ope.html), used for Monte Carlo integration\r\n\r\nCompanion paper:\r\n- [arXiv v2](https://arxiv.org/abs/1809.07258)\r\n- [GitHub](https://github.com/guilgautier/DPPy_paper)", "tarball_url": "https://api.github.com/repos/guilgautier/DPPy/tarball/v0.2.0", "zipball_url": "https://api.github.com/repos/guilgautier/DPPy/zipball/v0.2.0", "html_url": "https://github.com/guilgautier/DPPy/releases/tag/v0.2.0", "url": "https://api.github.com/repos/guilgautier/DPPy/releases/19262560", "release_id": 19262560, "date_created": "2019-08-13T16:58:15Z", "date_published": "2019-08-13T17:23:24Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/guilgautier/DPPy/releases/15862121", "tag": "v0.1.0", "name": "Submission to MLOSS", "author": {"name": "guilgautier", "type": "User"}, "description": "We feel the project mature enough to be released on [PyPI](https://pypi.org/project/DPPyPI/) and to be submitted to the special [MLOSS](http://jmlr.csail.mit.edu/mloss/) track of JMLR. The last version of the corresponding companion paper can be found at [DPPy_paper](https://github.com/guilgautier/DPPy_paper).\r\n\r\n", "tarball_url": "https://api.github.com/repos/guilgautier/DPPy/tarball/v0.1.0", "zipball_url": "https://api.github.com/repos/guilgautier/DPPy/zipball/v0.1.0", "html_url": "https://github.com/guilgautier/DPPy/releases/tag/v0.1.0", "url": "https://api.github.com/repos/guilgautier/DPPy/releases/15862121", "release_id": 15862121, "date_created": "2019-03-01T15:10:13Z", "date_published": "2019-03-01T15:46:29Z"}, "confidence": 1, "technique": "GitHub_API"}], "code_of_conduct": [{"result": {"value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at guillaume DOT gga AT gmail DOT com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/CODE_OF_CONDUCT.md"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/guilgautier/DPPy/master/scripts/install.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/guilgautier/DPPy/master/notebooks/fast_sampling_of_beta_ensembles.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/notebooks/fast_sampling_of_beta_ensembles.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/guilgautier/DPPy/master/notebooks/multivariate_jacobi_ensemble.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/notebooks/multivariate_jacobi_ensemble.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/guilgautier/DPPy/master/notebooks/Tuto_DPPy.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/notebooks/Tuto_DPPy.ipynb"}], "installation": [{"result": {"value": "DPPy works with `Python 3.6+ <http://docs.python.org/3/>`__.\n\nDependencies\n~~~~~~~~~~~~\n\nThis project depends on the following libraries, which are automatically downloaded during installation:\n\n-  `NumPy <http://www.numpy.org>`__\n-  `SciPy <http://www.scipy.org/>`__\n-  `Matplotlib <http://matplotlib.org/>`__\n\nThe following dependencies are optional, and unlock extra functionality if installed:\n\n-  `Networkx <http://networkx.github.io/>`__ to play with `uniform\n   spanning\n   trees <https://dppy.readthedocs.io/en/latest/exotic_dpps/index.html#uniform-spanning-trees>`__ .\n-  `CVXOPT <http://cvxopt.org>`__ to use the ``zono_sampling`` MCMC\n   sampler for finite DPPs. **CVXOPT itself requires**\n   `GCC <http://gcc.gnu.org>`__,\n\n   -  On MAC it comes with\n      `Xcode <https://developer.apple.com/xcode/>`__\n   -  On UNIX, use your package manager (``apt``, ``yum`` etc)\n\n      .. code:: bash\n\n          sudo apt install -qq gcc g++\n\n-  `Sphinx <http://www.sphinx-doc.org/en/master/>`__ to modify and rebuild the documentation\n\nInstallation instructions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDPPy is now available on `PyPI <https://pypi.org/project/dppy/>`__ |PyPI package|\n\n.. code:: bash\n\n  pip install dppy\n\nFor a full installation, including extra dependencies and dependencies necessary to build the documentation (see above), use :code:`pip install dppy['zonotope','trees','docs']`.\n\nNote that only stable DPPy releases are available on PyPI, and recently included improvements might only be available on the git master branch. If you want to work with the latest version of DPPy\n\n1. If you have a GitHub account please consider forking DPPy and use git to clone your copy of the repo\n\n   .. code:: bash\n\n       cd <directory_of_your_choice>\n       git clone https://github.com/<username>/DPPy.git\n\n2. If you only use git, clone this repository\n\n   .. code:: bash\n\n       cd <directory_of_your_choice>\n       git clone https://github.com/guilgautier/DPPy.git\n\n3. Otherwise simply download the project\n\n4. In any case, install the project with\n\n   .. code:: bash\n\n       cd DPPy\n       pip install .\n\nUse :code:`pip install .['zonotope','trees','docs']` to perform a full install from a local source tree.\n", "type": "Text_excerpt", "original_header": "Installation", "parent_header": ["DPPy: Sampling Determinantal Point Processes with Python"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst"}, {"result": {"type": "Text_excerpt", "value": "|Documentation Status| |Build Status| |Coverage Status| |PyPI package| \n.. |PyPI package| image:: https://img.shields.io/pypi/v/dppy?color=blue\n  :target: https://pypi.org/project/dppy/ \n*\"Anything that can go wrong, will go wrong\"* \u2212 `Murphy's Law <http://phdcomics.com/comics/archive.php?comicid=1867>`_\n \n", "original_header": "DPPy: Sampling Determinantal Point Processes with Python"}, "confidence": 0.8696828796398601, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst"}], "usage": [{"result": {"value": "The main DPPy documentation is available online at `http://dppy.readthedocs.io <http://dppy.readthedocs.io>`_.\nThere are also some interactive tutorials using Jupyter available at https://github.com/guilgautier/DPPy/blob/master/notebooks/.\nFor more details, check below.\n\nTutorials in `Jupyter notebooks <https://github.com/guilgautier/DPPy/blob/master/notebooks/>`_\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can read and work on these interactive tutorial `Notebooks <https://github.com/guilgautier/DPPy/blob/master/notebooks/>`_, directly from your\nweb browser, without having to download or install Python or anything.\nJust click, wait a little bit, and play with the notebook!\n\nBuilding the documentation\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe\n`documentation <http://dppy.readthedocs.io/>`__\nis generated locally with\n`Sphinx <http://www.sphinx-doc.org/en/master/>`__ and then built online\nby `ReadTheDocs <https://readthedocs.org/projects/dppy/>`__.\nIf you wish to contribute to the documentation or just play with it\nlocally, you can install the necessary dependencies and then:\n\n-  Generate the docs locally\n\n   .. code:: bash\n\n       cd DPPy/docs\n       make html\n\n-  Open the local HTML version of the documentation located at\n   ``DPPy/docs/_build/html/index.html``\n\n   .. code:: bash\n\n       open _build/html/index.html\n\nHow to cite this work?\n~~~~~~~~~~~~~~~~~~~~~~\n\n`We wrote a companion paper to DPPy which got accepted for publication in the Machine Learning Open Source Software track of JMLR <http://jmlr.org/papers/v20/19-179.html>`__.\n\nIf you use the DPPy toolbox, please consider citing it with this piece of\nBibTeX:\n\n.. code:: bibtex\n\n  @article{GPBV19,\n    author = {Gautier, Guillaume and Polito, Guillermo and Bardenet, R{\\'{e}}mi and Valko, Michal},\n    journal = {Journal of Machine Learning Research - Machine Learning Open Source Software (JMLR-MLOSS)},\n    title = {{DPPy: DPP Sampling with Python}},\n    keywords = {Computer Science - Machine Learning, Computer Science - Mathematical Software, Statistics - Machine Learning},\n    url = {http://jmlr.org/papers/v20/19-179.html},\n    year = {2019},\n    archivePrefix = {arXiv},\n    arxivId = {1809.07258},\n    note = {Code at http://github.com/guilgautier/DPPy/ Documentation at http://dppy.readthedocs.io/}\n  }\n\nMany of the algorithms implemented in DPPy also have associated literature that you should consider citing.\nPlease refer to the `bibliography on the documentation page <https://dppy.readthedocs.io/en/latest/bibliography/>`__ and docstrings of each specific DPP sampler for details.\n", "type": "Text_excerpt", "original_header": "How to use it", "parent_header": ["DPPy: Sampling Determinantal Point Processes with Python"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst"}], "full_title": [{"result": {"type": "String", "value": "DPPy: Sampling Determinantal Point Processes with Python"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst"}], "documentation": [{"result": {"type": "Url", "value": "https://dppy.readthedocs.io/", "format": "readthedocs"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst"}, {"result": {"type": "Url", "value": "http://dppy.readthedocs.io/", "format": "readthedocs"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/guilgautier/DPPy/master/README.rst"}]}