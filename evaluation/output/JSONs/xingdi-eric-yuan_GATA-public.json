{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:18:20"}, "code_repository": [{"result": {"value": "https://github.com/xingdi-eric-yuan/GATA-public", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "xingdi-eric-yuan", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2020-02-06T20:09:07Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T03:48:40Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": null, "type": "License", "name": "Other", "url": null, "spdx_id": "NOASSERTION"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "GATA: Graph Aided Transformer Agent\nCopyright (c) Microsoft Corporation\nAll rights reserved.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/LICENSE"}, {"result": {"value": "[MIT](./LICENSE)\n", "type": "Text_excerpt", "original_header": "License", "parent_header": ["GATA: Graph Aided Transformer Agent"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}], "name": [{"result": {"value": "GATA-public", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "xingdi-eric-yuan/GATA-public", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/xingdi-eric-yuan/GATA-public/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/xingdi-eric-yuan/GATA-public/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 34, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 11, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/xingdi-eric-yuan/GATA-public/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 456963}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 5584}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/misc/compute_some_stats.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/misc/compute_some_stats.ipynb"}], "citation": [{"result": {"value": "Please use the following bibtex entry:\n```\n@article{adhikari2020gata,\n  title={Learning Dynamic Belief Graphs to Generalize on Text-Based Games},\n  author={Adhikari, Ashutosh and Yuan, Xingdi and C\\^ot\\'{e}, Marc-Alexandre and Zelinka, Mikul\\'{a}\\v{s} and Rondeau, Marc-Antoine and Laroche, Romain and Poupart, Pascal and Tang, Jian and Trischler, Adam and Hamilton, William L.},\n  journal={CoRR},\n  volume={abs/2002.09127},\n  year= {2020},\n  archivePrefix={arXiv},\n  eprint={2002.09127}\n}\n```\n", "type": "Text_excerpt", "original_header": "Citation", "parent_header": ["GATA: Graph Aided Transformer Agent"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"value": "@article{adhikari2020gata,\n  title={Learning Dynamic Belief Graphs to Generalize on Text-Based Games},\n  author={Adhikari, Ashutosh and Yuan, Xingdi and C\\^ot\\'{e}, Marc-Alexandre and Zelinka, Mikul\\'{a}\\v{s} and Rondeau, Marc-Antoine and Laroche, Romain and Poupart, Pascal and Tang, Jian and Trischler, Adam and Hamilton, William L.},\n  journal={CoRR},\n  volume={abs/2002.09127},\n  year= {2020},\n  archivePrefix={arXiv},\n  eprint={2002.09127}\n}", "type": "Text_excerpt", "format": "bibtex"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}], "installation": [{"result": {"type": "Text_excerpt", "value": "```\n# Download data for observation generation / contrastive observation classification\ncd obs_gen.0.1 ; wget https://aka.ms/twkg/obs_gen.0.1.zip ; unzip obs_gen.0.1.zip ; cd ..\n# Train\npython train_obs_generation.py configs/pretrain_observation_generation.yaml\n\n```\n \n", "original_header": "Pre-training Graph Updater by Observation Generation"}, "confidence": 0.9272040321970085, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data for observation generation / contrastive observation classification\ncd obs_gen.0.1 ; wget https://aka.ms/twkg/obs_gen.0.1.zip ; unzip obs_gen.0.1.zip ; cd ..\n# Train\npython train_obs_infomax.py configs/pretrain_contrastive_observation_classification.yaml\n\n```\n \n", "original_header": "Pre-training Graph Updater by Contrastive Observation Classification"}, "confidence": 0.9272040321970085, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data\ncd ap.0.2 ; wget https://aka.ms/twkg/ap.0.2.zip ; unzip ap.0.2.zip ; cd ..\n# Train\npython train_action_prediction.py configs/pretrain_action_prediction_full.yaml\n\n```\n \n", "original_header": "Pre-training Graph Encoder by Action Prediction"}, "confidence": 0.9419069633381546, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data\ncd sp.0.2 ; wget https://aka.ms/twkg/sp.0.2.zip ; unzip sp.0.2.zip ; cd ..\n# Train\npython train_state_prediction.py configs/pretrain_state_prediction_full.yaml\n\n```\n \n", "original_header": "Pre-training Graph Encoder by State Prediction"}, "confidence": 0.9419069633381546, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data\ncd dgi.0.2 ; wget https://aka.ms/twkg/dgi.0.2.zip ; unzip dgi.0.2.zip ; cd ..\n# Train\npython train_deep_graph_infomax.py configs/pretrain_deep_graph_infomax_full.yaml\n\n``` \n", "original_header": "Pre-training Graph Encoder by Deep Graph Infomax"}, "confidence": 0.9419069633381546, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data for command generation\ncd cmd_gen.0.2 ; wget https://aka.ms/twkg/cmd_gen.0.2.zip ; unzip cmd_gen.0.2.zip ; cd ..\n# Train\npython train_command_generation.py configs/pretrain_command_generation.yaml\n\n``` \n", "original_header": "Pre-training Graph Updater by Command Generation"}, "confidence": 0.9455257819122814, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "```\n# Download data for observation generation / contrastive observation classification\ncd obs_gen.0.1 ; wget https://aka.ms/twkg/obs_gen.0.1.zip ; unzip obs_gen.0.1.zip ; cd ..\n# Train\npython train_obs_generation.py configs/pretrain_observation_generation.yaml\n\n```\n \n", "original_header": "Pre-training Graph Updater by Observation Generation"}, "confidence": 0.899610915115676, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data for observation generation / contrastive observation classification\ncd obs_gen.0.1 ; wget https://aka.ms/twkg/obs_gen.0.1.zip ; unzip obs_gen.0.1.zip ; cd ..\n# Train\npython train_obs_infomax.py configs/pretrain_contrastive_observation_classification.yaml\n\n```\n \n", "original_header": "Pre-training Graph Updater by Contrastive Observation Classification"}, "confidence": 0.899610915115676, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download games\ncd rl.0.2 ; wget https://aka.ms/twkg/rl.0.2.zip ; unzip rl.0.2.zip ; cd ..\n# Modify configs/train_gata_rl.yaml\n#   L30: True to load pre-trained graph encoder, False to randomly initialize.\n#     L31:  'gata_pretrain_obs_gen_model', 'gata_pretrain_obs_infomax_model'. When L30 is True.\n#   L33:  'gata_pretrain_obs_gen_model' or 'gata_pretrain_obs_infomax_model'\n#   L84:  3/7/5/9 correspond to the 1/2/3/4 in paper\n#   L85:  1/20/100\n#   L125: False/True\n# To train\npython train_rl_with_continuous_belief.py configs/train_gata_rl.yaml\n\n```\n \n", "original_header": "Train Action Scorer with RL"}, "confidence": 0.9393838276034854, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data\ncd ap.0.2 ; wget https://aka.ms/twkg/ap.0.2.zip ; unzip ap.0.2.zip ; cd ..\n# Train\npython train_action_prediction.py configs/pretrain_action_prediction_full.yaml\n\n```\n \n", "original_header": "Pre-training Graph Encoder by Action Prediction"}, "confidence": 0.9234808942834082, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data\ncd sp.0.2 ; wget https://aka.ms/twkg/sp.0.2.zip ; unzip sp.0.2.zip ; cd ..\n# Train\npython train_state_prediction.py configs/pretrain_state_prediction_full.yaml\n\n```\n \n", "original_header": "Pre-training Graph Encoder by State Prediction"}, "confidence": 0.9234808942834082, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data\ncd dgi.0.2 ; wget https://aka.ms/twkg/dgi.0.2.zip ; unzip dgi.0.2.zip ; cd ..\n# Train\npython train_deep_graph_infomax.py configs/pretrain_deep_graph_infomax_full.yaml\n\n``` \n### Train Action Scorer with RL\n```\n# Download games\ncd rl.0.2 ; wget https://aka.ms/twkg/rl.0.2.zip ; unzip rl.0.2.zip ; cd ..\n# Modify configs/train_gata_gtf_rl.yaml\n#   L30: True to load pre-trained graph encoder, False to randomly initialize.\n#     L31:  'gata_gtf_pretrain_ap_full_model', 'gata_gtf_pretrain_sp_full_model', or 'gata_gtf_pretrain_dgi_full_model'. When L30 is True.\n#   L84:  3/7/5/9 correspond to the 1/2/3/4 in paper\n#   L85:  1/20/100\n#   L125: False/True\n# To train\npython train_rl_with_ground_truth_discrete_belief.py configs/train_gata_gtf_rl.yaml\n\n```\n \n", "original_header": "Pre-training Graph Encoder by Deep Graph Infomax"}, "confidence": 0.9334638163005287, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "```\n# Download data for command generation\ncd cmd_gen.0.2 ; wget https://aka.ms/twkg/cmd_gen.0.2.zip ; unzip cmd_gen.0.2.zip ; cd ..\n# Train\npython train_command_generation.py configs/pretrain_command_generation.yaml\n\n``` \n### Train Action Scorer with RL\n```\n# Download games\ncd rl.0.2 ; wget https://aka.ms/twkg/rl.0.2.zip ; unzip rl.0.2.zip ; cd ..\n# Modify configs/train_gata_gtp_rl.yaml\n#   L30: True to load pre-trained graph encoder, False to randomly initialize.\n#     L31:  'gata_gtp_pretrain_ap_seen_model', 'gata_gtp_pretrain_sp_seen_model', or 'gata_gtp_pretrain_dgi_seen_model'. When L30 is True.\n#   L84:  3/7/5/9 correspond to the 1/2/3/4 in paper\n#   L85:  1/20/100\n#   L125: False/True\n# To train\npython train_rl_with_discrete_belief.py configs/train_gata_gtp_rl.yaml\n\n``` \n", "original_header": "Pre-training Graph Updater by Command Generation"}, "confidence": 0.9278607161783305, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "To monitor training progress: set \"`visdom: True`\" in `config_***.yaml` under the `general` section, and start [Visdom](https://github.com/facebookresearch/visdom) in another terminal using the `visdom` command line. Then, open the link displayed by Visdom in your browser. \n", "original_header": "Monitoring training progress"}, "confidence": 0.8427550843537606, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "GATA: Graph Aided Transformer Agent"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/abs/2002.09127"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/xingdi-eric-yuan/GATA-public/master/README.md"}]}