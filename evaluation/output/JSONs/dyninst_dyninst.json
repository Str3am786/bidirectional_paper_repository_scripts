{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:02:35"}, "code_repository": [{"result": {"value": "https://github.com/dyninst/dyninst", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "dyninst", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2016-05-02T20:06:57Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-16T16:22:45Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/lgpl-2.1", "type": "License", "name": "GNU Lesser General Public License v2.1", "url": "https://api.github.com/licenses/lgpl-2.1", "spdx_id": "LGPL-2.1"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n(This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.)\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year} {fullname}\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n    USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random\n  Hacker.\n\n  {signature of Ty Coon}, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/LICENSE.md"}, {"result": {"value": "Copyright (c) 2015 Microsoft Corporation. All rights reserved. \n \nThis code is licensed under the MIT License (MIT). \n\nPermission is hereby granted, free of charge, to any person obtaining a copy \nof this software and associated documentation files (the \"Software\"), to deal \nin the Software without restriction, including without limitation the rights \nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions: \n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software. \n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN \nTHE SOFTWARE. \n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/external/cvconst/LICENSE"}], "description": [{"result": {"value": "DyninstAPI: Tools for binary instrumentation, analysis, and modification.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "* Known issues should have open issues associated with them.\n* ARMv8 (64 bit) support for dynamic instrumentation is experimental and incomplete.\n  For more details about current supported functionality refer to [Dyninst Support for the ARMv8 (64 bit)](https://github.com/dyninst/dyninst/wiki/DyninstAPI-ARMv8-status).\n \n", "original_header": "Notes"}, "confidence": 0.941463249823625, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Containers are provided that can be used for Dyninst development (e.g., make changes to Dyninst and quickly rebuild it)\nor for development of your own tools (e.g., have a container ready to go with Dyninst). Links will be added\nhere when the containers are pushed to the Dyninst associated package registries. Instructions for usage\nand building locally are provided in the [docker](docker) directory. \n", "original_header": "Docker Containers"}, "confidence": 0.9476778673141084, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "1. Configure Dyninst with CMake \n", "original_header": "Build from source"}, "confidence": 0.9567588029116127, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "* Callbacks at thread or process exit that stop the process will deadlock when a SIGSEGV occurs on a thread other than\nthe main thread of a process \n", "original_header": "Known Issues"}, "confidence": 0.8834227864190949, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}], "name": [{"result": {"value": "dyninst", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "dyninst/dyninst", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/dyninst/dyninst/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/dyninst/dyninst/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 675, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "binary-analysis, dyninst, stackwalker, symtab", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 148, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/dyninst/dyninst/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "C", "name": "C", "type": "Programming_language", "size": 12784974}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C++", "name": "C++", "type": "Programming_language", "size": 5236754}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Assembly", "name": "Assembly", "type": "Programming_language", "size": 638268}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "TeX", "name": "TeX", "type": "Programming_language", "size": 506318}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "CMake", "name": "CMake", "type": "Programming_language", "size": 100800}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 54751}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Yacc", "name": "Yacc", "type": "Programming_language", "size": 27829}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Perl", "name": "Perl", "type": "Programming_language", "size": 14513}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Lex", "name": "Lex", "type": "Programming_language", "size": 7830}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 1880}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Dockerfile", "name": "Dockerfile", "type": "Programming_language", "size": 230}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/93362164", "tag": "v12.3.0", "name": "Dyninst v12.3.0", "author": {"name": "hainest", "type": "User"}, "description": "## New Features\r\n  - Continued development on  support for the AMD gfx908 architecture\r\n    - InstructionAPI: MI100, MI200, MI125 (partial)\r\n    - ParseAPI: Directcontrol flow analysis for MI100, MI200, MI125\r\n    - DataflowAPI: Indirect control analysis for MI125\r\n\r\n- Add support for Intel's ENDBR32/64 instruction used by CET (#1368)\r\n\r\n## Enhancements\r\n- Improve cross-platform static instrumentation on aarch64 (#1373)\r\n- Update detection of DWARF languages (#1357)\r\n- Substantially improve callee lookup speed (#1337)\r\n- Fix encoding for vex2-encoded vpand instruction (#1364)\r\n\r\n## Bug Fixes\r\n- Add missing include files for newer gcc/clang (#1385, #1384, #1344)\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 12.3.0](https://github.com/dyninst/dyninst/blob/334b6856e28fd34a698ad74aa277f1399a814183/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 12.3.0](https://github.com/dyninst/dyninst/blob/334b6856e28fd34a698ad74aa277f1399a814183/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 12.3.0](https://github.com/dyninst/dyninst/blob/334b6856e28fd34a698ad74aa277f1399a814183/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 12.3.0](https://github.com/dyninst/dyninst/blob/334b6856e28fd34a698ad74aa277f1399a814183/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 12.3.0](https://github.com/dyninst/dyninst/blob/334b6856e28fd34a698ad74aa277f1399a814183/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 12.3.0](https://github.com/dyninst/dyninst/blob/334b6856e28fd34a698ad74aa277f1399a814183/symtabAPI/doc/symtabAPI.pdf)\r\n\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.3.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.3.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.3.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/93362164", "release_id": 93362164, "date_created": "2023-02-22T21:39:56Z", "date_published": "2023-02-22T21:49:43Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/83791470", "tag": "v12.2.1", "name": "Dyninst v12.2.1", "author": {"name": "hainest", "type": "User"}, "description": "## Enhancements\r\n- ParseAPI: improve tail call recognition (#1315)\r\n- Support hash_compare concept from TBB >= 2021.1 (#1316)\r\n- Various compile warning fixes (#1325, #1324)\r\n- Improve instruction stringification formatting (#1311, #1323, #1313)\r\n- Allow assignment conversion of an Instruction without a frame pointer (#1314)\r\n- Fix incorrect offset in location list PC range values (#1297)\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 12.2.1](https://github.com/dyninst/dyninst/blob/def4204359d2051958d99e8f3c515dbc9ff3edf0/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 12.2.1](https://github.com/dyninst/dyninst/blob/def4204359d2051958d99e8f3c515dbc9ff3edf0/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 12.2.1](https://github.com/dyninst/dyninst/blob/def4204359d2051958d99e8f3c515dbc9ff3edf0/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 12.2.1](https://github.com/dyninst/dyninst/blob/def4204359d2051958d99e8f3c515dbc9ff3edf0/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 12.2.1](https://github.com/dyninst/dyninst/blob/def4204359d2051958d99e8f3c515dbc9ff3edf0/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 12.2.1](https://github.com/dyninst/dyninst/blob/def4204359d2051958d99e8f3c515dbc9ff3edf0/symtabAPI/doc/symtabAPI.pdf)", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.2.1", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.2.1", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.2.1", "url": "https://api.github.com/repos/dyninst/dyninst/releases/83791470", "release_id": 83791470, "date_created": "2022-11-21T19:46:38Z", "date_published": "2022-11-21T19:46:53Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/73085759", "tag": "v12.2.0", "name": "Dyninst v12.2.0", "author": {"name": "hainest", "type": "User"}, "description": "## Enhancements\r\n- Always use exec entry point for parse hints in stripped binaries\r\n- Correctly compute boundaries of functions containing shared code\r\n- Improve compiler diagnostics and usage of pragmas\r\n- Parse names for inlined functions in DWARF\r\n\r\n## Bug fixes\r\n- Fix data races when storing line information entries\r\n- Fix decoding of DWARF expressions into machine registers for Intel GPUs\r\n- Correctly propagate pc ranges for blocks and local variables\r\n- Fix format string errors in stackwalk/callchecker.C\r\n\r\n## Build system\r\n- Remove endian CMake check (we only support little-endian)\r\n- Enforce formatting of CMake files using cmake-format\r\n- Remove unused options BUILD_DOCS and BUILD_TARBALLS\r\n- Require bfd linker when building with LTO enabled\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 12.2](https://github.com/dyninst/dyninst/blob/02c20e9169a9e6ca9da7a486df4e9160143063cb/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 12.2](https://github.com/dyninst/dyninst/blob/02c20e9169a9e6ca9da7a486df4e9160143063cb/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 12.2](https://github.com/dyninst/dyninst/blob/02c20e9169a9e6ca9da7a486df4e9160143063cb/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 12.2](https://github.com/dyninst/dyninst/blob/02c20e9169a9e6ca9da7a486df4e9160143063cb/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 12.2](https://github.com/dyninst/dyninst/blob/02c20e9169a9e6ca9da7a486df4e9160143063cb/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 12.2](https://github.com/dyninst/dyninst/blob/02c20e9169a9e6ca9da7a486df4e9160143063cb/symtabAPI/doc/symtabAPI.pdf)\r\n\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.2.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.2.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.2.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/73085759", "release_id": 73085759, "date_created": "2022-07-28T21:18:46Z", "date_published": "2022-07-28T21:27:27Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/61440134", "tag": "v12.1.0", "name": "Dyninst v12.1.0", "author": {"name": "hainest", "type": "User"}, "description": "## Enhancements\r\n- Implement first steps of multiple namespaces in glibc-2.35+\r\n- Add instruction parsing for AMD's CDNA2 GPU architecture\r\n- Code cleanup of unused code and variables in SymtabAPI\r\n- Correctly handle DWARF subroutines during parallel parsing\r\n- Support ELF/DWARF under CUDA-11.6 and newer \r\n- Speed up the case where a function is called from many locations in ParseAPI\r\n\r\n## Bug Fixes\r\n- Fix potential buffer overrun in AMDGPU decoders\r\n- Clean up memory allocations in SymtabAPI and BPatch\r\n\r\n## Continuous Integration\r\n- Add Docker image for testing and deploying Dyninst on Ubuntu-20.04 on x86_64\r\n\r\n## Build Fixes\r\n- Fix building of symlite\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 12.1](https://github.com/dyninst/dyninst/blob/14d9d44f0c03199d76333b9571b1f6ed9e183e46/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 12.1](https://github.com/dyninst/dyninst/blob/14d9d44f0c03199d76333b9571b1f6ed9e183e46/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 12.1](https://github.com/dyninst/dyninst/blob/14d9d44f0c03199d76333b9571b1f6ed9e183e46/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 12.1](https://github.com/dyninst/dyninst/blob/14d9d44f0c03199d76333b9571b1f6ed9e183e46/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 12.1](https://github.com/dyninst/dyninst/blob/14d9d44f0c03199d76333b9571b1f6ed9e183e46/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 12.1](https://github.com/dyninst/dyninst/blob/14d9d44f0c03199d76333b9571b1f6ed9e183e46/symtabAPI/doc/symtabAPI.pdf)", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.1.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.1.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.1.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/61440134", "release_id": 61440134, "date_created": "2022-03-09T22:41:45Z", "date_published": "2022-03-09T22:43:23Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/61385845", "tag": "v12.1.0-rc3", "name": "v12.1.0-rc3", "author": {"name": "hainest", "type": "User"}, "description": "Release candidate for 12.1.0.\r\n\r\n## CI Testing\r\nDocker: simplify build script (#1212)\r\nDocker: use more OS packages (#1211)\r\n\r\n## Bug fixes\r\nMake a couple constant 64-bit ULL to avoid getting truncated during shifts (#1207)\r\nFix potential buffer overrun in AMDGPU decoders (#1208)", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.1.0-rc3", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.1.0-rc3", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.1.0-rc3", "url": "https://api.github.com/repos/dyninst/dyninst/releases/61385845", "release_id": 61385845, "date_created": "2022-03-07T23:37:50Z", "date_published": "2022-03-09T15:46:51Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/60566279", "tag": "v12.1.0-rc2", "name": "v12.1.0-rc2", "author": {"name": "hainest", "type": "User"}, "description": "Release candidate for 12.1.0.\r\n\r\n## Bug Fixes\r\n- Fix compiler warnings in amdgpu cdna2 code\r\n- Fix static analysis warnings for classes in AMDGPU (member variable init, dead code, no returns)\r\n\r\n## Enhancements\r\n- Remove duplicate headers for AMDGPU\r\n- Move Vega files to AMDGPU directory\r\n\r\n## Build Changes\r\n- Propagate AMDGPU subdirectory layout to 'install/include' for amdgpu/cdna2\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.1.0-rc2", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.1.0-rc2", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.1.0-rc2", "url": "https://api.github.com/repos/dyninst/dyninst/releases/60566279", "release_id": 60566279, "date_created": "2022-02-25T22:39:49Z", "date_published": "2022-02-27T19:50:42Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/60240937", "tag": "v12.1.0-rc1", "name": "v12.1.0-rc1", "author": {"name": "hainest", "type": "User"}, "description": "Release candidate for 12.1.0.\r\n\r\nEnhancements\r\n- Add preliminary support for AMDGPU CDNA2 architecture\r\n- Fix linker error with glibc-2.35+ to support multiple namespaces\r\n- Fix ELF parsing for NVIDIA binaries generated by CUDA-11.6+\r\n- Reduce parsing time for functions called from many locations\r\n\r\nBuild changes\r\n- Add a Dockerfile for automated GitHub workflow testing\r\n- Updates to get Symlite building\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.1.0-rc1", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.1.0-rc1", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.1.0-rc1", "url": "https://api.github.com/repos/dyninst/dyninst/releases/60240937", "release_id": 60240937, "date_created": "2022-02-23T15:16:55Z", "date_published": "2022-02-23T16:17:36Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/53951198", "tag": "v12.0.1", "name": "Dyninst 12.0.1", "author": {"name": "hainest", "type": "User"}, "description": "## Enhancements\r\n- Refactor several DwarfWalker internal interfaces\r\n- Add readable name for Symtab::typeRef\r\n\r\n## Build changes\r\n- Increase minimum elfutils version to 0.186\r\n- Remove NVIDIA external line map configure check\r\n- Add conflict with CMake 3.19.0\r\n\r\nSee the complete [CHANGELOG](https://github.com/dyninst/dyninst/blob/91ede1ff4309c3ebb5518d0a8d43befd3eb5ceae/CHANGELOG.md)\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/symtabAPI/doc/symtabAPI.pdf)\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.0.1", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.0.1", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.0.1", "url": "https://api.github.com/repos/dyninst/dyninst/releases/53951198", "release_id": 53951198, "date_created": "2021-11-23T21:48:27Z", "date_published": "2021-11-23T21:52:02Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/53191576", "tag": "v12.0.0", "name": "Dyninst 12.0.0", "author": {"name": "hainest", "type": "User"}, "description": "## Enhancements\r\n- When using elfutils-0.186 or newer, Dyninst can parse nvidia enhanced line maps\r\n- MachRegister now supports the ppc64le register set for Rose semantics\r\n- Added xsave, xsavec, and xrstor instructions for x86_64\r\n- Dyninst now compiles cleanly when using strong compiler warnings\r\n- symtabAPI::typeScalar now supports DWARF4 base type entry encodings\r\n\r\n## Bug Fixes\r\n- Fixed a bug in .dyninst_heap section reported by Gentoo CI\r\n- BPatch and Symtab objects can now be displayed using iostreams\r\n- Floating point register usage is now correctly determined on aarch64\r\n- Uncalled functions with internal linkage are no longer relocated on aarch64\r\n- dataflowAPI no longer asserts on newer ppc64le machines\r\n\t- We are working to extend instruction support for ppc64le\r\n- More than 80 general bug fixes discovered using strong compiler warnings\r\n \r\n## ABI breakages\r\n- Removed several empty stub functions from AddressSpace\r\n- Removed memory emulation on Windows\r\n\t- The code had been non-functional since ~2012\r\n- Unused member variables were removed from the Symtab class\r\n- ELF STABs are no longer supported\r\n- Remove abandoned Module::getAllVariables\r\n\r\n## Build changes\r\n- Remove support for ppc32\r\n- Remove support for Cray CNL\r\n- Remove old XLC behavior\r\n- STERILE_BUILD is now on by default\r\n- Minimum version of Boost has been increased to 1.70.0\r\n- Debug build configuration now uses -Og and -g3\r\n- Updated to the C11 standard\r\n- Dyninst is now buildable with clang\r\n\r\nSee the complete [CHANGELOG](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/CHANGELOG.md)\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 12.0](https://github.com/dyninst/dyninst/blob/154dde783dbadd502c25b451e10eecdc3b6c732b/symtabAPI/doc/symtabAPI.pdf)\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v12.0.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v12.0.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v12.0.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/53191576", "release_id": 53191576, "date_created": "2021-11-11T20:38:48Z", "date_published": "2021-11-11T20:48:14Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/44065449", "tag": "v11.0.1", "name": "Dyninst 11.0.1", "author": {"name": "hainest", "type": "User"}, "description": "## Enhancements\r\n- Position-Independent Executable (PIE) handling\r\n  - Dyninst now correctly determines the properties of PIE binaries\r\n  - position-independent executable archive files (i.e., built with -static-pie using gcc) are not supported\r\n\r\n## Bug fixes\r\n- DWARF\r\n  - Correctly handle return values from `dwarf_getabbrevcode`\r\n- Parsing\r\n  - Fix data races from PowerPC when using more than 15 OpenMP threads\r\n  - Skip parsing of blocks with an empty code buffer\r\n  - Correctly parse catch blocks\r\n  - Do not treat symbols in any text sections as data (.text, .init, or .fini)\r\n  - Fix implicit operand decoding of x86 instructions on non-x86 architectures\r\n- Build system\r\n  - Pass CMake build flags when configuring dyninstAPI_RT\r\n  - Correctly find version information when building against tbb 2021.3 or newer\r\n\r\n\r\nSee the complete [CHANGELOG](https://github.com/dyninst/dyninst/blob/5c7e0ee327399cfae50d77f977ff6655c2ca3ae4/CHANGELOG.md)\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/symtabAPI/doc/symtabAPI.pdf)\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v11.0.1", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v11.0.1", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v11.0.1", "url": "https://api.github.com/repos/dyninst/dyninst/releases/44065449", "release_id": 44065449, "date_created": "2021-06-15T02:23:43Z", "date_published": "2021-06-15T02:27:18Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/41091807", "tag": "v11.0.0", "name": "Dyninst 11.0.0", "author": {"name": "hainest", "type": "User"}, "description": "## Removed deprecated functionality\r\n- JumpTableIndexPred::FillInOutEdges\r\n- BoundFactCalculator::CheckZeroExtend\r\n- BoundsFactCalculator::ThunkBound\r\n- binaryEdit::deleteBinaryEdit\r\n- CFGFactor::destroy_all\r\n- BPatch_regExpr\r\n- BPatch_addressSpace::findFunctionByAddr\r\n- insnCodeGen::generate\r\n- AddressSpace::getAddressWidth\r\n- BPatch_process::enableDumpPatchedImage\r\n- BPatch_snippet::getCost*\r\n- InstrucIter, vectorSet, and lineDict classes\r\n- Support for bluegene, vxworks, sparc, and AIX\r\n- Replace pdvector with std::vector\r\n- The entire serialization infrasturcture\r\n\r\n## Minimum version requirements\r\n- Boost >= 1.67\r\n- gcc >= 6.0\r\n- Standards-compliant c++11 ABI in lib[std]c++\r\n\r\n## Enhancements\r\n- DWARF handling\r\n  - Fully support separate debug files\r\n  - Disable parallel parsing of DWARF due to a thread safety issue in elfutils\r\n  - Support debuginfod\r\n- GPUs\r\n  - Initial support for AMD and Intel GPU code parsing\r\n  - Code slicing on NVIDIA GPUs\r\n- Code cleanup\r\n  - Substantially reduce number of compiler warnings in public headers\r\n- BPatch\r\n  - Callee lookup defaults to \"by name\" when other modes fail\r\n\r\n## Bug fixes\r\n- Symtab\r\n  - Fix non-deterministic inline function lookup for OpenMP outlined code\r\n  - Handle C++ name demangling correctly and uniformly\r\n- Indirect call analysis\r\n  - Fix detection of indirect calls to PLT stubs subtly broken by v10.2.1\r\n- Patch memory leaks in emitElf\r\n\r\nSee the complete [CHANGELOG](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/CHANGELOG.md).\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 11.0](https://github.com/dyninst/dyninst/blob/481abaf20477a20fc533087010dcb671436de38b/symtabAPI/doc/symtabAPI.pdf)\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v11.0.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v11.0.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v11.0.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/41091807", "release_id": 41091807, "date_created": "2021-04-08T20:48:12Z", "date_published": "2021-04-08T21:01:12Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/31010959", "tag": "v10.2.1", "name": "Dyninst 10.2.1", "author": {"name": "hainest", "type": "User"}, "description": "## Bug fixes\r\n- Memory leak fixes\r\n  - Correct a substantial leak in singleton_object_pool affecting InstructionAPI\r\n  - Fix instruction decoding leaks for power and aarch64\r\n  - Fix memory leak in SymEval::expandInsn\r\n  - Fix aliasing bug of Region::buffer on copy\r\n  - Cleanup memory handling when emitting Elf for static libraries\r\n\r\n## Enhancements\r\n- Code cleanup\r\n\t- Remove use of deprecated C++ exception specifications\r\n\t- Remove deprecated parts of BPatch_flowGraph and miniTramp\r\n\r\n## Build changes\r\n- Remove use of cotire\r\n- Fix cmake configuration when building with -pie\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/symtabAPI/doc/symtabAPI.pdf)\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v10.2.1", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v10.2.1", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v10.2.1", "url": "https://api.github.com/repos/dyninst/dyninst/releases/31010959", "release_id": 31010959, "date_created": "2020-09-10T03:28:02Z", "date_published": "2020-09-10T03:28:37Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/28793009", "tag": "v10.2.0", "name": "Dyninst 10.2.0", "author": {"name": "mxz297", "type": "User"}, "description": "## Enhancements\r\n- Improve analysis and instrumentation of large binaries\r\n  - Handle ELF extended numbering\r\n  - Fix memory leaks that prevent instrumentation for large binaries\r\n- Improve parallel code parsing and dwarf parsing\r\n  - Implement control flow trimming that removes wrong edges\r\n  - Remove mutual exclusion in constructing index structures from basic blocks to functions\r\n  - Improve jump table analysis involving global variables\r\n- ARM binary rewriting for dynamically-linked objects\r\n- Improve DWARF parsing\r\n  - Support abstract origin attribute \r\n  - Support one machine instruction address mapped to multiple source lines\r\n  - Support parsing of relocatable objects \r\n- Remove usage of GNU extensions for varargs\r\n- Handle \"ghost\" threads in proccontrol\r\n  - \"Ghost\" threads are stopped threads killed by the OS (or user) before proccontrol continues them\r\n\r\n## Bug fixes\r\n- Fix instrumentation regressions, including libc-2.29 on ARM, shared libraries instrumentation, corruption to registers\r\n- Fix rewriting static binaries about searching libgcc.a on x86 and aarch64\r\n- Cleanup undefined C++ behaviors\r\n- Many fixes to code examples in the documentation\r\n\r\n## Build changes\r\n- Use modern CMake features to enforce language support at build time\r\n- Add \"sterile build\" option to prevent Dyninst from building its own dependencies\r\n- Improve Clang support when building Intel TBB from source\r\n\r\n## Deprecations\r\n- Removed support for running on IBM Blue Gene\r\n\r\n## Dyninst Toolkit Examples\r\n- Code examples previously contained in the 'examples' directory have been moved to their own repository [dyninst/examples](https://github.com/dyninst/examples).\r\n\r\n---\r\n## Manuals\r\n- [DyninstAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 10.2](https://github.com/dyninst/dyninst/blob/fcc0d27aa458aacb5a12818beb43509d45848938/symtabAPI/doc/symtabAPI.pdf)\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v10.2.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v10.2.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v10.2.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/28793009", "release_id": 28793009, "date_created": "2020-08-14T06:51:30Z", "date_published": "2020-09-09T22:01:58Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/17262239", "tag": "v10.1.0", "name": "Dyninst 10.1.0", "author": {"name": "mxz297", "type": "User"}, "description": "## New Features\r\n- Full support of dynamic instrumentation on ARMv8\r\n- Significant improvement of stack walking on ARMv8 \r\n- Adding instruction decoding support for AMD instruction extensions, such as XOP and FMA4\r\n- Enhancement of the build system for checking and installing dependencies (see [wiki](https://github.com/dyninst/dyninst/wiki/Building-Dyninst) for important details)\r\n- Updated the Spack recipe for building Dyninst with appropriate Boost versions\r\n\r\n## Bug Fixes\r\n- More stable parallel binary code analysis \r\n  - Identifying and fixing a couple of race conditions\r\n  - Enforcing unique analysis order to generate deterministic results\r\n- Improving code generation for instrumentation on Power to conform to ABI v2\r\n- Improving binary rewriting on x86 and Power for\r\n  - Position independent executables (PIEs)\r\n  - Statically linked binaries\r\n- Resolving deadlocks in ProccontrolAPI\r\n- Improving code generation for `BPatch_whileExpr` on x86, Power, and ARMv8.\r\n- Fixing SIGILLs problems on ARMv8 caused by icache-dcache incoherence\r\n- Fixing supports of parsing debug information stored in separate files\r\n- Fixing incomplete libdw port for parsing DWARF expressions\r\n\r\n## Manuals\r\n- [DyninstAPI 10.1](https://github.com/dyninst/dyninst/blob/fdc4d6a2a82726f1c2d71cac47ae66c204f9c1ea/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 10.1](https://github.com/dyninst/dyninst/blob/fdc4d6a2a82726f1c2d71cac47ae66c204f9c1ea/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 10.1](https://github.com/dyninst/dyninst/blob/fdc4d6a2a82726f1c2d71cac47ae66c204f9c1ea/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 10.1](https://github.com/dyninst/dyninst/blob/fdc4d6a2a82726f1c2d71cac47ae66c204f9c1ea/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 10.1](https://github.com/dyninst/dyninst/blob/fdc4d6a2a82726f1c2d71cac47ae66c204f9c1ea/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 10.1](https://github.com/dyninst/dyninst/blob/fdc4d6a2a82726f1c2d71cac47ae66c204f9c1ea/symtabAPI/doc/symtabAPI.pdf)\r\n\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v10.1.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v10.1.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v10.1.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/17262239", "release_id": 17262239, "date_created": "2019-05-16T18:40:05Z", "date_published": "2019-05-16T18:42:47Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/3786002", "tag": "v10.0.0", "name": "Dyninst 10.0.0", "author": {"name": "jdetter", "type": "User"}, "description": "## New Features\r\n- Parallel binary code analysis (ParseAPI):\r\n    - Parallel code parsing, significantly improving the speed of the analysis of large binaries\r\n    - Parallel query to ParseAPI\r\n    - Improve multiple aspects of parsing, including non-returning functions, tail call identification, jump table analysis\r\n- Partial support of dynamic instrumentation on ARMv8. Please see https://github.com/dyninst/dyninst/wiki/DyninstAPI-ARMv8-status for details.\r\n- Improving support for Power 8 & 9 instrumentation and new vector instruction decoding\r\n- Limited CUDA support: read-only queries of SymtabAPI\r\n- Updated Spack recipe for installing Dyninst\r\n\r\n\r\n## Software Dependency Changes\r\n- Adds dependency on libdw and removes dependency on libdwarf\r\n- Adds dependency on Intel Threading Building Blocks (TBB)\r\n- Adds optional dependency on OpenMP for parallel code analysis\r\n\r\n## Bug Fixes\r\n- x86/64 decoding Issues, including adding support for vector instructions and wrong operand sizes\r\n- Fix compilation issues on Arch Linux\r\n- Cross-architecture binary analysis: try/catch blocks \r\n- Improve DWARF parsing: fix dwarf symbol frame and elf section parsing\r\n- Improve CMake build systems: automatically downloading correct versions of Boost, TBB, and elfutils\r\n- Fix inferior RPC on ARMv8\r\n- Updated CMake build system for automatically downloading Dyninst dependencies and support parallel compilation\r\n\r\n## Manuals\r\n- [DyninstAPI 10.0](https://github.com/dyninst/dyninst/blob/3e1921c771861bdbb89b6370cd7a3d1217d6bf87/dyninstAPI/doc/dyninstAPI.pdf)\r\n- [PatchAPI 10.0](https://github.com/dyninst/dyninst/blob/3e1921c771861bdbb89b6370cd7a3d1217d6bf87/patchAPI/doc/patchAPI.pdf)\r\n- [ParseAPI 10.0](https://github.com/dyninst/dyninst/blob/3e1921c771861bdbb89b6370cd7a3d1217d6bf87/parseAPI/doc/parseAPI.pdf)\r\n- [DataflowAPI 10.0](https://github.com/dyninst/dyninst/blob/3e1921c771861bdbb89b6370cd7a3d1217d6bf87/dataflowAPI/doc/dataflowAPI.pdf)\r\n- [InstructionAPI 10.0](https://github.com/dyninst/dyninst/blob/3e1921c771861bdbb89b6370cd7a3d1217d6bf87/instructionAPI/doc/instructionAPI.pdf)\r\n- [SymtabAPI 10.0](https://github.com/dyninst/dyninst/blob/3e1921c771861bdbb89b6370cd7a3d1217d6bf87/symtabAPI/doc/symtabAPI.pdf)\r\n\r\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v10.0.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v10.0.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v10.0.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/3786002", "release_id": 3786002, "date_created": "2018-11-09T16:48:08Z", "date_published": "2018-11-09T16:56:54Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/6111494", "tag": "v9.3.2", "name": "Dyninst 9.3.2", "author": {"name": "wrwilliams", "type": "User"}, "description": "# Change Log\r\n\r\n## [v9.3.2](https://github.com/dyninst/dyninst/releases/v9.3.2) (2017-04-05)\r\n[Full Changelog](https://github.com/dyninst/dyninst/compare/v9.3.1...v9.3.2)\r\n\r\n**Fixed bugs:**\r\n\r\n- memcpy can fail with rewriter tests [\\#355](https://github.com/dyninst/dyninst/issues/355)\r\n- dyninst does not build on i386 [\\#343](https://github.com/dyninst/dyninst/issues/343)\r\n- \\[ARMv8 Decoding\\] SQ\\* instructions need to check bits with specific values [\\#268](https://github.com/dyninst/dyninst/issues/268)\r\n- \\[ARMv8 Decoding\\] SMADDL and SMSUBL should have 32-bit register for operands 2 and 3 [\\#266](https://github.com/dyninst/dyninst/issues/266)\r\n- \\[ARMv8 Decoding\\] SHL and SLI should have 0 for bit 11 [\\#265](https://github.com/dyninst/dyninst/issues/265)\r\n- \\[ARMv8 Decoding\\] NEG instruction must have size = '11' [\\#263](https://github.com/dyninst/dyninst/issues/263)\r\n- \\[ARMv8 Decoding\\] FMUL instruction cannot have size:q = '10' [\\#262](https://github.com/dyninst/dyninst/issues/262)\r\n- \\[ARM Decoding\\] FMUL instructions cannot have 'size:L' == '11' [\\#258](https://github.com/dyninst/dyninst/issues/258)\r\n- \\[ARM Decoding\\] Convert instruction immediate has reserved values \\(currently ignored\\) [\\#257](https://github.com/dyninst/dyninst/issues/257)\r\n- \\[ARM Decoding\\] FCVTXN should be FCVTXN2 [\\#255](https://github.com/dyninst/dyninst/issues/255)\r\n- \\[ARM Decoding\\] FCVT 'type' field cannot equal 'opc' field [\\#254](https://github.com/dyninst/dyninst/issues/254)\r\n- \\[ARM Decoding\\] Reserved size value for some vector register instructions is ignored [\\#249](https://github.com/dyninst/dyninst/issues/249)\r\n- \\[ARM Decoding\\] Stack pointer used where zero register should be [\\#248](https://github.com/dyninst/dyninst/issues/248)\r\n- \\[ARM Decoding\\] Signed multiply instructions ignore size resitrictions [\\#247](https://github.com/dyninst/dyninst/issues/247)\r\n- \\[ARM Decoding\\] Paired memory accesses must access aligned memory [\\#245](https://github.com/dyninst/dyninst/issues/245)\r\n- \\[ARM Decoding\\] Convert instruction immediates appear incorrect at 64 [\\#241](https://github.com/dyninst/dyninst/issues/241)\r\n- \\[ARM Decoding\\] Convert instruction immediate should not be larger than the register size [\\#240](https://github.com/dyninst/dyninst/issues/240)\r\n- \\[ARM Syntax\\] Signed immediates should be shown as signed [\\#239](https://github.com/dyninst/dyninst/issues/239)\r\n- \\[ARM Decoding\\] We should print the full operands of PRFUM [\\#238](https://github.com/dyninst/dyninst/issues/238)\r\n- \\[ARM Decoding\\] Bad shift amounts. [\\#233](https://github.com/dyninst/dyninst/issues/233)\r\n- \\[ARM Decoding\\] SIMD load instruction should be valid [\\#223](https://github.com/dyninst/dyninst/issues/223)\r\n- \\[ARM Decoding\\] Decoding of MOVK instruction ignores restriction on combination of size and hw bits [\\#222](https://github.com/dyninst/dyninst/issues/222)\r\n- \\[ARM Decoding\\] Decoding of ADDHN ignore reserved size bits [\\#221](https://github.com/dyninst/dyninst/issues/221)\r\n- \\[ARM Syntax\\] Zero register should have sizing, either XZR or WZR [\\#220](https://github.com/dyninst/dyninst/issues/220)\r\n- \\[ARM Decoding\\] Invalid CCMP and CCMN decoded as valid [\\#219](https://github.com/dyninst/dyninst/issues/219)\r\n- \\[ARM Syntax\\] Shifted immediate for CCMP and CCMN [\\#218](https://github.com/dyninst/dyninst/issues/218)\r\n- \\[ARM Syntax\\] Immediate out of range for LDRSB [\\#217](https://github.com/dyninst/dyninst/issues/217)\r\n- \\[ARM Syntax\\] Repeated register number as constant [\\#216](https://github.com/dyninst/dyninst/issues/216)\r\n\r\n**Merged pull requests:**\r\n\r\n- CMake fixup [\\#349](https://github.com/dyninst/dyninst/pull/349) ([wrwilliams](https://github.com/wrwilliams))\r\n- Fix up exception handling code so that we only consider call instructions for exception sensitivity and its attendant emulation [\\#347](https://github.com/dyninst/dyninst/pull/347) ([wrwilliams](https://github.com/wrwilliams))\r\n- Refactor BPatch\\_type so it always has a reference to its underlying symtab type. [\\#346](https://github.com/dyninst/dyninst/pull/346) ([wrwilliams](https://github.com/wrwilliams))\r\n\r\n\r\n\r\n\\* *This Change Log was automatically generated by [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)*", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v9.3.2", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v9.3.2", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v9.3.2", "url": "https://api.github.com/repos/dyninst/dyninst/releases/6111494", "release_id": 6111494, "date_created": "2017-04-17T21:51:11Z", "date_published": "2017-04-18T19:07:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/5385496", "tag": "v9.3.1", "name": "Dyninst 9.3.1", "author": {"name": "wrwilliams", "type": "User"}, "description": "# Change Log\n\n## [v9.3.1](https://github.com/dyninst/dyninst/releases/v9.3.1) (2017-03-02)\n\n[Full Changelog](https://github.com/dyninst/dyninst/compare/v9.3.0...v9.3.1)\n\n**Fixed bugs:**\n- Abort on PPC64LE when trying to get line number info [#337](https://github.com/dyninst/dyninst/issues/337)\n- Seg Fault on PPC64LE during attach [#336](https://github.com/dyninst/dyninst/issues/336)\n- Memory leaks in indirect control flow analysis [#322](https://github.com/dyninst/dyninst/issues/322)\n- BPatch_binaryEdit::writeFile() fails for stack diversification [#311](https://github.com/dyninst/dyninst/issues/311)\n- Stackwalk issue on arm64  [#303](https://github.com/dyninst/dyninst/issues/303)\n- Decode returns null shared pointer [#288](https://github.com/dyninst/dyninst/issues/288)\n- Operands labelled \"[empty]\" with operand type mismatch (all with 0x67 prefix) [#203](https://github.com/dyninst/dyninst/issues/203)\n\n**Merged pull requests:**\n- Replaced a bunch of asserts with graceful error handling. [#340](https://github.com/dyninst/dyninst/pull/340) ([wrwilliams](https://github.com/wrwilliams))\n- Fix jump table analysis for lulesh  [#338](https://github.com/dyninst/dyninst/pull/338) ([mxz297](https://github.com/mxz297))\n- Better handling of anonymous structs and unions [#335](https://github.com/dyninst/dyninst/pull/335) ([wrwilliams](https://github.com/wrwilliams))\n- Fix memory leaks found with lsan [#333](https://github.com/dyninst/dyninst/pull/333) ([wrwilliams](https://github.com/wrwilliams))\n- Suppress debug message when no vsyscall page was found on arm64 [#332](https://github.com/dyninst/dyninst/pull/332) ([wrwilliams](https://github.com/wrwilliams))\n- Use ifdef to guard x86 code [#331](https://github.com/dyninst/dyninst/pull/331) ([wrwilliams](https://github.com/wrwilliams))\n- Fix memory leaks in indirect control flow. [#329](https://github.com/dyninst/dyninst/pull/329) ([wrwilliams](https://github.com/wrwilliams))\n- Fixes for API and dependency issues in 9.3.0 [#323](https://github.com/dyninst/dyninst/pull/323) ([wrwilliams](https://github.com/wrwilliams))\n\n\\* _This Change Log was automatically generated by [github_changelog_generator](https://github.com/skywinder/Github-Changelog-Generator)_\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v9.3.1", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v9.3.1", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v9.3.1", "url": "https://api.github.com/repos/dyninst/dyninst/releases/5385496", "release_id": 5385496, "date_created": "2017-03-02T21:38:32Z", "date_published": "2017-03-02T21:41:25Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/3649791", "tag": "v9.3.0", "name": "Dyninst 9.3.0", "author": {"name": "jdetter", "type": "User"}, "description": "## Notes\n- Dyninst no longer supports `libelf.so.0` (non-elfutils version); it may work for your use case but it is deprecated and will become unsupported in a future release. We intend to migrate fully to the elfutils stack for elf/dwarf infrastructure support.\n\n## New Features\n- Full support for Knight's Landing processors\n- First official release of ParseAPI for ARMv8\n- First release of cross-architecture binary analysis capabilities (parsing of ARM binaries on x86 and vice versa, for example). PowerPC parsing still requires compile-time selection of endianness; a fix for this is coming in 9.3.1. This is a significant step in our long road to making Dyninst's host and target platforms fully independent from each other.\n- Dyninst can now safely relocate and instrument code containing C++ exceptions.\n- Documented various ProcControl and Stackwalker tracking/tracking control interfaces.\n- Read access to Symtab and ParseAPI data structures should now be thread-safe, provided that you force eager creation of those data structures. If there exist data structures that cannot be eagerly created and are thus thread-unsafe for your use case, please let us know.\n- Automatic detection of Dyninst runtime library location (currently Unix-ish only, Windows support to follow in 9.3.1).\n- Cotire added to speed up build. If building with GCC, this requires version >= 4.5.0; for all compilers, this requires CMake >= 2.8.12.\n- Improvements to stack analysis on x86\n\n## Bug Fixes\n- Fixed segfault when a process is attached without specifying executable name\n- Fixed crash in liveness\n- Fixed assert when running stack modifications on SPEC\n- Fixed multiple jump table parsing issues\n- Fixed `findMain` analysis for stripped binaries\n- Assorted fixes in line information handling\n- Assorted fixes for race conditions in ProcControl\n- Fixed cases where Dyninst heaps were not allocated sufficiently close to the code being relocated into them\n- Ensured stack modification code is only built on supported platforms (x86/Linux for now)\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v9.3.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v9.3.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v9.3.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/3649791", "release_id": 3649791, "date_created": "2016-12-22T21:53:54Z", "date_published": "2016-12-22T21:57:03Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/3552690", "tag": "v9.2.0", "name": "Dyninst 9.2.0", "author": {"name": "wrwilliams", "type": "User"}, "description": "## New Features\n- ARM64 SIMD support in instructionAPI\n- Support for all x86 instruction sets up to Knight's Landing (AVX, AVX2, AVX512)\n- DataflowAPI now has an official manual\n- Initial ppc64/little endian support in Symtab, InstructionAPI, ProcControl, and Stackwalker. Add\n  -Darch_ppc64_little_endian to your CMake command line when building on little-endian ppc64 systems.\n- New InstructionAPI test framework based on structured fuzzing.\n  This resulted in finding (and fixing) lots of corner-case\n  instruction parsing errors. The fuzzer framework, called Peach,\n  will be released later this year.\n\n## Bug Fixes\n- PIE binaries should now be rewritten correctly, even if they have a zero base address\n- Symtab should now correctly file symbols into their associated modules based on the best available DWARF information\n- Many more fixes in x86 instruction decoding\n- Enhancements to jump table analysis\n- PC-relative memory accesses in VEX instructions can now be relocated correctly\n- Various proccontrol bug fixes\n- RTlib's DYNINSTos_malloc and DYNINSTos_free should now be signal-safe\n- RTlib's tramp guard lock/unlock functions should now avoid making implicit function calls\n  (which are unsafe from tramp guard code)\n- ppc64 bit rot for create/attach modes is fixed\n\n## Known Issues\n- ppc64 rewriter mode does not handle any code that does not conform to the \"caller sets up TOC\" model for intermodule calls\n- Windows 64-bit mode is not yet supported\n- Windows rewriter mode is not yet supported\n- Exceptions in relocated code will not be caught\n- Linux rewriter mode for 32-bit, statically linked binaries does not support binaries with .plt, .rel, or .rela\n  sections.\n- Callbacks at thread or process exit that stop the process will deadlock when a SIGSEGV occurs on a thread other than the main thread of a process\n- InstructionAPI's format() method does not produce AT&T syntax output\n- Stackwalker is fragile on Windows\n- Parsing a binary with no functions (typically a single object file) will crash at CodeObject destruction time.\n- Line information is still filed into incorrect modules for a small fraction of functions in SymtabAPI.\n\n## Manuals\n\n[dyninstAPI-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340295/dyninstAPI-9.2.0.pdf)\n[dynC_API-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340247/dynC_API-9.2.0.pdf)\n[proccontrol-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340294/proccontrol-9.2.0.pdf)\n[patchAPI-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340251/patchAPI-9.2.0.pdf)\n[stackwalk-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340250/stackwalk-9.2.0.pdf)\n[dataflowAPI-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340272/dataflowAPI-9.2.0.pdf)\n[parseAPI-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340248/parseAPI-9.2.0.pdf)\n[instructionAPI-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340249/instructionAPI-9.2.0.pdf)\n[symtabAPI-9.2.0.pdf](https://github.com/dyninst/dyninst/files/340252/symtabAPI-9.2.0.pdf)\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v9.2.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v9.2.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v9.2.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/3552690", "release_id": 3552690, "date_created": "2016-06-29T21:54:14Z", "date_published": "2016-06-29T21:59:50Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/dyninst/dyninst/releases/3553969", "tag": "v9.1.0", "name": "Dyninst 9.1.0", "author": {"name": "wrwilliams", "type": "User"}, "description": "INTERFACE CHANGES:\n- Shared objects and executables now both correspond to\n  BPatch_objects, and their constituent .o files correspond to\n  BPatch_modules.\n\nNEW FEATURES:\n- New code example: disassembler\n- Boost should now auto-detect up to version 1.59\n- Initial ARM64 implementation of InstructionAPI; SIMD instructions\n  are currently not supported\n\nBUG FIXES\n- Many x86 decoding bugs fixed (incorrect operand sizes, incorrect\n  prefix handling)\n- Memory leaks fixed in line information parsing\n- Slicing no longer attempts to follow edges to or from catch blocks\n- Exception block parsing properly matches glibc internals\n- Line information parsing should no longer erroneously fail to return\n  line information; also should no longer take quadratic time\n- LD_PRELOAD again works\n- Relocation and instrumentation no longer trigger unnecessary parsing\n  on Windows\n- Windows no longer misidentifies calling conventions due to\n  use-after-free string corruption\n\nMANUALS\n\n[dynC_API-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340237/dynC_API-9.1.0.pdf)\n[dyninstAPI-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340239/dyninstAPI-9.1.0.pdf)\n[instructionAPI-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340236/instructionAPI-9.1.0.pdf)\n[parseAPI-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340238/parseAPI-9.1.0.pdf)\n[patchAPI-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340241/patchAPI-9.1.0.pdf)\n[proccontrol-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340240/proccontrol-9.1.0.pdf)\n[stackwalk-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340243/stackwalk-9.1.0.pdf)\n[symtabAPI-9.1.0.pdf](https://github.com/dyninst/dyninst/files/340242/symtabAPI-9.1.0.pdf)\n", "tarball_url": "https://api.github.com/repos/dyninst/dyninst/tarball/v9.1.0", "zipball_url": "https://api.github.com/repos/dyninst/dyninst/zipball/v9.1.0", "html_url": "https://github.com/dyninst/dyninst/releases/tag/v9.1.0", "url": "https://api.github.com/repos/dyninst/dyninst/releases/3553969", "release_id": 3553969, "date_created": "2015-12-16T17:09:59Z", "date_published": "2016-06-29T21:28:36Z"}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/dyninst/dyninst/master/instructionAPI/src/test/geninput.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/dyninst/dyninst/master/docker/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/dyninst/dyninst/master/docker/build_elfutils.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/dyninst/dyninst/master/docker/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/docker/Dockerfile"}], "installation": [{"result": {"value": "```spack install dyninst```\n", "type": "Text_excerpt", "original_header": "Install with Spack", "parent_header": ["Dyninst", "Build DyninstAPI and its subcomponents"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Containers are provided that can be used for Dyninst development (e.g., make changes to Dyninst and quickly rebuild it)\nor for development of your own tools (e.g., have a container ready to go with Dyninst). Links will be added\nhere when the containers are pushed to the Dyninst associated package registries. Instructions for usage\nand building locally are provided in the [docker](docker) directory. \n", "original_header": "Docker Containers"}, "confidence": 0.8661974422242473, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "\t```cmake /path/to/dyninst/source -DCMAKE_INSTALL_PREFIX=/path/to/installation``` \n2. Build and install Dyninst in parallel \n\t```make install -jN``` \n", "original_header": "Build from source"}, "confidence": 0.9615176223978018, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "* Linux rewriter mode for 32-bit, statically linked binaries does not support binaries with .plt, .rel, or .rela\nsections. \n* Stackwalker is fragile on Windows \n", "original_header": "Known Issues"}, "confidence": 0.8418902586324781, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "Dyninst"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}], "documentation": [{"result": {"type": "Url", "value": "https://github.com/dyninst/dyninst/wiki", "format": "wiki"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/dyninst/dyninst/master/README.md"}]}