{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:47:53"}, "code_repository": [{"result": {"value": "https://github.com/FilippoMB/Time-series-classification-and-clustering-with-Reservoir-Computing", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "FilippoMB", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2018-03-13T17:06:10Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-21T08:30:11Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MIT License\n\nCopyright (c) 2019 Filippo Maria Bianchi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/LICENSE"}, {"result": {"value": "The code is released under the MIT License. See the attached LICENSE file.\n", "type": "Text_excerpt", "original_header": "License", "parent_header": ["Framework overview"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}], "description": [{"result": {"value": "Library for implementing reservoir computing models (echo state networks) for multivariate time series classification and clustering.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "This library allows to quickly implement different architectures based on Reservoir Computing (the family of approaches popularized in machine learning by Echo State Networks) for classification or clustering of univariate/multivariate time series. \nSeveral options are available to customize the RC model, by selecting different configurations for each module.\n1. The **reservoir** module specifies the reservoir configuration (*e.g.*, bidirectional, leaky neurons, circle topology);\n2. The **dimensionality reduction** module (optionally) applies a dimensionality reduction on the produced sequence of the reservoir's states;\n3. The **representation** module defines how to represent the input time series from the sequence of reservoir's states;\n4. The **readout** module specifies the model to use to perform the final classification.  \nThis library also implements the novel *reservoir model space* as representation for the time series.\nDetails on the methodology can be found in the [original paper](https://ieeexplore.ieee.org/abstract/document/9127499) (Arxiv version [here](https://arxiv.org/abs/1803.07870)). \nFor a detailed example of time series clustering, check the notebook [here](https://github.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/blob/master/code/clustering_example.ipynb).\n \n", "original_header": "Framework overview"}, "confidence": 0.9609609691864248, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The main class ```RC_model``` contained in [modules.py](https://github.com/FilippoMB/Reservoir-model-space-classifier/blob/master/code/modules.py) permits to specify, train and test an RC-model.\nThe RC-model is configured by passing to the constructor of the class ```RC_model``` a set of parameters. To get an idea, you can check BASH2* or BASH3* where the parameters are specified through a dictionary (BASH4*`).  \nThe available configuration hyperparameters are listed in the following and, for the sake of clarity, are grouped according to which module of the architecture they refer to. \n- n_drop - number of transient states to drop\n- bidir - use a bidirectional reservoir (True or False)\n- reservoir - precomputed reservoir (object of class ````Reservoir```` in [reservoir.py](https://github.com/FilippoMB/Reservoir-model-space-classifier/blob/master/code/reservoir.py); if BASH6*, the following hyperparameters must be specified:\n    - n\\_internal\\_units = number of processing units in the reservoir\n    - spectral_radius = largest eigenvalue of the reservoir matrix of connection weights (to guarantee the Echo State Property, set spectral\\_radius <= leak <= 1)\n    - leak = amount of leakage in the reservoir state update (optional, `BASH6*` or BASH7*` --> no leakage)\n    - circ = if True, generate a determinisitc reservoir with circle topology where each connection has the same weight\n    - connectivity = percentage of nonzero connection weights (ignored if circ = BASH8*`)\n    - input_scaling = scaling of the input connection weights (note that weights are randomly drawn from {-1,1})\n    - noise_level = deviation of the Gaussian noise injected in the state update\n            \n**2. Dimensionality reduction:** \n- dimred_method - procedure for reducing the number of features in the sequence of reservoir states; possible options are: ````None```` (no dimensionality reduction), BASH9*` (standard PCA) or BASH10*` (tensorial PCA for multivariate time series data)\n- n_dim - number of resulting dimensions after the dimensionality reduction procedure\n    \n**3. Representation:** \n- mts_rep - type of multivariate time series representation. It can be ````'last'```` (last state), BASH12*` (mean of all states), BASH13*` (output model space), or BASH14*` (reservoir model space)\n- w\\_ridge\\_embedding - regularization parameter of the ridge regression in the output model space and reservoir model space representation; ignored if mts_rep is `BASH6*`\n    \n**4. Readout:** \n- readout_type - type of readout used for classification. It can be ````'lin'```` (ridge regression), BASH16*` (multilayer perceptron), BASH17*` (support vector machine), or `BASH6*`. If `BASH6*`, the input representations will be stored in the BASH18*` attribute: this is useful for clustering and visualization. Also, if `BASH6*`, the other Readout hyperparameters can be left unspecified.\n- w\\_ridge - regularization parameter of the ridge regression readout (only when readout_type is ````'lin'````)              \n- mlp\\_layout - list with the sizes of MLP layers, e.g. BASH19*` defines a MLP with 3 layers of 20, 20 and 10 units respectively (only when readout_type is BASH16*`)\n- batch\\_size - size of the mini batches used during training (only when readout_type is BASH16*`)\n- num\\_epochs - number of iterations during the optimization (only when readout_type is BASH16*`)\n- w\\_l2 = weight of the L2 regularization (only when readout_type is BASH16*`)\n- learning\\_rate = learning rate in the gradient descent optimization (only when readout_type is BASH16*`)\n- nonlinearity = type of activation function; it can be BASH20*` (only when readout_type is BASH16*`)\n- svm\\_gamma = bandwith of the RBF kernel (only when readout_type is BASH17*`)\n- svm\\_C = regularization for the SVM hyperplane (only when readout_type is BASH17*`)\n \n", "original_header": "Configure the RC-model"}, "confidence": 0.9469500533364407, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "As in the case of classification, the data must be provided as multidimensional NumPy arrays of shape *[N,T,V]* \n- tr\\_time: time (in seconds) used to generate the representations \nAdditionally, the representations of the input data X are stored in the attribute ````RC_model.input_repr````\n \n", "original_header": "Train the RC-model for clustering"}, "confidence": 0.903362289567434, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "In the latest version of the repository there is no longer a dependency from Tensorflow, reducing the dependecies of this repository only to scipy and scikit-learn.\nThe MLP readout is now based on the scikit-learn implementation that, however, does not support dropout and the two custom activation functions, Maxout and Kafnets. These functionalities are still available in the branch \"Tensorflow\". Checkout it to use the Tensorflow version of this repository.\n \n", "original_header": "Tensorflow version"}, "confidence": 0.9966285921011038, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}], "name": [{"result": {"value": "Time-series-classification-and-clustering-with-Reservoir-Computing", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "FilippoMB/Time-series-classification-and-clustering-with-Reservoir-Computing", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/FilippoMB/Time-series-classification-and-clustering-with-Reservoir-Computing/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/FilippoMB/Time-series-classification-and-clustering-with-Reservoir-Computing/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 287, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "machine-learning-algorithms, reservoir-computing, time-series-classification, time-series-clustering", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 80, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 1097951}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 29576}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/code/clustering_example.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/code/clustering_example.ipynb"}], "citation": [{"result": {"value": "Please, consider citing the original paper if you are using this library in your reasearch\n\n````bibtex\n@article{bianchi2020reservoir,\n  title={Reservoir computing approaches for representation and classification of multivariate time series},\n  author={Bianchi, Filippo Maria and Scardapane, Simone and L{\\o}kse, Sigurd and Jenssen, Robert},\n  journal={IEEE Transactions on Neural Networks and Learning Systems},\n  year={2020},\n  publisher={IEEE}\n}\n````\n    \n", "type": "Text_excerpt", "original_header": "Citation", "parent_header": ["Framework overview"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}, {"result": {"value": "@article{bianchi2020reservoir,\n  title={Reservoir computing approaches for representation and classification of multivariate time series},\n  author={Bianchi, Filippo Maria and Scardapane, Simone and L{\\o}kse, Sigurd and Jenssen, Robert},\n  journal={IEEE Transactions on Neural Networks and Learning Systems},\n  year={2020},\n  publisher={IEEE}\n}", "type": "Text_excerpt", "format": "bibtex"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}], "installation": [{"result": {"type": "Text_excerpt", "value": "**Required libraries** \n- sklearn (tested on version 0.22.1)\n- scipy \nThe code has been tested on Python 3.7, but lower versions should work as well. \n", "original_header": "Framework overview"}, "confidence": 0.9046244764231847, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "<img src=\"./logs/RC_classifier.JPG\" width=\"603.5\" height=\"320\"> \n", "original_header": "Framework overview"}, "confidence": 0.9319278943405566, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The training and test function requires in input training and test data, which must be provided as multidimensional NumPy arrays of shape *[N,T,V]*, with: \n**Training**\n````RC_model.train(X, Y)````\n \n**Test**\n````RC_module.test(Xte, Yte)````\n \n", "original_header": "Train and test the RC-model for classification"}, "confidence": 0.8987323790395867, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "As in the case of classification, the data must be provided as multidimensional NumPy arrays of shape *[N,T,V]* \n**Training**\n````RC_model.train(X)````\n \n", "original_header": "Train the RC-model for clustering"}, "confidence": 0.8652187331490635, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "Framework overview"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}], "image": [{"result": {"type": "Url", "value": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/./logs/RC_classifier.JPG"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/abs/1803.07870"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/FilippoMB/Reservoir-Computing-framework-for-multivariate-time-series-classification/master/README.md"}]}