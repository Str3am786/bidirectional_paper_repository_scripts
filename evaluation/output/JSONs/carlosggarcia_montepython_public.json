{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:15:19"}, "code_repository": [{"result": {"value": "https://github.com/carlosggarcia/montepython_public", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "carlosggarcia", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2020-07-24T12:42:08Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-01-31T18:25:12Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}], "description": [{"result": {"value": "Public repository for the Monte Python Code", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "* Added new type of parameters, derived_lkl, that behave like derived parameters of the likelihood and are not passed to class (D.C. Hooper) \n* Added joint prior on sz nuisance parameters for all Planck 18 likelihoods. Bestfits and covmats updated to reflect this (D.C. Hooper) \n", "original_header": "Recent changelog"}, "confidence": 0.9557115292170784, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "Move the `.tar.bz2` file to the place of your convenience, untar its content \nYou will need to adapt only two files to your local configuration. The first\nis the main file of the code `montepython/MontePython.py`, and it will be the only\ntime you will have to edit it, and it is simply to accommodate different\npossible configurations of your computer. \n", "original_header": "The MontePython part"}, "confidence": 0.9121353581425972, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "This will compile the file `classy.pyx`, which is the python wrapper for CLASS,\ninto a library, `classy.so`, located in the `build/` subdirectory. This is the\nlibrary called in Monte Python afterwards. \n", "original_header": "The Class part"}, "confidence": 0.805443794270007, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "The Planck 2018 data can be found on the `Planck Legacy Archive <http://pla.esac.esa.int/pla/#home>`_.\nThe Planck Likelihood Code (**plc**) is based on a library called `clik`. It will be extracted,\nalongside several `.clik` folders that contain the likelihoods. The code uses an auto installer device,\ncalled `waf`. Here we detail the full installation. \nUncompress the code and the likelihood, and do some clean-up \nConfigure the code. Note that you are **strongly advised** to configure clik with the Intel mkl library, and not with lapack.\nThere is a massive gain in execution time: without it, the code is dominated by the execution of the low-l polarisation data.\nBefore the next step make sure you do NOT have any old Planck likelihoods sourced! \n", "original_header": "The Planck likelihood part"}, "confidence": 0.9178083022250668, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "To see a list of all commands. For the `run` subcommand, there are two\nessential ones, without which the program will not start. At minimum, you\nshould precise an output folder (`-o`) and a parameter file (`-p`). An example\nof parameter file is found in the main directory of MontePython (`test.param`,\nfor instance). \n", "original_header": "Enjoying the difference"}, "confidence": 0.8583065508904829, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "Please also cite the relevant papers for each likelihood used: as of v3.0 we have a\nlist of references for all likelihoods in the first of the papers below. In the\nfuture the list will be maintained on the official `Monte Python website\n<https://brinckmann.github.io/montepython_public/>`_. Otherwise, this information can\noften be found in the .data file of the likelihood folder. \nIn order to encourage people to both develop and share likelihoods with the community,\nto the benefit of all users, we optionally encourage users to cite the paper in which\nthe *Monte Python* likelihood was first used, in addition to the papers in which data\nand/or likelihoods were published. \n", "original_header": "Bibtex entry"}, "confidence": 0.9809827513723581, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "\nThe code is under the MIT license. As an additional clause, when using the code\nin a scientific publication you are also required to cite the v3.0 release paper\n``MontePython 3: boosted MCMC sampler and other features`` and the original release\npaper ``Conservative Constraints on Early Cosmology`` (see the tail of this document\nfor the bibtex entries). \n"}, "confidence": 0.9951241369087697, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}], "name": [{"result": {"value": "montepython_public", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "carlosggarcia/montepython_public", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/carlosggarcia/montepython_public/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/carlosggarcia/montepython_public/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 0, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 1, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/carlosggarcia/montepython_public/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 1291101}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C", "name": "C", "type": "Programming_language", "size": 166052}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 6450}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Gnuplot", "name": "Gnuplot", "type": "Programming_language", "size": 5989}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Batchfile", "name": "Batchfile", "type": "Programming_language", "size": 5106}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Fortran", "name": "Fortran", "type": "Programming_language", "size": 4632}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 1727}, "confidence": 1, "technique": "GitHub_API"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/pctest.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "usage": [{"result": {"value": "If you are searching for further details or specific examples of a work session,\nplease refer to the online documentation. See also the `Monte Python 3 paper\n<https://arxiv.org/abs/1804.07261>`_ for details on the code, including a\nsummary of features as of v3.0.\n\nNote the `Monte Python 3 paper <https://arxiv.org/abs/1804.07261>`_ contains an\noverview of all likelihoods currently implemented in the code, with some details\non those likelihoods, such as datasets, last updated, type and relevant papers\nto cite when using the likelihood. In the future, the overview of likelihoods\nwill be maintained on the official `Monte Python website\n<https://brinckmann.github.io/montepython_public/>`_.\n\nYou can find installation details below and on the archived `Monte Python 2 wiki\n<https://github.com/baudren/montepython_public/wiki>`_. The `Monte Python 3 forum\n<https://github.com/brinckmann/montepython_public/issues>`_ contains a\ncollection of already answered questions, and can be used to discuss the code.\nAlso refer to the archived `Monte Python 2 forum\n<https://github.com/baudren/montepython_public/issues>`_ for additional\npreviously answered questions, but please post all new issues on the\n`Monte Python 3 forum <https://github.com/brinckmann/montepython_public/issues>`_.\n\nThe official `Monte Python website\n<https://brinckmann.github.io/montepython_public/>`_, the\n`course page of Julien Lesgourgues <https://lesgourg.github.io/courses.html>`_,\nand the `hi_class website <http://miguelzuma.github.io/hi_class_public>`_ contain *Monte Python*\n(and *Class*) lectures, examples and exercises.\n\n", "type": "Text_excerpt", "original_header": "Details and Examples"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}], "contributing_guidelines": [{"result": {"value": "*Monte Python* is developed and maintained by volunteer workers and we are always\nhappy for new people to contribute. Do not hesitate to contact us if you believe\nyou have something to add, this can be e.g. new likelihoods, new samplers,\nimprovements to the plotting, bug fixes, or ideas for how to improve the code.\nAdditionally, everyone is encouraged to assist in resolving issues on the forum,\nso do not hesitate to reply if you think you can help.\n\nIn particular, if you would like to have your likelihood added to the public\ngithub repository, please make sure it is well documented and add all relevant\ninformation to the .data file, e.g. authors and references.\n\n", "type": "Text_excerpt", "original_header": "Want to contribute?"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}], "requirements": [{"result": {"value": "* You need the python program **version 2.7.x** or **version 3.x**.\n  Note that lower versions of python may work, down to 2.6, if you\n  add manually two extra packages\n  (`ordereddict <http://code.activestate.com/recipes/576693/>`_ and\n  `argparse <https://pypi.python.org/pypi/argparse/1.2.1>`_).\n\n* Your python of choice must have `numpy` (version >= 1.4.1) and `cython`. The\n  later is used to wrap CLASS in python.\n\n* *[optional]* If you want to use fully the plotting capabilities of Monte Python,\n  you also need the `scipy`, with interpolate, and `matplotlib` modules.\n\n* *[optional]* You can now use Multi Nest and the CosmoHammer with Monte\n  Python, though you need to install them. Please refer to the documentation.\n\n", "type": "Text_excerpt", "original_header": "Prerequisites"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}], "installation": [{"result": {"type": "Text_excerpt", "value": "This will create a directory named `montepython` into your current directory.\nYou can add the following line to your `.bashrc` file: \nThis should be changed to wherever is your preferred python distribution\ninstalled. For standard distribution, this should already be working. Now,\nyou should be able to execute directly the file, i.e. instead of calling: \n", "original_header": "The MontePython part"}, "confidence": 0.8906585713665349, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "Go to your class directory, and do **make clean**, then **make**. This builds the\n`libclass.a`, needed for the next step. From there, \n    $ cd python/\n    $ python setup.py build\n    $ python setup.py install --user \nIf this step fails, check that you have `cython` installed, `numpy` (a numerical\npackage for python), python (well... did I say this code was in python ?) with\na version > 2.6.  If this step fails again, kindly ask your system admin, (s)he\nis there for this, after all. Note that the installation (last command) is\nnot strictly speaking mandatory. \n", "original_header": "The Class part"}, "confidence": 0.8889591980908141, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "   $ cd path/to/planck \n    $ tar -xvzf COM_Likelihood_Code-v3.0_R3.01.tar.gz\n    $ tar -xvzf COM_Likelihood_Data-baseline_R3.00.tar.gz\n    $ rm COM_Likelihood_*tar.gz \nIf everything went well, you are ready to install the code \n   $ ./waf install \nYou now need to source the likelihood. If you are running on a bash shell, simply type \n   $ source bin/clik_profile.sh \nYou need to add 'source /path/to/planck/code/plc_3.0/plc-3.01/bin/clik_profile.sh' to your .bashrc (or the .zsh to your\n.zshrc on a z-shell), and you should put it in your scripts for cluster computing. \n", "original_header": "The Planck likelihood part"}, "confidence": 0.9294482889874569, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "If non existent, the `test/` folder will be created, and a run with the number\nof steps described in `example.param` will be started. To run a chain with more\nsteps, one can type: \n", "original_header": "Enjoying the difference"}, "confidence": 0.8243459876463235, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "* Various bugfixes and minor improvements, e.g. updated example plot file with more options and clarifications \n", "original_header": "Recent changelog"}, "confidence": 0.8443481969003316, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "This will create a directory named `montepython` into your current directory.\nYou can add the following line to your `.bashrc` file: \nIts first line reads \n", "original_header": "The MontePython part"}, "confidence": 0.8415501221305494, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Text_excerpt", "value": "    $ python montepython/MontePython.py --help\n    $ python montepython/MontePython.py run --help\n    $ python montepython/MontePython.py info --help \n    $ python montepython/MontePython.py run -o test -p example.param \n    $ python montepython/MontePython.py run -o test -p example.param -N 100 \nIf you want to analyse the run, then just type \n    $ python montepython/MontePython.py info test/ \n", "original_header": "Enjoying the difference"}, "confidence": 0.9232967067599894, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}], "full_title": [{"result": {"type": "String", "value": ""}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/abs/1804.07261>`_ for details on the code, including a\nsummary of features as of v3.0.\n\nNote the `Monte Python 3 paper <https://arxiv.org/abs/1804.07261>`_ contains an\noverview of all likelihoods currently implemented in the code, with some details\non those likelihoods, such as datasets, last updated, type and relevant papers\nto cite when using the likelihood. In the future, the overview of likelihoods\nwill be maintained on the official `Monte Python website\n<https://brinckmann.github.io/montepython_public/>`_.\n\nYou can find installation details below and on the archived `Monte Python 2 wiki\n<https://github.com/baudren/montepython_public/wiki>`_. The `Monte Python 3 forum\n<https://github.com/brinckmann/montepython_public/issues>`_ contains a\ncollection of already answered questions, and can be used to discuss the code.\nAlso refer to the archived `Monte Python 2 forum\n<https://github.com/baudren/montepython_public/issues>`_ for additional\npreviously answered questions, but please post all new issues on the\n`Monte Python 3 forum <https://github.com/brinckmann/montepython_public/issues>`_.\n\nThe official `Monte Python website\n<https://brinckmann.github.io/montepython_public/>`_, the\n`course page of Julien Lesgourgues <https://lesgourg.github.io/courses.html>`_,\nand the `hi_class website <http://miguelzuma.github.io/hi_class_public>`_ contain *Monte Python*\n(and *Class*"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}, {"result": {"type": "Url", "value": "https://arxiv.org/abs/1804.07261>`_ contains an\noverview of all likelihoods currently implemented in the code, with some details\non those likelihoods, such as datasets, last updated, type and relevant papers\nto cite when using the likelihood. In the future, the overview of likelihoods\nwill be maintained on the official `Monte Python website\n<https://brinckmann.github.io/montepython_public/>`_.\n\nYou can find installation details below and on the archived `Monte Python 2 wiki\n<https://github.com/baudren/montepython_public/wiki>`_. The `Monte Python 3 forum\n<https://github.com/brinckmann/montepython_public/issues>`_ contains a\ncollection of already answered questions, and can be used to discuss the code.\nAlso refer to the archived `Monte Python 2 forum\n<https://github.com/baudren/montepython_public/issues>`_ for additional\npreviously answered questions, but please post all new issues on the\n`Monte Python 3 forum <https://github.com/brinckmann/montepython_public/issues>`_.\n\nThe official `Monte Python website\n<https://brinckmann.github.io/montepython_public/>`_, the\n`course page of Julien Lesgourgues <https://lesgourg.github.io/courses.html>`_,\nand the `hi_class website <http://miguelzuma.github.io/hi_class_public>`_ contain *Monte Python*\n(and *Class*"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/carlosggarcia/montepython_public/3.3/README.rst"}]}