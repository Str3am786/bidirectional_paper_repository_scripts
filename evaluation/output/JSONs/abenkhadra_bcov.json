{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:01:06"}, "code_repository": [{"result": {"value": "https://github.com/abenkhadra/bcov", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "abenkhadra", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2020-04-29T07:59:52Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-06T08:19:49Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": null, "type": "License", "name": "Other", "url": null, "spdx_id": "NOASSERTION"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "The MIT License (MIT)\n\nCopyright (c) 2013 Austin T. Clements\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/ext/libelfin/LICENSE"}, {"result": {"value": "This software is distributed under the MIT license. See `LICENSE.txt` for details.\n\n [link-capstone]: https://github.com/aquynh/capstone\n [link-unicorn]: https://github.com/unicorn-engine/unicorn\n [link-preprint]: https://arxiv.org/pdf/2004.14191.pdf\n [link-artifacts]: https://github.com/abenkhadra/bcov-artifacts\n [link-post1]: https://blog.formallyapplied.com/2020/05/function-identification/\n [link-post2]: https://blog.formallyapplied.com/2020/06/bcov-program-graphs/\n [link-dockerfile]: https://github.com/abenkhadra/bcov-artifacts/blob/master/Dockerfile\n [link-llvmdev]: http://lists.llvm.org/pipermail/llvm-dev/2020-June/142821.html\n [link-slide-deck]: https://docs.google.com/presentation/d/1BgcOaw06AcfCzc8PMPkhYANKUkevbxAPFQkbERpXBJ4/edit?usp=sharing\n [link-talk]: https://youtu.be/pns0lJ5FwwA\n [link-teaser]: https://youtu.be/AT29eitsChc\n [link-paper]:  https://doi.org/10.1145/3368089.3409694\n [link-samples]: https://github.com/abenkhadra/bcov-artifacts/tree/master/sample-binaries\n [link-benchmarks]: https://doi.org/10.5281/zenodo.3876047\n", "type": "Text_excerpt", "original_header": "License"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}], "description": [{"result": {"value": "Static instrumentation tool for efficient binary-level coverage analysis.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "A tool for efficient binary-level coverage analysis. **bcov** statically\ninstruments x86-64 ELF binaries without compiler support. It features probe\npruning, precise CFG analyses, and sophisticated instrumentation techniques.\nWe summarized this research in a 2-min teaser [video][link-teaser].\n \n", "original_header": "bcov"}, "confidence": 0.8902218618464885, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "  - Details are available in our ESEC/FSE'20 [paper][link-paper]. You can find a slightly expanded pre-print [here][link-preprint].\n  - We have a [post][link-llvmdev] on the llvm-dev mailing list. It briefly introduces **bcov** and discusses potential future work.\n  - This blog [post][link-post1] elaborates on the availability of function definitions in stripped binaries.\n  - You can find our ESEC/FSE'20 talk [here][link-talk]. The slide deck (with transcript) is also [available][link-slide-deck].\n  - A sample set of binaries that we patched using `bcov` is available [here][link-samples]. However, the complete set of benchmarks is available on our archival [repository][link-benchmarks]. \n", "original_header": "Resources"}, "confidence": 0.9841318356254064, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "We provide a [Dockerfile][link-dockerfile] which installs **bcov** and runs a coverage analysis experiment.\nPlease checkout the supplemental [artifacts][link-artifacts] for more details.\n \n", "original_header": "Research reproducibility"}, "confidence": 0.9463197862462368, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}], "name": [{"result": {"value": "bcov", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "abenkhadra/bcov", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/abenkhadra/bcov/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/abenkhadra/bcov/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 139, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "binary-analysis, binary-rewriting, coverage, coverage-analysis, elf, reverse-engineering, static-instrumentation", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 8, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/abenkhadra/bcov/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "C++", "name": "C++", "type": "Programming_language", "size": 2120883}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C", "name": "C", "type": "Programming_language", "size": 9656}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "CMake", "name": "CMake", "type": "Programming_language", "size": 5174}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 2186}, "confidence": 1, "technique": "GitHub_API"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/abenkhadra/bcov/master/install.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "requirements": [{"result": {"value": "The following software packages must be available:\n   - [capstone][link-capstone] branch `next` commit #c3b4ce1901\n   - [unicorn][link-unicorn]  branch `master` commit #536c4e77c4\n\nLater versions of both frameworks should work in principle but have not been\ntested yet. The script `install.sh` can be used for installation.\n", "type": "Text_excerpt", "original_header": "Software prerequisites"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}], "usage": [{"result": {"value": "The tool supports the following operation modes which are set using the option `--mode` (or simply `-m`):\n\n  - `patch`. Patch a given binary.\n  - `report`. Report coverage given a patched binary and a coverage data file.\n  - `dump`. Dump various program graphs for a given function. For example, dump the CFG and dominator trees.\n\nThe following command can be issued to patch a binary,\n\n```shell script\nbcov -m patch -p any -v 5 -i perl -o perl.any\n```\n\nThe instrumentation policy can be set to `any`, which refers to the any-node policy, or `all` which\nrefers to the leaf-node policy.\n\nCoverage data can be dumped by injecting `libbcov-rt.so` using the `LD_PRELOAD`\nmechanism. For example, you can try the sample binary `perl.any` which can be\nfound in the artifacts repository,\n\n```shell script\nexport BCOV_OPTIONS=\"coverage_dir=$PWD\"   # sets the directory for dumping coverage data. Defaults to $PWD\nexport LD_PRELOAD=\"[full-path-to-bcov-rt]/libbcov-rt.so\"\n./perl.any -e 'print \"Hello, bcov!\\n\"'\n```\n\nThis will produce a dump file that has the extension '.bcov' in your current\ndirectory. This file can be supplied to **bcov** for coverage reporting,\n\n```shell script\nbcov -m report -p any -i ./perl -d perl.any.1588260679.1816.bcov > report.out\n```\n\nCurrently, **bcov** can not persist analysis results to disk. Therefore, the original binary must be\nre-analyzed to report coverage. Coverage will be reported for each basic block in the file\n`report.out`. The data in each line lists:\n - BB address\n - BB instruction count\n - is covered\n - is fallthrough (i.e., does not terminate with a branch)\n\nAlso, a coverage summary is reported for each function. For example, it shows the basic block and instruction coverage ratios.\n\nFor a given function, it is possible to selectively dump various program graphs like the CFG and superblock dominator graph.\nFor example, consider function `S_search_const` in `perl`,\n\n```shell script\nbcov -m dump -f \"S_search_const\" -i ./perl\n```\n\nThis command will dump the following files:\n\n   - func_421d90.cfg.dot. The CFG of the function.\n   - func_421d90.rev.cfg.dot. Similar to the CFG but with all edges reversed.\n   - func_421d90.pre.dom.dot. Predominator tree.\n   - func_421d90.post.dom.dot. Postdominator tree.\n   - func_421d90.sb.dom.dot. Superblock dominator graph.\n\nGraphs are dumped in the standard DOT format and can be viewed using a dot viewer like `xdot`.\nPlease refer to this [blog post][link-post2] for additional details.\n", "type": "Text_excerpt", "original_header": "Usage"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}], "citation": [{"result": {"value": "For citation in an academic work please use:\n\n    @inproceedings{BenKhadra:FSE2020,\n    address = {Virtual Event, USA},\n    author = {{Ben Khadra}, M. Ammar and Stoffel, Dominik and Kunz, Wolfgang},\n    booktitle = {ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering - ESEC/FSE'20},\n    doi = {10.1145/3368089.3409694},\n    pages = {1153--1164},\n    publisher = {ACM Press},\n    title = {{Efficient Binary-Level Coverage Analysis}},\n    year = {2020},\n    month = {nov},\n    day = {6--13}    \n    }\n", "type": "Text_excerpt", "original_header": "Citing"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}], "full_title": [{"result": {"type": "String", "value": ""}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/pdf/2004.14191.pdf\n [link-artifacts]: https://github.com/abenkhadra/bcov-artifacts\n [link-post1]: https://blog.formallyapplied.com/2020/05/function-identification/\n [link-post2]: https://blog.formallyapplied.com/2020/06/bcov-program-graphs/\n [link-dockerfile]: https://github.com/abenkhadra/bcov-artifacts/blob/master/Dockerfile\n [link-llvmdev]: http://lists.llvm.org/pipermail/llvm-dev/2020-June/142821.html\n [link-slide-deck]: https://docs.google.com/presentation/d/1BgcOaw06AcfCzc8PMPkhYANKUkevbxAPFQkbERpXBJ4/edit?usp=sharing\n [link-talk]: https://youtu.be/pns0lJ5FwwA\n [link-teaser]: https://youtu.be/AT29eitsChc\n [link-paper]:  https://doi.org/10.1145/3368089.3409694\n [link-samples]: https://github.com/abenkhadra/bcov-artifacts/tree/master/sample-binaries\n [link-benchmarks]: https://doi.org/10.5281/zenodo.3876047"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/abenkhadra/bcov/master/README.md"}]}