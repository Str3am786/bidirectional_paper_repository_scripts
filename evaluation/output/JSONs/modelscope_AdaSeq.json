{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:26:44"}, "code_repository": [{"result": {"value": "https://github.com/modelscope/AdaSeq", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "modelscope", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2022-12-01T10:00:28Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T04:17:29Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/apache-2.0", "type": "License", "name": "Apache License 2.0", "url": "https://api.github.com/licenses/apache-2.0", "spdx_id": "Apache-2.0"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Copyright 2022-2023 Alibaba ModelScope. All rights reserved.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020-2022 Alibaba ModelScope.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/LICENSE"}, {"result": {"value": "This project is licensed under the Apache License (Version 2.0).\n", "type": "Text_excerpt", "original_header": "\ud83d\udcc4 License", "parent_header": ["AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}], "description": [{"result": {"value": "AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "***AdaSeq*** (**A**libaba **D**amo **A**cademy **Seq**uence Understanding Toolkit) is an easy-to-use all-in-one library, built on [ModelScope](https://modelscope.cn/home), that allows researchers and developers to train custom models for sequence understanding tasks, including part-of-speech tagging (POS Tagging), chunking, named entity recognition (NER), entity typing, relation extraction (RE), etc.\n\n![](./docs/imgs/task_examples_en.png)\n\n<details open>\n<summary>\ud83c\udf1f <b>Features:</b></summary>\n\n- **Plentiful Models**:\n\n  AdaSeq provide plenty of cutting-edge models, training methods and useful toolkits for sequence understanding tasks.\n\n- **State-of-the-Art**:\n\n  Our aim to develop the best implementation, which can beat many off-the-shelf frameworks on performance.\n\n- **Easy-to-Use**:\n\n  One line of command is all you need to obtain the best model.\n\n- **Extensible**:\n\n  It's easy to register a module, or build a customized sequence understanding model by assembling the predefined modules.\n\n</details>\n\n\u26a0\ufe0f**Notice:** This project is under quick development. This means some interfaces could be changed in the future.\n", "type": "Text_excerpt", "original_header": "Introduction", "parent_header": ["AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "- 2022-07: [SemEval 2023] Our U-RaNER paper won [Best Paper Award](https://semeval.github.io/SemEval2023/awards)!\n- 2022-03: [SemEval 2023] Our U-RaNER won ***1st place in 9 tracks*** at [SemEval 2023 Task2](https://multiconer.github.io/results): Multilingual Complex Named Entity Recognition! [Model introduction and source code can be found here](./examples/U-RaNER).\n- 2022-12: [[EMNLP 2022] Retrieval-augmented Multimodal Entity Understanding Model (MoRe)](./examples/MoRe)\n- 2022-11: [[EMNLP 2022] Ultra-Fine Entity Typing Model (NPCRF)](./examples/NPCRF)\n- 2022-11: [[EMNLP 2022] Unsupervised Boundary-Aware Language Model (BABERT)](./examples/babert)\n \n", "original_header": "\ud83d\udce2 What's New"}, "confidence": 0.9063463937761856, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "More tasks, more languages, more domains: All modelcards we released can be found in this page [Modelcards](./docs/modelcards.md).\n \n", "original_header": "\u26a1 Quick Experience"}, "confidence": 0.9256855217109743, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "We collected many datasets for sequence understanding tasks. All can be found in this page [Datasets](./docs/datasets.md).\n \n", "original_header": "\ud83d\udcbe Dataset Zoo"}, "confidence": 0.8808212030317228, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}], "name": [{"result": {"value": "AdaSeq", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "modelscope/AdaSeq", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/modelscope/AdaSeq/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/modelscope/AdaSeq/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 318, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "bert, chinese-nlp, crf, entity-typing, information-extraction, multi-modal-ner, named-entity-recognition, natural-language-processing, natural-language-understanding, ner, nlp, pytorch, relation-extraction, sequence-labeling, token-classification, word-segmentation", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 27, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/modelscope/AdaSeq/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 516119}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Perl", "name": "Perl", "type": "Programming_language", "size": 12743}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 449}, "confidence": 1, "technique": "GitHub_API"}], "code_of_conduct": [{"result": {"value": "# Alibaba Open Source Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at opensource@alibaba-inc.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/CODE_OF_CONDUCT.md"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "contributing_guidelines": [{"result": {"value": "# Contributing to Alibaba Damo Academy Sequence Understanding Toolkit (AdaSeq)\n\nThanks for considering contributing!\n\n(Some contents are borrowed from contributing guidelines of [AllenNLP](https://github.com/allenai/allennlp) and [fairseq](https://github.com/facebookresearch/fairseq). Many thanks!)\n\n# 1 How Can I Contribute?\n\n## 1.1 Bug fixes and new features\n\n**Did you find a bug?**\n\nFirst, do [a quick search](https://github.com/modelscope/AdaSeq/issues) to see whether your issue has already been reported.\nIf so, please comment on the existing issue.\n\nOtherwise, open [a new GitHub issue](https://github.com/modelscope/AdaSeq/issues).\nBe sure to include a clear title and use the issue templates.\nThe description should include as much relevant information as possible.\nThe description should explain how to reproduce the erroneous behavior as well as the behavior you expect to see.\nIdeally you would include a code sample or an executable test case demonstrating the expected behavior.\n\n**Do you have a suggestion for an enhancement?**\n\nWe use GitHub issues to track enhancement requests.  Before you create an enhancement request:\n\n* Make sure you have a clear idea of the enhancement you would like.  If you have a vague idea, consider discussing\nit first on a GitHub issue.\n\n<!-- * Check the documentation to make sure your feature does not already exist. -->\n* Check the code (documentation comming soon) to make sure your feature does not already exist.\n\n* Do [a quick search](https://github.com/modelscope/AdaSeq/issues) to see whether your enhancement has already been suggested.\n\nWhen creating your enhancement request, please:\n\n* Provide a clear title and description.\n\n* Explain why the enhancement would be useful.  It may be helpful to highlight the feature in other libraries.\n\n* Include code examples to demonstrate how the enhancement would be used.\n\n\n## 1.2 New models\n\n**Do you have a new state-of-the-art model?**\n\nWe are always looking for new models to add to our collection. The most popular models are usually added to [AdaSeq/examples](https://github.com/modelscope/AdaSeq/tree/master/examples) dictionary.\n\nIf you think your model should be part of them, please [create a pull request](https://github.com/modelscope/adaseq/pulls) that includes:\n\n* Any code changes needed to support your new model.\n\n* A link to the model itself.  Please do not check your model into the GitHub repository, but instead upload it in the\nPR conversation or provide a link to it at an external location.\n\nIn the description of your PR, please clearly explain the task your model performs along with the relevant metrics on an established dataset.\n\n\n<!-- ## 1.3 Contributor License Agreement (\"CLA\") -->\n\n\n# 2 Making a pull request\n\nWhen you're ready to contribute code to address an open issue, please follow these guidelines to help us be able to review your pull request (PR) quickly.\n\n## 2.1 Initial setup (only do this once)\n\nIf you haven't already done so, please fork this repository on GitHub.\n\nThen clone your fork locally with\n\n    git clone https://github.com/USERNAME/adaseq.git\n\nor\n\n    git clone git@github.com:USERNAME/adaseq.git\n\nPlease replace `USERNAME` with your username. Both uppercased `/AdaSeq.git` and lowercased `/adaseq.git` are fine.\n\nFinally, you'll need to create a Python 3 virtual environment suitable for working on `AdaSeq`. The [`conda`](https://docs.conda.io/en/latest/miniconda.html) and [`venv`](https://docs.python.org/3.7/library/venv.html) are the most common choices.\n\nOnce your virtual environment is activated, you can code now! But please remember keep your fork up-to-date, see following sections.\n\n\n## 2.2 Ensure your fork is up-to-date\n\nKeeping your fork up-to-date is easy, just click the `Sync fork` and then `Update branch` on the github webpage of your fork (`https://github.com/USERNAME/AdaSeq`).\n\nFinally pull these changes to your local clone.\n\n\n## 2.3 Create a new branch to work on your fix, enhancement or model\n\nCommiting directly to the main branch of your fork is not recommended. It will be easier to keep your fork clean if you work on a seperate branch for each contribution you intend to make.\n\nIf your contribution involves additions to any public part of the API, we require that you write docstrings for each function, method, class, or module that you add.\nSee the [Comments and Docstrings of Google Python Style Guide](https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings) section below for details on the syntax.\n\n\n## 2.4 Test your changes\n\nOur continuous integration (CI) are now running on internal platforms.\nBut you can run most of these tests locally, which is something you should do *before* opening a PR to help speed up the review process and make it easier for us.\n\nWe strive to reach high test coverage, so most contributions should include additions to [the unit tests](https://github.com/modelscope/adaseq/tree/main/tests).\n\nFor example, if you've fixed a bug in `adaseq/adata/processors/`, you can run the tests specific to that module with\n\n    PYTHONPATH=. python tests/test_preprocessor.py\n\nYou can also run all tests with\n\n    PYTHONPATH=. python tests/run_tests.py\n\nto check multiple changes.\n\nWe use pre-commit hooks to ensure the code lints.\nThere are pre-commit hooks configured in the repository which you can install.\nAfter installation, they will automatically run each time you commit.\nAn abbreviated guide is given below; for more information, refer to [the offical pre-commit documentation](https://pre-commit.com/).\n\nInstall `pre-commit` by running\n\n    pip install pre-commit\n    pre-commit install\n\nAnd then just commit your changes, If there was a failure, you will get feedback, for example\n\n    trim trailing whitespace.................................................Passed\n    check yaml...............................................................Passed\n    fix end of files.........................................................Passed\n    fix requirements.txt.....................................................Passed\n    fix double quoted strings................................................Failed\n    - hook id: double-quote-string-fixer\n    - exit code: 1\n    - files were modified by this hook\n\n    Fixing strings in setup.py\n\n    check for merge conflicts................................................Passed\n    fix python encoding pragma...............................................Passed\n    mixed line ending........................................................Passed\n    isort....................................................................Passed\n    black....................................................................Failed\n    - hook id: black\n    - files were modified by this hook\n\n    reformatted setup.py\n\n    All done! \u2728 \ud83c\udf70 \u2728\n    1 file reformatted, 86 files left unchanged.\n\n    flake8...................................................................Passed\n\nCertain hooks modify your files to comply. To include these modifications, you will need to add them (i.e. git add ...) and commit again.\n\nIf all is well, you should see something like:\n\n    trim trailing whitespace.................................................Passed\n    check yaml...............................................................Passed\n    fix end of files.........................................................Passed\n    fix requirements.txt.....................................................Passed\n    fix double quoted strings................................................Passed\n    check for merge conflicts................................................Passed\n    fix python encoding pragma...............................................Passed\n    mixed line ending........................................................Passed\n    isort....................................................................Passed\n    black....................................................................Passed\n    flake8...................................................................Passed\n\nYou can also manually run pre-commit\n\n    # check several specific files\n    pre-commit run --files a.py b.py c.yaml\n\n    # check all files\n    pre-commit run --all-files\n\n<!-- And finally, please update the [CHANGELOG](https://github.com/modelscope/adaseq/blob/main/CHANGELOG.md) with notes on your contribution in the \"Unreleased\" section at the top. -->\n\n\n## 2.5 Open a pull request\n\nAfter all of the above checks have passed, you can now open [a new GitHub pull request](https://github.com/modelscope/adaseq/pulls).\nMake sure you have a clear description of the problem and the solution, and include a link to relevant issues.\n\nWe look forward to reviewing your PR!\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/CONTRIBUTING.md"}, {"result": {"value": "All contributions are welcome to improve AdaSeq. Please refer to [CONTRIBUTING.md](./CONTRIBUTING.md) for the contributing guideline.\n", "type": "Text_excerpt", "original_header": "\ud83d\udcdd Contributing", "parent_header": ["AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}], "documentation": [{"result": {"value": "https://github.com/modelscope/AdaSeq/tree/master/docs", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/tests/citest.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/examples/ICASSP2023_MUG_track4/end2end.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "AdaSeq project is based on `Python >= 3.7`, `PyTorch >= 1.8` and `ModelScope >= 1.4`. We assure that AdaSeq can run smoothly when `ModelScope == 1.9.5`.\n\n- installation via pip\uff1a\n```\npip install adaseq\n```\n\n- installation from source\uff1a\n```\ngit clone https://github.com/modelscope/adaseq.git\ncd adaseq\npip install -r requirements.txt -f https://modelscope.oss-cn-beijing.aliyuncs.com/releases/repo.html\n```\n", "type": "Text_excerpt", "original_header": "\ud83d\udce6 Installation", "parent_header": ["AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}, {"result": {"value": "To verify whether AdaSeq is installed properly, we provide a demo config for training a model (the demo config will be automatically downloaded).\n```\nadaseq train -c demo.yaml\n```\nYou will see the training logs on your terminal. Once the training is done, the results on test set will be printed: `test: {\"precision\": xxx, \"recall\": xxx, \"f1\": xxx}`. A folder `experiments/toy_msra/` will be generated to save all experimental results and model checkpoints.\n", "type": "Text_excerpt", "original_header": "Verify the Installation", "parent_header": ["AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models", "\ud83d\udce6 Installation"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}], "usage": [{"result": {"value": "- [Quick Start](./docs/tutorials/quick_start.md)\n- Basics\n  - [Learning about Configs](./docs/tutorials/learning_about_configs.md)\n  - [Customizing Dataset](./docs/tutorials/customizing_dataset.md)\n  - [TODO] Common Architectures\n  - [TODO] Useful Hooks\n  - [Hyperparameter Optimization](./docs/tutorials/hyperparameter_optimization.md)\n  - [Training with Multiple GPUs](./docs/tutorials/training_with_multiple_gpus.md)\n- Best Practice\n  - [Training a Model with Custom Dataset](./docs/tutorials/training_a_model.md)\n  - [Reproducing Results in Published Papers](./docs/tutorials/reproducing_papers.md)\n  - [TODO] Uploading Saved Model to ModelScope\n  - [TODO] Customizing your Model\n  - [TODO] Serving with AdaLA\n", "type": "Text_excerpt", "original_header": "\ud83d\udcd6 Tutorials", "parent_header": ["AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "AdaSeq: An All-in-One Library for Developing State-of-the-Art Sequence Understanding Models"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}], "image": [{"result": {"type": "Url", "value": "https://static.pepy.tech/personalized-badge/adaseq?period=total&left_color=grey&right_color=yellowgreen&left_text=downloads"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}, {"result": {"type": "Url", "value": "http://raw.githubusercontent.com/modelscope/AdaSeq/master/./docs/imgs/task_examples_en.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/modelscope/AdaSeq/master/README.md"}]}