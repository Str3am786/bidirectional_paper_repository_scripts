{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:17:44"}, "code_repository": [{"result": {"value": "https://github.com/ZurichNLP/segtest", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "ZurichNLP", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2021-09-02T11:19:13Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T04:05:47Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MIT License\n\nCopyright (c) 2021 Chantal Amrhein\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/LICENSE"}], "description": [{"result": {"value": "A Test Suite for Morphological Phenomena in Neural Machine Translation", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "Data-driven subword segmentation has become the default strategy for open-vocabulary machine translation and other NLP tasks, but may not be sufficiently generic for optimal learning of non-concatenative morphology.\u00a0In this repository, we make our test suite covering different types of morphological phenomena available. It can be used to evaluate new segmentation strategies or sequence-to-sequence architectures in a controlled, semi-synthetic setting.\n \n", "original_header": "Motivation"}, "confidence": 0.984347940665613, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Our models were trained with [nematus](https://github.com/EdinburghNLP/nematus), the preprocessing for BPE models is done with [SentencePiece](https://github.com/google/sentencepiece) and we use [sacrebleu](https://github.com/mjpost/sacrebleu) to monitor translation quality throughout the training. Please follow the installation instructions in these repositories to install the necesary toolkits.   \nBefore training the models you need to export the relative paths to the nematus repository and to this repository: \n`bpe-32k` is the BPE model with 32k merges without BPE-dropout. `bpe-d32k` is the BPE model with 32k merges with BPE-dropout. `bpe-d500` is the BPE model with 500 merges and BPE-dropout which we used as a parent model to finetune the character-based model `char`. If you want to follow our setup to train `char`, you first have to train `bpe-d500` (for at least 400k updates). \n", "original_header": "Training Your Models"}, "confidence": 0.9241036235384862, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "If you did not train models yourself but simply want to reproduce the evaluation of the model outputs in our [paper](https://aclanthology.org/2021.findings-emnlp.60/), you can also do this. We provide the test set translations of our models in the `paper_results` folder. The main results in the paper (Table 4)\u00a0can be reproduced as follows: \nwhere `$model` is either `bpe-32k`, `bpe-d32k`, `bpe-d500` or `char` and `$type` is either `compound`, `circumfix`, `infix`, `vowelharmony` or `reduplication`. For example, if you want to evaluate how well the BPE model with 32k merges without BPE-dropout can translate reduplication, call the script like this: \nThe ids correspond to the ids used in the [paper](https://aclanthology.org/2021.findings-emnlp.60/). See Table 5 in the Appendix for an overview of which id corresponds to which pattern. \nTo evaluate based on the frequency with which a source word base is seen with the specific morphological phenomena in the training data (used for Figure 2), use the `--evaluate_by_freq_buckets` option: \n", "original_header": "Evaluating Your Models"}, "confidence": 0.9319099768940323, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}], "name": [{"result": {"value": "segtest", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "ZurichNLP/segtest", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/ZurichNLP/segtest/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/ZurichNLP/segtest/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 7, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 1, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/ZurichNLP/segtest/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 22417}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 16571}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/evaluate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/scripts/validate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/scripts/train.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/scripts/init_from_bpe-d500.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/scripts/translate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/scripts/preprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/char/scripts/postprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/evaluate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/scripts/apply_bpedropout_during_training.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/scripts/validate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/scripts/train.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/scripts/translate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/scripts/preprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d32k/scripts/postprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/evaluate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/scripts/apply_bpedropout_during_training.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/scripts/validate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/scripts/train.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/scripts/translate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/scripts/preprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-d500/scripts/postprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-32k/evaluate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-32k/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-32k/scripts/validate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-32k/scripts/train.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-32k/scripts/translate.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-32k/scripts/preprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/models/bpe-32k/scripts/postprocess.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "You can find our synthetic training data as well as the test sets for the morphological phenomena in the `test_suite_data` folder. In order to train an NMT model on this data, we recommend adding a larger corpus of real translations to the training data and using a real-data dev set.\n\nIf you want to reproduce our experiments from the [paper](https://aclanthology.org/2021.findings-emnlp.60/), you should add the training data from the WMT16 news translation task and use the test sets from WMT15 as the development data. You can download the data on the [official WMT website](http://www.statmt.org/wmt16/translation-task.html).\n\nDecompress the synthetic data and concatenate the files with your own training data files:\n\n    gunzip test_suite_data/train_synthetic.*\n\n    cat test_suite_data/train_synthetic.src your_training_data.de > test_suite_data/train.src\n    cat test_suite_data/train_synthetic.trg your_training_data.en > test_suite_data/train.trg\n\n    mv your_dev_data.de test_suite_data/dev.src\n    mv your_dev_data.en test_suite_data/dev.trg\n    cp test_suite_data/dev.trg test_suite_data/dev.ref\n\n", "type": "Text_excerpt", "original_header": "Preparing the Data", "parent_header": ["segtest"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "    bash models/bpe-d32k/run.sh \n", "original_header": "Training Your Models"}, "confidence": 0.9623300317083144, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "    bash models/bpe-d32k/evaluate.sh \n", "original_header": "Evaluating Your Models"}, "confidence": 0.8231600462336292, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}], "citation": [{"result": {"value": "If you use this test suite, please cite our [paper](https://aclanthology.org/2021.findings-emnlp.60/):\n\n    @inproceedings{amrhein-sennrich-2021-suitable-subword,\n    title = \"How Suitable Are Subword Segmentation Strategies for Translating Non-Concatenative Morphology?\",\n    author = \"Amrhein, Chantal  and\n      Sennrich, Rico\",\n    booktitle = \"Findings of the Association for Computational Linguistics: EMNLP 2021\",\n    month = nov,\n    year = \"2021\",\n    address = \"Punta Cana, Dominican Republic\",\n    publisher = \"Association for Computational Linguistics\",\n    url = \"https://aclanthology.org/2021.findings-emnlp.60\",\n    doi = \"10.18653/v1/2021.findings-emnlp.60\",\n    pages = \"689--705\"\n    }\n", "type": "Text_excerpt", "original_header": "Citation"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}], "application_domain": [{"result": {"type": "String", "value": "Natural Language Processing"}, "confidence": 0.8353296071719667, "technique": "supervised_classification"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "    bash models/bpe-d32k/run.sh \n", "original_header": "Training Your Models"}, "confidence": 0.8014290823609775, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "    python scripts/evaluate.py -t paper_results/$model/$type.postprocessed -i test_suite_data/$type.meta -s test_suite_data/$type.scores -m $type -r surface \n", "original_header": "Evaluating Your Models"}, "confidence": 0.8350399182394256, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "segtest"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ZurichNLP/segtest/master/README.md"}]}