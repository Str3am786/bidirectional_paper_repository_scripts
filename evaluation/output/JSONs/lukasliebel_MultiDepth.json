{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:57:41"}, "code_repository": [{"result": {"value": "https://github.com/lukasliebel/MultiDepth", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "lukasliebel", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2019-04-15T13:12:55Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T03:40:33Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MIT License\n\nCopyright (c) 2019 Lukas Liebel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/LICENSE"}], "description": [{"result": {"value": "MultiDepth: Single-Image Depth Estimation via Multi-Task Regression and Classification", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "Source code for MultiDepth, our single-image depth estimation method based on joint regression and classification in a multi-task setup.\nThis work was presented at the IEEE Intelligent Transportation Systems Conference (ITSC) 2019. \nCheck out the [KITTI leaderboard](http://www.cvlibs.net/datasets/kitti/eval_depth.php?benchmark=depth_prediction) for exemplary results I got using this concept. \n> I'm confident that you should be able to achieve better results with more training and some minor tweaks. \nThis implementation is heavily based on [pytorch-semseg](https://github.com/meetshah1995/pytorch-semseg), a brilliant project maintained by Meet Pragnesh Shah (released under [MIT license](https://github.com/meetshah1995/pytorch-semseg/blob/master/LICENSE)).\nPlease check out and contribute to their project and feel free to ignore certain parts in my code that are just unused parts of the *ptsemseg* codebase. \n", "original_header": "MultiDepth"}, "confidence": 0.9312202887241083, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "I originally wrote this code for a different project.\nWhile most of the unnecessary (and some of the confusing) pieces have already been removed, it might still contain some cryptic lines.\nJust ignore them and you should be fine ;) \n", "original_header": "A Word of Warning"}, "confidence": 0.9284104951264084, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "2. Adjust the mount parameters of your container in the provided [script](docker/start_container.sh), such that the directories containing your training data are mounted to `/root/data/kitti/rgb` and `/root/data/kitti/depth`.\n>Feel free to change this if you want to use a different dir tree.\nKeep in mind that it will be necessary to adjust the paths in other places accordingly. \n  You can also mount an external directory to `/root/logs` in order to save tensorboard logs and checkpoints outside of the container. \n5. To stop the container simply disconnect from the container (e.g., by pressing [Ctrl] + [D]) and kill it: `docker kill multidepth`. \n", "original_header": "Docker Container"}, "confidence": 0.8637569701376518, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Make sure to mount the correct data dir and map a different port if necessary (6006 is Tensorboard's standard port).\nThis will allow you to access the web interface of Tensorboard running on a server from your local machine. \n> This works for me in certain settings but your mileage will vary depending on your network configuration! \nStart tensorboard: `tensorboard --logdir /root/logs` and navigate to [your server's ip/localhost]:6006 to access the web-interface in your favorite web browser. \n", "original_header": "Visualize Training Progress"}, "confidence": 0.8435490160775018, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}], "name": [{"result": {"value": "MultiDepth", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "lukasliebel/MultiDepth", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/lukasliebel/MultiDepth/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/lukasliebel/MultiDepth/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 26, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 6, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/lukasliebel/MultiDepth/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 204449}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Dockerfile", "name": "Dockerfile", "type": "Programming_language", "size": 793}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 375}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/docker/start_container.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/docker/build_image.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/docker/connect_to_container.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/docker/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/docker/Dockerfile"}], "installation": [{"result": {"value": "You can adjust training behavior and numerous other options using a [YAML configuration file](configs/example_config.yml).\nMost of the parameters in the example script should be self-explanatory and they are already set to useful values.\n\n> I might add a more detailed explanation in the future.\nUntil then, feel free to message me if you have trouble with understanding their effect and I will update this section accordingly.\n\n", "type": "Text_excerpt", "original_header": "Set Training Parameters", "parent_header": ["MultiDepth", "Step-by-step Instructions"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "3. Start your container by running the [script](docker/start_container.sh): `./start_container.sh` \n", "original_header": "Docker Container"}, "confidence": 0.8749565623083313, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}], "run": [{"result": {"value": "Run the [main training script](train.py) which expects a single parameter `--config` specifying the path to a configuration file, e.g.: `python train.py --config configs/example_config`.\n\n> Note that it might take a while for the actual training process to start depending on the size of your dataset.\n\n", "type": "Text_excerpt", "original_header": "Run Training", "parent_header": ["MultiDepth", "Step-by-step Instructions"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}], "requirements": [{"result": {"value": "Even though a CUDA-capable GPU is not strictly required to run this training script, it is highly recommended for obvious reasons.\nAdjust the batch size if you run out of memory.\nSuccessfully tested on 1080 and 1080Ti GPUs.\n**Multi-GPU training with batch-splitting will be used if you provide multiple GPUs!**\n\n", "type": "Text_excerpt", "original_header": "Hardware Requirements", "parent_header": ["MultiDepth"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}], "contributing_guidelines": [{"result": {"value": "If you encounter any errors or unexpected behavior feel free to message me.\nYou are also welcome to file pull requests if you want to help to improve or fix any part of this.\n\n**Thank you!**\n", "type": "Text_excerpt", "original_header": "Contribute", "parent_header": ["MultiDepth"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "3. Start your container by running the [script](docker/start_container.sh): `./start_container.sh` \n", "original_header": "Docker Container"}, "confidence": 0.8047773519408897, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The training script will write Tensorboard logs to the directory specified in the [config file](configs/example_config.yml).\nDisplay the results by starting Tensorboard and directing it to the respective log dir. \n", "original_header": "Visualize Training Progress"}, "confidence": 0.8591877259742452, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "MultiDepth"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}], "related_papers": [{"result": {"type": "Url", "value": "https://arxiv.org/abs/1907.11111"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/lukasliebel/MultiDepth/master/README.md"}]}