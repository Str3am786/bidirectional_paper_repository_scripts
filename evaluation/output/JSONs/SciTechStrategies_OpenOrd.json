{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:00:23"}, "code_repository": [{"result": {"value": "https://github.com/SciTechStrategies/OpenOrd", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "SciTechStrategies", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2015-03-24T12:46:50Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-06-19T16:03:59Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": null, "type": "License", "name": "Other", "url": null, "spdx_id": "NOASSERTION"}, "confidence": 1, "technique": "GitHub_API"}], "description": [{"result": {"value": "OpenOrd: An Open-Source Toolbox for Large Graph Layout", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "The code is based on the following ideas, so any modifications might \nadhere to the below \"standards:\" \n", "original_header": "Modifications"}, "confidence": 0.9548564967174354, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}, {"result": {"type": "Text_excerpt", "value": "Below is how the recursive code communicates via the files with different\nextensions. \nThe initial graph is given by root_name.sim, which is a sparse adjacency\nmatrix in the format \nwhere id1 and id2 are strings and weight is a float.  id1 and id2 should\nnot be the same. \ntruncate: takes root_name.sim and creates root_name.int, root_name.ind,\n        and root_name.full. \nsingle_link: takes root_name.full root_name.icoord and root_name.iedges\n        and creates root_name.clust \ncoarsen: takes root_name_(l-1).full and root_name_(l-1).clust (_(l-1) is\n        automatically created by coarsen) and creates root_name_l.full\n        and root_name_l.int \nrefine: takes root_name_l.icoord and root_name_(l-1).clust and creates\n        root_name_(l-1).real \n", "original_header": "How the Codes Communicate"}, "confidence": 0.9046360382015306, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}], "name": [{"result": {"value": "OpenOrd", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "SciTechStrategies/OpenOrd", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/SciTechStrategies/OpenOrd/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/SciTechStrategies/OpenOrd/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 17, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 6, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/SciTechStrategies/OpenOrd/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "C++", "name": "C++", "type": "Programming_language", "size": 148379}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 9756}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "JavaScript", "name": "JavaScript", "type": "Programming_language", "size": 3859}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Gnuplot", "name": "Gnuplot", "type": "Programming_language", "size": 1283}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 1283}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/examples/clean_project.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/examples/recursive_layout.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "citation": [{"result": {"value": "If you use this code in your research, please cite the following \narticle:\n\nS. Martin, W. M. Brown, R. Klavans, K. Boyack (2011) \"OpenOrd: An Open-Source\nToolbox for Large Graph Layout,\" Visualization and Data Analysis (VDA):7868-06.\n \n", "type": "Text_excerpt", "original_header": "Citation"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}], "installation": [{"result": {"value": "First, copy the correct compiler information in the src directory \nto the file Configuration.mk.  Examples are included in the src\ndirectory:\n\nConfiguration.gnu  # Default GNU (not parallel)\nConfiguration.gnu_parallel # GNU with LAM/MPI\nConfiguration.intel # Highly optimized serial intel\n\nFor example to compile using parallel GNU:\n\ncd src\ncp Configuration.gnu_parallel Configuration.mk\nmake\nls ../bin\n", "type": "Text_excerpt", "original_header": "To Install for Linux/Unix/Mac"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}, {"result": {"value": "You need to have gcc and bash.  I have used MSYS and MinGW successfully\nfor that purpose in the past.  If you want to do this, go ahead and\ninstall MSYS and MinGW to the directories MSYS/1.0 and MinGW/MinGW.\nThen compile the codes from the src directory by typing\n\n> copy Configuration.win Configuration.mk\n> path ..\\MSYS\\1.0\\bin;..\\MinGW\\MinGW\\bin\n> make\n\nNOTE: If you do not want to set the path variables each time then you \ncan specify the path permanently using Windows.  Also, you can install \nMSYS to your computer permanently.\n", "type": "Text_excerpt", "original_header": "To Install for Windows"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}, {"result": {"value": "1.  The coarsen program throws out unconnected components of the graph, \n    keeping only the largest \"giant\" component.\n\n2.  Edge-cutting can be used in the parallel version of layout, but cut \n    edges are not communicated to the different processors.  This could\n    potentially cause problems but really hasn't so far.\n", "type": "Text_excerpt", "original_header": "Bugs and Future Fixes"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}], "documentation": [{"result": {"value": "Important NOTE: all programs in the OpenOrd library have documentation \navailable, including descriptions of input and output formats, by typing \nthe name of the program with no input.  For example, in the bin \ndirectory you can type \n\n  > layout\n\nto get a full description of the inputs to the force directed layout \nprogram.\n", "type": "Text_excerpt", "original_header": "Documentation -- Important Note"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}, {"result": {"type": "Url", "value": "https://github.com/SciTechStrategies/OpenOrd/wiki", "format": "wiki"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}], "usage": [{"result": {"value": "Examples can be found in the examples directory.  If you are using \nwindows you must specify the MSYS directory, as described in the \nreadme.txt file in the examples directory.  \n", "type": "Text_excerpt", "original_header": "Examples"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}], "full_title": [{"result": {"type": "String", "value": ""}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/SciTechStrategies/OpenOrd/master/readme.txt"}]}