{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:16:01"}, "code_repository": [{"result": {"value": "https://github.com/ahmedfgad/GARI", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "ahmedfgad", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2018-03-04T17:20:32Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-11-04T13:07:07Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MIT License\n\nCopyright (c) 2020 Ahmed Fawzy Mohamed Gad\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/LICENSE"}], "description": [{"result": {"value": "GARI (Genetic Algorithm for Reproducing Images) reproduces a single image using Genetic Algorithm (GA) by evolving pixel values.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "GARI (Genetic Algorithm for Reproducing Images) is a Python project that uses the PyGAD library for reproducing images using the genetic algorithm. GARI reproduces a single image using Genetic Algorithm (GA) by evolving pixel values. This project works with both color and gray images. \n", "original_header": "GARI"}, "confidence": 0.9161021092915047, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The steps to follow in order to reproduce an image are as follows: \n", "original_header": "Project Steps"}, "confidence": 0.9185733697619641, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The next sections discusses the code of each of these steps. \n", "original_header": "Generation 0"}, "confidence": 0.940769158001215, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Based on the chromosome representation used in the example, the pixel values can be either in the 0-255, 0-1, or any other ranges.  \n", "original_header": "Read an Image"}, "confidence": 0.8737176589747754, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Note that the range of pixel values affect other parameters like the range from which the random values are selected during mutation and also the range of the values used in the initial population. So, be consistent. \n", "original_header": "Generation 0"}, "confidence": 0.9224983838458019, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The solution reached after the 20,000 generations is shown below. \nThe results can also be enhanced by changing the parameters passed to the constructor of the `pygad.GA` class. \nHere is an example of input image and how it is evolved after some iterations. \n# For More Information \n", "original_header": "Evolution by Generation"}, "confidence": 0.891666386033861, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "There are different resources that can be used to get started with the building CNN and its Python implementation. \n \n", "original_header": "For More Information"}, "confidence": 0.9731124286376982, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "In 1 May 2019, I wrote a tutorial discussing this project. The tutorial is titled [**Reproducing Images using a Genetic Algorithm with Python**](https://www.linkedin.com/pulse/reproducing-images-using-genetic-algorithm-python-ahmed-gad) which is published at Heartbeat. Check it at these links: \nYou can also check my book cited as [**Ahmed Fawzy Gad 'Practical Computer Vision Applications Using Deep Learning with CNNs'. Dec. 2018, Apress, 978-1-4842-4167-7**](https://www.amazon.com/Practical-Computer-Vision-Applications-Learning/dp/1484241665) which discusses neural networks, convolutional neural networks, deep learning, genetic algorithm, and more. \n", "original_header": "Evolution by Generation"}, "confidence": 0.9429325599651076, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "# GARI\nGARI (Genetic Algorithm for Reproducing Images) is a Python project that uses the PyGAD library for reproducing images using the genetic algorithm. GARI reproduces a single image using Genetic Algorithm (GA) by evolving pixel values. This project works with both color and gray images. \nPyGAD is developed in Python 3.7.3 and depends on NumPy for creating and manipulating arrays and Matplotlib for creating figures. The exact NumPy version used in developing PyGAD is 1.16.4. For Matplotlib, the version is 3.1.0. \n# Project Steps \n", "original_header": "Generation 0"}, "confidence": 0.8961257855297227, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "The fitness value is calculated using the sum of absolute difference between genes values in the original and reproduced chromosomes. The `gari.img2chromosome()` function is called before the fitness function to represent the image as a vector because the genetic algorithm can work with 1D chromosomes.  \n", "original_header": "Prepare the Fitness Function"}, "confidence": 0.9825931553933244, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "## Create an Instance of the `pygad.GA` Class \n", "original_header": "Generation 0"}, "confidence": 0.835221333373388, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "It is very important to use random mutation and set the `mutation_by_replacement` to `True`. Based on the range of pixel values, the values assigned to the `init_range_low`, `init_range_high`, `random_mutation_min_val`, and `random_mutation_max_val` parameters should be changed. \nIf the image pixel values range from 0 to 255, then set `init_range_low` and `random_mutation_min_val` to 0 as they are but change `init_range_high` and `random_mutation_max_val` to 255. \nFeel free to change the other parameters or add other parameters. Please check the [PyGAD's documentation](https://pygad.readthedocs.io) for the full list of parameters. \n```python\nimport pygad\n\nga_instance = pygad.GA(num_generations=20000,\n                       num_parents_mating=10,\n                       fitness_func=fitness_fun,\n                       sol_per_pop=20,\n                       num_genes=target_im.size,\n                       init_range_low=0.0,\n                       init_range_high=1.0,\n                       mutation_percent_genes=0.01,\n                       mutation_type=\"random\",\n                       mutation_by_replacement=True,\n                       random_mutation_min_val=0.0,\n                       random_mutation_max_val=1.0)\n```\n \n", "original_header": "Create an Instance of the `pygad.GA` Class"}, "confidence": 0.8718578157716438, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "name": [{"result": {"value": "GARI", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "ahmedfgad/GARI", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/ahmedfgad/GARI/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/ahmedfgad/GARI/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 48, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "evolutionary-algorithms, genetic-algorithm, genetic-analysis, image-analysis, image-manipulation, image-processing, image-reproduction, optimization-algorithms, python, python3", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 29, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/ahmedfgad/GARI/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 17976}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "To install [PyGAD](https://pypi.org/project/pygad), simply use pip to download and install the library from [PyPI](https://pypi.org/project/pygad) (Python Package Index). The library lives a PyPI at this page https://pypi.org/project/pygad.\n\nFor Windows, issue the following command:\n\n```python\npip install pygad\n```\n\nFor Linux and Mac, replace `pip` by use `pip3` because the library only supports Python 3.\n\n```python\npip3 install pygad\n```\n\nPyGAD is developed in Python 3.7.3 and depends on NumPy for creating and manipulating arrays and Matplotlib for creating figures. The exact NumPy version used in developing PyGAD is 1.16.4. For Matplotlib, the version is 3.1.0.\n", "type": "Text_excerpt", "original_header": "PyGAD Installation"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"value": "The next code creates a function that will be used as a fitness function for calculating the fitness value for each solution in the population. This function must be a maximization function that accepts 2 parameters representing a solution and its index. It returns a value representing the fitness value.\n\nThe fitness value is calculated using the sum of absolute difference between genes values in the original and reproduced chromosomes. The `gari.img2chromosome()` function is called before the fitness function to represent the image as a vector because the genetic algorithm can work with 1D chromosomes. \n\nFor more information about preparing the fitness function in PyGAD, please read the [PyGAD's documentation](https://pygad.readthedocs.io).\n\n```python\ntarget_chromosome = gari.img2chromosome(target_im)\n\ndef fitness_fun(solution, solution_idx):\n    fitness = numpy.sum(numpy.abs(target_chromosome-solution))\n\n    # Negating the fitness value to make it increasing rather than decreasing.\n    fitness = numpy.sum(target_chromosome) - fitness\n    return fitness\n```\n", "type": "Text_excerpt", "original_header": "Prepare the Fitness Function", "parent_header": ["Project Steps"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "**IMPORTANT** *If you are coming for the code of the tutorial [Reproducing Images using a Genetic Algorithm with Python](https://heartbeat.fritz.ai/reproducing-images-using-a-genetic-algorithm-with-python-91fc701ff84), then it has been moved to the [TutorialProject](https://github.com/ahmedfgad/GARI/tree/master/TutorialProject) directory on 18 May 2020.* \n# PyGAD Installation \n", "original_header": "Generation 0"}, "confidence": 0.9027703781750809, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "To install [PyGAD](https://pypi.org/project/pygad), simply use pip to download and install the library from [PyPI](https://pypi.org/project/pygad) (Python Package Index). The library lives a PyPI at this page https://pypi.org/project/pygad. \nFor Windows, issue the following command:\n```python\npip install pygad\n```\nFor Linux and Mac, replace `pip` by use `pip3` because the library only supports Python 3.\n```python\npip3 install pygad\n```\n \n", "original_header": "PyGAD Installation"}, "confidence": 0.9855764282966096, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "usage": [{"result": {"value": "It is very important to use random mutation and set the `mutation_by_replacement` to `True`. Based on the range of pixel values, the values assigned to the `init_range_low`, `init_range_high`, `random_mutation_min_val`, and `random_mutation_max_val` parameters should be changed.\n\nIf the image pixel values range from 0 to 255, then set `init_range_low` and `random_mutation_min_val` to 0 as they are but change `init_range_high` and `random_mutation_max_val` to 255.\n\nFeel free to change the other parameters or add other parameters. Please check the [PyGAD's documentation](https://pygad.readthedocs.io) for the full list of parameters. \n\n```python\nimport pygad\n\nga_instance = pygad.GA(num_generations=20000,\n                       num_parents_mating=10,\n                       fitness_func=fitness_fun,\n                       sol_per_pop=20,\n                       num_genes=target_im.size,\n                       init_range_low=0.0,\n                       init_range_high=1.0,\n                       mutation_percent_genes=0.01,\n                       mutation_type=\"random\",\n                       mutation_by_replacement=True,\n                       random_mutation_min_val=0.0,\n                       random_mutation_max_val=1.0)\n```\n", "type": "Text_excerpt", "original_header": "Create an Instance of the `pygad.GA` Class", "parent_header": ["Project Steps"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"value": "In 1 May 2019, I wrote a tutorial discussing this project. The tutorial is titled [**Reproducing Images using a Genetic Algorithm with Python**](https://www.linkedin.com/pulse/reproducing-images-using-genetic-algorithm-python-ahmed-gad) which is published at Heartbeat. Check it at these links:\n\n- [Heartbeat](https://heartbeat.fritz.ai/reproducing-images-using-a-genetic-algorithm-with-python-91fc701ff84): https://heartbeat.fritz.ai/reproducing-images-using-a-genetic-algorithm-with-python-91fc701ff84\n- [LinkedIn](https://www.linkedin.com/pulse/reproducing-images-using-genetic-algorithm-python-ahmed-gad): https://www.linkedin.com/pulse/reproducing-images-using-genetic-algorithm-python-ahmed-gad\n\n[![Tutorial Cover Image](https://miro.medium.com/max/2560/1*47K2h_Zz6SQVMHW2NL-WsQ.jpeg)](https://heartbeat.fritz.ai/reproducing-images-using-a-genetic-algorithm-with-python-91fc701ff84)\n", "type": "Text_excerpt", "original_header": "Tutorial: Reproduce Images with Genetic Algorithm", "parent_header": ["For More Information"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "run": [{"result": {"value": "Simply, call the `run()` method to run PyGAD.\n\n```python\nga_instance.run()\n```\n", "type": "Text_excerpt", "original_header": "Run PyGAD", "parent_header": ["Project Steps"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "citation": [{"result": {"value": "If you used PyGAD, please consider adding a citation to the following paper about PyGAD:\n\n```\n@misc{gad2021pygad,\n      title={PyGAD: An Intuitive Genetic Algorithm Python Library}, \n      author={Ahmed Fawzy Gad},\n      year={2021},\n      eprint={2106.06158},\n      archivePrefix={arXiv},\n      primaryClass={cs.NE}\n}\n```\n", "type": "Text_excerpt", "original_header": "Citing PyGAD - Bibtex Formatted Citation"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"value": "@misc{gad2021pygad,\n      title={PyGAD: An Intuitive Genetic Algorithm Python Library}, \n      author={Ahmed Fawzy Gad},\n      year={2021},\n      eprint={2106.06158},\n      archivePrefix={arXiv},\n      primaryClass={cs.NE}\n}", "type": "Text_excerpt", "format": "bibtex"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "contact": [{"result": {"value": "* E-mail: ahmed.f.gad@gmail.com\n* [LinkedIn](https://www.linkedin.com/in/ahmedfgad)\n* [Amazon Author Page](https://amazon.com/author/ahmedgad)\n* [Heartbeat](https://heartbeat.fritz.ai/@ahmedfgad)\n* [Paperspace](https://blog.paperspace.com/author/ahmed)\n* [KDnuggets](https://kdnuggets.com/author/ahmed-gad)\n* [TowardsDataScience](https://towardsdatascience.com/@ahmedfgad)\n* [GitHub](https://github.com/ahmedfgad)\n", "type": "Text_excerpt", "original_header": "Contact Us"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "application_domain": [{"result": {"type": "String", "value": "Computer Vision"}, "confidence": 0.8454071148895423, "technique": "supervised_classification"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "- Read an image\n- Prepare the fitness function\n- Create an instance of the pygad.GA class with the appropriate parameters\n- Run PyGAD\n- Plot results\n- Calculate some statistics \n", "original_header": "Project Steps"}, "confidence": 0.8209325252355256, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "There is an image named `fruit.jpg` in the project which is read according to the next code.\n```python\nimport imageio\nimport numpy\n\ntarget_im = imageio.imread('fruit.jpg')\ntarget_im = numpy.asarray(target_im/255, dtype=numpy.float)\n```\n \n", "original_header": "Read an Image"}, "confidence": 0.9064862512399444, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "Feel free to change the other parameters or add other parameters. Please check the [PyGAD's documentation](https://pygad.readthedocs.io) for the full list of parameters. \n```python\nimport pygad\n\nga_instance = pygad.GA(num_generations=20000,\n                       num_parents_mating=10,\n                       fitness_func=fitness_fun,\n                       sol_per_pop=20,\n                       num_genes=target_im.size,\n                       init_range_low=0.0,\n                       init_range_high=1.0,\n                       mutation_percent_genes=0.01,\n                       mutation_type=\"random\",\n                       mutation_by_replacement=True,\n                       random_mutation_min_val=0.0,\n                       random_mutation_max_val=1.0)\n```\n \n", "original_header": "Create an Instance of the `pygad.GA` Class"}, "confidence": 0.8217262051671078, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "## Run PyGAD \n## Plot Results \n", "original_header": "Generation 0"}, "confidence": 0.8382581751013065, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "GARI"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}], "image": [{"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/36948808-f0ac882e-1fe8-11e8-8d07-1307e3477fd0.jpg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/82232124-77762c00-992e-11ea-9fc6-14a1cd7a04ff.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/82232405-e0f63a80-992e-11ea-984f-b6ed76465bd1.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/82232345-cf149780-992e-11ea-8390-bf1a57a19de7.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/36948589-b47276f0-1fe5-11e8-8efe-0cd1a225ea3a.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/36948823-16f490ee-1fe9-11e8-97db-3e8905ad5440.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/36948832-3f314b60-1fe9-11e8-8f4a-4d9a53b99f3d.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/36948837-53d1849a-1fe9-11e8-9b36-e9e9291e347b.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/36948852-66f1b176-1fe9-11e8-9f9b-460804e94004.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/36948865-7fbb5158-1fe9-11e8-8c04-8ac3c1f7b1b1.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/82232405-e0f63a80-992e-11ea-984f-b6ed76465bd1.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://miro.medium.com/max/2560/1*47K2h_Zz6SQVMHW2NL-WsQ.jpeg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}, {"result": {"type": "Url", "value": "https://user-images.githubusercontent.com/16560492/78830077-ae7c2800-79e7-11ea-980b-53b6bd879eeb.jpg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/ahmedfgad/GARI/master/README.md"}]}