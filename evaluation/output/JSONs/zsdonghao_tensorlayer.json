{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:45:02"}, "code_repository": [{"result": {"value": "https://github.com/tensorlayer/TensorLayer", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "tensorlayer", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2016-06-07T15:55:16Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-21T12:41:13Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": null, "type": "License", "name": "Other", "url": null, "spdx_id": "NOASSERTION"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "TensorLayer is released under the Apache 2.0 license.\n\n\n.. |TENSORLAYER-LOGO| image:: https://raw.githubusercontent.com/tensorlayer/tensorlayer/master/img/tl_transparent_logo.png\n   :target: https://tensorlayer.readthedocs.io/\n.. |JOIN-SLACK-LOGO| image:: https://raw.githubusercontent.com/tensorlayer/tensorlayer/master/img/join_slack.png\n   :target: https://join.slack.com/t/tensorlayer/shared_invite/enQtMjUyMjczMzU2Njg4LWI0MWU0MDFkOWY2YjQ4YjVhMzI5M2VlZmE4YTNhNGY1NjZhMzUwMmQ2MTc0YWRjMjQzMjdjMTg2MWQ2ZWJhYzc\n\n.. |Awesome| image:: https://awesome.re/mentioned-badge.svg\n   :target: https://github.com/tensorlayer/awesome-tensorlayer\n.. |Documentation-EN| image:: https://img.shields.io/badge/documentation-english-blue.svg\n   :target: https://tensorlayer.readthedocs.io/\n.. |Documentation-CN| image:: https://img.shields.io/badge/documentation-%E4%B8%AD%E6%96%87-blue.svg\n   :target: https://tensorlayercn.readthedocs.io/\n.. |Book-CN| image:: https://img.shields.io/badge/book-%E4%B8%AD%E6%96%87-blue.svg\n   :target: http://www.broadview.com.cn/book/5059/\n.. |Downloads| image:: http://pepy.tech/badge/tensorlayer\n   :target: http://pepy.tech/project/tensorlayer\n\n\n.. |PyPI| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/github/release/tensorlayer/tensorlayer.svg?label=PyPI%20-%20Release\n   :target: https://pypi.org/project/tensorlayer/\n.. |PyPI-Prerelease| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/github/release/tensorlayer/tensorlayer/all.svg?label=PyPI%20-%20Pre-Release\n   :target: https://pypi.org/project/tensorlayer/\n.. |Commits-Since| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/github/commits-since/tensorlayer/tensorlayer/latest.svg\n   :target: https://github.com/tensorlayer/tensorlayer/compare/1.10.1...master\n.. |Python| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/pypi/pyversions/tensorlayer.svg\n   :target: https://pypi.org/project/tensorlayer/\n.. |TensorFlow| image:: https://img.shields.io/badge/tensorflow-1.6.0+-blue.svg\n   :target: https://github.com/tensorflow/tensorflow/releases\n\n.. |Travis| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/travis/tensorlayer/tensorlayer/master.svg?label=Travis\n   :target: https://travis-ci.org/tensorlayer/tensorlayer\n.. |Docker| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/circleci/project/github/tensorlayer/tensorlayer/master.svg?label=Docker%20Build\n   :target: https://circleci.com/gh/tensorlayer/tensorlayer/tree/master\n.. |RTD-EN| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/readthedocs/tensorlayer/latest.svg?label=ReadTheDocs-EN\n   :target: https://tensorlayer.readthedocs.io/\n.. |RTD-CN| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/readthedocs/tensorlayercn/latest.svg?label=ReadTheDocs-CN\n   :target: https://tensorlayercn.readthedocs.io/\n.. |PyUP| image:: https://pyup.io/repos/github/tensorlayer/tensorlayer/shield.svg\n   :target: https://pyup.io/repos/github/tensorlayer/tensorlayer/\n.. |Docker-Pulls| image:: http://ec2-35-178-47-120.eu-west-2.compute.amazonaws.com/docker/pulls/tensorlayer/tensorlayer.svg\n   :target: https://hub.docker.com/r/tensorlayer/tensorlayer/\n.. |Code-Quality| image:: https://api.codacy.com/project/badge/Grade/d6b118784e25435498e7310745adb848\n   :target: https://www.codacy.com/app/tensorlayer/tensorlayer\n", "type": "Text_excerpt", "original_header": "License"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}], "description": [{"result": {"value": "Deep Learning and Reinforcement Learning Library for Scientists and Engineers ", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "TensorLayer is a new deep learning library designed with simplicity, flexibility and high-performance in mind. \n- **Simplicity** : TensorLayer has a high-level layer/model abstraction which is effortless to learn. You can learn how deep learning can benefit your AI tasks in minutes through the massive [examples](https://github.com/tensorlayer/awesome-tensorlayer).\n- **Flexibility** : TensorLayer APIs are transparent and flexible, inspired by the emerging PyTorch library. Compared to the Keras abstraction, TensorLayer makes it much easier to build and train complex AI models.\n- **Zero-cost Abstraction** : Though simple to use, TensorLayer does not require you to make any compromise in the performance of TensorFlow (Check the following benchmark section for more details). \nTensorLayer stands at a unique spot in the TensorFlow wrappers. Other wrappers like Keras and TFLearn\nhide many powerful features of TensorFlow and provide little support for writing custom AI models. Inspired by PyTorch, TensorLayer APIs are simple, flexible and Pythonic,\nmaking it easy to learn while being flexible enough to cope with complex AI tasks.\nTensorLayer has a fast-growing community. It has been used by researchers and engineers all over the world, including those from  Peking University,\nImperial College London, UC Berkeley, Carnegie Mellon University, Stanford University, and companies like Google, Microsoft, Alibaba, Tencent, Xiaomi, and Bloomberg.\n \n", "original_header": "Design Features"}, "confidence": 0.9826521241366373, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "TensorLayer is a novel TensorFlow-based deep learning and reinforcement\nlearning library designed for researchers and engineers. It provides a\nlarge collection of customizable neural layers / functions that are key\nto build real-world AI applications. TensorLayer is awarded the 2017\nBest Open Source Software by the `ACM Multimedia\nSociety `__. \n"}, "confidence": 0.9928524110571777, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}], "name": [{"result": {"value": "TensorLayer", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "tensorlayer/TensorLayer", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/tensorlayer/TensorLayer/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/tensorlayer/TensorLayer/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 7262, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "a3c, artificial-intelligence, chatbot, deep-learning, dqn, gan, google, imagenet, neural-network, object-detection, python, reinforcement-learning, tensorflow, tensorflow-tutorial, tensorflow-tutorials, tensorlayer", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 1637, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/zsdonghao/tensorlayer/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 1470548}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 2423}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Dockerfile", "name": "Dockerfile", "type": "Programming_language", "size": 2044}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 715}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Batchfile", "name": "Batchfile", "type": "Programming_language", "size": 121}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/45880668", "tag": "3.0.0-alpha", "name": "TensorLayer 3.0.0-alpha Release", "author": {"name": "Laicheng0830", "type": "User"}, "description": "Dear all,\r\n\r\nIt is our great honour to pre-released TensorLayer 3.0.0-alpha.\r\nIt supports TensorFlow and MindSpore backends, and supports some PaddlePaddle operator backends, allowing users to run the code on different hardware like Nvidia-GPU and Huawei-Ascend. \r\n\r\nIn the next step, we support TensorFlow, MindSpore, PaddlePaddle, and PyTorch backends in the future. Feel free to use it and make suggestions.\r\n\r\nTensorLayer 3.0.0-alpha is a maintenance release.\r\n", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/3.0.0-alpha", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/3.0.0-alpha", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/3.0.0-alpha", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/45880668", "release_id": 45880668, "date_created": "2021-07-06T09:16:31Z", "date_published": "2021-07-08T05:20:03Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/36032989", "tag": "v2.2.4", "name": "TensorLayer 2.2.4 Release", "author": {"name": "Laicheng0830", "type": "User"}, "description": "TensorLayer 2.2.4 is a maintenance release.\r\n\r\n### Added\r\n\r\n### Changed\r\n\r\n### Dependencies Update\r\n\r\n### Deprecated\r\n\r\n### Fixed\r\n\r\n- Fix batchnorm(#1104)\r\n- Fix recurrent(#1106)\r\n\r\n### Removed\r\n\r\n### Security\r\n\r\n### Contributors\r\n- @zsdonghao\r\n- @Laicheng0830(#1104)\r\n- @Thinkre(#1106)\r\n", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/v2.2.4", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/v2.2.4", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/v2.2.4", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/36032989", "release_id": 36032989, "date_created": "2021-01-06T02:15:37Z", "date_published": "2021-01-06T07:16:21Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/27707964", "tag": "2.2.3", "name": "TensorLayer 2.2.3 Release", "author": {"name": "Laicheng0830", "type": "User"}, "description": "TensorLayer 2.2.3 is a maintenance release.\r\nIt contains numerous bug fixes.\r\n\r\n### Added\r\n\r\n### Changed\r\n\r\n### Dependencies Update\r\n\r\n### Deprecated\r\n\r\n### Fixed\r\n\r\n- Fix VGG. (#1078, 1079, 1089)\r\n- Fix norm layer. (#1080)\r\n- Fix DeCov2d layer. (#1081)\r\n- Fix ModelLayer and LayerList doc. (#1083)\r\n- Fix bug in SAC. (#1085)\r\n- Fix refactoring: Deduplication. (#1086)\r\n- Fix maxpool, batchnorm Data format fixed, vgg forward. (#1089)\r\n- Fix package info. (#1090)\r\n\r\n### Removed\r\n\r\n### Security\r\n\r\n### Contributors\r\n- @zsdonghao\r\n- @tiancheng2000 (#1078 #1079 #1080 #1081)\r\n- @ChrisWu1997 (#1083)\r\n- @quantumiracle (#1085)\r\n- @marload (#1086)\r\n- @Gyx-One (#1089)\r\n- @Laicheng0830 (#1090)", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/2.2.3", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/2.2.3", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/2.2.3", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/27707964", "release_id": 27707964, "date_created": "2020-06-19T00:41:35Z", "date_published": "2020-06-19T00:44:45Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/25895877", "tag": "2.2.2", "name": "TensorLayer 2.2.2 Release", "author": {"name": "Laicheng0830", "type": "User"}, "description": "TensorLayer 2.2.2 is a maintenance release.\r\n\r\n### Added\r\n\r\n- Reinforcement learning(#1065)\r\n- Mish activation(#1068)\r\n\r\n### Fixed\r\n\r\n- Fix README.\r\n- Fix package info.\r\n\r\n### Contributors\r\n\r\n- @zsdonghao\r\n- @quantumiracle(#1065)\r\n- @Laicheng0830(#1068)", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/2.2.2", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/2.2.2", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/2.2.2", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/25895877", "release_id": 25895877, "date_created": "2020-04-26T14:58:36Z", "date_published": "2020-04-26T15:48:50Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/22815336", "tag": "2.2.1", "name": "TensorLayer 2.2.1 Release", "author": {"name": "luomai", "type": "User"}, "description": "TensorLayer 2.2.1 is a maintenance release.\r\nIt contains numerous bug fixes.\r\n\r\n## Fixed\r\n\r\n- Fix README. (#1044)\r\n- Fix package info. (#1046)\r\n- Fix build test (Using YAPF 0.29) (#1057)\r\n\r\n## Contributors\r\n\r\n- @luomai (#1044, #1046, #1057)", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/2.2.1", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/2.2.1", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/2.2.1", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/22815336", "release_id": 22815336, "date_created": "2020-01-14T08:02:34Z", "date_published": "2020-01-14T08:05:09Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/19986977", "tag": "v2.2.0", "name": "TensorLayer 2.2.0", "author": {"name": "luomai", "type": "User"}, "description": "TensorLayer 2.2.0 is a maintenance release. \r\nIt contains numerous API improvement and bug fixes. \r\nThis release is compatible with TensorFlow 2 RC1. \r\n\r\n### Added\r\n- Support nested layer customization (#PR 1015)\r\n- Support string dtype in InputLayer (#PR 1017)\r\n- Support Dynamic RNN in RNN (#PR 1023)\r\n- Add ResNet50 static model (#PR 1030)\r\n- Add performance test code for static models (#PR 1041)\r\n\r\n### Changed\r\n\r\n- `SpatialTransform2dAffine` auto `in_channels`\r\n- support TensorFlow 2.0.0-rc1\r\n- Update model weights property, now returns its copy (#PR 1010)\r\n\r\n### Fixed\r\n- RNN updates: remove warnings, fix if seq_len=0, unitest (#PR 1033)\r\n- BN updates: fix BatchNorm1d for 2D data, refactored (#PR 1040)\r\n\r\n### Dependencies Update\r\n\r\n### Deprecated\r\n\r\n### Fixed\r\n- Fix `tf.models.Model._construct_graph` for list of outputs, e.g. STN case (PR #1010)\r\n- Enable better `in_channels` exception raise. (PR #1015)\r\n- Set allow_pickle=True in np.load() (#PR 1021)\r\n- Remove `private_method` decorator (#PR 1025)\r\n- Copy original model's `trainable_weights` and `nontrainable_weights` when initializing `ModelLayer` (#PR 1026)\r\n- Copy original model's `trainable_weights` and `nontrainable_weights` when initializing `LayerList` (#PR 1029)\r\n- Remove redundant parts in `model.all_layers` (#PR 1029)\r\n- Replace `tf.image.resize_image_with_crop_or_pad` with `tf.image.resize_with_crop_or_pad` (#PR 1032)\r\n- Fix a bug in `ResNet50` static model (#PR 1041)\r\n\r\n### Removed\r\n\r\n### Security\r\n\r\n### Contributors\r\n\r\n- @zsdonghao\r\n- @luomai\r\n- @ChrisWu1997: #1010 #1015 #1025 #1030 #1040\r\n- @warshallrho: #1017 #1021 #1026 #1029 #1032 #1041\r\n- @ArnoldLIULJ: #1023\r\n- @JingqingZ: #1023", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/v2.2.0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/v2.2.0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/v2.2.0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/19986977", "release_id": 19986977, "date_created": "2019-09-13T23:08:41Z", "date_published": "2019-09-13T23:11:21Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/18021766", "tag": "2.1.0", "name": "TensorLayer 2.1.0", "author": {"name": "zsdonghao", "type": "User"}, "description": "Dear All,\r\n\r\nThree things need to be mentioned for this release.\r\n\r\n- [Deep Reinforcement Learning Model Zoo](https://github.com/tensorlayer/tensorlayer/tree/master/examples/reinforcement_learning) Release!!!\r\n- We are going to support more Attention models for NLP officially.\r\n- The `model.conf` is almost stable, the AIoT team from Sipeed is now working hard to support TL model on the AI Chips.\r\n\r\nEnjoy!\r\n\r\nTensorLayer Team\r\n\r\n### Changed\r\n- Add version_info in model.config. (PR #992)\r\n- Replace tf.nn.func with tf.nn.func.\\_\\_name\\_\\_ in model config.\r\n- Add Reinforcement learning tutorials. (PR #995)\r\n- Add RNN layers with simple rnn cell, GRU cell, LSTM cell. (PR #998)\r\n- Update Seq2seq (#998) \r\n- Add Seq2seqLuongAttention model (#998)\r\n\r\n### Contributors\r\n- @warshallrho:\r\n- @quantumiracle: #995\r\n- @Tokarev-TT-33: #995\r\n- @initial-h: #995\r\n- @Officium: #995\r\n- @ArnoldLIULJ: #998\r\n- @JingqingZ: #998\r\n", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/2.1.0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/2.1.0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/2.1.0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/18021766", "release_id": 18021766, "date_created": "2019-06-16T11:48:44Z", "date_published": "2019-06-16T11:55:52Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/17797900", "tag": "2.0.2", "name": "TensorLayer 2.0.2", "author": {"name": "zsdonghao", "type": "User"}, "description": "Hello, we want to tell you some GOOD NEWS. \r\nToday, AI chip is anywhere, from our phone to our car, however, it still hard for us to have our own AI chip.\r\nTo end this, TensorLayer team starts to work on AIoT and will soon support to run the TensorLayer models on the low-cost AI chip (e.g., K210) and microcontrollers (e.g., STM32). Details in the following:\r\n\r\n- [NNoM](https://github.com/majianjia/nnom) is a higher-level layer-based Neural Network library specifically for microcontrollers (MCU), our team and the author of NNoM is working hard to make TensorLayer models to run on different MCUs. Yes! Something like **BinaryNet**.\r\n- [K210](https://kendryte.com) is a low-cost AI chip, we are collaborating with the designers of K210 and the [Sipeed](https://github.com/sipeed) team to make TensorLayer models to run on the K210 AI chip.\r\n\r\nIf you are interested in AIoT, feel free to discuss in [Slack](https://join.slack.com/t/tensorlayer/shared_invite/enQtMjUyMjczMzU2Njg4LWI0MWU0MDFkOWY2YjQ4YjVhMzI5M2VlZmE4YTNhNGY1NjZhMzUwMmQ2MTc0YWRjMjQzMjdjMTg2MWQ2ZWJhYzc).\r\n\r\n<br/>\r\n\r\n<a href=\"https://join.slack.com/t/tensorlayer/shared_invite/enQtMjUyMjczMzU2Njg4LWI0MWU0MDFkOWY2YjQ4YjVhMzI5M2VlZmE4YTNhNGY1NjZhMzUwMmQ2MTc0YWRjMjQzMjdjMTg2MWQ2ZWJhYzc\" target=\"\\_blank\">\r\n\t<div align=\"center\">\r\n\t\t<img src=\"https://github.com/tensorlayer/tensorlayer/raw/master/img/join_slack.png\" width=\"40%\"/>\r\n\t</div>\r\n</a>\r\n\r\n<br/>\r\n\r\nTensorLayer, Sipeed, NNoM teams\r\n\r\n=======\r\n\r\nMaintain release, recommended to update.\r\n\r\n### Changed\r\n- change the format of network config, change related code and files; change layer act (PR #980)\r\n- update Seq2seq (#989) \r\n\r\n### Fixed\r\n- Fix dynamic model cannot track PRelu weights gradients problem (PR #982)\r\n- Raise .weights warning (commit)\r\n\r\n### Contributors\r\n- @warshallrho: #980\r\n- @ArnoldLIULJ: #989\r\n- @1FengL: #982", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/2.0.2", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/2.0.2", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/2.0.2", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/17797900", "release_id": 17797900, "date_created": "2019-06-05T13:10:02Z", "date_published": "2019-06-05T13:29:39Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/17421500", "tag": "2.0.1", "name": "TensorLayer 2.0.1", "author": {"name": "zsdonghao", "type": "User"}, "description": "Maintain release, recommended to update.\r\n\r\n### Changed\r\n- remove `tl.layers.initialize_global_variables(sess)` (PR #931)\r\n- support `trainable_weights` (PR #966)\r\n\r\n### Added\r\n - Layer\r\n    - `InstanceNorm`, `InstanceNorm1d`, `InstanceNorm2d`, `InstanceNorm3d` (PR #963)\r\n\r\n### Changed\r\n- remove `tl.layers.initialize_global_variables(sess)` (PR #931)\r\n- change `tl.layers.core`, `tl.models.core` (PR #966)\r\n- change `weights` into `all_weights`, `trainable_weights`, `nontrainable_weights`\r\n\r\n\r\n### Dependencies Update\r\n- nltk>=3.3,<3.4 => nltk>=3.3,<3.5 (PR #892)\r\n- pytest>=3.6,<3.11 => pytest>=3.6,<4.1 (PR #889)\r\n- yapf>=0.22,<0.25 => yapf==0.25.0 (PR #896)\r\n- imageio==2.5.0 progressbar2==3.39.3  scikit-learn==0.21.0 scikit-image==0.15.0 scipy==1.2.1 wrapt==1.11.1 pymongo==3.8.0 sphinx==2.0.1 wrapt==1.11.1 opencv-python==4.1.0.25 requests==2.21.0 tqdm==4.31.1\tlxml==4.3.3 pycodestyle==2.5.0 sphinx==2.0.1 yapf==0.27.0(PR #967)\r\n\r\n### Fixed\r\n- fix docs of models @zsdonghao #957\r\n- In `BatchNorm`, keep dimensions of mean and variance to suit `channels first` (PR #963)\r\n\r\n### Contributors\r\n- @warshallrho: #966\r\n- @zsdonghao: #931\r\n- @yd-yin: #963\r\n- @dvklopfenstein: #971\r\n", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/2.0.1", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/2.0.1", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/2.0.1", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/17421500", "release_id": 17421500, "date_created": "2019-05-17T06:22:30Z", "date_published": "2019-05-17T12:16:25Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/17150781", "tag": "2.0.0", "name": "TensorLayer 2.0.0", "author": {"name": "zsdonghao", "type": "User"}, "description": "Dear all, \r\n\r\nIt is our great honour to release TensorLayer 2.0.0.\r\nIn the past few months, we have refactored all layers to support TensorFlow 2.0.0-alpha0 and the dynamic mode! The new API designs allow you to customize layers easily, compared with other libraries.\r\n\r\nWe would like to thanks all contributors especially our core members from Peking University and Imperial College London, they are @zsdonghao @JingqingZ @ChrisWu1997 @warshallrho. All contributions are listed in the following.\r\n\r\nIn the next step, we are interested in supporting more advanced features for 3D Vision, such as PointCNN and GraphCNN. Also, we still have some remaining examples that need to be updated, such as A3C and distributed training.  If you are interested in joining the development team, feel free to contact us: tensorlayer@gmail.com\r\n\r\nEnjoy coding!\r\n\r\nTensorLayer Team\r\n\r\n\r\n# References\r\n- [TensorLayer 2.0 Issue Discussion](https://github.com/tensorlayer/tensorlayer/issues/900)\r\n\r\n# Contribution List\r\n\r\nAll contribution can be found as follows:\r\n\r\n## Layers\r\n- [x] **core.py:**\r\n  * Layer:\r\n    - [x] refactored @JingqingZ 2019/01/28\r\n    - [x] tested @JingqingZ  2019/01/31 2019/03/06\r\n    - [x] documentation @JingqingZ 2019/03/06\r\n  * ModelLayer:\r\n    - [x] created @JingqingZ 2019/01/28\r\n    - [x] tested @JingqingZ 2019/03/06\r\n    - [x] documentation @JingqingZ 2019/03/06\r\n  * LayerList:\r\n    - [x] created @JingqingZ 2019/01/28 @ChrisWu1997 \r\n    - [x] tested @JingqingZ 2019/03/06\r\n    - [x] documentation @JingqingZ 2019/03/06\r\n  * LayerNode:\r\n    - [x] created @ChrisWu1997 \r\n    - [x] tested @ChrisWu1997 2019/03/22\r\n    - [x] documentation @ChrisWu1997 2019/03/22\r\n- [x] **activation.py:**\r\n  * PRelu:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/20\r\n    - [x] tested @JingqingZ 2019/03/20\r\n    - [x] documentation @JingqingZ 2019/03/20\r\n  * PRelu6:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/20\r\n    - [x] tested  @JingqingZ 2019/03/20\r\n    - [x] documentation @JingqingZ 2019/03/20\r\n  * PTRelu6:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/20\r\n    - [x] tested @JingqingZ 2019/03/20\r\n    - [x] documentation @JingqingZ 2019/03/20\r\n- **convolution/**  \r\n  *  AtrousConv1dLayer,  AtrousConv2dLayer and AtrousDeConv2d are removed, use Conv1d/2d and DeConv2d with `dilation_rate` instead.  (\ud83c\udc04\ufe0fremember to change CN docs)\r\n  * BinaryConv2d:\r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [x] tested @warshallrho 2019/03/16\r\n    - [x] documentation @warshallrho 2019/03/20\r\n  * Conv1d:\r\n    - [x] refactored @zsdonghao 2019/01/16\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * Conv2d:\r\n    - [x] refactored @zsdonghao 2019/01/16 \r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * Conv3d:\r\n    - [x] add  @zsdonghao 2019/01/16  : (\ud83c\udc04\ufe0fremember to change CN docs)\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * Conv1dLayer:\r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * Conv2dLayer:\r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * Conv3dLayer:\r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * DeConv1dLayer:\r\n    - [x] refactored @warshallrho 2019/03/16\r\n    - [x] tested @warshallrho 2019/03/16\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * DeConv2dLayer:\r\n    - [x] refactored @zsdonghao 2018/12/06\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * DeConv3dLayer:\r\n    - [x] refactored @zsdonghao 2018/12/06\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * DeConv2d:\r\n    - [x] refactored @zsdonghao 2019/01/16 \r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * DeConv3d:\r\n    - [x] refactored @zsdonghao 2019/01/16 \r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/17\r\n  * DeformableConv2d:\r\n    - [x] refactored @warshallrho 2019/03/18\r\n    - [x] tested @warshallrho 2019/03/18\r\n    - [x] documentation @warshallrho 2019/03/18\r\n  * DepthwiseConv2d:\r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [x] tested @warshallrho 2019/03/15\r\n    - [x] documentation @warshallrho 2019/03/18\r\n  * DorefaConv2d:\r\n    - [x] refactored @zsdonghao 2018/12/06\r\n    - [x] tested @warshallrho 2019/03/17\r\n    - [x] documentation @warshallrho 2019/03/20\r\n  * GroupConv2d:\r\n    - [x] refactored @zsdonghao 2018/12/06\r\n    - [x] tested @warshallrho 2019/03/17\r\n    - [x] documentation @warshallrho 2019/03/20\r\n  * QuanConv2d:\r\n    - [x] refactored  @zsdonghao 2018/12/06\r\n    - [x] tested @warshallrho 2019/03/17\r\n    - [x] documentation @warshallrho 2019/03/20\r\n  * QuanConv2dWithBN:\r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * SeparableConv1d:\r\n    - [x] refactored @zsdonghao 2019/01/16 \r\n    - [x] tested @warshallrho 2019/03/17\r\n    - [x] documentation @warshallrho 2019/03/18\r\n  * SeparableConv2d:\r\n    - [x] refactored @zsdonghao 2019/01/16 \r\n    - [x] tested @warshallrho 2019/03/17\r\n    - [x] documentation @warshallrho 2019/03/18\r\n  * SubpixelConv1d:\r\n    - [x] refactored    @zsdonghao 2018/12/05 @warshallrho 2019/03/18\r\n    - [x] tested @warshallrho 2019/03/18\r\n    - [x] documentation @warshallrho 2019/03/18\r\n  * SubpixelConv2d:\r\n    - [x] refactored    @zsdonghao 2018/12/05 @warshallrho 2019/03/18\r\n    - [x] tested @warshallrho 2019/03/18\r\n    - [x] documentation @warshallrho 2019/03/18\r\n  * TernaryConv2d:\r\n    - [x] refactored  @zsdonghao 2018/12/06\r\n    - [x] tested @warshallrho 2019/03/17\r\n    - [x] documentation @warshallrho 2019/03/20\r\n- **dense/**  [WIP] @ChrisWu1997 \r\n  * BinaryDense:\r\n    - [x] refactored @zsdonghao 2018/12/06\r\n    - [x] tested @ChrisWu1997 2019/04/23 _need further test by example_\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n  * Dense:\r\n    - [x] refactored    @zsdonghao 2018/12/04 @JingqingZ 2019/01/28\r\n    - [x] tested @JingqingZ  2019/01/31 2019/03/06 2019/03/15\r\n    - [x] documentation  @JingqingZ 2019/03/15\r\n  * DorefaDense:\r\n    - [x] refactored   @zsdonghao 2018/12/04\r\n    - [x] tested @ChrisWu1997 2019/04/23 _need further test by example_\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n  * DropconnectDense:\r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [x] tested @ChrisWu1997 2019/04/23 _need further test by example_\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n  * QuanDense:\r\n    - [x] refactored @zsdonghao 2018/12/06\r\n    - [x] tested @ChrisWu1997 2019/04/23 _need further test by example_\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n  * QuanDenseWithBN:\r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * TernaryDense:\r\n    - [x] refactored @zsdonghao 2018/12/06\r\n    - [x] tested @ChrisWu1997 2019/04/23 _need further test by example_\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n- **dropout.py**\r\n  * Dropout:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/01/28\r\n    - [x] tested @JingqingZ  2019/01/31 2019/03/06 2019/03/15\r\n    - [x] documentation  @JingqingZ 2019/03/15\r\n- **extend.py**\r\n  * ExpandDims:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/22\r\n    - [x] tested @JingqingZ 2019/03/22\r\n    - [x] documentation @JingqingZ 2019/03/22\r\n  * Tile:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/22\r\n    - [x] tested @JingqingZ 2019/03/22\r\n    - [x] documentation @JingqingZ 2019/03/22\r\n- **image_resampling.py**\r\n  * UpSampling2d: \r\n    - [x] refactored    @zsdonghao 2018/12/04 @ChrisWu1997 2019/04/03\r\n    - [x] tested  @ChrisWu1997 2019/04/03\r\n    - [x] documentation   @ChrisWu1997 2019/04/03\r\n  * DownSampling2d:\r\n    - [x] refactored    @zsdonghao 2018/12/04 @ChrisWu1997 2019/04/03\r\n    - [x] tested   @ChrisWu1997 2019/04/03\r\n    - [x] documentation @ChrisWu1997 2019/04/03\r\n- **importer.py**\r\n  * SlimNets:\r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * Keras:\r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n- **inputs.py**\r\n  * Input:   \r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/01/28\r\n    - [x] tested @JingqingZ 2019/03/06\r\n    - [x] documentation @JingqingZ 2019/03/06\r\n- **embedding.py**\r\n  * OneHotInput:    --> OneHot (\ud83c\udc04\ufe0fremember to change CN docs)\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/02/23\r\n    - [x] tested @JingqingZ 2019/03/19\r\n    - [x] documentation @JingqingZ 2019/03/19\r\n  * Word2vecEmbeddingInput:   --> Word2vecEmbedding (\ud83c\udc04\ufe0fremember to change CN docs)\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/02/21\r\n    - [x] tested @JingqingZ 2019/03/19\r\n    - [x] documentation @JingqingZ 2019/03/19\r\n  * EmbeddingInput:     --> Embedding\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/02/22\r\n    - [x] tested @JingqingZ 2019/03/19\r\n    - [x] documentation @JingqingZ 2019/03/19\r\n  * AverageEmbeddingInput:   --> AverageEmbedding (\ud83c\udc04\ufe0fremember to change CN docs)\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/02/20\r\n    - [x] tested @JingqingZ 2019/03/19\r\n    - [x] documentation @JingqingZ 2019/03/19\r\n- **lambda_layers.py**\r\n  * ElementwiseLambda:\r\n    - [x] refactored @JingqingZ 2019/03/24\r\n    - [x] tested @JingqingZ 2019/03/24\r\n    - [x] documentation @JingqingZ 2019/03/24\r\n  * Lambda:   \r\n    - [x] refactored  @JingqingZ 2019/03/24\r\n    - [x] tested @JingqingZ 2019/03/24\r\n    - [x] documentation @JingqingZ 2019/03/24\r\n- **merge.py**\r\n  * Concat:   \r\n    - [x] refactored @zsdonghao 2018/12/04\r\n    - [x] tested @JingqingZ 2019/03/15\r\n    - [x] documentation  @JingqingZ 2019/03/15\r\n  * Elementwise:\r\n    - [x] refactored @zsdonghao 2018/12/04  @JingqingZ 2019/03/15\r\n    - [x] tested  @JingqingZ 2019/03/15\r\n    - [x] documentation  @JingqingZ 2019/03/15\r\n- **noise.py**\r\n  * GaussianNoise:   \r\n    - [x] refactored @zsdonghao 2018/12/04\r\n    - [x] tested @warshallrho 2019/03/20\r\n    - [x] documentation @warshallrho 2019/03/20\r\n- **normalization.py**\r\n  * BatchNorm:   \r\n    - [x] refactored @ChrisWu1997 2019/01/22 @ChrisWu1997 2019/03/05\r\n    - [x] tested @ChrisWu1997 2019/03/22\r\n    - [x] documentation @ChrisWu1997 2019/03/22\r\n  * BatchNorm1d:   \r\n    - [x] refactored @ChrisWu1997 2019/03/05\r\n    - [x] tested @ChrisWu1997 2019/03/22\r\n    - [x] documentation @ChrisWu1997 2019/03/22\r\n  * BatchNorm2d:   \r\n    - [x] refactored @ChrisWu1997 2019/03/05\r\n    - [x] tested @ChrisWu1997 2019/03/22\r\n    - [x] documentation @ChrisWu1997 2019/03/22\r\n  * BatchNorm3d:   \r\n    - [x] refactored @ChrisWu1997 2019/03/05\r\n    - [x] tested @ChrisWu1997 2019/03/22\r\n    - [x] documentation @ChrisWu1997 2019/03/22\r\n  * GroupNorm:\r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * InstanceNorm:   \r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * LayerNorm:   \r\n    - [x] refactored @ChrisWu1997 2019/01/23\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * LocalResponseNorm:   \r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * SwitchNorm:   \r\n    - [x] refactored @zsdonghao 2018/12/05\r\n    - [ ] tested\r\n    - [ ] documentation\r\n- **padding.py**\r\n  * PadLayer:   \r\n    - [x] refactored  @zsdonghao 2018/12/04\r\n    - [x] tested @warshallrho 2019/03/21\r\n    - [x] documentation @warshallrho 2019/03/21\r\n  * ZeroPad1d:   \r\n    - [x] refactored @zsdonghao 2018/12/04\r\n    - [x] tested @warshallrho 2019/03/21\r\n    - [x] documentation @warshallrho 2019/03/21\r\n  * ZeroPad2d:   \r\n    - [x] refactored @zsdonghao 2018/12/04\r\n    - [x] tested @warshallrho 2019/03/21\r\n    - [x] documentation @warshallrho 2019/03/21\r\n  * ZeroPad3d:  \r\n    - [x] refactored @zsdonghao 2018/12/04\r\n    - [x] tested @warshallrho 2019/03/21\r\n    - [x] documentation @warshallrho 2019/03/21\r\n- **pooling/**\r\n    * MaxPool1d:  \r\n      - [x] refactored @zsdonghao 2019/01/08\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/19\r\n    * MaxPool2d:  \r\n      - [x] refactored @zsdonghao 2018/12/06\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/19\r\n    * MaxPool3d:  \r\n      - [x] refactored @zsdonghao 2019/01/08\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/19\r\n    * MeanPool1d:  \r\n      - [x] refactored @zsdonghao 2019/01/08\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/19\r\n    * MeanPool2d:  \r\n      - [x] refactored @zsdonghao 2019/01/08\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/19\r\n    * MeanPool3d:  \r\n      - [x] refactored @zsdonghao 2019/01/08\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/19\r\n    * GlobalMaxPool1d:\r\n      - [x] refactored @zsdonghao 2018/12/06\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/15\r\n    * GlobalMaxPool2d:  \r\n      - [x] refactored @zsdonghao 2018/12/06\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/15\r\n    * GlobalMaxPool3d:  \r\n      - [x] refactored @zsdonghao 2018/12/06\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/15\r\n    * GlobalMeanPool1d:  \r\n      - [x] refactored @zsdonghao 2018/12/06\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/15\r\n    * GlobalMeanPool2d:\r\n      - [x] refactored @zsdonghao 2018/12/06\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/15\r\n    * GlobalMeanPool3d:\r\n      - [x] refactored @zsdonghao 2018/12/06\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/15\r\n    * PoolLayer:\r\n      - [x] refactored @zsdonghao 2018/12/04\r\n      - [x] tested @warshallrho 2019/03/15\r\n      - [x] documentation @warshallrho 2019/03/18\r\n- **quantize_layers.py**\r\n  * Sign:\r\n    - [x] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n- **recurrent/**\r\n  * BiRNN:\r\n    - [x] refactored @JingqingZ 2019/04/08\r\n    - [x] tested @JingqingZ 2019/04/08\r\n    - [x] documentation @JingqingZ 2019/04/08\r\n  * ConvLSTM:\r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n  * RNN:\r\n    - [x] refactored @JingqingZ 2019/03/31\r\n    - [x] tested @JingqingZ 2019/03/31\r\n    - [x] documentation @JingqingZ 2019/03/31\r\n  * Seq2Seq:\r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n- **shape.py**\r\n  * Flatten: \r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/22\r\n    - [x] tested @JingqingZ 2019/03/22\r\n    - [x] documentation @JingqingZ 2019/03/22\r\n  * Reshape:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/22\r\n    - [x] tested @JingqingZ 2019/03/22\r\n    - [x] documentation @JingqingZ 2019/03/22\r\n  * Transpose:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/22\r\n    - [x] tested @JingqingZ 2019/03/22\r\n    - [x] documentation @JingqingZ 2019/03/22\r\n- **scale.py**\r\n  * Scale:\r\n    - [x] refactored @zsdonghao 2018/12/04 @JingqingZ 2019/03/22\r\n    - [x] tested @JingqingZ 2019/03/22\r\n    - [x] documentation @JingqingZ 2019/03/22\r\n- **contrib**\r\n  * ROIPooling:   \r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n- **spatial_transformer.py**\r\n  * SpatialTransformer2dAffine:   see **test_layers_spatial_transformer.py**\r\n    - [ ] refactored\r\n    - [ ] tested\r\n    - [ ] documentation\r\n- **stack.py** [WIP] @ChrisWu1997 \r\n  * Stack:\r\n    - [x] refactored @zsdonghao 2018/12/04\r\n    - [x] tested @ChrisWu1997 2019/04/23\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n  * UnStack: \r\n    - [x] refactored @zsdonghao 2018/12/04\r\n    - [x] tested @ChrisWu1997 2019/04/23\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n## tl.models\r\n- **core.py**\r\n  * Model:\r\n    - [x] refactored @JingqingZ 2019/01/28 @ChrisWu1997 2019/02/16 2019/02/22\r\n    - [x] tested @ChrisWu1997 2019/03/21\r\n    - [x] documentation @ChrisWu1997 2019/03/21\r\n- **vgg.py**\r\n  * vgg:\r\n    - [x] refactored @warshallrho 2019/02/19\r\n    - [ ] tested\r\n    - [x] documentation @warshallrho 2019/03/21  @ChrisWu1997 2019/03/21\r\n  * vgg16:\r\n    - [x] refactored @warshallrho 2019/02/19\r\n    - [ ] tested\r\n    - [x] documentation @warshallrho 2019/03/21  @ChrisWu1997 2019/03/21\r\n  * vgg19:\r\n    - [x] refactored @warshallrho 2019/03/09\r\n    - [ ] tested\r\n    - [x] documentation @warshallrho 2019/03/21  @ChrisWu1997 2019/03/21\r\n- **mobilenetv1.py**\r\n  * MobileNet:\r\n    - [x] refactored @ChrisWu1997 2019/04/23\r\n    - [x] tested @ChrisWu1997 2019/04/23\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n  * SqueezeNet:\r\n    - [x] refactored @ChrisWu1997 2019/04/23\r\n    - [x] tested @ChrisWu1997 2019/04/23\r\n    - [x] documentation @ChrisWu1997 2019/04/23\r\n\r\n## Examples\r\n- basic_tutorials\r\n    Too many basic tutorials, some codes can be removed.\r\n    - [x] Static model example MNIST @JingqingZ 2019/01/28 2019/03/24\r\n    - [x] Dynamic model example MNIST @JingqingZ 2019/01/28 2019/03/24\r\n    - [x] Static model example CIFAR10 (with dataset API) @ChrisWu1997 2019/03/24\r\n    - [x] Siamese example MNIST @ChrisWu1997 2019/03/26\r\n    - tutorial_mnist_float16.py removed by @ChrisWu1997 \r\n    - tutorial_mnist_simple.py removed by @ChrisWu1997 \r\n- data_process\r\n    - tutorial_fast_affine_transform.py\r\n        - [x] refactored @ChrisWu1997 2019/04/11\r\n        - [x] tested @ChrisWu1997 2019/04/11\r\n    - tutorial_image_preprocess.py  removed by @zsdonghao\r\n    - tutorial_tf_dataset_voc.py\r\n        - [x] refactored @ChrisWu1997 2019/04/11\r\n        - [x] tested @ChrisWu1997 2019/04/11\r\n    - tutorial_tfrecord.py\r\n        - [x] refactored @ChrisWu1997 2019/04/11\r\n        - [x] tested @ChrisWu1997 2019/04/11\r\n    - tutorial_tfrecord2.py\r\n        - [x] refactored @ChrisWu1997 2019/04/11\r\n        - [x] tested @ChrisWu1997 2019/04/11\r\n    - tutorial_tfrecord3.py\r\n        - [ ] refactored\r\n        - [ ] tested\r\n- database\r\n    - [ ] refactored\r\n    - [ ] tested\r\n- distributed_training\r\n    - tutorial_cifar10_distributed_trainer.py\r\n        - [ ] refactored\r\n        - [ ] tested\r\n    - tutorial_mnist_distributed_trainer.py\r\n        - [ ] refactored\r\n        - [ ] tested\r\n- keras_tfslim\r\n    - tutorial_keras.py\r\n        - [x] refactored @ChrisWu1997 2019/04/11\r\n        - [x] tested @ChrisWu1997 2019/04/11\r\n    - tutorial_tfslim.py removed by @ChrisWu1997 \r\n- pretrained_cnn\r\n    - tutorial_inceptionV3_tfslim.py\r\n    - tutorial_mobilenet.py  removed by @ChrisWu1997 2019/04/23\r\n    - tutorial_models_mobilenetv1.py\r\n        - [x] refactored @ChrisWu1997 2019/04/23\r\n        - [x] tested @ChrisWu1997 2019/04/23\r\n    - tutorial_models_squeezenetv1.py\r\n        - [x] refactored @ChrisWu1997 2019/04/23\r\n        - [x] tested @ChrisWu1997 2019/04/23\r\n    - tutorial_models_vgg.py\r\n        - [x] refactored @warshallrho 2019/04/30\r\n        - [ ] tested\r\n    - tutorial_models_vgg_static.py\r\n        - [x] refactored @warshallrho 2019/04/30\r\n        - [ ] tested\r\n    - tutorial_models_vgg16.py\r\n        - [x] refactored @warshallrho 2019/02/19\r\n        - [ ] tested\r\n    - tutorial_models_vgg19.py\r\n        - [x] refactored @warshallrho 2019/03/09\r\n        - [ ] tested\r\n    - tutorial_squeezenet.py  removed by @ChrisWu1997 2019/04/23\r\n    - tutorial_vgg16.py  removed by @warshallrho 2019/04/30\r\n    - tutorial_vgg19.py  removed by @warshallrho 2019/04/30\r\n- quantized_net\r\n    - tutorial_binarynet_cifar10_tfrecord.py\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_binarynet_mnist_cnn.py\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_dorefanet_cifar10_tfrecord.py\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_dorefanet_mnist_cnn.py\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_quanconv_cifar10.py\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_quanconv_mnist.py\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_ternaryweight_cifar10_tfrecord.py\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_ternaryweight_mnist_cnn.py\r\n        - [x] refactored\r\n        - [x] tested\r\n- reinforcement_learning\r\n    - tutorial_atari_pong.py @zsdonghao 2019/01/21\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_bipedalwalker_a3c_continuous_action.py\r\n        - [ ] refactored\r\n        - [ ] tested\r\n    - tutorial_cartpole_ac.py @zsdonghao 2019/02/17\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_frozenlake_dqn.py  @zsdonghao 2019/02/16\r\n        - [x] refactored\r\n        - [x] tested\r\n    - tutorial_frozenlake_q_table.py @zsdonghao 2019/02/16\r\n        - [x] refactored\r\n        - [x] tested\r\n- text_classification \r\n    - tutorial_imdb_fasttext.py @JingqingZ 2019/03/14\r\n        - [x] refactored\r\n        - [x] tested\r\n- text_generation\r\n    - tutorial_generate_text.py\r\n        - [ ] refactored\r\n        - [ ] tested\r\n- text_ptb\r\n    Are they duplicated?\r\n    - tutorial_ptb_lstm_state_is_tuple.py\r\n        - [ ] refactored\r\n        - [ ] tested\r\n    - tutorial_ptb_lstm.py\r\n        - [ ] refactored\r\n        - [ ] tested\r\n- text_word_embedding \r\n    - tutorial_word2vec_basic.py @JingqingZ 2019/02/21 2019/03/19\r\n        - [x] refactored\r\n        - [x] tested\r\n\r\n## Others\r\n- tl.activation.py\r\n   - [x] refactored @JingqingZ 2019/03/06\r\n   - [x] tested @JingqingZ 2019/03/06\r\n   - [x] documentation @JingqingZ 2019/03/06\r\n- tl.cli\r\n   - [x] refactored _no update needed_ @ChrisWu1997 2019/04/12\r\n- tl.decorators\r\n   - [x] refactored _no update needed_ @ChrisWu1997 2019/04/12\r\n- tl.logging\r\n   - [x] refactored _no update needed_ @ChrisWu1997 2019/04/12\r\n- tl.optimizers\r\n   - [ ] refactored \r\n- tl.third_party\r\n   - [ ] refactored \r\n- tl.array_ops\r\n   - [x] refactored _no update needed_ @ChrisWu1997 2019/04/12\r\n- tl.cost\r\n   - [x] refactored @ChrisWu1997  2019/04/12\r\n   - [x] documentation @ChrisWu1997  2019/04/12\r\n- tl.db [WIP] @ChrisWu1997 \r\n   - [ ] refactored \r\n- tl.distributed\r\n   - [ ] refactored \r\n- tl.initializers\r\n   - [x] refactored @ChrisWu1997  2019/04/12\r\n   - [x] tested @ChrisWu1997  2019/04/12\r\n   - [x] documentation @ChrisWu1997  2019/04/12\r\n- tl.iterate\r\n   - [x] refactored _no update needed_ @ChrisWu1997 2019/04/12\r\n- tl.lazy_imports\r\n   - [x] refactored _no update needed_ @ChrisWu1997 2019/04/12\r\n- tl.nlp @OliverZijia @JingqingZ \r\n   - [x] refactored \r\n- tl.package_info\r\n   - [ ] refactored \r\n- tl.prepro \r\n   - [x] refactored @ChrisWu1997  2019/04/11\r\n- tl.rein\r\n   - [ ] refactored \r\n- tl.utils\r\n   - [x] refactored @ChrisWu1997 2019/04/17\r\n   - [x] tested _by `tutorial_mnist_simple.py`_ @ChrisWu1997 2019/04/17\r\n   - [x] documentation @ChrisWu1997 2019/04/17\r\n- tl.visualize\r\n   - [x] refactored _no update needed_ @ChrisWu1997 2019/04/12\r\n\r\n## Unittests Status:\r\n- performance_test\r\n    - VGG @JingqingZ @ChrisWu1997 @warshallrho 2019/03/20\r\n- layers\r\n    - test_layernode.py @ChrisWu1997 2019/03/22\r\n    - test_layers_activation.py @JingqingZ 2019/03/20\r\n    - test_layers_convolution.py (1d, 2d, 3d) @warshallrho 2019/03/20 \r\n    - test_layers_core_basedense_dropout.py @JingqingZ 2019/03/06\r\n    - test_layers_convolution_deformable.py @warshallrho 2019/03/18\r\n    - test_layers_embedding.py @JingqingZ 2019/03/19\r\n    - test_layers_extend.py @JingqingZ 2019/03/22\r\n    - test_layers_lambda.py @JingqingZ 2019/03/24\r\n    - test_layers_merge.py @JingqingZ 2019/03/15\r\n    - test_layers_noise.py @warshallrho 2019/03/21\r\n    - test_layers_padding.py @warshallrho 2019/03/21\r\n    - test_layers_pooling.py @warshallrho 2019/03/18\r\n    - test_layers_recurrent.py @JingqingZ 2019/03/06\r\n    - test_layers_scale.py @JingqingZ 2019/03/22\r\n    - test_layers_shape.py @JingqingZ 2019/03/22\r\n- test_activations.py @JingqingZ 2019/03/06\r\n- models\r\n    - test_model_save_graph.py @warshallrho 2019/04/30\r\n\r\n## Unittests Status (Pending):\r\nSome testing codes can be removed.\r\n- test_array_ops.py\r\n- test_decorators.py\r\n- test_documentation.py\r\n- test_layers_basic.py\r\n- test_layers_flow_control.py  **removed** in favour of eager mode  @zsdonghao 2018/12/04 (\ud83c\udc04\ufe0fremember to change CN docs)\r\n- test_layers_importer.py\r\n- test_layers_normalization.py\r\n- test_layers_padding.py\r\n- test_layers_spatial_transformer.py\r\n- test_layers_stack.py\r\n- test_layers_super_resolution.py\r\n- test_layers_time_distributed.py\r\n- test_logging.py\r\n- test_logging_hyperdash.py\r\n- test_mnist_simple.py\r\n- test_model_compilednetwork.py\r\n- test_models.py\r\n- test_network_custom_2d.py\r\n- test_network_custom_input_layers.py\r\n- test_network_custom_multiple_inputs.py\r\n- test_network_custom_multiple_outputs.py\r\n- test_network_sequential_1d.py\r\n- test_network_sequential_2d.py\r\n- test_network_sequential_3d.py\r\n- test_network_sequential_rnn.py\r\n- test_optimizer_amsgrad.py\r\n- test_pydocstyle.py\r\n- test_reuse_mlp.py\r\n- test_tf_layers.py\r\n- test_timeout.py\r\n- test_utils_predict.py\r\n- test_yapf_format.py\r\n\r\n\r\n## tl.files\r\n\r\nAll save/load methods are also wrapped as class method in model core.\r\n- save_hdf5_graph\r\n    - [x] created @warshallrho 2019/04/27\r\n    - [x] tested @warshallrho 2019/04/27\r\n    - [x] documentation @warshallrho 2019/04/27\r\n- load_hdf5_graph\r\n    - [x] created @warshallrho 2019/04/27\r\n    - [x] tested @warshallrho 2019/04/27\r\n    - [x] documentation @warshallrho 2019/04/27\r\n- save_weights_to_hdf5\r\n    - [x] created\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n- load_hdf5_to_weights_in_order\r\n    - [x] created\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n- load_hdf5_to_weights\r\n    - [x] created\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n- save_npz([save_list,\u00a0name,\u00a0sess])  @ChrisWu1997  2019/02/21 --> save_npz([save_list,\u00a0name]) @ChrisWu1997  2019/03/21\r\n    - [x] refactored\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n- load_npz([path,\u00a0name])  @ChrisWu1997  2019/02/21\r\n    - [x] refactored\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n- assign_params(sess,\u00a0params,\u00a0network)  --> assign_weights (\ud83c\udc04\ufe0fremember to change CN docs) @ChrisWu1997  2019/02/22\r\n    - [x] refactored\r\n    - [ ] tested\r\n- load_and_assign_npz([sess,\u00a0name,\u00a0network])  @ChrisWu1997  2019/02/21 --> load_and_assign_npz([name,\u00a0network]) @ChrisWu1997 2019/03/21\r\n    - [x] refactored\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n- save_npz_dict([save_list,\u00a0name,\u00a0sess])  @ChrisWu1997  2019/02/22 --> save_npz_dict([save_list,\u00a0name])  @ChrisWu1997 2019/03/21\r\n    - [x] refactored\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n- load_and_assign_npz_dict([name,\u00a0sess]) --> ([name, network]) @ChrisWu1997 2019/03/21\r\n    - [x] refactored\r\n    - [x] tested @ChrisWu1997 2019/03/26\r\n    - [x] documentation @ChrisWu1997 2019/03/26\r\n", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/2.0.0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/2.0.0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/2.0.0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/17150781", "release_id": 17150781, "date_created": "2019-05-04T17:43:30Z", "date_published": "2019-05-04T17:48:22Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/14012667", "tag": "1.11.1", "name": "TensorLayer 1.11.1", "author": {"name": "luomai", "type": "User"}, "description": "This is a maintenance release. All users are suggested to update.\r\n\r\n### Changed\r\n\r\n* guide for pose estimation - flipping (PR #884)\r\n* cv2 transform support 2 modes (PR #885)\r\n\r\n### Dependencies Update\r\n- pytest>=3.6,<3.9 => pytest>=3.6,<3.10 (PR #874)\r\n- requests>=2.19,<2.20 => requests>=2.19,<2.21 (PR #874)\r\n- tqdm>=4.23,<4.28 => tqdm>=4.23,<4.29 (PR #878)\r\n- pytest>=3.6,<3.10 => pytest>=3.6,<3.11 (PR #886)\r\n- pytest-xdist>=1.22,<1.24 => pytest-xdist>=1.22,<1.25 (PR #883)\r\n- tensorflow>=1.6,<1.12 => tensorflow>=1.6,<1.13 (PR #886)", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.11.1", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.11.1", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.11.1", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/14012667", "release_id": 14012667, "date_created": "2018-11-15T02:22:02Z", "date_published": "2018-11-15T02:48:15Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/13512268", "tag": "1.11.0", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.11.0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.11.0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.11.0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/13512268", "release_id": 13512268, "date_created": "2018-10-18T15:14:18Z", "date_published": "2018-10-18T15:37:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/13422092", "tag": "1.11.0rc0", "name": "TensorLayer 1.11.0rc0", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "This release provides high-performance image augmentation API. The API is based on affine transformation. It has been proven useful to offer 80x speed up in augmenting images in the [openpose-plus](https://github.com/tensorlayer/openpose-plus) project.\r\n\r\n### Added\r\n- Layer:\r\n  - Release `GroupNormLayer` (PR #850)\r\n- Image affine transformation APIs\r\n  - `affine_rotation_matrix` (PR #857)\r\n  - `affine_horizontal_flip_matrix` (PR #857)\r\n  - `affine_vertical_flip_matrix` (PR #857)\r\n  - `affine_shift_matrix` (PR #857)\r\n  - `affine_shear_matrix` (PR #857)\r\n  - `affine_zoom_matrix` (PR #857)\r\n  - `affine_transform_cv2` (PR #857)\r\n  - `affine_transform_keypoints` (PR #857)\r\n- Affine transformation tutorial\r\n  - `examples/data_process/tutorial_fast_affine_transform.py` (PR #857)\r\n\r\n### Changed\r\n\r\n- BatchNormLayer: support `data_format`\r\n\r\n### Dependencies Update\r\n- yapf>=0.22,<0.24 => yapf>=0.22,<0.25 (PR #829)\r\n- sphinx>=1.7,<1.8 => sphinx>=1.7,<1.9 (PR #842)\r\n- matplotlib>=2.2,<2.3 => matplotlib>=2.2,<3.1 (PR #845)\r\n- scikit-learn>=0.19,<0.20 => scikit-learn>=0.19,<0.21 (PR #851)\r\n- tensorflow>=1.6,<1.11 => tensorflow>=1.6,<1.12 (PR #853)\r\n- tqdm>=4.23,<4.26 => tqdm>=4.23,<4.27 (PR #862)\r\n- pydocstyle>=2.1,<2.2 => pydocstyle>=2.1,<3.1 (PR #866)\r\n\r\n### Deprecated\r\n\r\n### Fixed\r\n- Correct offset calculation in `tl.prepro.transform_matrix_offset_center` (PR #855)\r\n\r\n### Removed\r\n\r\n### Security\r\n\r\n### Contributors\r\n- @2wins: #850 #855\r\n- @DEKHTIARJonathan: #853\r\n- @zsdonghao: #857\r\n- @luomai: #857", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.11.0rc0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.11.0rc0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.11.0rc0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/13422092", "release_id": 13422092, "date_created": "2018-10-15T05:43:40Z", "date_published": "2018-10-15T09:09:34Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12786631", "tag": "1.10.1", "name": "TensorLayer 1.10.1", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "## Important Notice\r\n**TensorLayer 1.10.x will be the last supported version of TL 1.X, big changes are upcoming and won't preserve backward compatibility. TensorLayer 1.10.x will only be updated with bugfixes on existing features. No additional feature will be implemented in TL 1.10.x**\r\n\r\n## Changelog\r\n\r\n### Added\r\n- unittest `tests\\test_timeout.py` has been added to ensure the network creation process does not freeze.\r\n\r\n### Changed\r\n - remove 'tensorboard' param, replaced by 'tensorboard_dir' in `tensorlayer/utils.py` with customizable tensorboard directory (PR #819)\r\n\r\n### Removed\r\n- TL Graph API removed. Memory Leaks Issues with Graph API, will be fixed and integrated in TL 2.0 (PR #818)\r\n\r\n### Fixed\r\n- Issue #817 fixed: TL 1.10.0 - Memory Leaks and very slow network creation.\r\n\r\n### Dependencies Update\r\n- autopep8>=1.3,<1.4 => autopep8>=1.3,<1.5 (PR #815)\r\n- pytest-cov>=2.5,<2.6 => pytest-cov>=2.5,<2.7 (PR #820)\r\n- pytest>=3.6,<3.8 => pytest>=3.6,<3.9 (PR #823)\r\n- imageio>=2.3,<2.4 => imageio>=2.3,<2.5 (PR #823)\r\n\r\n### Contributors\r\n- @DEKHTIARJonathan: #815 #818 #820 #823\r\n- @ndiy: #819 \r\n- @zsdonghao: #818", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.10.1", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.10.1", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.10.1", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12786631", "release_id": 12786631, "date_created": "2018-09-07T14:22:43Z", "date_published": "2018-09-07T14:54:49Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12731095", "tag": "1.10.1rc0", "name": "TensorLayer 1.10.1rc0", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "## Changelog\r\n\r\n### Added\r\n- unittest `tests\\test_timeout.py` has been added to ensure the network creation process does not freeze.\r\n\r\n### Changed\r\n - remove 'tensorboard' param, replaced by 'tensorboard_dir' in `tensorlayer/utils.py` with customizable tensorboard directory (PR #819)\r\n\r\n### Removed\r\n- TL Graph API removed. Memory Leaks Issues with this API, will be fixed and integrated in TL 2.0 (PR #818)\r\n\r\n### Fixed\r\n- Issue #817 fixed: TL 1.10.0 - Memory Leaks and very slow network creation.\r\n\r\n### Dependencies Update\r\n- autopep8>=1.3,<1.4 => autopep8>=1.3,<1.5 (PR #815)\r\n- pytest-cov>=2.5,<2.6 => pytest-cov>=2.5,<2.7 (PR #820)\r\n- pytest>=3.6,<3.8 => pytest>=3.6,<3.9 (PR #823)\r\n- imageio>=2.3,<2.4 => imageio>=2.3,<2.5 (PR #823)\r\n\r\n### Contributors\r\n- @DEKHTIARJonathan: #815 #818 #820 #823\r\n- @ndiy: #819 \r\n- @zsdonghao: #818", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.10.1rc0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.10.1rc0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.10.1rc0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12731095", "release_id": 12731095, "date_created": "2018-09-04T23:43:28Z", "date_published": "2018-09-05T00:08:10Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12688549", "tag": "1.10.0", "name": "TensorLayer 1.10.0", "author": {"name": "zsdonghao", "type": "User"}, "description": "## Important Notice\r\n**This release contains a memory leak issue.**\r\n\r\n### Release Note\r\nIt has been a very busy summer for the TensorLayer team. In this version, we start to support: \r\n- query and modify a neural network through an intuitive [**graph API**](https://tensorlayer.readthedocs.io/en/latest/modules/files.html#tensorlayer.files.save_graph); \r\n- transparently scale-out your single-GPU training job onto multiple GPUs on a single server and multiple servers using a high-performance [**trainer**](https://tensorlayer.readthedocs.io/en/latest/modules/distributed.html) module. Trainer is backed by the high-performance and scalable Hovorod library, see examples [here](https://github.com/tensorlayer/tensorlayer/tree/master/examples/distributed_training);\r\n- reduce the memory usage of a neural network and even accelerate it using many advanced [**Network Quantization Layers**](https://tensorlayer.readthedocs.io/en/stable/modules/layers.html#quantized-nets);\r\n- add more pre-trained models in our [**model**](https://tensorlayer.readthedocs.io/en/stable/modules/models.html) module. \r\n\r\nMostly importantly, we decide to open-source a series of neural network application codes that have been used by practitioners. The first batch includes:\r\n- [**adaptive style transfer**](https://github.com/tensorlayer/adaptive-style-transfer) which allows you to do almost any kind of style transfer without compromise performance.\r\n- [**flexible openpose**](https://github.com/tensorlayer/openpose) which allows you deeply customize your openpose network based on the actual data shapes, accuracy requirement, memory constraints and inference speed targets.\r\n- [**super resolution**](https://github.com/tensorlayer/srgan) which allows you to apply this fantastic technique to medical imaging and many other important fields.\r\n\r\nAt the same time, just want to put a note ahead, we are working very hard towards the TensorLayer 2.0 release in order to synchronize with the coming TensorFlow 2.0. \r\n\r\nEnjoy this release, and we would love your feedback!\r\n\r\n\r\n### Added\r\n\r\n- API:\r\n  - Add `tl.model.vgg19` (PR #698)\r\n  - Add `tl.logging.contrib.hyperdash` (PR #739)\r\n  - Add `tl.distributed.trainer` (PR #700)\r\n  - Add `prefetch_buffer_size` to the `tl.distributed.Trainer` (PR #766)\r\n  - Add `tl.db.TensorHub` (PR \uff03751)\r\n  - Add `tl.files.save_graph` (PR \uff03751)\r\n  - Add `tl.files.load_graph_` (PR \uff03751)\r\n  - Add `tl.files.save_graph_and_params` (PR \uff03751)\r\n  - Add `tl.files.load_graph_and_params` (PR \uff03751)\r\n  - Add `tl.prepro.keypoint_random_xxx` (PR #787)\r\n- Documentation:\r\n  - Add binary, ternary and dorefa links (PR #711)\r\n  - Update input scale of VGG16 and VGG19 to 0~1 (PR #736)\r\n  - Update database (PR \uff03751)\r\n- Layer:\r\n  - Release SwitchNormLayer (PR #737)\r\n  - Release QuanConv2d, QuanConv2dWithBN, QuanDenseLayer, QuanDenseLayerWithBN (PR#735)\r\n  - Update Core Layer to support graph (PR \uff03751)\r\n  - All Pooling layers support `data_format` (PR #809)\r\n- Setup:\r\n  - Creation of installation flaggs `all_dev`, `all_cpu_dev`, and `all_gpu_dev` (PR #739)\r\n- Examples:\r\n  - change folder struction (PR #802)\r\n  - `tutorial_models_vgg19` has been introduced to show how to use `tl.model.vgg19` (PR #698).\r\n  - fix bug of `tutorial_bipedalwalker_a3c_continuous_action.py` (PR #734, Issue #732)\r\n  - `tutorial_models_vgg16` and `tutorial_models_vgg19` has been changed the input scale from [0,255] to [0,1](PR #710)\r\n  - `tutorial_mnist_distributed_trainer.py` and `tutorial_cifar10_distributed_trainer.py` are added to explain the uses of Distributed Trainer (PR #700)\r\n  - add `tutorial_quanconv_cifar10.py` and `tutorial_quanconv_mnist.py` (PR #735)\r\n  - add `tutorial_work_with_onnx.py`(PR #775)\r\n- Applications:\r\n  - [Arbitrary Style Transfer in Real-time with Adaptive Instance Normalization](https://arxiv.org/abs/1703.06868) (PR #799)\r\n\r\n### Changed\r\n\r\n  - function minibatches changed to avoid wasting samples.(PR #762)\r\n  - all the input scale in both vgg16 and vgg19 has been changed the input scale from [0,255] to [0,1](PR #710)\r\n  - Dockerfiles merged and refactored into one file (PR #747)\r\n  - LazyImports move to the most **top level** imports as possible (PR #739)\r\n  - some new test functions have been added in `test_layers_convolution.py`, `test_layers_normalization.py`, `test_layers_core.py` (PR #735)\r\n  - documentation now uses mock imports reducing the number of dependencies to compile the documentation (PR #785)\r\n  - fixed and enforced pydocstyle D210, D200, D301, D207, D403, D204, D412, D402, D300, D208 (PR #784)\r\n\r\n### Deprecated\r\n\r\n  - `tl.logging.warn` has been deprecated in favor of `tl.logging.warning` (PR #739)\r\n\r\n### Removed\r\n\r\n  - `conv_layers()`  has been removed in both vgg16 and vgg19(PR #710)\r\n\r\n### Fixed\r\n\r\n- import error caused by matplotlib on OSX (PR #705)\r\n- missing import in tl.prepro (PR #712)\r\n- Dockerfiles import error fixed - issue #733 (PR #747)\r\n- Fix a typo in `absolute_difference_error` in file: `tensorlayer/cost.py` - Issue #753 (PR #759)\r\n- Fix the bug of scaling the learning rate of trainer (PR #776)\r\n- log error instead of info when npz file not found. (PR #812)\r\n\r\n### Security\r\n\r\n### Dependencies Update\r\n\r\n- tensorflow>=1.8,<1.9 => tensorflow>=1.6,<1.11 (PR #739 and PR #798)\r\n- tensorflow-gpu>=1.8,<1.9 => tensorflow-gpu>=1.6,<1.11 (PR #739 and PR #798)\r\n- numpy>=1.14,<1.15 => numpy>=1.14,<1.16 (PR #754)\r\n- pymongo>=3.6,<3.7 => pymongo>=3.6,<3.8 (PR #750)\r\n- pytest>=3.6,<3.7 => tqdm>=3.6,<3.8 (PR #798)\r\n- pytest-xdist>=1.22,<1.23 => pytest-xdist>=1.22,<1.24 (PR #805 and #806)\r\n- tqdm>=4.23,<4.25 => tqdm>=4.23,<4.26 (PR #798)\r\n- yapf>=0.21,<0.22 => yapf>=0.22,<0.24 (PR #798 #808)\r\n\r\n### Contributors\r\n\r\n- @DEKHTIARJonathan: #739 #747 #750 #754\r\n- @lgarithm: #705 #700\r\n- @OwenLiuzZ: #698 #710 #775 #776\r\n- @zsdonghao: #711 #712 #734 #736 #737 #700 #751 #809\r\n- @luomai: #700 #751 #766 #802\r\n- @XJTUWYD: #735\r\n- @mutewall: #735\r\n- @thangvubk: #759\r\n- @JunbinWang: #796\r\n- @boldjoel: #787", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.10.0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.10.0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.10.0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12688549", "release_id": 12688549, "date_created": "2018-09-01T19:58:05Z", "date_published": "2018-09-01T20:06:33Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12162408", "tag": "1.9.1", "name": "TensorLayer 1.9.1", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "### Release Note\r\nThis version is identical to 1.9.0 but fix the issue with TF 1.10.0: https://stackoverflow.com/questions/51593126/tensorlayer-fails-with-tensorflow-1-10-0rc0#51593186\r\n\r\n# Changelog\r\n- Issue with tensorflow 1.10.0 fixed", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.9.1", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.9.1", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.9.1", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/12162408", "release_id": 12162408, "date_created": "2018-07-30T11:08:16Z", "date_published": "2018-07-30T11:32:45Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11513784", "tag": "1.9.0", "name": "TensorLayer 1.9.0", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "### Release Note\r\nThis version was supposed to be release under version: **1.8.6**, due to the large amount of changes introduced in this version, it has been decided to release this version under the version: **1.9.0**\r\n\r\n# Changelog\r\n\r\n### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (PR #580)\r\n  - `tl.lazy_imports.LazyImport` to import heavy libraries only when necessary (PR #667)\r\n  - `tl.act.leaky_relu6` and `tl.layers.PRelu6Layer` have been deprecated (PR #686)\r\n  - `tl.act.leaky_twice_relu6` and `tl.layers.PTRelu6Layer` have been deprecated (PR #686)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (PR #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (PR #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (PR #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (PR #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (PR #660)\r\n  - `tl.decorators` API enriched with `protected_method` (PR #675)\r\n  - `tl.decorators` API enriched with `deprecated` directly raising warning and modifying documentation (PR #691)\r\n- Docker:\r\n  - Containers for each release and for each PR merged on master built (PR #648)\r\n  - Containers built in the following configurations (PR #648):\r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu\r\n- Documentation:\r\n  - Clean README.md (PR #677)\r\n  - Release semantic version added on index page (PR #633)\r\n  - Optimizers page added (PR #636)\r\n  - `AMSGrad` added on Optimizers page added (PR #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (PR #579)\r\n  - AtrousDeConv2dLayer added (PR #662)\r\n  - Fix bugs of using `tf.layers` in CNN (PR #686)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (PR #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (PR #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (PR #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (PR #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (PR #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (PR #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (PR #645)\r\n  - `test_decorators.py` added (PR #660)\r\n  - `test_activations.py` added (PR #686)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (PR #560).\r\n  - add the following to all tutorials (PR #697):  \r\n    ```python\r\n    tf.logging.set_verbosity(tf.logging.DEBUG)\r\n    tl.logging.set_verbosity(tl.logging.DEBUG)\r\n    ```\r\n\r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (PR #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (PR #587)\r\n- RTD links point to stable documentation instead of latest used for development (PR #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (PR #644)\r\n- README.md Badges Updated with Support Python and Tensorflow Versions (PR #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (PR #645)\r\n- Relative Imports changed for absolute imports (PR #657)\r\n- `tl.files` refactored into a directory with numerous files (PR #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (PR #657)\r\n- extra requirements hidden inside the library added in the project requirements (PR #657)\r\n- requirements files refactored in `requirements/` directory (PR #657)\r\n- README.md and other markdown files have been refactored and cleaned. (PR #639)\r\n- Ternary Convolution Layer added in unittest (PR #658)\r\n- Convolution Layers unittests have been cleaned & refactored (PR #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (PR #660)\r\n- `tf.identity` as activation is **ignored**, thus reducing the size of the graph by removing useless operation (PR #667)\r\n- argument dictionaries are now checked and saved within the `Layer` Base Class (PR #667)\r\n- `Layer` Base Class now presenting methods to update faultlessly `all_layers`, `all_params`, and `all_drop` (PR #675)\r\n- Input Layers have been removed from `tl.layers.core` and added to `tl.layers.inputs` (PR #675)\r\n- Input Layers are now considered as true layers in the graph (they represent a placeholder), unittests have been updated (PR #675)\r\n- Layer API is simplified, with automatic feeding `prev_layer` into `self.inputs` (PR #675)\r\n- Complete Documentation Refactoring and Reorganization (namely Layer APIs) (PR #691)\r\n\r\n### Deprecated\r\n- `tl.layers.TimeDistributedLayer` argurment `args` is deprecated in favor of `layer_args` (PR #667)\r\n- `tl.act.leaky_relu` have been deprecated in favor of `tf.nn.leaky_relu` (PR #686)\r\n\r\n### Removed\r\n- `assert()` calls remove and replaced by `raise AssertionError()` (PR #667)\r\n- `tl.identity` is removed, not used anymore and deprecated for a long time (PR #667)\r\n- All Code specific to `TF.__version__ < \"1.6\"` have been removed (PR #675)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (PR #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (PR #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (PR #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (PR #573)\r\n- Issue #664 with `tl.layers.ConvLSTMLayer` fixed (PR #676)\r\n- Typo of the document of ElementwiseLambdaLayer (PR #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (PR #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (PR #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (PR #661)\r\n- Duplicated code removed when bias was used (PR #667)\r\n- `tensorlayer.third_party.roi_pooling.roi_pooling.roi_pooling_ops` is now lazy loaded to prevent systematic error raised (PR #675)\r\n- Documentation not build in RTD due to old version of theme in docs directory fixed (PR #703)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (PR #635)\r\n  - All tutorials tested and errors have been fixed (PR #635)\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (PR #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (PR #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (PR #656)\r\n- Update keras from 2.1.6 to 2.2.0 (PR #684)\r\n- Update requests from 2.18.4 to 2.19.0 (PR #695)\r\n\r\n### Contributors\r\n- @lgarithm: #563\r\n- @DEKHTIARJonathan: #573 #574 #575 #580 #633 #635 #636 #639 #644 #645 #648 #657 #667 #658 #659 #660 #661 #666 #667 #672 #675 #683 #686 #687 #690 #691 #692 #703\r\n- @2wins: #560 #566 #662\r\n- @One-sixth: #579\r\n- @zsdonghao: #587 #588 #639 #685 #697\r\n- @luomai: #639 #677\r\n- @dengyueyun666: #676", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.9.0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.9.0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.9.0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11513784", "release_id": 11513784, "date_created": "2018-06-16T18:15:54Z", "date_published": "2018-06-16T18:30:22Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11503692", "tag": "1.8.6rc6", "name": "TensorLayer 1.8.6rc6", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (PR #580)\r\n  - `tl.lazy_imports.LazyImport` to import heavy libraries only when necessary (PR #667)\r\n  - `tl.act.leaky_relu6` and `tl.layers.PRelu6Layer` have been deprecated (PR #686)\r\n  - `tl.act.leaky_twice_relu6` and `tl.layers.PTRelu6Layer` have been deprecated (PR #686)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (PR #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (PR #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (PR #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (PR #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (PR #660)\r\n  - `tl.decorators` API enriched with `protected_method` (PR #675)\r\n  - `tl.decorators` API enriched with `deprecated` directly raising warning and modifying documentation (PR #691)\r\n- Docker:\r\n  - Containers for each release and for each PR merged on master built (PR #648)\r\n  - Containers built in the following configurations (PR #648):\r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu\r\n- Documentation:\r\n  - Clean README.md (PR #677)\r\n  - Release semantic version added on index page (PR #633)\r\n  - Optimizers page added (PR #636)\r\n  - `AMSGrad` added on Optimizers page added (PR #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (PR #579)\r\n  - AtrousDeConv2dLayer added (PR #662)\r\n  - Fix bugs of using `tf.layers` in CNN (PR #686)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (PR #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (PR #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (PR #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (PR #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (PR #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (PR #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (PR #645)\r\n  - `test_decorators.py` added (PR #660)\r\n  - `test_activations.py` added (PR #686)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (PR #560).\r\n  - add the following to all tutorials (PR #697):  \r\n    ```python\r\n    tf.logging.set_verbosity(tf.logging.DEBUG)\r\n    tl.logging.set_verbosity(tl.logging.DEBUG)\r\n    ```\r\n    \r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (PR #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (PR #587)\r\n- RTD links point to stable documentation instead of latest used for development (PR #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (PR #644)\r\n- README.md Badges Updated with Support Python and Tensorflow Versions (PR #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (PR #645)\r\n- Relative Imports changed for absolute imports (PR #657)\r\n- `tl.files` refactored into a directory with numerous files (PR #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (PR #657)\r\n- extra requirements hidden inside the library added in the project requirements (PR #657)\r\n- requirements files refactored in `requirements/` directory (PR #657)\r\n- README.md and other markdown files have been refactored and cleaned. (PR #639)\r\n- Ternary Convolution Layer added in unittest (PR #658)\r\n- Convolution Layers unittests have been cleaned & refactored (PR #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (PR #660)\r\n- `tf.identity` as activation is **ignored**, thus reducing the size of the graph by removing useless operation (PR #667)\r\n- argument dictionaries are now checked and saved within the `Layer` Base Class (PR #667)\r\n- `Layer` Base Class now presenting methods to update faultlessly `all_layers`, `all_params`, and `all_drop` (PR #675)\r\n- Input Layers have been removed from `tl.layers.core` and added to `tl.layers.inputs` (PR #675)\r\n- Input Layers are now considered as true layers in the graph (they represent a placeholder), unittests have been updated (PR #675)\r\n- Layer API is simplified, with automatic feeding `prev_layer` into `self.inputs` (PR #675)\r\n- Complete Documentation Refactoring and Reorganization (namely Layer APIs) (PR #691)\r\n\r\n### Deprecated\r\n- `tl.layers.TimeDistributedLayer` argurment `args` is deprecated in favor of `layer_args` (PR #667)\r\n- `tl.act.leaky_relu` have been deprecated in favor of `tf.nn.leaky_relu` (PR #686)\r\n\r\n### Removed\r\n- `assert()` calls remove and replaced by `raise AssertionError()` (PR #667)\r\n- `tl.identity` is removed, not used anymore and deprecated for a long time (PR #667)\r\n- All Code specific to `TF.__version__ < \"1.6\"` have been removed (PR #675)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (PR #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (PR #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (PR #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (PR #573)\r\n- Issue #664 with `tl.layers.ConvLSTMLayer` fixed (PR #676)\r\n- Typo of the document of ElementwiseLambdaLayer (PR #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (PR #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (PR #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (PR #661)\r\n- Duplicated code removed when bias was used (PR #667)\r\n- `tensorlayer.third_party.roi_pooling.roi_pooling.roi_pooling_ops` is now lazy loaded to prevent systematic error raised (PR #675)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (PR #635)\r\n  - All tutorials tested and errors have been fixed (PR #635)\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (PR #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (PR #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (PR #656)\r\n- Update keras from 2.1.6 to 2.2.0 (PR #684)\r\n- Update requests from 2.18.4 to 2.19.0 (PR #695)\r\n\r\n### Contributors\r\n- @lgarithm: #563\r\n- @DEKHTIARJonathan: #573 #574 #575 #580 #633 #635 #636 #639 #644 #645 #648 #657 #667 #658 #659 #660 #661 #666 #667 #672 #675 #683 #686 #687 #690 #691 #692\r\n- @2wins: #560 #566 #662\r\n- @One-sixth: #579\r\n- @zsdonghao: #587 #588 #639 #685 #697\r\n- @luomai: #639 #677\r\n- @dengyueyun666: #676", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.6rc6", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.6rc6", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.6rc6", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11503692", "release_id": 11503692, "date_created": "2018-06-15T15:29:53Z", "date_published": "2018-06-15T15:49:40Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11378242", "tag": "1.8.6rc5", "name": "TensorLayer 1.8.6rc5", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "# Changelog\r\n\r\n### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (by @DEKHTIARJonathan in #580)\r\n  - `tl.lazy_imports.LazyImport` to import heavy libraries only when necessary (by @DEKHTIARJonathan in #667)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (by @DEKHTIARJonathan in #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (by @DEKHTIARJonathan in #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (by @DEKHTIARJonathan in #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (by @DEKHTIARJonathan in #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (by @DEKHTIARJonathan in #660)\r\n  - `tl.decorators` API enriched with `protected_method` (by @DEKHTIARJonathan in #675)\r\n- Docker:\r\n  - Containers for each release and for each PR merged on master built (by @DEKHTIARJonathan in #648)\r\n  - Containers built in the following configurations (by @DEKHTIARJonathan in #648):\r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu\r\n- Documentation:\r\n  - Clean README (by @luomai in #677)\r\n  - Release semantic version added on index page (by @DEKHTIARJonathan in #633)\r\n  - Optimizers page added (by @DEKHTIARJonathan in #636)\r\n  - `AMSGrad` added on Optimizers page added (by @DEKHTIARJonathan in #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (by @One-sixth in #579)\r\n  - AtrousDeConv2dLayer added (by @2wins in #662)\r\n  - Fix bugs of using `tf.layers` in CNN (by @zsdonghao in #686)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (by @DEKHTIARJonathan in #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (by @DEKHTIARJonathan in #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (by @2wins in #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (by @DEKHTIARJonathan in #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (by @DEKHTIARJonathan in #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (by @DEKHTIARJonathan in #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (by @DEKHTIARJonathan in #645)\r\n  - `test_decorators.py` added (by @DEKHTIARJonathan in #660)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (by @2wins in #560).\r\n\r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (by @DEKHTIARJonathan in #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (by @zsdonghao in #587)\r\n- RTD links point to stable documentation instead of latest used for development (by @DEKHTIARJonathan in #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (by @DEKHTIARJonathan in #644)\r\n- Readme Badges Updated with Support Python and Tensorflow Versions (by @DEKHTIARJonathan in #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (by @DEKHTIARJonathan in #645)\r\n- Relative Imports changed for absolute imports (by @DEKHTIARJonathan in #657)\r\n- `tl.files` refactored into a directory with numerous files (by @DEKHTIARJonathan in #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (by @DEKHTIARJonathan in #657)\r\n- extra requirements hidden inside the library added in the project requirements (by @DEKHTIARJonathan in #657)\r\n- requirements files refactored in `requirements/` directory (by @DEKHTIARJonathan in #657)\r\n- README.md and other markdown files have been refactored and cleaned. (by @zsdonghao @DEKHTIARJonathan @luomai in #639)\r\n- Ternary Convolution Layer added in unittest (by @DEKHTIARJonathan in #658)\r\n- Convolution Layers unittests have been cleaned & refactored (by @DEKHTIARJonathan in #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (by @DEKHTIARJonathan in #660)\r\n- `tf.identity` as activation is **ignored**, thus reducing the size of the graph by removing useless operation (by @DEKHTIARJonathan in #667)\r\n- argument dictionaries are now checked and saved within the `Layer` Base Class (by @DEKHTIARJonathan in #667)\r\n- `Layer` Base Class now presenting methods to update faultlessly `all_layers`, `all_params`, and `all_drop` (by @DEKHTIARJonathan in #675)\r\n- Input Layers have been removed from `tl.layers.core` and added to `tl.layers.inputs` (by @DEKHTIARJonathan in #675)\r\n- Input Layers are now considered as true layers in the graph (they represent a placeholder), unittests have been updated (by @DEKHTIARJonathan in #675)\r\n- Layer API is simplified, with automatic feeding `prev_layer` into `self.inputs` (by @DEKHTIARJonathan in #675)\r\n\r\n### Deprecated\r\n- `tl.layers.TimeDistributedLayer` argurment `args` is deprecated in favor of `layer_args` (by @DEKHTIARJonathan in #667)\r\n\r\n### Removed\r\n- `assert()` calls remove and replaced by `raise AssertionError()` (by @DEKHTIARJonathan in #667)\r\n- `tl.identity` is removed, not used anymore and deprecated for a long time (by @DEKHTIARJonathan in #667)\r\n- All Code specific to `TF.__version__ < \"1.6\"` have been removed (by @DEKHTIARJonathan in #675)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (by @DEKHTIARJonathan in #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (by @DEKHTIARJonathan in #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (by @2wins in #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (by @DEKHTIARJonathan in #573)\r\n- Issue #664 with `tl.layers.ConvLSTMLayer` fixed (by @dengyueyun666 in #676)\r\n- Typo of the document of ElementwiseLambdaLayer (by @zsdonghao in #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (by @DEKHTIARJonathan in #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (by @DEKHTIARJonathan in #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (by @DEKHTIARJonathan in #661)\r\n- Duplicated code removed when bias was used (by @DEKHTIARJonathan in #667)\r\n- `tensorlayer.third_party.roi_pooling.roi_pooling.roi_pooling_ops` is now lazy loaded to prevent systematic error raised (by @DEKHTIARJonathan in #675)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (by @DEKHTIARJonathan in #635)\r\n  - All tutorials tested and errors have been fixed (by @DEKHTIARJonathan in #635)\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (by @DEKHTIARJonathan and @pyup-bot in #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (by @DEKHTIARJonathan and @pyup-bot in #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (by @DEKHTIARJonathan and @pyup-bot in #656)\r\n- Update keras from 2.1.6 to 2.2.0 (by @DEKHTIARJonathan and @pyup-bot in #684)\r\n\r\n### Contributors\r\n@lgarithm @DEKHTIARJonathan @2wins @One-sixth @zsdonghao @luomai", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.6rc5", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.6rc5", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.6rc5", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11378242", "release_id": 11378242, "date_created": "2018-06-07T19:47:00Z", "date_published": "2018-06-07T19:51:11Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11372194", "tag": "1.8.6rc4", "name": "TensorLayer 1.8.6rc4", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "# Changelog\r\n\r\n### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (by @DEKHTIARJonathan in #580)\r\n  - `tl.lazy_imports.LazyImport` to import heavy libraries only when necessary (by @DEKHTIARJonathan in #667)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (by @DEKHTIARJonathan in #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (by @DEKHTIARJonathan in #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (by @DEKHTIARJonathan in #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (by @DEKHTIARJonathan in #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (by @DEKHTIARJonathan in #660)\r\n  - `tl.decorators` API enriched with `protected_method` (by @DEKHTIARJonathan in #675)\r\n- Docker:\r\n  - Containers for each release and for each PR merged on master built (by @DEKHTIARJonathan in #648)\r\n  - Containers built in the following configurations (by @DEKHTIARJonathan in #648):\r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu\r\n- Documentation:\r\n  - Clean README (by @luomai in #677)\r\n  - Release semantic version added on index page (by @DEKHTIARJonathan in #633)\r\n  - Optimizers page added (by @DEKHTIARJonathan in #636)\r\n  - `AMSGrad` added on Optimizers page added (by @DEKHTIARJonathan in #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (by @One-sixth in #579)\r\n  - AtrousDeConv2dLayer added (by @2wins in #662)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (by @DEKHTIARJonathan in #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (by @DEKHTIARJonathan in #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (by @2wins in #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (by @DEKHTIARJonathan in #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (by @DEKHTIARJonathan in #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (by @DEKHTIARJonathan in #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (by @DEKHTIARJonathan in #645)\r\n  - `test_decorators.py` added (by @DEKHTIARJonathan in #660)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (by @2wins in #560).\r\n\r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (by @DEKHTIARJonathan in #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (by @zsdonghao in #587)\r\n- RTD links point to stable documentation instead of latest used for development (by @DEKHTIARJonathan in #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (by @DEKHTIARJonathan in #644)\r\n- Readme Badges Updated with Support Python and Tensorflow Versions (by @DEKHTIARJonathan in #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (by @DEKHTIARJonathan in #645)\r\n- Relative Imports changed for absolute imports (by @DEKHTIARJonathan in #657)\r\n- `tl.files` refactored into a directory with numerous files (by @DEKHTIARJonathan in #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (by @DEKHTIARJonathan in #657)\r\n- extra requirements hidden inside the library added in the project requirements (by @DEKHTIARJonathan in #657)\r\n- requirements files refactored in `requirements/` directory (by @DEKHTIARJonathan in #657)\r\n- README.md and other markdown files have been refactored and cleaned. (by @zsdonghao @DEKHTIARJonathan @luomai in #639)\r\n- Ternary Convolution Layer added in unittest (by @DEKHTIARJonathan in #658)\r\n- Convolution Layers unittests have been cleaned & refactored (by @DEKHTIARJonathan in #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (by @DEKHTIARJonathan in #660)\r\n- `tf.identity` as activation is **ignored**, thus reducing the size of the graph by removing useless operation (by @DEKHTIARJonathan in #667)\r\n- argument dictionaries are now checked and saved within the `Layer` Base Class (by @DEKHTIARJonathan in #667)\r\n- `Layer` Base Class now presenting methods to update faultlessly `all_layers`, `all_params`, and `all_drop` (by @DEKHTIARJonathan in #675)\r\n- Input Layers have been removed from `tl.layers.core` and added to `tl.layers.inputs` (by @DEKHTIARJonathan in #675)\r\n- Input Layers are now considered as true layers in the graph (they represent a placeholder), unittests have been updated (by @DEKHTIARJonathan in #675)\r\n- Layer API is simplified, with automatic feeding `prev_layer` into `self.inputs` (by @DEKHTIARJonathan in #675)\r\n\r\n### Deprecated\r\n- `tl.layers.TimeDistributedLayer` argurment `args` is deprecated in favor of `layer_args` (by @DEKHTIARJonathan in #667)\r\n\r\n### Removed\r\n- `assert()` calls remove and replaced by `raise AssertionError()` (by @DEKHTIARJonathan in #667)\r\n- `tl.identity` is removed, not used anymore and deprecated for a long time (by @DEKHTIARJonathan in #667)\r\n- All Code specific to `TF.__version__ < \"1.6\"` have been removed (by @DEKHTIARJonathan in #675)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (by @DEKHTIARJonathan in #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (by @DEKHTIARJonathan in #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (by @2wins in #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (by @DEKHTIARJonathan in #573)\r\n- Issue #664 with `tl.layers.ConvLSTMLayer` fixed (by @dengyueyun666 in #676)\r\n- Typo of the document of ElementwiseLambdaLayer (by @zsdonghao in #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (by @DEKHTIARJonathan in #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (by @DEKHTIARJonathan in #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (by @DEKHTIARJonathan in #661)\r\n- Duplicated code removed when bias was used (by @DEKHTIARJonathan in #667)\r\n- `tensorlayer.third_party.roi_pooling.roi_pooling.roi_pooling_ops` is now lazy loaded to prevent systematic error raised (by @DEKHTIARJonathan in #675)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (by @DEKHTIARJonathan in #635)\r\n  - All tutorials tested and errors have been fixed (by @DEKHTIARJonathan in #635)\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (by @DEKHTIARJonathan and @pyup-bot in #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (by @DEKHTIARJonathan and @pyup-bot in #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (by @DEKHTIARJonathan and @pyup-bot in #656)\r\n- Update keras from 2.1.6 to 2.2.0 (by @DEKHTIARJonathan and @pyup-bot in #684)\r\n\r\n### Contributors\r\n@lgarithm @DEKHTIARJonathan @2wins @One-sixth @zsdonghao @luomai", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.6rc4", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.6rc4", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.6rc4", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11372194", "release_id": 11372194, "date_created": "2018-06-07T14:28:34Z", "date_published": "2018-06-07T14:30:42Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11348339", "tag": "1.8.6rc3", "name": "TensorLayer 1.8.6rc3", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "# Changelog\r\n\r\n### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (by @DEKHTIARJonathan in #580)\r\n  - `tl.lazy_imports.LazyImport` to import heavy libraries only when necessary (by @DEKHTIARJonathan in #667)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (by @DEKHTIARJonathan in #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (by @DEKHTIARJonathan in #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (by @DEKHTIARJonathan in #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (by @DEKHTIARJonathan in #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (by @DEKHTIARJonathan in #660)\r\n  - `tl.decorators` API enriched with `protected_method` (by @DEKHTIARJonathan in #675)\r\n- Docker:\r\n  - Containers for each release and for each PR merged on master built (by @DEKHTIARJonathan in #648)\r\n  - Containers built in the following configurations (by @DEKHTIARJonathan in #648):\r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu\r\n- Documentation:\r\n  - Clean README (by @luomai in #677)\r\n  - Release semantic version added on index page (by @DEKHTIARJonathan in #633)\r\n  - Optimizers page added (by @DEKHTIARJonathan in #636)\r\n  - `AMSGrad` added on Optimizers page added (by @DEKHTIARJonathan in #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (by @One-sixth in #579)\r\n  - AtrousDeConv2dLayer added (by @2wins in #662)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (by @DEKHTIARJonathan in #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (by @DEKHTIARJonathan in #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (by @2wins in #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (by @DEKHTIARJonathan in #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (by @DEKHTIARJonathan in #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (by @DEKHTIARJonathan in #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (by @DEKHTIARJonathan in #645)\r\n  - `test_decorators.py` added (by @DEKHTIARJonathan in #660)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (by @2wins in #560).\r\n\r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (by @DEKHTIARJonathan in #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (by @zsdonghao in #587)\r\n- RTD links point to stable documentation instead of latest used for development (by @DEKHTIARJonathan in #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (by @DEKHTIARJonathan in #644)\r\n- Readme Badges Updated with Support Python and Tensorflow Versions (by @DEKHTIARJonathan in #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (by @DEKHTIARJonathan in #645)\r\n- Relative Imports changed for absolute imports (by @DEKHTIARJonathan in #657)\r\n- `tl.files` refactored into a directory with numerous files (by @DEKHTIARJonathan in #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (by @DEKHTIARJonathan in #657)\r\n- extra requirements hidden inside the library added in the project requirements (by @DEKHTIARJonathan in #657)\r\n- requirements files refactored in `requirements/` directory (by @DEKHTIARJonathan in #657)\r\n- README.md and other markdown files have been refactored and cleaned. (by @zsdonghao @DEKHTIARJonathan @luomai in #639)\r\n- Ternary Convolution Layer added in unittest (by @DEKHTIARJonathan in #658)\r\n- Convolution Layers unittests have been cleaned & refactored (by @DEKHTIARJonathan in #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (by @DEKHTIARJonathan in #660)\r\n- `tf.identity` as activation is **ignored**, thus reducing the size of the graph by removing useless operation (by @DEKHTIARJonathan in #667)\r\n- argument dictionaries are now checked and saved within the `Layer` Base Class (by @DEKHTIARJonathan in #667)\r\n- `Layer` Base Class now presenting methods to update faultlessly `all_layers`, `all_params`, and `all_drop` (by @DEKHTIARJonathan in #675)\r\n- Input Layers have been removed from `tl.layers.core` and added to `tl.layers.inputs` (by @DEKHTIARJonathan in #675)\r\n- Input Layers are now considered as true layers in the graph (they represent a placeholder), unittests have been updated (by @DEKHTIARJonathan in #675)\r\n- Layer API is simplified, with automatic feeding `prev_layer` into `self.inputs` (by @DEKHTIARJonathan in #675)\r\n\r\n### Deprecated\r\n- `tl.layers.TimeDistributedLayer` argurment `args` is deprecated in favor of `layer_args` (by @DEKHTIARJonathan in #667)\r\n\r\n### Removed\r\n- `assert()` calls remove and replaced by `raise AssertionError()` (by @DEKHTIARJonathan in #667)\r\n- `tl.identity` is removed, not used anymore and deprecated for a long time (by @DEKHTIARJonathan in #667)\r\n- All Code specific to `TF.__version__ < \"1.6\"` have been removed (by @DEKHTIARJonathan in #675)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (by @DEKHTIARJonathan in #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (by @DEKHTIARJonathan in #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (by @2wins in #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (by @DEKHTIARJonathan in #573)\r\n- Issue #664 with `tl.layers.ConvLSTMLayer` fixed (by @dengyueyun666 in #676)\r\n- Typo of the document of ElementwiseLambdaLayer (by @zsdonghao in #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (by @DEKHTIARJonathan in #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (by @DEKHTIARJonathan in #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (by @DEKHTIARJonathan in #661)\r\n- Duplicated code removed when bias was used (by @DEKHTIARJonathan in #667)\r\n- `tensorlayer.third_party.roi_pooling.roi_pooling.roi_pooling_ops` is now lazy loaded to prevent systematic error raised (by @DEKHTIARJonathan in #675)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (by @DEKHTIARJonathan in #635)\r\n  - All tutorials tested and errors have been fixed (by @DEKHTIARJonathan in #635)\r\n### Security\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (by @DEKHTIARJonathan and @pyup-bot in #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (by @DEKHTIARJonathan and @pyup-bot in #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (by @DEKHTIARJonathan and @pyup-bot in #656)\r\n\r\n### Contributors\r\n@lgarithm @DEKHTIARJonathan @2wins @One-sixth @zsdonghao @luomai", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.6rc3", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.6rc3", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.6rc3", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11348339", "release_id": 11348339, "date_created": "2018-06-06T12:34:47Z", "date_published": "2018-06-06T12:37:54Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11311190", "tag": "1.8.6rc2", "name": "TensorLayer 1.8.6rc2", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "# Changelog\r\n\r\n### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (by @DEKHTIARJonathan in #580)\r\n  - `tl.lazy_imports.LazyImport` to import heavy libraries only when necessary (by @DEKHTIARJonathan in #667)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (by @DEKHTIARJonathan in #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (by @DEKHTIARJonathan in #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (by @DEKHTIARJonathan in #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (by @DEKHTIARJonathan in #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (by @DEKHTIARJonathan in #660)\r\n  - `tl.decorators` API enriched with `protected_method` (by @DEKHTIARJonathan in #675)\r\n- Docker:\r\n  - Containers for each release and for each PR merged on master built (by @DEKHTIARJonathan in #648)\r\n  - Containers built in the following configurations (by @DEKHTIARJonathan in #648):\r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu\r\n- Documentation:\r\n  - Clean README (by @luomai in #677)\r\n  - Release semantic version added on index page (by @DEKHTIARJonathan in #633)\r\n  - Optimizers page added (by @DEKHTIARJonathan in #636)\r\n  - `AMSGrad` added on Optimizers page added (by @DEKHTIARJonathan in #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (by @One-sixth in #579)\r\n  - AtrousDeConv2dLayer added (by @2wins in #662)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (by @DEKHTIARJonathan in #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (by @DEKHTIARJonathan in #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (by @2wins in #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (by @DEKHTIARJonathan in #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (by @DEKHTIARJonathan in #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (by @DEKHTIARJonathan in #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (by @DEKHTIARJonathan in #645)\r\n  - `test_decorators.py` added (by @DEKHTIARJonathan in #660)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (by @2wins in #560).\r\n\r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (by @DEKHTIARJonathan in #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (by @zsdonghao in #587)\r\n- RTD links point to stable documentation instead of latest used for development (by @DEKHTIARJonathan in #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (by @DEKHTIARJonathan in #644)\r\n- Readme Badges Updated with Support Python and Tensorflow Versions (by @DEKHTIARJonathan in #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (by @DEKHTIARJonathan in #645)\r\n- Relative Imports changed for absolute imports (by @DEKHTIARJonathan in #657)\r\n- `tl.files` refactored into a directory with numerous files (by @DEKHTIARJonathan in #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (by @DEKHTIARJonathan in #657)\r\n- extra requirements hidden inside the library added in the project requirements (by @DEKHTIARJonathan in #657)\r\n- requirements files refactored in `requirements/` directory (by @DEKHTIARJonathan in #657)\r\n- README.md and other markdown files have been refactored and cleaned. (by @zsdonghao @DEKHTIARJonathan @luomai in #639)\r\n- Ternary Convolution Layer added in unittest (by @DEKHTIARJonathan in #658)\r\n- Convolution Layers unittests have been cleaned & refactored (by @DEKHTIARJonathan in #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (by @DEKHTIARJonathan in #660)\r\n- `tf.identity` as activation is **ignored**, thus reducing the size of the graph by removing useless operation (by @DEKHTIARJonathan in #667)\r\n- argument dictionaries are now checked and saved within the `Layer` Base Class (by @DEKHTIARJonathan in #667)\r\n- `Layer` Base Class now presenting methods to update faultlessly `all_layers`, `all_params`, and `all_drop` (by @DEKHTIARJonathan in #675)\r\n- Input Layers have been removed from `tl.layers.core` and added to `tl.layers.inputs` (by @DEKHTIARJonathan in #675)\r\n- Input Layers are now considered as true layers in the graph (they represent a placeholder), unittests have been updated (by @DEKHTIARJonathan in #675)\r\n- Layer API is simplified, with automatic feeding `prev_layer` into `self.inputs` (by @DEKHTIARJonathan in #675)\r\n\r\n### Deprecated\r\n- `tl.layers.TimeDistributedLayer` argurment `args` is deprecated in favor of `layer_args` (by @DEKHTIARJonathan in #667)\r\n\r\n### Removed\r\n- `assert()` calls remove and replaced by `raise AssertionError()` (by @DEKHTIARJonathan in #667)\r\n- `tl.identity` is removed, not used anymore and deprecated for a long time (by @DEKHTIARJonathan in #667)\r\n- All Code specific to `TF.__version__ < \"1.6\"` have been removed (by @DEKHTIARJonathan in #675)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (by @DEKHTIARJonathan in #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (by @DEKHTIARJonathan in #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (by @2wins in #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (by @DEKHTIARJonathan in #573)\r\n- Issue #664 with `tl.layers.ConvLSTMLayer` fixed (by @dengyueyun666 in #676)\r\n- Typo of the document of ElementwiseLambdaLayer (by @zsdonghao in #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (by @DEKHTIARJonathan in #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (by @DEKHTIARJonathan in #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (by @DEKHTIARJonathan in #661)\r\n- Duplicated code removed when bias was used (by @DEKHTIARJonathan in #667)\r\n- `tensorlayer.third_party.roi_pooling.roi_pooling.roi_pooling_ops` is now lazy loaded to prevent systematic error raised (by @DEKHTIARJonathan in #675)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (by @DEKHTIARJonathan in #635)\r\n  - All tutorials tested and errors have been fixed (by @DEKHTIARJonathan in #635)\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (by @DEKHTIARJonathan and @pyup-bot in #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (by @DEKHTIARJonathan and @pyup-bot in #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (by @DEKHTIARJonathan and @pyup-bot in #656)\r\n\r\n### Contributors\r\n@lgarithm @DEKHTIARJonathan @2wins @One-sixth @zsdonghao @luomai", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.6rc2", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.6rc2", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.6rc2", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11311190", "release_id": 11311190, "date_created": "2018-06-04T14:55:57Z", "date_published": "2018-06-04T15:11:23Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11297320", "tag": "1.8.6rc1", "name": "TensorLayer 1.8.6rc1", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "# Changelog\r\n\r\n### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (by @DEKHTIARJonathan in #580)\r\n  - `tl.lazy_imports.LazyImport` to import heavy libraries only when necessary (by @DEKHTIARJonathan in #667)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (by @DEKHTIARJonathan in #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (by @DEKHTIARJonathan in #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (by @DEKHTIARJonathan in #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (by @DEKHTIARJonathan in #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (by @DEKHTIARJonathan in #660)\r\n- Docker:\r\n  - Containers for each release and for each PR merged on master built (by @DEKHTIARJonathan in #648)\r\n  - Containers built in the following configurations (by @DEKHTIARJonathan in #648):\r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu\r\n- Documentation:\r\n  - Release semantic version added on index page (by @DEKHTIARJonathan in #633)\r\n  - Optimizers page added (by @DEKHTIARJonathan in #636)\r\n  - `AMSGrad` added on Optimizers page added (by @DEKHTIARJonathan in #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (by @One-sixth in #579)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (by @DEKHTIARJonathan in #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (by @DEKHTIARJonathan in #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (by @2wins in #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (by @DEKHTIARJonathan in #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (by @DEKHTIARJonathan in #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (by @DEKHTIARJonathan in #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (by @DEKHTIARJonathan in #645)\r\n  - `test_decorators.py` added (by @DEKHTIARJonathan in #660)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (by @2wins in #560).\r\n\r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (by @DEKHTIARJonathan in #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (by @zsdonghao in #587)\r\n- RTD links point to stable documentation instead of latest used for development (by @DEKHTIARJonathan in #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (by @DEKHTIARJonathan in #644)\r\n- Readme Badges Updated with Support Python and Tensorflow Versions (by @DEKHTIARJonathan in #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (by @DEKHTIARJonathan in #645)\r\n- Relative Imports changed for absolute imports (by @DEKHTIARJonathan in #657)\r\n- `tl.files` refactored into a directory with numerous files (by @DEKHTIARJonathan in #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (by @DEKHTIARJonathan in #657)\r\n- extra requirements hidden inside the library added in the project requirements (by @DEKHTIARJonathan in #657)\r\n- requirements files refactored in `requirements/` directory (by @DEKHTIARJonathan in #657)\r\n- README.md and other markdown files have been refactored and cleaned. (by @zsdonghao @DEKHTIARJonathan @luomai in #639)\r\n- Ternary Convolution Layer added in unittest (by @DEKHTIARJonathan in #658)\r\n- Convolution Layers unittests have been cleaned & refactored (by @DEKHTIARJonathan in #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (by @DEKHTIARJonathan in #660)\r\n- `tf.identity` as activation is **ignored**, thus reducing the size of the graph by removing useless operation (by @DEKHTIARJonathan in #667)\r\n- argument dictionaries are now checked and saved within the `Layer` Base Class (by @DEKHTIARJonathan in #667)\r\n\r\n### Deprecated\r\n- `tl.layers.TimeDistributedLayer` argurment `args` is deprecated in favor of `layer_args` (by @DEKHTIARJonathan in #667)\r\n\r\n### Removed\r\n- `assert()` calls remove and replaced by `raise AssertionError()` (by @DEKHTIARJonathan in #667)\r\n- `tl.identity` is removed, not used anymore and deprecated for a long time (by @DEKHTIARJonathan in #667)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (by @DEKHTIARJonathan in #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (by @DEKHTIARJonathan in #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (by @2wins in #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (by @DEKHTIARJonathan in #573)\r\n- Typo of the document of ElementwiseLambdaLayer (by @zsdonghao in #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (by @DEKHTIARJonathan in #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (by @DEKHTIARJonathan in #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (by @DEKHTIARJonathan in #661)\r\n- Duplicated code removed when bias was used (by @DEKHTIARJonathan in #667)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (by @DEKHTIARJonathan in #635)\r\n  - All tutorials tested and errors have been fixed (by @DEKHTIARJonathan in #635)\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (by @DEKHTIARJonathan and @pyup-bot in #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (by @DEKHTIARJonathan and @pyup-bot in #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (by @DEKHTIARJonathan and @pyup-bot in #656)\r\n\r\n### Contributors\r\n@lgarithm @DEKHTIARJonathan @2wins @One-sixth @zsdonghao @luomai", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.6rc1", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.6rc1", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.6rc1", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11297320", "release_id": 11297320, "date_created": "2018-06-03T11:29:24Z", "date_published": "2018-06-03T12:02:31Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11283660", "tag": "1.8.6rc0", "name": "TensorLayer 1.8.6rc0", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "# ChangeLog\r\n\r\n### Added\r\n- API:\r\n  - `tl.alphas` and `tl.alphas_like` added following the tf.ones/zeros and tf.zeros_like/ones_like (by @DEKHTIARJonathan in #580)\r\n- CI Tool:\r\n  - [Stale Probot](https://github.com/probot/stale) added to clean stale issues (by @DEKHTIARJonathan in #573)\r\n  - [Changelog Probot](https://github.com/mikz/probot-changelog) Configuration added (by @DEKHTIARJonathan in #637)\r\n  - Travis Builds now handling a matrix of TF Version from TF==1.6.0 to TF==1.8.0 (by @DEKHTIARJonathan in #644)\r\n  - CircleCI added to build and upload Docker Containers for each PR merged and tag release (by @DEKHTIARJonathan in #648)\r\n- Decorator:\r\n  - `tl.decorators` API created including `deprecated_alias` and `private_method` (by @DEKHTIARJonathan in #660)\r\n- Docker: \r\n  - Containers for each release and for each PR merged on master built (by @DEKHTIARJonathan in #648)\r\n  - Containers built in the following configurations (by @DEKHTIARJonathan in #648): \r\n    - py2 + cpu\r\n    - py2 + gpu\r\n    - py3 + cpu\r\n    - py3 + gpu \r\n- Documentation:\r\n  - Release semantic version added on index page (by @DEKHTIARJonathan in #633)\r\n  - Optimizers page added (by @DEKHTIARJonathan in #636)\r\n  - `AMSGrad` added on Optimizers page added (by @DEKHTIARJonathan in #636)\r\n- Layer:\r\n  - ElementwiseLambdaLayer added to use custom function to connect multiple layer inputs (by @One-sixth in #579)\r\n- Optimizer:\r\n  - AMSGrad Optimizer added based on `On the Convergence of Adam and Beyond (ICLR 2018)` (by @DEKHTIARJonathan in #636)\r\n- Setup:\r\n  - Creation of installation flaggs `all`, `all_cpu`, and `all_gpu` (by @DEKHTIARJonathan in #660)\r\n- Test:\r\n  - `test_utils_predict.py` added to reproduce and fix issue #288 (by @2wins in #566)\r\n  - `Layer_DeformableConvolution_Test` added to reproduce issue #572 with deformable convolution (by @DEKHTIARJonathan in #573)\r\n  - `Array_Op_Alphas_Test` and `Array_Op_Alphas_Like_Test` added to test `tensorlayer/array_ops.py` file (by @DEKHTIARJonathan in #580)\r\n  - `test_optimizer_amsgrad.py` added to test `AMSGrad` optimizer (by @DEKHTIARJonathan in #636)\r\n  - `test_logging.py` added to insure robustness of the logging API (by @DEKHTIARJonathan in #645)\r\n  - `test_decorators.py` added (by @DEKHTIARJonathan in #660)\r\n- Tutorials:\r\n  - `tutorial_tfslim` has been introduced to show how to use `SlimNetsLayer` (by @2wins in #560).\r\n\r\n### Changed\r\n- Tensorflow CPU & GPU dependencies moved to separated requirement files in order to allow PyUP.io to parse them (by @DEKHTIARJonathan in #573)\r\n- The document of LambdaLayer for linking it with ElementwiseLambdaLayer (by @zsdonghao in #587)\r\n- RTD links point to stable documentation instead of latest used for development (by @DEKHTIARJonathan in #633)\r\n- TF Version older than 1.6.0 are officially unsupported and raises an exception (by @DEKHTIARJonathan in #644)\r\n- Readme Badges Updated with Support Python and Tensorflow Versions (by @DEKHTIARJonathan in #644)\r\n- TL logging API has been consistent with TF logging API and thread-safe (by @DEKHTIARJonathan in #645)\r\n- Relative Imports changed for absolute imports (by @DEKHTIARJonathan in #657)\r\n- `tl.files` refactored into a directory with numerous files (by @DEKHTIARJonathan in #657)\r\n- `tl.files.voc_dataset` fixed because of original Pascal VOC website was down (by @DEKHTIARJonathan in #657)\r\n- extra requirements hidden inside the library added in the project requirements (by @DEKHTIARJonathan in #657)\r\n- requirements files refactored in `requirements/` directory (by @DEKHTIARJonathan in #657)\r\n- README.md and other markdown files have been refactored and cleaned. (by @zsdonghao @DEKHTIARJonathan @luomai in #639)\r\n- Ternary Convolution Layer added in unittest (by @DEKHTIARJonathan in #658)\r\n- Convolution Layers unittests have been cleaned & refactored (by @DEKHTIARJonathan in #658)\r\n- All the tests are now using a DEBUG level verbosity when run individualy (by @DEKHTIARJonathan in #660)\r\n\r\n### Fixed\r\n- Issue #498 - Deprecation Warning Fix in `tl.layers.RNNLayer` with `inspect` (by @DEKHTIARJonathan in #574)\r\n- Issue #498 - Deprecation Warning Fix in `tl.files` with truth value of an empty array is ambiguous (by @DEKHTIARJonathan in #575)\r\n- Issue #565 related to `tl.utils.predict` fixed - `np.hstack` problem in which the results for multiple batches are stacked along `axis=1` (by @2wins in #566)\r\n- Issue #572 with `tl.layers.DeformableConv2d` fixed (by @DEKHTIARJonathan in #573)\r\n- Typo of the document of ElementwiseLambdaLayer (by @zsdonghao in #588)\r\n- Error in `tl.layers.TernaryConv2d` fixed - self.inputs not defined (by @DEKHTIARJonathan in #658)\r\n- Deprecation warning fixed in `tl.layers.binary._compute_threshold()` (by @DEKHTIARJonathan in #658)\r\n- All references to `tf.logging` replaced by `tl.logging` (by @DEKHTIARJonathan in #661)\r\n- Tutorial:\r\n  - `tutorial_word2vec_basic.py` saving issue #476 fixed (by @DEKHTIARJonathan in #635)\r\n  - All tutorials tested and errors have been fixed (by @DEKHTIARJonathan in #635)\r\n\r\n### Dependencies Update\r\n- Update pytest from 3.5.1 to 3.6.0 (by @DEKHTIARJonathan and @pyup-bot in #647)\r\n- Update progressbar2 from 3.37.1 to 3.38.0 (by @DEKHTIARJonathan and @pyup-bot in #651)\r\n- Update scikit-image from 0.13.1 to 0.14.0 (by @DEKHTIARJonathan and @pyup-bot in #656)\r\n\r\n### Contributors\r\n@lgarithm @DEKHTIARJonathan @2wins @One-sixth @zsdonghao @luomai", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.6rc0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.6rc0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.6rc0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/11283660", "release_id": 11283660, "date_created": "2018-06-01T16:04:05Z", "date_published": "2018-06-01T16:07:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10931510", "tag": "1.8.5", "name": "TensorLayer 1.8.5", "author": {"name": "zsdonghao", "type": "User"}, "description": "### Added\r\n- Github Templates added (by @DEKHTIARJonathan)\r\n  - New issues Template\r\n  - New PR Template\r\n- Travis Deploy Automation on new Tag (by @DEKHTIARJonathan)\r\n  - Deploy to PyPI and create a new version.\r\n  - Deploy to Github Releases and upload the wheel files\r\n- PyUP.io has been added to ensure we are compatible with the latest libraries (by @DEKHTIARJonathan)\r\n- `deconv2d` now handling dilation_rate (by @zsdonghao)\r\n- Documentation unittest added (by @DEKHTIARJonathan)\r\n- `test_layers_core` has been added to ensure that `LayersConfig` is abstract.\r\n\r\n### Changed\r\n- All Tests Refactored - Now using unittests and runned with PyTest (by @DEKHTIARJonathan)\r\n- Documentation updated (by @zsdonghao)\r\n- Package Setup Refactored (by @DEKHTIARJonathan)\r\n- Dataset Downlaod now using library progressbar2 (by @DEKHTIARJonathan)\r\n- `deconv2d` function transformed into Class (by @zsdonghao)\r\n- `conv1d` function transformed into Class (by @zsdonghao)\r\n- super resolution functions transformed into Class (by @zsdonghao)\r\n- YAPF coding style improved and enforced (by @DEKHTIARJonathan)\r\n\r\n### Fixed\r\n- Backward Compatibility Restored with deprecation warnings (by @DEKHTIARJonathan)\r\n- Tensorflow Deprecation Fix (Issue #498):\r\n  - AverageEmbeddingInputlayer (by @zsdonghao)\r\n  - load_mpii_pose_dataset (by @zsdonghao)\r\n- maxPool2D initializer issue #551 (by @zsdonghao)\r\n- `LayersConfig` class has been enforced as abstract\r\n- Pooling Layer Issue #557 fixed (by @zsdonghao)\r\n\r\n### Dependencies Update\r\n- scipy>=1.0,<1.1 => scipy>=1.1,<1.2\r\n\r\n### Contributors\r\n@zsdonghao @luomai @DEKHTIARJonathan", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.5", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.5", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.5", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10931510", "release_id": 10931510, "date_created": "2018-05-09T22:28:43Z", "date_published": "2018-05-09T22:29:46Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10660639", "tag": "1.8.5rc2", "name": "TensorLayer 1.8.5rc2", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "## Changelog\r\n- Restored backward compatibility with deprecation warnings (by @DEKHTIARJonathan)\r\n- All Tests Refactored - Now using unittests and runned with PyTest (by @DEKHTIARJonathan)\r\n- Github Templates added (by @DEKHTIARJonathan) \r\n  - New issues Template\r\n  - New PR Template\r\n- Documentation updated (by @zsdonghao)\r\n- Package Setup Refactored (by @DEKHTIARJonathan) \r\n- deconv2d function transformed into Class (by @zsdonghao)\r\n- conv1d function transformed into Class (by @zsdonghao)\r\n- deconv2d now handling `dilation_rate`\r\n- Travis Deploy Automation on new *Tag* (by @DEKHTIARJonathan) \r\n  - Deploy to PyPI and create a new version.\r\n  - Deploy to Github Releases and upload the wheel files\r\n- Dataset Downlaod now using library progressbar2 (by @DEKHTIARJonathan)\r\n- Tensorflow Deprecation Fix (Issue #498):\r\n  - AverageEmbeddingInputlayer (by @zsdonghao)\r\n  - load_mpii_pose_dataset  (by @zsdonghao)\r\n- update super resolution from function to class (by @zsdonghao)\r\n- YAPF coding style improved and enforced (by @DEKHTIARJonathan)\r\n- Documentation unittest added (by @DEKHTIARJonathan)\r\n\r\n# Contributors:\r\n@zsdonghao @luomai @DEKHTIARJonathan", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.5rc2", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.5rc2", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.5rc2", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10660639", "release_id": 10660639, "date_created": "2018-04-21T12:22:04Z", "date_published": "2018-04-22T09:19:18Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10583599", "tag": "1.8.5rc1", "name": "TensorLayer 1.8.5rc1", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "## Changelog\r\n- Restored backward compatibility with deprecation warnings (by @DEKHTIARJonathan)\r\n- All Tests Refactored - Now using unittests and runned with PyTest (by @DEKHTIARJonathan)\r\n- Github Templates added (by @DEKHTIARJonathan) \r\n  - New issues Template\r\n  - New PR Template\r\n- Documentation updated (by @zsdonghao)\r\n- Package Setup Refactored (by @DEKHTIARJonathan) \r\n- deconv2d function transformed into Class (by @zsdonghao)\r\n- conv1d function transformed into Class (by @zsdonghao)\r\n- deconv2d now handling `dilation_rate`\r\n- Travis Deploy Automation on new *Tag* (by @DEKHTIARJonathan) \r\n  - Deploy to PyPI and create a new version.\r\n  - Deploy to Github Releases and upload the wheel files\r\n\r\n# Contributors:\r\n@zsdonghao @luomai @DEKHTIARJonathan", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.5rc1", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.5rc1", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.5rc1", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10583599", "release_id": 10583599, "date_created": "2018-04-17T13:13:52Z", "date_published": "2018-04-17T13:23:04Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10578735", "tag": "1.8.5rc0", "name": "TensorLayer 1.8.5rc0", "author": {"name": "DEKHTIARJonathan", "type": "User"}, "description": "## Changelog\r\n- Restored backward compatibility with deprecation warnings (by @DEKHTIARJonathan)\r\n- All Tests Refactored - Now using unittests and runned with PyTest (by @DEKHTIARJonathan)\r\n- Github Templates added for \r\n  - New issues\r\n  - New PR\r\n- Documentation updated (by @zsdonghao)\r\n- Package Setup Refactored (by @DEKHTIARJonathan) \r\n\r\n# Contributors:\r\n@zsdonghao @luomai @DEKHTIARJonathan", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.5rc0", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.5rc0", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.5rc0", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10578735", "release_id": 10578735, "date_created": "2018-04-17T08:19:49Z", "date_published": "2018-04-17T08:22:41Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10537991", "tag": "1.8.4", "name": "TensorLayer 1.8.4", "author": {"name": "zsdonghao", "type": "User"}, "description": "### New Support\r\n- Release experimental APIs to download and visualize MPII dataset (*Pose Estimation*) in one line of code (by @zsdonghao)\r\n\r\n```python\r\n>>> import pprint\r\n>>> import tensorlayer as tl\r\n>>> img_train_list, ann_train_list, img_test_list, ann_test_list = tl.files.load_mpii_pose_dataset()\r\n>>> image = tl.vis.read_image(img_train_list[0])\r\n>>> tl.vis.draw_mpii_pose_to_image(image, ann_train_list[0], 'image.png')\r\n>>> pprint.pprint(ann_train_list[0])\r\n```\r\n\r\n- Release `tl.models` API - Provides pre-trained VGG16, SqueezeNet and MobileNetV1 in one line of code (by @lgarithm  @zsdonghao), more models will be provided soon!\r\n\r\n\r\n**Classify ImageNet classes, see [tutorial_models_mobilenetv1.py](https://github.com/tensorlayer/tensorlayer/blob/master/example/tutorial_models_mobilenetv1.py)**\r\n```python\r\n>>> x = tf.placeholder(tf.float32, [None, 224, 224, 3])\r\n>>> # get the whole model\r\n>>> net = tl.models.MobileNetV1(x)\r\n>>> # restore pre-trained parameters\r\n>>> sess = tf.InteractiveSession()\r\n>>> net.restore_params(sess)\r\n>>> # use for inferencing\r\n>>> probs = tf.nn.softmax(net.outputs)\r\n```\r\n\r\n**Extract features and Train a classifier with 100 classes**\r\n\r\n```python\r\n>>> x = tf.placeholder(tf.float32, [None, 224, 224, 3])\r\n>>> # get model without the last layer\r\n>>> cnn = tl.models.MobileNetV1(x, end_with='reshape')\r\n>>> # add one more layer\r\n>>> net = Conv2d(cnn, 100, (1, 1), (1, 1), name='out')\r\n>>> net = FlattenLayer(net, name='flatten')\r\n>>> # initialize all parameters\r\n>>> sess = tf.InteractiveSession()\r\n>>> tl.layers.initialize_global_variables(sess)\r\n>>> # restore pre-trained parameters\r\n>>> cnn.restore_params(sess)\r\n>>> # train your own classifier (only update the last layer)\r\n>>> train_params = tl.layers.get_variables_with_name('out')\r\n```\r\n\r\n**Reuse model**\r\n\r\n```python\r\n>>> x1 = tf.placeholder(tf.float32, [None, 224, 224, 3])\r\n>>> x2 = tf.placeholder(tf.float32, [None, 224, 224, 3])\r\n>>> # get network without the last layer\r\n>>> net1 = tl.models.MobileNetV1(x1, end_with='reshape')\r\n>>> # reuse the parameters with different input\r\n>>> net2 = tl.models.MobileNetV1(x2, end_with='reshape', reuse=True)\r\n>>> # restore pre-trained parameters (as they share parameters, we don\u2019t need to restore net2)\r\n>>> sess = tf.InteractiveSession()\r\n>>> net1.restore_params(sess)\r\n```\r\n\r\n### New Example\r\n  - TensorFlow Dataset API for VOC dataset augmentation [here](https://github.com/tensorlayer/tensorlayer/blob/master/example/tutorial_tf_dataset_voc.py) (by @zsdonghao)\r\n\r\n### New Update\r\n - Update tl.iterate.minibatch to support list input (by @zsdonghao)\r\n\r\n### API Change Log\r\n\r\n@DEKHTIARJonathan give a list of API change log here https://github.com/tensorlayer/tensorlayer/issues/479\r\n\r\n- 1. Layer API Change\r\n\r\nAs it is an absolute central class, one change here are leading to changes everywhere.\r\nIf any modification is done here, it should be done with a deprecation warning.\r\n\r\n```python\r\n## Before\r\nlayer = tl.layers.BatchNormLayer(layer = layer)\r\nlayer = tl.layers.PReluLayer(layer  = layer)\r\n\r\n## Now\r\nlayer = tl.layers.BatchNormLayer(prev_layer = layer)\r\nlayer = tl.layers.PReluLayer(prev_layer= layer)\r\n```\r\n\r\nCommit introduced this change: b2e6cccd53bd6c076c32421b8c4d562a96437524\r\n\r\nWhy the API was changed ? As you may guess, just this change lead to many projects raising errors and needing to be updated. We struggle to have tutorials and examples around with TL and this change is not helping with backward compatibility.\r\n\r\n  - 2. DeConv2d API Change\r\n```python\r\n## Before\r\ntl.layers.DeConv2d(layer=layer,  n_out_channel = 16)\r\n\r\n## Now\r\ntl.layers.DeConv2d(layer=layer,  n_filter = 16)\r\n```\r\n\r\nHere we have two problems:\r\n1. This Layer has now an inconsistent API with the rest of the TL library (this layer use **layer** instead of **prev_layer**).\r\n2. Again, no deprecation warning with the changes from **n_out_channel** to **n_filter** which may immediately make most GANs/AEs not working without a fix.\r\n\r\n\r\n  - 3. Reuse Variable Scope\r\n\r\nYou have correctly mentioned a deprecation warning, however it would be better to mention an appropriate fix and not just say \"it's deprecated, deal with it now !\"\r\n\r\nI give you an example:\r\n\r\n```python\r\nwith tf.variable_scope(\"my_scope\", reuse=reuse) as scope:\r\n    # tl.layers.set_name_reuse(reuse) # deprecated\r\n    if reuse:\r\n        scope.reuse_variables()\r\n```\r\n\r\nQuite easy to add inside the deprecation warning and now it provides a simple solution to fix the issue.\r\n\r\n  - 4. No mention in the Changelog of an API change of the ReshapeLayer\r\n\r\n```python\r\n## Before\r\nlayer = tl.layers.ReshapeLayer(\r\n    layer,\r\n    shape = [-1, 256, 256, 3]\r\n)\r\n\r\n## Now\r\nlayer = tl.layers.ReshapeLayer(\r\n    layer,\r\n    shape = (-1, 256, 256, 3) # Must use a tuple, a list is not accepted anymore\r\n)\r\n```", "tarball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/tarball/1.8.4", "zipball_url": "https://api.github.com/repos/tensorlayer/TensorLayer/zipball/1.8.4", "html_url": "https://github.com/tensorlayer/TensorLayer/releases/tag/1.8.4", "url": "https://api.github.com/repos/tensorlayer/TensorLayer/releases/10537991", "release_id": 10537991, "date_created": "2018-04-13T15:42:33Z", "date_published": "2018-04-13T15:51:01Z"}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.rst", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "contributing_guidelines": [{"result": {"value": "# TensorLayer Contributor Guideline\n\n## Welcome to contribute!\nYou are more than welcome to contribute to TensorLayer! If you have any improvement, please send us your [pull requests](https://help.github.com/en/articles/about-pull-requests). You may implement your improvement on your [fork](https://help.github.com/en/articles/working-with-forks).\n\n## Checklist\n* Continuous integration\n* Build from sources\n* Unittest\n* Documentation\n* General intro to TensorLayer2\n* How to contribute a new `Layer`\n* How to contribute a new `Model`\n* How to contribute a new example/tutorial\n\n## Continuous integration\n\nWe appreciate contributions\neither by adding / improving examples or extending / fixing the core library.\nTo make your contributions, you would need to follow the [pep8](https://www.python.org/dev/peps/pep-0008/) coding style and [numpydoc](https://numpydoc.readthedocs.io/en/latest/) document style.\nWe rely on Continuous Integration (CI) for checking push commits.\nThe following tools are used to ensure that your commits can pass through the CI test:\n\n* [yapf](https://github.com/google/yapf) (format code), compulsory\n* [isort](https://github.com/timothycrosley/isort) (sort imports), optional\n* [autoflake](https://github.com/myint/autoflake) (remove unused imports), optional\n\nYou can simply run\n\n```bash\nmake format\n```\n\nto apply those tools before submitting your PR.\n\n## Build from sources\n\n```bash\n# First clone the repository and change the current directory to the newly cloned repository\ngit clone https://github.com/zsdonghao/tensorlayer2.git\ncd tensorlayer2\n\n# Install virtualenv if necessary\npip install virtualenv\n\n# Then create a virtualenv called `venv`\nvirtualenv venv\n\n# Activate the virtualenv\n\n## Linux:\nsource venv/bin/activate\n\n## Windows:\nvenv\\Scripts\\activate.bat\n\n# ============= IF TENSORFLOW IS NOT ALREADY INSTALLED ============= #\n\n# basic installation\npip install .\n\n# advanced: for a machine **without** an NVIDIA GPU\npip install -e \".[all_cpu_dev]\"\n\n# advanced: for a machine **with** an NVIDIA GPU\npip install -e \".[all_gpu_dev]\"\n```\n\n## Unittest\n\nLaunching the unittest for the whole repo:\n\n```bash\n# install pytest\npip install pytest\n\n# run pytest\npytest\n```\n\nRunning your unittest code on your implemented module only:\n\n```bash\n# install coverage\npip install coverage\n\ncd /path/to/your/unittest/code\n# For example: cd tests/layers/\n\n# run unittest\ncoverage run --source myproject.module -m unittest discover\n# For example: coverage run --source tensorlayer.layers -m unittest discover\n\n# generate html report\ncoverage html\n```\n\n## Documentation\nEven though you follow [numpydoc](https://numpydoc.readthedocs.io/en/latest/) document style when writing your code, \nthis does not ensure those lines appear on TensorLayer online documentation. \nYou need further modify corresponding RST files in `docs/modules`.\n\nFor example, to add your implemented new pooling layer into documentation, modify `docs/modules/layer.rst`. First, insert layer name under Layer list\n```rst\nLayer list\n----------\n\n.. autosummary::\n\n    NewPoolingLayer\n```\n\nSecond, find pooling layer part and add:\n```rst\n.. -----------------------------------------------------------\n..                     Pooling Layers\n.. -----------------------------------------------------------\n\nPooling Layers\n------------------------\n\nNew Pooling Layer\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n.. autoclass:: NewPoolingLayer\n```\n\nFinally, test with local documentation:\n```bash\ncd ./docs\n\nmake clean\nmake html  \n# then view generated local documentation by ./html/index.html\n``` \n\n## General intro to TensorLayer2\n* TensorLayer2 is built on [TensorFlow2](https://www.tensorflow.org/alpha), so TensorLayer2 is purely eager, no sessions, no globals.\n* TensorLayer2 supports APIs to build static models and dynamic models. Therefore, all `Layers` should be compatible with the two modes.\n```python\n# An example of a static model\n# A static model has inputs and outputs with fixed shape.\ninputs = tl.layers.Input([32, 784])\ndense1 = tl.layers.Dense(n_units=800, act='relu', in_channels=784, name='dense1')(inputs)\ndense2 = tl.layers.Dense(n_units=10,  act='relu', in_channels=800, name='dense2')(dense1)\nmodel = tl.models.Model(inputs=inputs, outputs=dense2)\n\n# An example of a dynamic model\n# A dynamic model has more flexibility. The inputs and outputs may be different in different runs.\nclass CustomizeModel(tl.models.Model):\n    def __init__(self):\n        super(CustomizeModel, self).__init__()\n        self.dense1 = tl.layers.Dense(n_units=800, act='relu', in_channels=784, name='dense1')\n        self.dense2 = tl.layers.Dense(n_units=10,  act='relu', in_channels=800, name='dense2')\n\n    # a dynamic model allows more flexibility by customising forwarding.\n    def forward(self, x, bar=None):\n        d1 = self.dense1(x)\n        if bar:\n            return d1\n        else:\n            d2 = self.dense2(d1)\n            return d1, d2\n\nmodel = CustomizeModel()\n```\n* More examples can be found in [examples](examples/) and [tests/layers](tests/layers/). Note that not all of them are completed.\n\n## How to contribute a new `Layer`\n* A `NewLayer` should be a derived from the base class [`Layer`](tensorlayer/layers/core.py).\n* Member methods to be overrided:\n  - `__init__(self, args1, args2, inputs_shape=None, name=None)`: The constructor of the `NewLayer`, which should\n    - Call `super(NewLayer, self).__init__(name)` to construct the base.\n    - Define member variables based on the args1, args2 (or even more).\n    - If the `inputs_shape` is provided, call `self.build(inputs_shape)` and set `self._built=True`. Note that sometimes only `in_channels` should be enough to build the layer like [`Dense`](tensorlayer/layers/dense/base_dense.py).\n    - Logging by `logging.info(...)`.\n  - `__repr__(self)`: Return a printable representation of the `NewLayer`.\n  - `build(self, inputs_shape)`: Build the `NewLayer` by defining weights.\n  - `forward(self, inputs, **kwargs)`: Forward feeding the `NewLayer`. Note that the forward feeding of some `Layers` may be different during training and testing like [`Dropout`](tensorlayer/layers/dropout.py).\n* Unittest:\n  - Unittest should be done before a pull request. Unittest code can be written in [tests/](tests/)\n* Documents:\n  - Please write a description for each class and method in RST format. The description may include the functionality, arguments, references, examples of the `NewLayer`.\n* Examples: [`Dense`](tensorlayer/layers/dense/base_dense.py), [`Dropout`](tensorlayer/layers/dropout.py), [`Conv`](tensorlayer/layers/convolution/simplified_conv.py).\n\n## How to contribute a new `Model`\n* A `NewModel` should be derived from the base class [`Model`](tensorlayer/models/core.py) (if dynamic) or an instance of [`Model`](tensorlayer/models/core.py) (if static).\n* A static `NewModel` should have fixed inputs and outputs. Please check the example [`VGG_Static`](tensorlayer/models/vgg.py)\n* A dynamic `NewModel` has more flexiblility. Please check the example [`VGG16`](tensorlayer/models/vgg16.py)\n\n## How to contribute a new example/tutorial\n* A new example/tutorial should implement a complete workflow of deep learning which includes (but not limited)\n  - `Models` construction based on `Layers`.\n  - Data processing and loading.\n  - Training and testing.\n  - Forward feeding by calling the models.\n  - Loss function.\n  - Back propagation by `tf.GradientTape()`.\n  - Model saving and restoring.\n* Examples: [MNIST](examples/basic_tutorials/tutorial_mnist_mlp_static.py), [CIFAR10](examples/basic_tutorials/tutorial_cifar10_cnn_static.py), [FastText](examples/text_classification/tutorial_imdb_fasttext.py)\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/CONTRIBUTING.md"}, {"result": {"value": "Please read the `Contributor\nGuideline <https://github.com/tensorlayer/tensorlayer/blob/master/CONTRIBUTING.md>`__\nbefore submitting your PRs.\n", "type": "Text_excerpt", "original_header": "Contribute"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}], "has_build_file": [{"result": {"value": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/docker/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/docker/Dockerfile"}, {"result": {"value": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/docker/docs/Dockerfile", "type": "Url", "format": "dockerfile"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/docker/docs/Dockerfile"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/scripts/install-requirements-for-rtd.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/scripts/download_and_install_openmpi3_ubuntu.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/scripts/install-horovod-for-doc-test.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "TensorLayer has pre-requisites including TensorFlow, numpy, and others. For GPU support, CUDA and cuDNN are required.\nThe simplest way to install TensorLayer is to use the Python Package Index (PyPI):\n\n.. code:: bash\n\n    # for last stable version\n    pip install --upgrade tensorlayer\n\n    # for latest release candidate\n    pip install --upgrade --pre tensorlayer\n\n    # if you want to install the additional dependencies, you can also run\n    pip install --upgrade tensorlayer[all]              # all additional dependencies\n    pip install --upgrade tensorlayer[extra]            # only the `extra` dependencies\n    pip install --upgrade tensorlayer[contrib_loggers]  # only the `contrib_loggers` dependencies\n\nAlternatively, you can install the latest or development version by directly pulling from github:\n\n.. code:: bash\n\n    pip install https://github.com/tensorlayer/tensorlayer/archive/master.zip\n    # or\n    # pip install https://github.com/tensorlayer/tensorlayer/archive/<branch-name>.zip\n", "type": "Text_excerpt", "original_header": "Install"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}, {"result": {"value": "The `TensorLayer\ncontainers <https://hub.docker.com/r/tensorlayer/tensorlayer/>`__ are\nbuilt on top of the official `TensorFlow\ncontainers <https://hub.docker.com/r/tensorflow/tensorflow/>`__:\n\nContainers with CPU support\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    # for CPU version and Python 2\n    docker pull tensorlayer/tensorlayer:latest\n    docker run -it --rm -p 8888:8888 -p 6006:6006 -e PASSWORD=JUPYTER_NB_PASSWORD tensorlayer/tensorlayer:latest\n\n    # for CPU version and Python 3\n    docker pull tensorlayer/tensorlayer:latest-py3\n    docker run -it --rm -p 8888:8888 -p 6006:6006 -e PASSWORD=JUPYTER_NB_PASSWORD tensorlayer/tensorlayer:latest-py3\n\nContainers with GPU support\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNVIDIA-Docker is required for these containers to work: `Project\nLink <https://github.com/NVIDIA/nvidia-docker>`__\n\n.. code:: bash\n\n    # for GPU version and Python 2\n    docker pull tensorlayer/tensorlayer:latest-gpu\n    nvidia-docker run -it --rm -p 8888:88888 -p 6006:6006 -e PASSWORD=JUPYTER_NB_PASSWORD tensorlayer/tensorlayer:latest-gpu\n\n    # for GPU version and Python 3\n    docker pull tensorlayer/tensorlayer:latest-gpu-py3\n    nvidia-docker run -it --rm -p 8888:8888 -p 6006:6006 -e PASSWORD=JUPYTER_NB_PASSWORD tensorlayer/tensorlayer:latest-gpu-py3\n", "type": "Text_excerpt", "original_header": "Using Docker - a ready-to-use environment", "parent_header": ["Install"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "|PyPI| |PyPI-Prerelease| |Commits-Since| |Python| |TensorFlow| \n"}, "confidence": 0.9349133663922085, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}], "citation": [{"result": {"value": "If you find this project useful, we would be grateful if you cite the\nTensorLayer papers.\n\n::\n\n    @article{tensorlayer2017,\n        author  = {Dong, Hao and Supratak, Akara and Mai, Luo and Liu, Fangde and Oehmichen, Axel and Yu, Simiao and Guo, Yike},\n        journal = {ACM Multimedia},\n        title   = {{TensorLayer: A Versatile Library for Efficient Deep Learning Development}},\n        url     = {http://tensorlayer.org},\n        year    = {2017}\n    }\n\n    @inproceedings{tensorlayer2021,\n      title={Tensorlayer 3.0: A Deep Learning Library Compatible With Multiple Backends},\n      author={Lai, Cheng and Han, Jiarong and Dong, Hao},\n      booktitle={2021 IEEE International Conference on Multimedia \\& Expo Workshops (ICMEW)},\n      pages={1--3},\n      year={2021},\n      organization={IEEE}\n", "type": "Text_excerpt", "original_header": "Cite"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}], "application_domain": [{"result": {"type": "String", "value": "Computer Vision"}, "confidence": 0.8473985640044098, "technique": "supervised_classification"}], "full_title": [{"result": {"type": "String", "value": "Design Features"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}], "documentation": [{"result": {"type": "Url", "value": "https://tensorlayer.readthedocs.io/", "format": "readthedocs"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}], "related_documentation": [{"result": {"type": "Url", "value": "https://tensorlayercn.readthedocs.io/", "format": "readthedocs"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/zsdonghao/tensorlayer/master/README.md"}]}