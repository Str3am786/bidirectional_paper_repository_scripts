{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 19:31:10"}, "code_repository": [{"result": {"value": "https://github.com/google/gnostic", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "google", "type": "Organization"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2016-11-15T19:21:53Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-21T03:56:05Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/apache-2.0", "type": "License", "name": "Apache License 2.0", "url": "https://api.github.com/licenses/apache-2.0", "spdx_id": "Apache-2.0"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/google/gnostic/main/LICENSE"}, {"result": {"value": "Released under the Apache 2.0 license.\n", "type": "Text_excerpt", "original_header": "License", "parent_header": ["\u2a01 gnostic"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}], "description": [{"result": {"value": "A compiler for APIs described by the OpenAPI Specification with plugins for code generation and other API support tasks.", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "[Protocol Buffers](https://developers.google.com/protocol-buffers/) provide a\nlanguage-neutral, platform-neutral, extensible mechanism for serializing\nstructured data. **gnostic**'s Protocol Buffer models for the OpenAPI\nSpecification can be used to generate code that includes data structures with\nexplicit fields for the elements of an OpenAPI description. This makes it\npossible for developers to work with OpenAPI descriptions in type-safe ways,\nwhich is particularly useful in strongly-typed languages like Go and\n[Dart](https://dart.dev/). \n**gnostic** reads OpenAPI descriptions into these generated data structures,\nreports errors, resolves internal dependencies, and writes the results in a\nbinary form that can be used in any language that is supported by the Protocol\nBuffer tools. A plugin interface simplifies integration with API tools written\nin a variety of different languages, and when necessary, Protocol Buffer\nOpenAPI descriptions can be reexported as JSON or YAML. \n**gnostic** compilation code and OpenAPI Protocol Buffer models are\nautomatically generated from an\n[OpenAPI JSON Schema](https://github.com/OAI/OpenAPI-Specification/blob/master/schemas/v2.0/schema.json).\nSource code for the generator is in the [generate-gnostic](generate-gnostic)\ndirectory.\n \n", "original_header": "\u2a01 gnostic"}, "confidence": 0.9449214130983208, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}, {"result": {"type": "Text_excerpt", "value": "[google/gnostic-models](https://github.com/google/gnostic-models) contains a\nlightweight distribution of the protobuf models generated by this project.\nWhere a low-dependency integration of just these models is needed, Go projects\ncan import packages from `gnostic-models` instead of `gnostic`. \n[google/gnostic-grpc](https://github.com/google/gnostic-grpc) contains a\ngnostic plugin that can generate an annotated Protocol Buffer description of an\nAPI that, when transcoded, produces an API that conforms to a specified OpenAPI\ndocument. To go from protobuf to OpenAPI, see the\n[protoc-gen-openapi](cmd/protoc-gen-openapi) tool in this project. \n[google/gnostic-go-generator](https://github.com/google/gnostic-go-generator)\ncontains an experimental gnostic plugin that generates a Go client for an API\ndescribed by a specified OpenAPI document.\n \n", "original_header": "Related Repositories"}, "confidence": 0.9442266136952714, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}, {"result": {"type": "Text_excerpt", "value": "Feedback and contributions are welcome! Until there is a 1.0 release, please\nconsider this prerelease software and work in progress. To ensure stable\nbuilds, we request that dependent projects always refer to tagged releases of\n**gnostic**.\n \n", "original_header": "Disclaimer"}, "confidence": 0.9713409433293548, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}], "name": [{"result": {"value": "gnostic", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "google/gnostic", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/google/gnostic/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/google/gnostic/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 1901, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "apis, code-generation, gnostic, linters, openapi, openapi3, protocol-buffers", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 235, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/google/gnostic/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Go", "name": "Go", "type": "Programming_language", "size": 1015957}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "JavaScript", "name": "JavaScript", "type": "Programming_language", "size": 4974}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 1754}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 1620}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/123261689", "tag": "v0.7.0", "name": "v0.7.0", "author": {"name": "timburks", "type": "User"}, "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.7.0", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.7.0", "html_url": "https://github.com/google/gnostic/releases/tag/v0.7.0", "url": "https://api.github.com/repos/google/gnostic/releases/123261689", "release_id": 123261689, "date_created": "2023-08-25T20:06:11Z", "date_published": "2023-10-01T20:29:28Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/63584228", "tag": "v0.6.8", "name": "protoc-gen-openapi and export improvements.", "author": {"name": "timburks", "type": "User"}, "description": "This contains several improvements to `protoc-gen-openapi` from @jeffsawatzky , including the ability to use proto annotations to add fragments to generated OpenAPI documents (#324). It also adds some missing OpenAPI compiler code that Jeff uncovered when testing the new fragment overlay feature - maps of strings were not properly exported in `ToRawInfo()` methods in both OpenAPI packages (v2 and v3). Thanks, Jeff!", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.6.8", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.6.8", "html_url": "https://github.com/google/gnostic/releases/tag/v0.6.8", "url": "https://api.github.com/repos/google/gnostic/releases/63584228", "release_id": 63584228, "date_created": "2022-04-05T02:54:07Z", "date_published": "2022-04-05T03:08:22Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/57755041", "tag": "v0.6.6", "name": "Module cleanup", "author": {"name": "timburks", "type": "User"}, "description": "We had a series of problems related to a multi-module configuration and its reversion that all now appear to be fixed in this release. Individual components in the `cmd` directory are now (again) part of the main module and can be independently installed with the following:\r\n```\r\ngo install github.com/google/gnostic/cmd/disco@latest\r\ngo install github.com/google/gnostic/cmd/parse-linter-output@latest\r\ngo install github.com/google/gnostic/cmd/petstore-builder@latest\r\ngo install github.com/google/gnostic/cmd/protoc-gen-jsonschema@latest\r\ngo install github.com/google/gnostic/cmd/protoc-gen-openapi@latest\r\ngo install github.com/google/gnostic/cmd/report@latest\r\ngo install github.com/google/gnostic/cmd/report-messages@latest\r\ngo install github.com/google/gnostic/cmd/vocabulary-operations@latest\r\n```\r\nVerified with Go 1.16, 1.17, and 1.18beta1.\r\n\r\n", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.6.6", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.6.6", "html_url": "https://github.com/google/gnostic/releases/tag/v0.6.6", "url": "https://api.github.com/repos/google/gnostic/releases/57755041", "release_id": 57755041, "date_created": "2022-01-22T19:01:46Z", "date_published": "2022-01-22T19:42:12Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/56668564", "tag": "v0.6.2", "name": "Single-module repo with retraction of v0.6.0 multimodule experiment", "author": {"name": "timburks", "type": "User"}, "description": "This adds a retract statement to `go.mod` to exclude `v0.6.0` from dependency updates. Thanks @morphar and @shenqidebaozi for quickly catching and fixing problems with the multimodule configuration!", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.6.2", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.6.2", "html_url": "https://github.com/google/gnostic/releases/tag/v0.6.2", "url": "https://api.github.com/repos/google/gnostic/releases/56668564", "release_id": 56668564, "date_created": "2022-01-08T18:35:58Z", "date_published": "2022-01-08T18:40:23Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/56655547", "tag": "v0.6.1", "name": "Single-module repo", "author": {"name": "timburks", "type": "User"}, "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.6.1", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.6.1", "html_url": "https://github.com/google/gnostic/releases/tag/v0.6.1", "url": "https://api.github.com/repos/google/gnostic/releases/56655547", "release_id": 56655547, "date_created": "2022-01-08T06:25:27Z", "date_published": "2022-01-08T07:29:14Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/56588005", "tag": "v0.6.0", "name": "Multimodule repo: apps are in \"cmd\". protoc-gen-openapi improvements. protoc-gen-jsonschema.", "author": {"name": "timburks", "type": "User"}, "description": "This renames the former `apps` directory to `cmd` and adds a `go.mod` for each `cmd` subdirectory. These directories contain demonstrations and various *gnostic*-related applications, and putting each in a separate module clarifies dependencies and reduces the apparent dependencies of *gnostic* itself (as listed in the top-level `go.mod`). Thanks @shenqidebaozi for making this change and @morphar for advising.\r\n\r\nThis also includes significant improvements to `protoc-gen-openapi` from @morphar and @tonybase and a new `protoc-gen-jsonschema` pluigin contributed by @morphar. ", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.6.0", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.6.0", "html_url": "https://github.com/google/gnostic/releases/tag/v0.6.0", "url": "https://api.github.com/repos/google/gnostic/releases/56588005", "release_id": 56588005, "date_created": "2022-01-07T06:17:44Z", "date_published": "2022-01-07T06:28:45Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/42084204", "tag": "v0.5.5", "name": "Update protos for Go protoc plugin compatibility, add some fields previously dropped by gnostic-generator", "author": {"name": "timburks", "type": "User"}, "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.5.5", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.5.5", "html_url": "https://github.com/google/gnostic/releases/tag/v0.5.5", "url": "https://api.github.com/repos/google/gnostic/releases/42084204", "release_id": 42084204, "date_created": "2021-04-26T16:04:49Z", "date_published": "2021-04-27T16:05:24Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/33002348", "tag": "v0.5.3", "name": "apps/protoc-gen-openapi and JSON marshaling improvements", "author": {"name": "timburks", "type": "User"}, "description": "This adds a gnostic-based protoc plugin that generates OpenAPI for transcoded gRPC APIs. See [AIP-127](https://google.aip.dev/127) for a description of transcoding.\r\n\r\nIt also includes JSON marshaling improvements and tests from @bvwells.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.5.3", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.5.3", "html_url": "https://github.com/google/gnostic/releases/tag/v0.5.3", "url": "https://api.github.com/repos/google/gnostic/releases/33002348", "release_id": 33002348, "date_created": "2020-10-23T23:28:20Z", "date_published": "2020-10-24T00:02:59Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/32473749", "tag": "v0.5.2", "name": "Vocabulary Analysis, Error messages include line numbers", "author": {"name": "timburks", "type": "User"}, "description": "This update includes API vocabulary analysis features developed during the Summer of 2020 and improvements to error reporting that include line/column numbers for errors and more concise reporting of unmatched schemas. A few corner-case crashes were also fixed.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.5.2", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.5.2", "html_url": "https://github.com/google/gnostic/releases/tag/v0.5.2", "url": "https://api.github.com/repos/google/gnostic/releases/32473749", "release_id": 32473749, "date_created": "2020-10-12T21:47:56Z", "date_published": "2020-10-12T21:53:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/28655573", "tag": "v0.5.1", "name": "Fix problem reading Google Discovery Documents", "author": {"name": "timburks", "type": "User"}, "description": "This fixes a minor error that caused Google Discovery Documents to fail to load after the yaml.v3 update.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.5.1", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.5.1", "html_url": "https://github.com/google/gnostic/releases/tag/v0.5.1", "url": "https://api.github.com/repos/google/gnostic/releases/28655573", "release_id": 28655573, "date_created": "2020-07-16T23:59:58Z", "date_published": "2020-07-17T00:06:43Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/28560803", "tag": "v0.5.0", "name": "Update gnostic to yaml.v3: cleaner parsing, line number reporting", "author": {"name": "timburks", "type": "User"}, "description": "This release updates gnostic to use the yaml.v3 library and the yaml.Node class, which allows us to access line and column numbers of tokens during parsing. \r\n\r\nThis release upgrades the dependency only and does not include line number reporting.\r\n\r\nThis change will break clients that directly call auto-generated functions to create OpenAPIv2, OpenAPIv3, and Discovery structures. This is addressed in #195.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.5.0", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.5.0", "html_url": "https://github.com/google/gnostic/releases/tag/v0.5.0", "url": "https://api.github.com/repos/google/gnostic/releases/28560803", "release_id": 28560803, "date_created": "2020-07-14T20:24:18Z", "date_published": "2020-07-14T20:33:08Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/27233758", "tag": "v0.4.2", "name": "Metrics and Protocol Buffer dependency updates", "author": {"name": "timburks", "type": "User"}, "description": "This release provides a tagged version that includes the new metrics directory of protos for API metrics (currently computed using plugins) and updates embedded generated protobuf code to version 3.12.3 of protoc (which hopefully resolves #170).", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.4.2", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.4.2", "html_url": "https://github.com/google/gnostic/releases/tag/v0.4.2", "url": "https://api.github.com/repos/google/gnostic/releases/27233758", "release_id": 27233758, "date_created": "2020-06-04T17:27:56Z", "date_published": "2020-06-04T18:01:45Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/23299052", "tag": "v0.4.1", "name": "Improved testing and style compliance", "author": {"name": "timburks", "type": "User"}, "description": "All tests are run by CI. Package directory names are lowercased to match Go style guidance.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.4.1", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.4.1", "html_url": "https://github.com/google/gnostic/releases/tag/v0.4.1", "url": "https://api.github.com/repos/google/gnostic/releases/23299052", "release_id": 23299052, "date_created": "2020-01-31T18:42:08Z", "date_published": "2020-01-31T18:58:32Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/23115758", "tag": "v0.4.0", "name": "OpenAPI 3.1 support", "author": {"name": "timburks", "type": "User"}, "description": "Also streamlined release (removed Swift code for release elsewhere) and added plugin development helpers.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.4.0", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.4.0", "html_url": "https://github.com/google/gnostic/releases/tag/v0.4.0", "url": "https://api.github.com/repos/google/gnostic/releases/23115758", "release_id": 23115758, "date_created": "2020-01-06T19:23:35Z", "date_published": "2020-01-24T20:31:02Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/19324710", "tag": "v0.3.1", "name": "Support for Go Modules", "author": {"name": "timburks", "type": "User"}, "description": "This point release adds go.mod and go.sum files to provide Go module support.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.3.1", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.3.1", "html_url": "https://github.com/google/gnostic/releases/tag/v0.3.1", "url": "https://api.github.com/repos/google/gnostic/releases/19324710", "release_id": 19324710, "date_created": "2019-08-15T21:21:28Z", "date_published": "2019-08-15T21:30:19Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/18011605", "tag": "v0.3.0", "name": "v0.3.0", "author": {"name": "noahdietz", "type": "User"}, "description": "Bug fixes, enhancements to the OAS v3 surface and removal of `gnostic-go-generator` (moved to https://github.com/googleapis/gnostic-go-generator)", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.3.0", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.3.0", "html_url": "https://github.com/google/gnostic/releases/tag/v0.3.0", "url": "https://api.github.com/repos/google/gnostic/releases/18011605", "release_id": 18011605, "date_created": "2019-06-13T17:05:08Z", "date_published": "2019-06-14T23:29:45Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/11081547", "tag": "v0.2.0", "name": "OpenAPI 3.0.1 support.", "author": {"name": "timburks", "type": "User"}, "description": "This release updates the OpenAPIv3 Protocol Buffer models to OpenAPI 3.0.1 using a JSON schema generated by scraping the text of the official [OpenAPI 3.0.1 specification](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md). \r\n\r\nThe scraper and generated JSON schema are gnostic-specific and are not endorsed by the OpenAPI Technical Steering Committee, which has not yet released or approved a JSON Schema for OpenAPI v3.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.2.0", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.2.0", "html_url": "https://github.com/google/gnostic/releases/tag/v0.2.0", "url": "https://api.github.com/repos/google/gnostic/releases/11081547", "release_id": 11081547, "date_created": "2018-05-19T18:57:00Z", "date_published": "2018-05-19T19:06:30Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/google/gnostic/releases/11081572", "tag": "v0.1.0", "name": "Initial release", "author": {"name": "timburks", "type": "User"}, "description": "Tagged for initial use in Kubernetes and Istio.", "tarball_url": "https://api.github.com/repos/google/gnostic/tarball/v0.1.0", "zipball_url": "https://api.github.com/repos/google/gnostic/zipball/v0.1.0", "html_url": "https://github.com/google/gnostic/releases/tag/v0.1.0", "url": "https://api.github.com/repos/google/gnostic/releases/11081572", "release_id": 11081572, "date_created": "2017-09-05T17:27:49Z", "date_published": "2018-05-19T19:10:56Z"}, "confidence": 1, "technique": "GitHub_API"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/google/gnostic/main/COMPILE-PROTOS.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/google/gnostic/main/tools/pretty.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/google/gnostic/main/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "contributing_guidelines": [{"result": {"value": "# How to become a contributor and submit your own code\n\n## Contributor License Agreements\n\nWe'd love to accept your sample apps and patches! Before we can take them, we\nhave to jump a couple of legal hurdles.\n\nPlease fill out either the individual or corporate Contributor License Agreement\n(CLA).\n\n  * If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual CLA]\n    (https://developers.google.com/open-source/cla/individual).\n  * If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate CLA]\n    (https://developers.google.com/open-source/cla/corporate).\n\nFollow either of the two links above to access the appropriate CLA and\ninstructions for how to sign and return it. Once we receive it, we'll be able to\naccept your pull requests.\n\n## Contributing A Patch\n\n1. Submit an issue describing your proposed change to the repo in question.\n1. The repo owner will respond to your issue promptly.\n1. If your proposed change is accepted, and you haven't already done so, sign a\n   Contributor License Agreement (see details above).\n1. Fork the desired repo, develop and test your code changes.\n1. Ensure that your code adheres to the existing style in the sample to which\n   you are contributing. Refer to the\n   [Google Cloud Platform Samples Style Guide]\n   (https://github.com/GoogleCloudPlatform/Template/wiki/style.html) for the\n   recommended coding standards for this organization.\n1. Ensure that your code has an appropriate set of unit tests which all pass.\n1. Submit a pull request.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/google/gnostic/main/CONTRIBUTING.md"}], "requirements": [{"result": {"value": "**gnostic** can be run in any environment that supports [Go](http://golang.org)\nand the\n[Protocol Buffer Compiler](https://github.com/protocolbuffers/protobuf).\n", "type": "Text_excerpt", "original_header": "Requirements", "parent_header": ["\u2a01 gnostic"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}], "installation": [{"result": {"value": "The following instructions are for installing **gnostic** using\n[Go modules](https://blog.golang.org/using-go-modules), supported by Go 1.11\nand later.\n\n1.  Get this package by downloading it with `git clone`.\n\n        git clone https://github.com/google/gnostic\n        cd gnostic\n\n2.  Verify that you have a local installation of `protoc`. You can get `protoc`\n    [here](https://github.com/protocolbuffers/protobuf).\n\n3.  Build **gnostic** with `make`. This uses\n    [go generate](https://blog.golang.org/generate) to build support code\n    including code generated by `protoc` and the Go `protoc` plugin, which is\n    automatically downloaded from\n    [github.com/golang/protobuf](https://github.com/golang/protobuf) by the\n    [COMPILE-PROTOS.sh](COMPILE-PROTOS.sh) script. This also builds all plugins\n    and associated tools in this repo.\n\n4.  Verify **gnostic** with `make test`. These tests are run by **gnostic**'s\n    continuous integration, so you should expect them to pass for all release\n    versions.\n\n5.  Run **gnostic**. This sample invocation creates a file in the current\n    directory named `petstore.pb` that contains a binary Protocol Buffer\n    description of a sample API.\n\n            gnostic --pb-out=. examples/v2.0/json/petstore.json\n\n6.  You can also compile files that you specify with a URL. Here's another way\n    to compile the previous example. This time we're creating `petstore.text`,\n    which contains a textual representation of the Protocol Buffer description.\n    This is mainly for use in testing and debugging.\n\n            gnostic --text-out=petstore.text https://raw.githubusercontent.com/google/gnostic/master/examples/v2.0/json/petstore.json\n\n7.  For a sample application, see apps/report. This reads a binary Protocol\n    Buffer encoding created by **gnostic**.\n\n        go install ./apps/report ## automatically installed by the top-level Makefile\n        report petstore.pb\n\n8.  **gnostic** also supports plugins. **gnostic**'s plugin interface is\n    modeled on `protoc`'s\n    [plugin.proto](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/compiler/plugin.proto)\n    and is described in [plugins/plugin.proto](plugins/plugin.proto). Several\n    plugins are implemented in the `plugins` directory. Others, like\n    [gnostic-grpc](https://github.com/google/gnostic-grpc) and\n    [gnostic-go-generator](https://github.com/google/gnostic-go-generator),\n    are published in their own repositories. One such plugin is\n    [gnostic-vocabulary](plugins/gnostic-vocabulary), which produces a summary\n    of the word usage in an APIs interfaces. You can run `gnostic-vocabulary`\n    with the following:\n\n            gnostic examples/v2.0/json/petstore.json --vocabulary_out=.\n\n    This will produce files named `vocabulary.pb` and `vocabulary.json` in\n    `examples/v2.0/json`. For the format of `vocabulary.pb`, see\n    [metrics/vocabulary.proto](metrics/vocabulary.proto).\n\n9.  [Optional] A large part of **gnostic** is automatically-generated by the\n    [generate-gnostic](generate-gnostic) tool. This uses JSON schemas to\n    generate Protocol Buffer language files that describe supported API\n    specification formats and Go-language files of code that will read JSON or\n    YAML API descriptions into the generated protocol buffer models.\n    Pre-generated versions of these files are checked into the\n    [openapiv2](openapiv2), [openapiv3](openapiv3), and [discovery](discovery)\n    directories. You can regenerate this code with the following:\n\n        go install ./generate-gnostic\n        generate-gnostic --v2\n        generate-gnostic --v3\n        generate-gnostic --discovery\n", "type": "Text_excerpt", "original_header": "Installation and Getting Started", "parent_header": ["\u2a01 gnostic"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}], "usage": [{"result": {"value": "The following instructions are for installing **gnostic** using\n[Go modules](https://blog.golang.org/using-go-modules), supported by Go 1.11\nand later.\n\n1.  Get this package by downloading it with `git clone`.\n\n        git clone https://github.com/google/gnostic\n        cd gnostic\n\n2.  Verify that you have a local installation of `protoc`. You can get `protoc`\n    [here](https://github.com/protocolbuffers/protobuf).\n\n3.  Build **gnostic** with `make`. This uses\n    [go generate](https://blog.golang.org/generate) to build support code\n    including code generated by `protoc` and the Go `protoc` plugin, which is\n    automatically downloaded from\n    [github.com/golang/protobuf](https://github.com/golang/protobuf) by the\n    [COMPILE-PROTOS.sh](COMPILE-PROTOS.sh) script. This also builds all plugins\n    and associated tools in this repo.\n\n4.  Verify **gnostic** with `make test`. These tests are run by **gnostic**'s\n    continuous integration, so you should expect them to pass for all release\n    versions.\n\n5.  Run **gnostic**. This sample invocation creates a file in the current\n    directory named `petstore.pb` that contains a binary Protocol Buffer\n    description of a sample API.\n\n            gnostic --pb-out=. examples/v2.0/json/petstore.json\n\n6.  You can also compile files that you specify with a URL. Here's another way\n    to compile the previous example. This time we're creating `petstore.text`,\n    which contains a textual representation of the Protocol Buffer description.\n    This is mainly for use in testing and debugging.\n\n            gnostic --text-out=petstore.text https://raw.githubusercontent.com/google/gnostic/master/examples/v2.0/json/petstore.json\n\n7.  For a sample application, see apps/report. This reads a binary Protocol\n    Buffer encoding created by **gnostic**.\n\n        go install ./apps/report ## automatically installed by the top-level Makefile\n        report petstore.pb\n\n8.  **gnostic** also supports plugins. **gnostic**'s plugin interface is\n    modeled on `protoc`'s\n    [plugin.proto](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/compiler/plugin.proto)\n    and is described in [plugins/plugin.proto](plugins/plugin.proto). Several\n    plugins are implemented in the `plugins` directory. Others, like\n    [gnostic-grpc](https://github.com/google/gnostic-grpc) and\n    [gnostic-go-generator](https://github.com/google/gnostic-go-generator),\n    are published in their own repositories. One such plugin is\n    [gnostic-vocabulary](plugins/gnostic-vocabulary), which produces a summary\n    of the word usage in an APIs interfaces. You can run `gnostic-vocabulary`\n    with the following:\n\n            gnostic examples/v2.0/json/petstore.json --vocabulary_out=.\n\n    This will produce files named `vocabulary.pb` and `vocabulary.json` in\n    `examples/v2.0/json`. For the format of `vocabulary.pb`, see\n    [metrics/vocabulary.proto](metrics/vocabulary.proto).\n\n9.  [Optional] A large part of **gnostic** is automatically-generated by the\n    [generate-gnostic](generate-gnostic) tool. This uses JSON schemas to\n    generate Protocol Buffer language files that describe supported API\n    specification formats and Go-language files of code that will read JSON or\n    YAML API descriptions into the generated protocol buffer models.\n    Pre-generated versions of these files are checked into the\n    [openapiv2](openapiv2), [openapiv3](openapiv3), and [discovery](discovery)\n    directories. You can regenerate this code with the following:\n\n        go install ./generate-gnostic\n        generate-gnostic --v2\n        generate-gnostic --v3\n        generate-gnostic --discovery\n", "type": "Text_excerpt", "original_header": "Installation and Getting Started", "parent_header": ["\u2a01 gnostic"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}], "full_title": [{"result": {"type": "String", "value": "\u2a01 gnostic"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}], "documentation": [{"result": {"type": "Url", "value": "https://github.com/google/gnostic/wiki", "format": "wiki"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/google/gnostic/main/README.md"}]}