{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:48:34"}, "code_repository": [{"result": {"value": "https://github.com/JustGlowing/minisom", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "JustGlowing", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2013-07-03T10:10:06Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T03:06:42Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": "https://api.github.com/licenses/mit", "type": "License", "name": "MIT License", "url": "https://api.github.com/licenses/mit", "spdx_id": "MIT"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "MIT License\n\nCopyright (c) 2021 Giuseppe Vettigli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/LICENSE"}], "description": [{"result": {"value": ":red_circle: MiniSom is a minimalistic implementation of the Self Organizing Maps", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Text_excerpt", "value": "MiniSom is a minimalistic and Numpy based implementation of the Self Organizing Maps (SOM). SOM is a type of Artificial Neural Network able to convert complex, nonlinear statistical relationships between high-dimensional data items into simple geometric relationships on a low-dimensional display. Minisom is designed to allow researchers to easily build on top of it and to give students the ability to quickly grasp its details. \nThe project initially aimed for a minimalistic implementation of the Self-Organizing Map (SOM) algorithm, focusing on simplicity in features, dependencies, and code style. Although it has expanded in terms of features, it remains minimalistic by relying only on the numpy library and emphasizing vectorization in coding style. \nJump into using MiniSom via Google Colab: [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://githubtocolab.com/JustGlowing/minisom/blob/master/examples/BasicUsage.ipynb)\n \n", "original_header": "Self Organizing Maps"}, "confidence": 0.9477580482825587, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "name": [{"result": {"value": "minisom", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "JustGlowing/minisom", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/JustGlowing/minisom/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/JustGlowing/minisom/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 1324, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "clustering, dimensionality-reduction, machine-learning, manifold-learning, neural-networks, outlier-detection, self-organizing-map, som, unsupervised-learning, vector-quantization", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 407, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/JustGlowing/minisom/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 37592}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/JustGlowing/minisom/releases/62014568", "tag": "2.3.1", "name": "2.3.1", "author": {"name": "JustGlowing", "type": "User"}, "description": "- Introduce `use_epochs` parameter, when `True` it will keep learning rate and decay constant for an entire epoch. Thanks to @jriege555 for submitting this change\r\n- Topographic Error can now be computed also for hexagonal grids. Thanks to @TharindaDilshan \r\n- Fixed issue with pca initialization", "tarball_url": "https://api.github.com/repos/JustGlowing/minisom/tarball/2.3.1", "zipball_url": "https://api.github.com/repos/JustGlowing/minisom/zipball/2.3.1", "html_url": "https://github.com/JustGlowing/minisom/releases/tag/2.3.1", "url": "https://api.github.com/repos/JustGlowing/minisom/releases/62014568", "release_id": 62014568, "date_created": "2023-03-02T15:04:42Z", "date_published": "2023-03-02T15:10:38Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/JustGlowing/minisom/releases/60455087", "tag": "2.3.0", "name": "2.3.0", "author": {"name": "JustGlowing", "type": "User"}, "description": "- Activation functions can now be defined via callables, thanks to @chicodelarosa\r\n- The method `distance_map` now has the parameter `neighbour_average` that allows the user to normalize the distances. Thanks to @lbugnon", "tarball_url": "https://api.github.com/repos/JustGlowing/minisom/tarball/2.3.0", "zipball_url": "https://api.github.com/repos/JustGlowing/minisom/zipball/2.3.0", "html_url": "https://github.com/JustGlowing/minisom/releases/tag/2.3.0", "url": "https://api.github.com/repos/JustGlowing/minisom/releases/60455087", "release_id": 60455087, "date_created": "2022-02-25T07:34:51Z", "date_published": "2022-02-25T07:50:44Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/JustGlowing/minisom/releases/41947482", "tag": "2.2.9", "name": "2.2.9", "author": {"name": "JustGlowing", "type": "User"}, "description": "License change.", "tarball_url": "https://api.github.com/repos/JustGlowing/minisom/tarball/2.2.9", "zipball_url": "https://api.github.com/repos/JustGlowing/minisom/zipball/2.2.9", "html_url": "https://github.com/JustGlowing/minisom/releases/tag/2.2.9", "url": "https://api.github.com/repos/JustGlowing/minisom/releases/41947482", "release_id": 41947482, "date_created": "2021-04-24T17:21:29Z", "date_published": "2021-04-24T17:22:39Z"}, "confidence": 1, "technique": "GitHub_API"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/BasicUsage.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/BasicUsage.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/MovieCovers.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/MovieCovers.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/DemocracyIndex.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/DemocracyIndex.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/OutliersDetection.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/OutliersDetection.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/Classification.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/Classification.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/HexagonalTopology.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/HexagonalTopology.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/AdvancedVisualization.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/AdvancedVisualization.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/FeatureSelection.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/FeatureSelection.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/TimeSeries.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/TimeSeries.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/PoemsAnalysis.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/PoemsAnalysis.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/ColorSpaceMapping.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/ColorSpaceMapping.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/TopicModeling.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/TopicModeling.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/HandwrittenDigits.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/HandwrittenDigits.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/TravellingSalesmanProblem.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/TravellingSalesmanProblem.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/ColorQuantization.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/ColorQuantization.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/Clustering.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/examples/Clustering.ipynb"}], "installation": [{"result": {"value": "Just use pip:\n\n    pip install minisom\n\nor download MiniSom to a directory of your choice and use the setup script:\n\n    git clone https://github.com/JustGlowing/minisom.git\n    python setup.py install\n", "type": "Text_excerpt", "original_header": "Installation", "parent_header": ["MiniSom<img src='https://3.bp.blogspot.com/-_6UDGEHzIrs/WSfiyjmoeRI/AAAAAAAABHw/3UQylcCBEhUfHNhf56WSHBBmQ6g_lXQhwCLcB/s320/minisom_logo.png' align='right'>"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "usage": [{"result": {"value": "In order to use MiniSom you need your data organized as a Numpy matrix where each row corresponds to an observation or as list of lists like the following:\n\n```python\ndata = [[ 0.80,  0.55,  0.22,  0.03],\n        [ 0.82,  0.50,  0.23,  0.03],\n        [ 0.80,  0.54,  0.22,  0.03],\n        [ 0.80,  0.53,  0.26,  0.03],\n        [ 0.79,  0.56,  0.22,  0.03],\n        [ 0.75,  0.60,  0.25,  0.03],\n        [ 0.77,  0.59,  0.22,  0.03]]      \n```\n\n Then you can train MiniSom just as follows:\n\n```python\nfrom minisom import MiniSom    \nsom = MiniSom(6, 6, 4, sigma=0.3, learning_rate=0.5) # initialization of 6x6 SOM\nsom.train(data, 100) # trains the SOM with 100 iterations\n```\n\nYou can obtain the position of the winning neuron on the map for a given sample as follows:\n\n```\nsom.winner(data[0])\n```\n\nFor an overview of all the features implemented in minisom you can browse the following examples: https://github.com/JustGlowing/minisom/tree/master/examples\n", "type": "Text_excerpt", "original_header": "How to use it", "parent_header": ["MiniSom<img src='https://3.bp.blogspot.com/-_6UDGEHzIrs/WSfiyjmoeRI/AAAAAAAABHw/3UQylcCBEhUfHNhf56WSHBBmQ6g_lXQhwCLcB/s320/minisom_logo.png' align='right'>"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"value": "A model can be saved using pickle as follows\n\n```python\nimport pickle\nsom = MiniSom(7, 7, 4)\n\n# ...train the som here\n\n# saving the som in the file som.p\nwith open('som.p', 'wb') as outfile:\n    pickle.dump(som, outfile)\n```\n\nand can be loaded as follows\n\n```python\nwith open('som.p', 'rb') as infile:\n    som = pickle.load(infile)\n```\n\nNote that if a lambda function is used to define the decay factor MiniSom will not be pickable anymore.\n", "type": "Text_excerpt", "original_header": "Export a SOM and load it again", "parent_header": ["MiniSom<img src='https://3.bp.blogspot.com/-_6UDGEHzIrs/WSfiyjmoeRI/AAAAAAAABHw/3UQylcCBEhUfHNhf56WSHBBmQ6g_lXQhwCLcB/s320/minisom_logo.png' align='right'>", "How to use it"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"value": "Here are some of the charts you'll see how to generate in the [examples](https://github.com/JustGlowing/minisom/tree/master/examples):\n\n| | |\n:-------------------------:|:-------------------------:\nSeeds map ![](https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_seed.png)  | Class assignment ![](https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_seed_pies.png)\nHandwritten digits mapping ![](https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_digts.png)  |  Hexagonal Topology <img src=\"https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_seed_hex.png\" alt=\"som hexagonal toplogy\" width=450>\nColor quantization ![](https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_color_quantization.png)  |  Outliers detection ![](https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_outliers_detection_circle.png)\n", "type": "Text_excerpt", "original_header": "Examples", "parent_header": ["MiniSom<img src='https://3.bp.blogspot.com/-_6UDGEHzIrs/WSfiyjmoeRI/AAAAAAAABHw/3UQylcCBEhUfHNhf56WSHBBmQ6g_lXQhwCLcB/s320/minisom_logo.png' align='right'>"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"value": "- <a href=\"https://glowingpython.blogspot.com/2013/09/self-organizing-maps.html\">Self Organizing Maps on the Glowing Python</a>\n- <a href=\"http://syllabus.cs.manchester.ac.uk/pgt/2021/COMP61021/reference/new-SOM.pdf\">Essentials of the self-organizing map</a> by Teuvo Kohonen\n- <a href=\"https://github.com/Optimization-Algorithms-Book/Code-Listings/blob/main/Chapter%2011/Listing%2011.5_TSP_SOM.ipynb\">How to solve the Travelling Salesman Problem</a> from the book <i>Optimization Algorithms:Optimization Algorithms: AI techniques for design, planning, and control problems. Manning Publications, 2023.</i>\n- <a href=\"http://aa.ssdi.di.fct.unl.pt/files/AA-16_notes.pdf\">Lecture notes from the Machine Learning course at the University of Lisbon</a>\n- <a href=\"https://heartbeat.fritz.ai/introduction-to-self-organizing-maps-soms-98e88b568f5d\">Introduction to Self-Organizing</a> by Derrick Mwiti\n- <a href=\"http://inphronesys.com/?p=625\">Self Organizing Maps on gapminder data</a> [in German]\n- <a href=\"https://medium.com/neuronio/discovering-som-an-unsupervised-neural-network-12e787f38f9\">Discovering SOM, an Unsupervised Neural Network</a> by Gisely Alves\n- Video tutorials made by the GeoEngineerings School: <a href=\"https://www.youtube.com/watch?v=3osKNPyAxPM&list=PL-i8do33HJovC7xFKaYO21qT37vORJWXC&index=11\">Part 1</a>; <a href=\"https://www.youtube.com/watch?v=uUpQ6MITlVs&list=PL-i8do33HJovC7xFKaYO21qT37vORJWXC&index=12\">Part 2</a>; <a href=\"https://www.youtube.com/watch?v=mryFU0TEInk&list=PL-i8do33HJovC7xFKaYO21qT37vORJWXC&index=13\">Part 3</a>; <a href=\"https://www.youtube.com/watch?v=9MzFOIoxxdk&index=14&list=PL-i8do33HJovC7xFKaYO21qT37vORJWXC\">Part 4</a>\n- Video tutorial <a href=\"https://www.youtube.com/watch?v=0qtvb_Nx2tA\">Self Organizing Maps: Introduction</a> by Art of Visualization\n- Video tutorial <a href=\"https://www.youtube.com/watch?v=O6nzwAc_hrQ\">Self Organizing Maps Hyperparameter tuning</a> by \nSuperDataScience Machine Learning\n- <a href=\"http://docs.unigrafia.fi/publications/kohonen_teuvo/\">MATLAB Implementations and Applications of the Self-Organizing Map</a> by Teuvo Kohonen\n", "type": "Text_excerpt", "original_header": "Other tutorials", "parent_header": ["MiniSom<img src='https://3.bp.blogspot.com/-_6UDGEHzIrs/WSfiyjmoeRI/AAAAAAAABHw/3UQylcCBEhUfHNhf56WSHBBmQ6g_lXQhwCLcB/s320/minisom_logo.png' align='right'>"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "citation": [{"result": {"value": "```\n@misc{vettigliminisom,\n  title={MiniSom: minimalistic and NumPy-based implementation of the Self Organizing Map},\n  author={Giuseppe Vettigli},\n  year={2018},\n  url={https://github.com/JustGlowing/minisom/},\n}\n```\n\nMiniSom has been cited more than 200 times, check out the research where MiniSom was used  <a href=\"https://scholar.google.co.uk/scholar?hl=en&as_sdt=2007&q=%22JustGlowing%2Fminisom%22+OR+%22minisom+library%22+OR+%22minisom+python%22+OR+%22minisom+vettigli%22&btnG=\">here</a>.\n", "type": "Text_excerpt", "original_header": "How to cite MiniSom", "parent_header": ["MiniSom<img src='https://3.bp.blogspot.com/-_6UDGEHzIrs/WSfiyjmoeRI/AAAAAAAABHw/3UQylcCBEhUfHNhf56WSHBBmQ6g_lXQhwCLcB/s320/minisom_logo.png' align='right'>"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"value": "@misc{vettigliminisom,\n  title={MiniSom: minimalistic and NumPy-based implementation of the Self Organizing Map},\n  author={Giuseppe Vettigli},\n  year={2018},\n  url={https://github.com/JustGlowing/minisom/},\n}", "type": "Text_excerpt", "format": "bibtex"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "contributing_guidelines": [{"result": {"value": "1. In the description of your Pull Request explain clearly what it implements or fixes. In cases that the PR is about a code speedup, report a reproducible example and quantify the speedup.\n2. Give your pull request a helpful title that summarises what your contribution does. \n3. Write unit tests for your code and make sure the existing ones are up to date. `pytest` can be used for this:\n```\npytest minisom.py\n```\n4. Make sure that there are no stylistic issues using `pycodestyle`:\n```\npycodestyle minisom.py\n```\n5. Make sure your code is properly commented and documented. Each public method needs to be documented as the existing ones.\n\n", "type": "Text_excerpt", "original_header": "Guidelines to contribute", "parent_header": ["MiniSom<img src='https://3.bp.blogspot.com/-_6UDGEHzIrs/WSfiyjmoeRI/AAAAAAAABHw/3UQylcCBEhUfHNhf56WSHBBmQ6g_lXQhwCLcB/s320/minisom_logo.png' align='right'>"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "application_domain": [{"result": {"type": "String", "value": "Computer Vision"}, "confidence": 0.8372183343996268, "technique": "supervised_classification"}], "full_title": [{"result": {"type": "String", "value": "MiniSom"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "documentation": [{"result": {"type": "Url", "value": "https://github.com/JustGlowing/minisom/wiki", "format": "wiki"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "logo": [{"result": {"type": "Url", "value": "https://static.pepy.tech/personalized-badge/minisom?period=total&amp;units=international_system&amp;left_color=black&amp;right_color=blue&amp;left_text=Downloads"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}], "image": [{"result": {"type": "Url", "value": "https://colab.research.google.com/assets/colab-badge.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"type": "Url", "value": "https://colab.research.google.com/assets/colab-badge.svg"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"type": "Url", "value": "https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_seed.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"type": "Url", "value": "https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_seed_pies.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"type": "Url", "value": "https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_digts.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"type": "Url", "value": "https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_seed_hex.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"type": "Url", "value": "https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_color_quantization.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}, {"result": {"type": "Url", "value": "https://github.com/JustGlowing/minisom/raw/master/examples/resulting_images/som_outliers_detection_circle.png"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/JustGlowing/minisom/master/Readme.md"}]}