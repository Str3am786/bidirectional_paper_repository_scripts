{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:46:05"}, "code_repository": [{"result": {"value": "https://github.com/akaraspt/tl_paper", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "akaraspt", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2017-03-28T11:57:53Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-20T03:22:06Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "name": [{"result": {"value": "tl_paper", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "akaraspt/tl_paper", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/akaraspt/tl_paper/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/akaraspt/tl_paper/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 12, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 6, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/akaraspt/tl_paper/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 544571}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Jupyter Notebook", "name": "Jupyter Notebook", "type": "Programming_language", "size": 184642}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/akaraspt/tl_paper/releases/6520676", "tag": "0.1", "name": "Release 0.1", "author": {"name": "zsdonghao", "type": "User"}, "description": "Runable", "tarball_url": "https://api.github.com/repos/akaraspt/tl_paper/tarball/0.1", "zipball_url": "https://api.github.com/repos/akaraspt/tl_paper/zipball/0.1", "html_url": "https://github.com/akaraspt/tl_paper/releases/tag/0.1", "url": "https://api.github.com/repos/akaraspt/tl_paper/releases/6520676", "release_id": 6520676, "date_created": "2017-05-26T22:17:23Z", "date_published": "2017-05-26T22:18:18Z"}, "confidence": 1, "technique": "GitHub_API"}], "executable_example": [{"result": {"value": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/Performance%20plot.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/Performance%20plot.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/Manage%20Jobs.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/Manage%20Jobs.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/KerasTensorDB.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/KerasTensorDB.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/TensorLabDemo.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/TensorLabDemo.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/Visualize%20Train%20Log.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/Visualize%20Train%20Log.ipynb"}, {"result": {"value": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/TensorBot.ipynb", "type": "Url", "format": "jupyter_notebook"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/_related/TensorBot.ipynb"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "installation": [{"result": {"value": "Before you start, you need to set up the environment for all examples in this repo.\n* Layer and Model Modules\n  * These are the basic modules of TensorLayer, you can run all [single machine examples](http://tensorlayer.readthedocs.io/en/latest/user/example.html) with this module only.\n  * TensorFlow 1.0+\n    * `pip install tensorflow-gpu` or follow [the official installation guide](https://www.tensorflow.org/install/)\n  * TensorLayer \n    * It is self-contained\n    * You can also get the latest version in [Github](https://github.com/zsdonghao/tensorlayer)\n* Deep Reinforcement Learning Environment\n  * To run the DRL example, you will need to install [OpenAI gym](https://gym.openai.com) for game environment, [lz4](http://python-lz4.readthedocs.io/en/latest/quickstart.html) for data compression and the dataset module.\n  * `pip install gym lz4`\n  * `sudo apt-get install swig cmake`\n  * `pip install gym[atari]` or `pip install gym[all]`\n* Dataset and Workflow Modules\n  * For `Deep Reinforcement Learning` and `Hyper-parameter selection and cross-validation` you may want to use dataset and workflow modules.\n  * Install MongoDB\n    * Follow [MongoDB docs](https://docs.mongodb.com/manual/installation/)\n    * We recommend to use one machine as dataset server.\n  * Install eAE (Optional)\n    * You may need this environement to distribute the different jobs. An installation process is available at that address: https://github.com/aoehmichen/eae-docker/blob/master/install_eae_hybrid.txt \n", "type": "Text_excerpt", "original_header": "Set Up Environment", "parent_header": ["Codes for ACM MM Open Source Software Competition"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "You need to install all modules to run this example.\nThis is a simple asynchronous DRL example, you can run this example in one machine or multiple machines with dataset module.\n* About the codes\n  * [tutorial_tensordb_atari_pong_generator.py](https://github.com/akaraspt/tl_paper/blob/master/tutorial_tensordb_atari_pong_generator.py) is the data generator.\n  * [tutorial_tensordb_atari_pong_trainer.py](https://github.com/akaraspt/tl_paper/blob/master/tutorial_tensordb_atari_pong_trainer.py) is the GPU trainer.\n* Run the experiment\n  * Before you run it in distributed mode, we higly recommend you to run one trainer with multiple data generators in a standalone machine.\n  * For distributed mode, one machine run one trainer with GPU, all other machines run data generator.\n    * Start multiple agents that generate training samples for the trainer. Run the following script uses to start multiple generators. Note: all of the generated data will be stored in MongoDB, which will be fetched by the trainer\n      *  `python submit_job_eae.py`\n    * After start the generators, run the following script to train a model.\n      * `python tutorial_tensordb_atari_pong_trainer.py`\n    * To terminate all of the generators, run the following scripts.\n      * `python terminate_running_jobs.py`\n \n", "original_header": "Deep Reinforcement Learning"}, "confidence": 0.8659345122637493, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "You need to install all modules to run this example.\n* [DeepSleepNet](https://github.com/akaraspt/deepsleepnet)\n \n", "original_header": "Hyper-parameter selection and cross-validation"}, "confidence": 0.9849261085165177, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}, {"result": {"type": "Text_excerpt", "value": "You only need to install TensorFlow to run these examples.\n* DCGAN\n  * [TensorFlow Implementation](https://github.com/carpedm20/DCGAN-tensorflow)\n  * [TensorLayer Implementation](https://github.com/zsdonghao/dcgan)\n* Text to image synthesis\n  * [TensorFlow Implementation](https://github.com/paarthneekhara/text-to-image)\n  * [TensorLayer Implementation](https://github.com/zsdonghao/text-to-image) \n", "original_header": "Generative Adversarial Network"}, "confidence": 0.8144992221414614, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}], "description": [{"result": {"type": "Text_excerpt", "value": "This repo summarizes the codes that mention in \"TensorLayer: A Versatile Library for Efficient Deep Learning Development\".\n \n", "original_header": "Codes for ACM MM Open Source Software Competition"}, "confidence": 0.9776933936992138, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}], "invocation": [{"result": {"type": "Text_excerpt", "value": "You need to install all modules to run this example.\nThis is a simple asynchronous DRL example, you can run this example in one machine or multiple machines with dataset module.\n* About the codes\n  * [tutorial_tensordb_atari_pong_generator.py](https://github.com/akaraspt/tl_paper/blob/master/tutorial_tensordb_atari_pong_generator.py) is the data generator.\n  * [tutorial_tensordb_atari_pong_trainer.py](https://github.com/akaraspt/tl_paper/blob/master/tutorial_tensordb_atari_pong_trainer.py) is the GPU trainer.\n* Run the experiment\n  * Before you run it in distributed mode, we higly recommend you to run one trainer with multiple data generators in a standalone machine.\n  * For distributed mode, one machine run one trainer with GPU, all other machines run data generator.\n    * Start multiple agents that generate training samples for the trainer. Run the following script uses to start multiple generators. Note: all of the generated data will be stored in MongoDB, which will be fetched by the trainer\n      *  `python submit_job_eae.py`\n    * After start the generators, run the following script to train a model.\n      * `python tutorial_tensordb_atari_pong_trainer.py`\n    * To terminate all of the generators, run the following scripts.\n      * `python terminate_running_jobs.py`\n \n", "original_header": "Deep Reinforcement Learning"}, "confidence": 0.8000875460383402, "technique": "supervised_classification", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "Codes for ACM MM Open Source Software Competition"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}], "documentation": [{"result": {"type": "Url", "value": "http://tensorlayer.readthedocs.io/", "format": "readthedocs"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}, {"result": {"type": "Url", "value": "http://python-lz4.readthedocs.io/", "format": "readthedocs"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/akaraspt/tl_paper/master/README.md"}]}