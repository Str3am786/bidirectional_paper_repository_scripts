{"somef_provenance": {"somef_version": "0.9.4", "somef_schema_version": "1.0.0", "date": "2023-12-21 18:54:47"}, "code_repository": [{"result": {"value": "https://github.com/simongog/sdsl-lite", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "owner": [{"result": {"value": "simongog", "type": "User"}, "confidence": 1, "technique": "GitHub_API"}], "date_created": [{"result": {"value": "2013-02-28T22:34:07Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "date_updated": [{"result": {"value": "2023-12-21T04:41:27Z", "type": "Date"}, "confidence": 1, "technique": "GitHub_API"}], "license": [{"result": {"value": null, "type": "License", "name": "Other", "url": null, "spdx_id": "NOASSERTION"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Copyright (c) 2010-2015, Michael Bostock\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* The name Michael Bostock may not be used to endorse or promote products\n  derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT,\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n", "type": "File_dump"}, "confidence": 1, "technique": "file_exploration", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/external/d3/LICENSE"}], "description": [{"result": {"value": "Succinct Data Structure Library 2.0", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "[![Build Status](https://travis-ci.org/simongog/sdsl-lite.svg?branch=master)](https://travis-ci.org/simongog/sdsl-lite)\n", "type": "Text_excerpt", "original_header": "SDSL - Succinct Data Structure Library"}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "The Succinct Data Structure Library (SDSL) is a powerful and flexible C++11\nlibrary implementing succinct data structures. In total, the library contains\nthe highlights of 40 [research publications][SDSLLIT]. Succinct data structures\ncan represent an object (such as a bitvector or a tree) in space close to the\ninformation-theoretic lower bound of the object while supporting operations\nof the original object efficiently. The theoretical time complexity of an\noperation performed on the classical data structure and the equivalent\nsuccinct data structure are (most of the time) identical.\n", "type": "Text_excerpt", "original_header": "What is it?", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "Succinct data structures have very attractive theoretical properties. However,\nin practice implementing succinct data structures is non-trivial as they are\noften composed of complex operations on bitvectors. The SDSL Library provides\nhigh quality, open source implementations of many succinct data structures\nproposed in literature.\n\nSpecifically, the aim of the library is to provide basic and complex succinct\ndata structure which are\n\n  * Easy and intuitive to use (like the [STL][STL], which provides classical data structures),\n  * Faithful to the original theoretical results,\n  * Capable of handling large inputs (yes, we support 64-bit),\n  * Provide efficient construction of all implemented succinct data structures,\n  while at the same time enable good run-time performance.\n\n<a href=\"http://simongog.github.io/assets/data/space-vis.html\" >\n<img align=\"right\" src=\"extras/resources/space-vis.png?raw=true\" />\n</a>\n\nIn addition we provide additional functionality which can help you use succinct\ndata structure to their full potential.\n\n  * Each data structure can easily be serialized and loaded to/from disk.\n  * We provide functionality which helps you analyze the storage requirements of any\n  SDSL based data structure (see right)\n  * We support features such as hugepages and tracking the memory usage of each\n  SDSL data structure.\n  * Complex structures can be configured by template parameters and therefore\n    easily be composed. There exists one simple method which constructs\n    all complex structures.\n  * We maintain an extensive collection of examples which help you use the different\n    features provided by the library.\n  * All data structures are tested for correctness using a unit-testing framework.\n  * We provide a large collection of supporting documentation consisting of examples,\n    [cheat sheet][SDSLCS], [tutorial slides and walk-through][TUT].\n\nThe library contains many succinct data structures from the following categories:\n\n * Bitvectors supporting Rank and Select\n * Integer Vectors\n * Wavelet Trees\n * Compressed Suffix Arrays (CSA)\n * Balanced Parentheses Representations\n * Longest Common Prefix (LCP) Arrays\n * Compressed Suffix Trees (CST)\n * Range Minimum/Maximum Query (RMQ) Structures\n\nFor a complete overview including theoretical bounds see the\n[cheat sheet][SDSLCS] or the\n[wiki](https://github.com/simongog/sdsl-lite/wiki/List-of-Implemented-Data-Structures).\n", "type": "Text_excerpt", "original_header": "Why SDSL?", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "Implementing succinct data structures can be tricky. To ensure that all data\nstructures behave as expected, we created a large collection of unit tests\nwhich can be used to check the correctness of the library on your computer.\nThe [test](./test) directory contains test code. We use [googletest][GTEST]\nframework and [make][MAKE] to run the tests. See the README file in the\ndirectory for details.\n\nTo simply run all unit tests after installing the library type\n\n```sh\ncd sdsl-lite/build\nmake test-sdsl\n```\n\nNote: Running the tests requires several sample files to be downloaded from the web\nand can take up to 2 hours on slow machines.\n\n", "type": "Text_excerpt", "original_header": "Test", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "To ensure the library runs efficiently on your system we suggest you run our\n[benchmark suite](benchmark). The benchmark suite recreates a\npopular [experimental study](http://arxiv.org/abs/0712.3360) which you can\ndirectly compare to the results of your benchmark run.\n", "type": "Text_excerpt", "original_header": "Benchmarks", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "While we use an extensive set of unit tests and test coverage tools you might\nstill find bugs in the library. We encourage you to report any problems with\nthe library via the [github issue tracking system](https://github.com/simongog/sdsl-lite/issues)\nof the project.\n", "type": "Text_excerpt", "original_header": "Bug Reporting", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "The latest version can be found on the SDSL github project page https://github.com/simongog/sdsl-lite .\n\nIf you are running experiments in an academic settings we suggest you use the\nmost recent [released](https://github.com/simongog/sdsl-lite/releases) version\nof the library. This allows others to reproduce your experiments exactly.\n", "type": "Text_excerpt", "original_header": "The Latest Version", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "The SDSL library is free software provided under the GNU General Public License\n(GPLv3). For more information see the [COPYING file][CF] in the library\ndirectory.\n\nWe distribute this library freely to foster the use and development of advanced\ndata structure. If you use the library in an academic setting please cite the\nfollowing paper:\n\n    @inproceedings{gbmp2014sea,\n      title     = {From Theory to Practice: Plug and Play with Succinct Data Structures},\n      author    = {Gog, Simon and Beller, Timo and Moffat, Alistair and Petri, Matthias},\n      booktitle = {13th International Symposium on Experimental Algorithms, (SEA 2014)},\n      year      = {2014},\n      pages     = {326-337},\n      ee        = {http://dx.doi.org/10.1007/978-3-319-07959-2_28}\n    }\n\nA preliminary version is available [here on arxiv][SEAPAPER].\n", "type": "Text_excerpt", "original_header": "Licensing", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "We have included the code of two excellent suffix array\nconstruction algorithms.\n\n* Yuta Mori's incredible fast suffix [libdivsufsort][DIVSUF]\n  algorithm for byte-alphabets.\n* An adapted version of [Jesper Larsson's][JESL] [implementation][QSUFIMPL] of\n  suffix array sorting on integer-alphabets (description of [Larsson and Sadakane][LS]).\n\nAdditionally, we use the [googletest][GTEST] framework to provide unit tests.\nOur visualizations are implemented using the [d3js][d3js]-library.\n\n", "type": "Text_excerpt", "original_header": "External Resources used in SDSL", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"value": "The main contributors to the library are:\n\n* [Johannes Bader](https://github.com/olydis)\n* [Timo Beller](https://github.com/tb38)\n* [Simon Gog](https://github.com/simongog) (Creator)\n* [Matthias Petri](https://github.com/mpetri)\n\nThis project is also supported by code contributions\nfrom other researchers. E.g. Juha K\u00e4rkk\u00e4inen,\n[Dominik Kempa](https://github.com/dkempa),\nand Simon Puglisi contributed a compressed bitvector\nimplementation ([hyb_vector][HB]).\nThis project further profited from excellent input of our students\nMarkus Brenner, Alexander Diehm, Christian Ocker, and Maike Zwerger. Stefan\nArnold helped us with tricky template questions. We are also grateful to\n[Diego Caro](https://github.com/diegocaro),\n[Travis Gagie](https://github.com/TravisGagie),\nKalle Karhu,\n[Bruce Kuo](https://github.com/bruce3557),\nJan Kurrus,\n[Shanika Kuruppu](https://github.com/skuruppu),\nJouni Siren,\nand [Julio Vizcaino](https://github.com/garviz)\nfor bug reports.\n", "type": "Text_excerpt", "original_header": "Authors", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}], "name": [{"result": {"value": "sdsl-lite", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "full_name": [{"result": {"value": "simongog/sdsl-lite", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "issue_tracker": [{"result": {"value": "https://api.github.com/repos/simongog/sdsl-lite/issues", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "forks_url": [{"result": {"value": "https://api.github.com/repos/simongog/sdsl-lite/forks", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "stargazers_count": [{"result": {"value": 2161, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "keywords": [{"result": {"value": "", "type": "String"}, "confidence": 1, "technique": "GitHub_API"}], "forks_count": [{"result": {"value": 346, "type": "Number"}, "confidence": 1, "technique": "GitHub_API"}], "download_url": [{"result": {"value": "https://github.com/simongog/sdsl-lite/releases", "type": "Url"}, "confidence": 1, "technique": "GitHub_API"}], "programming_languages": [{"result": {"value": "C++", "name": "C++", "type": "Programming_language", "size": 2065968}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "TeX", "name": "TeX", "type": "Programming_language", "size": 65702}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Makefile", "name": "Makefile", "type": "Programming_language", "size": 57689}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "R", "name": "R", "type": "Programming_language", "size": 45824}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "CMake", "name": "CMake", "type": "Programming_language", "size": 37554}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "C", "name": "C", "type": "Programming_language", "size": 9747}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Shell", "name": "Shell", "type": "Programming_language", "size": 7251}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "GDB", "name": "GDB", "type": "Programming_language", "size": 1711}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Python", "name": "Python", "type": "Programming_language", "size": 877}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"value": "Batchfile", "name": "Batchfile", "type": "Programming_language", "size": 663}, "confidence": 1, "technique": "GitHub_API"}], "releases": [{"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/3584128", "tag": "v2.1.1", "name": "SDSL 2.1.1", "author": {"name": "simongog", "type": "User"}, "description": "This feature contains\r\n-  [x]  Fixes for some minor issues\r\n  - demangle detection\r\n  - compilation with gcc4.7.3 \r\n- [x]  Improved functionality\r\n  - sd_vector can now be parametrized with other bit_vectors \r\n- [x]  Small performance improvements\r\n  - WT construction is more space-efficient in some cases\r\n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/v2.1.1", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/v2.1.1", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/v2.1.1", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/3584128", "release_id": 3584128, "date_created": "2016-07-04T16:55:14Z", "date_published": "2016-07-04T19:07:02Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/3025805", "tag": "v2.1", "name": "SDSL 2.1", "author": {"name": "simongog", "type": "User"}, "description": "Most important changes to previous release:\n  [x] sd_vector can now be constructed from an increasing sequence of integers \n  [x] Port to Windows (compiles with the latest version of VC++)\n  [x] Tests use CMake\n  [x] Added a Full-Compressed Suffix Tree ([cst_fully](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/cst_fully.hpp))\n  [x] Added an alphabet partitioned WT ([wt_ap.hpp](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/wt_ap.hpp))\n  [x] Added the hybrid_bitvector ([hyp_vector.hpp](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/hyb_vector.hpp)) of K\u00e4rkk\u00e4inen, Kempa, and Puglisi\n  [x] External dependencies libdivsufsort and gtest are now included as submodules\n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/v2.1", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/v2.1", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/v2.1", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/3025805", "release_id": 3025805, "date_created": "2016-03-25T10:18:56Z", "date_published": "2016-04-15T07:24:26Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/596045", "tag": "v2.0.3", "name": "SDSL 2.0.3", "author": {"name": "simongog", "type": "User"}, "description": "This version\n- [x] adds a K^2-treap implementation ([k2_treap](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/k2_treap.hpp))\n- [x] fixes a bug in [dac_vector](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/dac_vector.hpp)\n- [x] adds rank_0/select_0 to [sd_vector](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/sd_vector.hpp)\n- [x] adds `expand` method for wavelet trees ([WT algorithms](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/wt_algorithm.hpp))\n- [x] adds the sequence representation of Golynski, Munro and Rao ([wt_gmr](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/wt_gmr.hpp)) \n- [x] includes a preliminary memory mapped version of int_vector ([int_vector_mapper](https://github.com/simongog/sdsl-lite/blob/master/include/sdsl/int_vector_mapper.hpp))\n- [x] cst_sct3 can now be parametrized to support fast navigational operations also on very large alphabets\n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/v2.0.3", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/v2.0.3", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/v2.0.3", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/596045", "release_id": 596045, "date_created": "2014-09-30T20:18:17Z", "date_published": "2014-10-01T14:06:01Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/106914", "tag": "v2.0.2", "name": "SDSL 2.0.2", "author": {"name": "simongog", "type": "User"}, "description": "This version\n- [x] extends the functionality of bit_vectors: `get_int` extracts up to 64 continues bits\n- [x] adds a wavelet tree benchmark\n- [x] adds a LCP construction benchmark\n- [x] includes an Elias gamma code\n- [x] fixes a bug in the hugepage memory management\n- [x] adds an copy constructor to cst_sct3::node_type (it should be automatic generated by the compiler, but we had strange memory leaking problems in one application and adding it explicitly solved the problem) \n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/v2.0.2", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/v2.0.2", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/v2.0.2", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/106914", "release_id": 106914, "date_created": "2013-11-27T21:36:28Z", "date_published": "2013-11-28T23:05:40Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/84898", "tag": "v2.0.1", "name": "SDSL 2.0.1", "author": {"name": "simongog", "type": "User"}, "description": "This version includes\n- a bug fix in the load method of `select_support_scan`\n- a benchmark for Wavelet Trees\n- a benchmark for Document Retrieval Solutions \n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/v2.0.1", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/v2.0.1", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/v2.0.1", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/84898", "release_id": 84898, "date_created": "2013-11-05T09:29:03Z", "date_published": "2013-11-05T09:33:01Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/52730", "tag": "v2.0.0", "name": "SDSL 2.0.0", "author": {"name": "simongog", "type": "User"}, "description": "This version\n- [x] simplifies the usage of the library\n- [x] features integer-alphabet version of all indexes\n- [x] contains a unified implementation of pointer based Wavelet Trees\n- [x] introduces a Hu-Tucker-shape strategy for WTs\n- [x] facilitates the user to switch between semi-external and in-memory construction\n- [x] enables the use of 1 GB hugepages [(example)](https://github.com/simongog/sdsl-lite/blob/master/examples/hugepages.cpp)\n- [x] provides more sophisticated visualizations ([construction resource graph](http://simongog.github.io/assets/data/cst-construction.html) and [memory breakdowns](http://simongog.github.io/assets/data/space-vis.html))\n- [x] includes a [tutorial slides set](http://simongog.github.io/assets/data/sdsl-slides/tutorial) and a new [cheatsheet](http://simongog.github.io/assets/data/sdsl-cheatsheet.pdf)\n- [x] comes with a set of [fully automated benchmarks](https://github.com/simongog/sdsl-lite/tree/master/benchmark)\n- [x] includes a comprehensive [test suite](https://github.com/simongog/sdsl-lite/tree/master/test)\n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/v2.0.0", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/v2.0.0", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/v2.0.0", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/52730", "release_id": 52730, "date_created": "2013-09-26T12:23:37Z", "date_published": "2013-09-26T12:27:32Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/50006", "tag": "v2.0.0-RC", "name": "Version 2.0.0 Release Candidate", "author": {"name": "simongog", "type": "User"}, "description": "This version\n- [x] simplifies the usage of the library\n- [x] features integer-alphabet version of all indexes\n- [x] contains a unified implementation of pointer based Wavelet Trees\n- [x] introduces a Hu-Tucker-shape strategy for WTs\n- [x] facilitates the user to switch between semi-external and in-memory construction\n- [x] supports easy use 1 GB hugepages [(example)](https://github.com/simongog/sdsl-lite/blob/master/examples/hugepages.cpp)\n- [x] provides more sophisticated visualizations ([construction resource graph](http://simongog.github.io/assets/data/cst-construction.html) and [memory breakdowns](http://simongog.github.io/assets/data/space-vis.html))\n- [x] includes a [tutorial slides set](http://simongog.github.io/assets/data/sdsl-slides/tutorial) and a new [cheatsheet](http://simongog.github.io/assets/data/sdsl-cheatsheet.pdf)\n- [x] comes with a set of [fully automated benchmarks](https://github.com/simongog/sdsl-lite/tree/master/benchmark)\n- [x] includes a comprehensive [test suite](https://github.com/simongog/sdsl-lite/tree/master/test)\n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/v2.0.0-RC", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/v2.0.0-RC", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/v2.0.0-RC", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/50006", "release_id": 50006, "date_created": "2013-09-23T00:17:07Z", "date_published": "2013-09-23T00:17:17Z"}, "confidence": 1, "technique": "GitHub_API"}, {"result": {"type": "Release", "value": "https://api.github.com/repos/simongog/sdsl-lite/releases/18484", "tag": "C++11v1", "name": "C++11v1", "author": {"name": "simongog", "type": "User"}, "description": "This release is the last version which uses the class int_vector_file_buffer for buffered reading of int_vector data from a stream.\nThe newer version will replace this class with int_vector_buffer, which allows reading and writing. Furthermore it also handles the loading and writing of blocks automatically and is therefore easier to use.\n", "tarball_url": "https://api.github.com/repos/simongog/sdsl-lite/tarball/C++11v1", "zipball_url": "https://api.github.com/repos/simongog/sdsl-lite/zipball/C++11v1", "html_url": "https://github.com/simongog/sdsl-lite/releases/tag/C%2B%2B11v1", "url": "https://api.github.com/repos/simongog/sdsl-lite/releases/18484", "release_id": 18484, "date_created": "2013-07-30T01:02:56Z", "date_published": "2013-07-31T01:43:12Z"}, "confidence": 1, "technique": "GitHub_API"}], "has_script_file": [{"result": {"value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/uninstall.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/install.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/test/coverage/run.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/test/coverage/clean.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/build/build.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}, {"result": {"value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/build/clean.sh", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "readme_url": [{"result": {"value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md", "type": "Url"}, "confidence": 1, "technique": "file_exploration"}], "documentation": [{"result": {"value": "We provide an extensive set of documentation describing all data structures\nand features provided by the library. Specifically we provide\n\n* A [cheat sheet][SDSLCS] which succinctly\ndescribes the usage of the library.\n* An doxygen generated [API reference][DOXYGENDOCS] which lists all types and functions\nof the library.\n* A set of [example](examples/) programs demonstrating how different features\nof the library are used.\n* A tutorial [presentation][TUT] with the [example code](tutorial/) using in the\nsides demonstrating all features of the library in a step-by-step walk-through.\n* [Unit Tests](test/) which contain small code snippets used to test each\nlibrary feature.\n", "type": "Text_excerpt", "original_header": "Documentation", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"type": "Url", "value": "https://github.com/simongog/sdsl-lite/wiki/List-of-Implemented-Data-Structures", "format": "wiki"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}, {"result": {"type": "Url", "value": "https://github.com/simongog/sdsl-lite/wiki", "format": "wiki"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}], "requirements": [{"result": {"value": "The SDSL library requires:\n\n* A modern, C++11 ready compiler such as `g++` version 4.9 or higher or `clang` version 3.2 or higher.\n* The [cmake][cmake] build system.\n* A 64-bit operating system. Either Mac OS X or Linux are currently supported.\n* For increased performance the processor of the system should support fast bit operations available in `SSE4.2`\n", "type": "Text_excerpt", "original_header": "Requirements", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}], "installation": [{"result": {"value": "To download and install the library use the following commands.\n\n```sh\ngit clone https://github.com/simongog/sdsl-lite.git\ncd sdsl-lite\n./install.sh\n```\n\nThis installs the sdsl library into the `include` and `lib` directories in your\nhome directory. A different location prefix can be specified as a parameter of\nthe `install.sh` script:\n\n```sh\n./install.sh /usr/local/\n```\n\nTo build a portable sdsl library without using `SSE4.2` and `AVX2` instructions, set `BUILD_PORTABLE` at build time, e.g. `BUILD_PORTABLE=1 ./install.sh` or `mkdir build && BUILD_PORTABLE=1 cmake ..`.\nThese instructions are enabled by default if the processor of the build system supports them.\n\nTo remove the library from your system use the provided uninstall script:\n\n```sh\n./uninstall.sh\n```\n\nThere is also a [Gentoo Ebuild for SDSL][EBUILD] by Mathias Weller.\n", "type": "Text_excerpt", "original_header": "Installation", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}], "usage": [{"result": {"value": "To get you started with the library you can start by compiling the following\nsample program which constructs a compressed suffix array (a FM-Index) over the\ntext `mississippi!`, counts the number of occurrences of pattern `si` and\nstores the data structure, and a space usage visualization to the\nfiles `fm_index-file.sdsl` and `fm_index-file.sdsl.html`:\n\n```cpp\n#include <sdsl/suffix_arrays.hpp>\n#include <fstream>\n\nusing namespace sdsl;\n\nint main() {\n    csa_wt<> fm_index;\n    construct_im(fm_index, \"mississippi!\", 1);\n    std::cout << \"'si' occurs \" << count(fm_index,\"si\") << \" times.\\n\";\n    store_to_file(fm_index,\"fm_index-file.sdsl\");\n    std::ofstream out(\"fm_index-file.sdsl.html\");\n    write_structure<HTML_FORMAT>(fm_index,out);\n}\n```\n\nTo compile the program using `g++` run:\n\n```sh\ng++ -std=c++11 -O3 -DNDEBUG -I ~/include -L ~/lib program.cpp -o program -lsdsl -ldivsufsort -ldivsufsort64\n```\n\nNext we suggest you look at the comprehensive [tutorial][TUT] which describes\nall major features of the library or look at some of the provided [examples](examples).\n", "type": "Text_excerpt", "original_header": "Getting Started", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}], "contributing_guidelines": [{"result": {"value": "Are you working on a new or improved implementation of a succinct data structure?\nWe encourage you to contribute your implementation to the SDSL library to make\nyour work accessible to the community within the existing library framework.\nFeel free to contact any of the authors or create an issue on the\n[issue tracking system](https://github.com/simongog/sdsl-lite/issues).\n\n\n[STL]: http://www.sgi.com/tech/stl/ \"Standard Template Library\"\n[pz]: http://pizzachili.di.unipi.it/ \"Pizza&amp;Chli\"\n[d3js]: http://d3js.org \"D3JS library\"\n[cmake]: http://www.cmake.org/ \"CMake tool\"\n[MAKE]: http://www.gnu.org/software/make/ \"GNU Make\"\n[gcc]: http://gcc.gnu.org/ \"GNU Compiler Collection\"\n[DIVSUF]: https://github.com/y-256/libdivsufsort/ \"libdivsufsort\"\n[LS]: http://www.sciencedirect.com/science/article/pii/S0304397507005257 \"Larson &amp; Sadakane Algorithm\"\n[GTEST]: https://code.google.com/p/googletest/ \"Google C++ Testing Framework\"\n[SDSLCS]: http://simongog.github.io/assets/data/sdsl-cheatsheet.pdf \"SDSL Cheat Sheet\"\n[SDSLLIT]: https://github.com/simongog/sdsl-lite/wiki/Literature \"Succinct Data Structure Literature\"\n[TUT]: http://simongog.github.io/assets/data/sdsl-slides/tutorial \"Tutorial\"\n[QSUFIMPL]: http://www.larsson.dogma.net/qsufsort.c \"Original Qsufsort Implementation\"\n[JESL]: http://www.itu.dk/people/jesl/ \"Homepage of Jesper Larsson\"\n[CF]: https://github.com/simongog/sdsl-lite/blob/master/COPYING \"Licence\"\n[SEAPAPER]: http://arxiv.org/pdf/1311.1249v1.pdf \"SDSL paper\"\n[HB]: https://github.com/simongog/sdsl-lite/blob/hybrid_bitvector/include/sdsl/hybrid_vector.hpp \"Hybrid bitevctor\"\n[DOXYGENDOCS]: http://algo2.iti.kit.edu/gog/docs/html/index.html \"API Reference\"\n[EBUILD]: https://github.com/igel-kun/silly_ebuilds \"Gentoo EBuild\"\n", "type": "Text_excerpt", "original_header": "Contribute", "parent_header": ["SDSL - Succinct Data Structure Library"]}, "confidence": 1, "technique": "header_analysis", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}], "full_title": [{"result": {"type": "String", "value": "SDSL - Succinct Data Structure Library"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}], "image": [{"result": {"type": "Url", "value": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/extras/resources/space-vis.png?raw=true"}, "confidence": 1, "technique": "regular_expression", "source": "https://raw.githubusercontent.com/simongog/sdsl-lite/master/README.md"}]}