@article{shannon1948theory,
  title={A mathematical theory of communication},
  author={Shannon, Claude Elwood},
  journal={The Bell system technical journal},
  volume={27},
  number={3},
  pages={379--423},
  year={1948},
  publisher={Nokia Bell Labs}
}

@article{DEHMER201157history,
title = {A history of graph entropy measures},
journal = {Information Sciences},
volume = {181},
number = {1},
pages = {57-78},
year = {2011},
issn = {0020-0255},
doi = {https://doi.org/10.1016/j.ins.2010.08.041},
url = {https://www.sciencedirect.com/science/article/pii/S0020025510004147},
author = {Matthias Dehmer and Abbe Mowshowitz},
keywords = {Graphs, Information theory, Information measures, Information inequalities, Entropy, Graph entropy, Graph complexity, Structural complexity},
abstract = {This survey seeks to describe methods for measuring the entropy of graphs and to demonstrate the wide applicability of entropy measures. Setting the scene with a review of classical measures for determining the structural information content of graphs, we discuss graph entropy measures which play an important role in a variety of problem areas, including biology, chemistry, and sociology. In addition, we examine relationships between selected entropy measures, illustrating differences quantitatively with concrete examples.}
}

@book{dehmer2017mathematical,
  title={Mathematical Foundations and Applications of Graph Entropy},
  author={Dehmer, M. and Emmert-Streib, F. and Chen, Z. and Li, X. and Shi, Y.},
  isbn={9783527339099},
  series={Quantitative and Network Biology},
  url={https://books.google.com.au/books?id=5ZMgCwAAQBAJ},
  year={2017},
  publisher={Wiley}
}

@book{Konstantinova2011chemistry,
    title={Information-Theoretic Methods in Chemical Graph Theory},
    author={Konstantinova, Elena},
    isbn={9780817649043},
    year={2011},
    publisher={Birkh{\"a}user Boston},
    address={Boston, MA},
    pages={97--126},
    doi={10.1007/978-0-8176-4904-3_5},
}

@article{ephremides1998networks,
  author={Ephremides, A. and Hajek, B.},
  journal={IEEE Transactions on Information Theory}, 
  title={Information theory and communication networks: an unconsummated union}, 
  year={1998},
  volume={44},
  number={6},
  pages={2416-2434},
  doi={10.1109/18.720543}}

@article{DEARRUDA2019641network,
    title = {Connecting network science and information theory},
    journal = {Physica A: Statistical Mechanics and its Applications},
    volume = {515},
    pages = {641-648},
    year = {2019},
    issn = {0378-4371},
    doi = {https://doi.org/10.1016/j.physa.2018.10.005},
    url = {https://www.sciencedirect.com/science/article/pii/S0378437118313438},
    author = {Henrique F. {de Arruda} and Filipi N. Silva and Cesar H. Comin and Diego R. Amancio and Luciano da F. Costa},
    keywords = {Information theory, Complex networks, Compression, Data compression, Random walks, And network dynamics},
    abstract = {A framework integrating information theory and network science is proposed. By incorporating and integrating concepts such as complexity, coding, topological projections and network dynamics, the proposed network-based framework paves the way not only to extending traditional information science, but also to modeling, characterizing and analyzing a broad class of real-world problems, from language communication to DNA coding. Basically, an original network is supposed to be transmitted, with or without compaction, through a sequence of symbols or time-series obtained by sampling its topology by some network dynamics, such as random walks. We show that the degree of compression is ultimately related to the ability to predict the frequency of symbols based on the topology of the original network and the adopted dynamics. The potential of the proposed approach is illustrated with respect to the efficiency of transmitting several types of topologies by using a variety of random walks. Several interesting results are obtained, including the behavior of the Barabási–Albert model oscillating between high and low performance depending on the considered dynamics, and the distinct performances obtained for two geographical models.}
}

@article{Huang536318,
    author = {Huang, Chien-Hung and Tsai, Jeffrey J. P. and Kurubanjerdjit, Nilubon and Ng, Ka-Lok},
    title = {Computational analysis of molecular networks using spectral graph theory, complexity measures and information theory},
    elocation-id = {536318},
    year = {2019},
    doi = {10.1101/536318},
    publisher = {Cold Spring Harbor Laboratory},
    abstract = {Biological processes are based on molecular networks, which exhibit biological functions through interactions among the various genetic elements. This study presents a graph-based method to characterize molecular networks by decomposing them into directed multigraphs: network motifs. Spectral graph theory, reciprocity, and complexity measures were utilized to quantify the network motifs. It was found that graph energy, reciprocity, and cyclomatic complexity can optimally specify network motifs with some degree of degeneracy. A total of 72 molecular networks were analyzed, of three types: cancer networks, signal transduction networks, and cellular processes. It was found that molecular networks are built from a finite number of motif patterns; hence, a graph energy cutoff exists. In addition, it was found that certain motif patterns are absent from the three types of networks; hence, the Shannon entropy of the motif frequency distribution is not maximal. Furthermore, frequently found motifs are irreducible graphs. These are novel findings: they warrant further investigation and may lead to important applications.The present study provides a systematic approach for dissecting biological networks. Our discovery supports the view that there are organizational principles underlying molecular networks.},
    URL = {https://www.biorxiv.org/content/early/2019/04/05/536318},
    eprint = {https://www.biorxiv.org/content/early/2019/04/05/536318.full.pdf},
    journal = {bioRxiv}
}

@ARTICLE{mccabe1976complexity,
  author={McCabe, T.J.},
  journal={IEEE Transactions on Software Engineering}, 
  title={A Complexity Measure}, 
  year={1976},
  volume={SE-2},
  number={4},
  pages={308-320},
  doi={10.1109/TSE.1976.233837}}

@book{McConnell:2004:CCS:1096143,
 author = {McConnell, Steve},
 title = {Code Complete, Second Edition},
 year = {2004},
 isbn = {0735619670, 9780735619678},
 publisher = {Microsoft Press},
 address = {Redmond, WA, USA},
}

@book{gamma1995patterns,
author = {Gamma, Erich and Helm, Richard and Johnson, Ralph and Vlissides, John},
title = {Design Patterns: Elements of Reusable Object-Oriented Software},
year = {1995},
isbn = {0201633612},
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
address = {USA}
}

@misc{javaSqrtDoc,
author = {Oracle Corporation},
title = {Class StrictMath},
howpublished = {Available at \url{https://docs.oracle.com/javase/8/docs/api/java/lang/StrictMath.html}}
}

@misc{soJavaSqrt,
author = {Stack Overflow},
title = {Where can I find the source code for Java's Square Root function?},
howpublished = {Available at \url{https://stackoverflow.com/questions/825221/where-can-i-find-the-source-code-for-javas-square-root-function}}
}

@misc{anonymousRepo,
title = {https://anonymous.4open.science/r/nlbse2023entropy-D6E9/},
howpublished = {Available at \url{https://anonymous.4open.science/r/nlbse2023entropy-D6E9/}}
}

@ARTICLE{hellerman1972lookup,
  author={Hellerman, L.},
  journal={IEEE Transactions on Computers}, 
  title={A Measure of Computational Work}, 
  year={1972},
  volume={C-21},
  number={5},
  pages={439-446},
  doi={10.1109/T-C.1972.223539}}

@article{Khoshgoftaar1994ApplicationsOI,
title={Applications of information theory to software engineering measurement},
author={Taghi M. Khoshgoftaar and Edward B. Allen},
journal={Software Quality Journal},
year={1994},
volume={3},
pages={79-103}
}

@article{Coul87,
    author = {Coulter, N. S. and Cooper, R. B. and Solomon, M. K.},
    title = "{Information-theoretic Complexity of Program Specifications}",
    journal = {The Computer Journal},
    volume = {30},
    number = {3},
    pages = {223-227},
    year = {1987},
    month = {01},
    abstract = "{Various models and metrics that are based on cognitive theories and assumptions have been proposed in an effort to formalise the concept of programming difficulty. The model and metric proposed here are, instead, based on a problem-space formalisation and an information-theoretic measure (entropy) that provides the complexity of a program specification; this metric can be applied before the specification's implementation is complete. The problem space for a program specification is the set of possible state descriptions that could arise from the execution of the program on that input, as ascertainable from the specification. We show how to define the entropy metric based on the problem space definition, and demonstrate the applicability of this metric to modularity problems.}",
    issn = {0010-4620},
    doi = {10.1093/comjnl/30.3.223},
    url = {https://doi.org/10.1093/comjnl/30.3.223},
    eprint = {https://academic.oup.com/comjnl/article-pdf/30/3/223/1041303/300223.pdf},
}

@article{Moha81metrics,
title = {Entropy metrics for software design evaluation},
journal = {Journal of Systems and Software},
volume = {2},
number = {1},
pages = {39-46},
year = {1981},
issn = {0164-1212},
doi = {https://doi.org/10.1016/0164-1212(81)90045-5},
url = {https://www.sciencedirect.com/science/article/pii/0164121281900455},
author = {Siba N. Mohanty},
abstract = {Several metrics for the quality assessment of a software system design are discussed. The metrics are based on the entropy function of communication information theory. The design of software systems is viewed as a trade-off between the information contained within a subsystem and the information shared among the subsystems of a given system. Since information can be shared in different ways by different system designs, we can compute the excess entropy and thereby rank different design alternatives. Consequently, the quality improvement due to reconfigurations can be determined by calculating the excess entropies for each reconfiguration.}
}

@article{boloix1988interconnectivity,
  title={Interconnectivity metric for software complexity},
  author={Boloix, Germinal and Germinal, Pierre},
  journal={INFOR: Information Systems and Operational Research},
  volume={26},
  number={1},
  pages={17--39},
  year={1988},
  publisher={Taylor \& Francis}
}

@article{lew1988software,
  title={Software complexity and its impact on software reliability},
  author={Lew, Ken S. and Dillon, Tharam S. and Forward, Kevin E.},
  journal={IEEE Transactions on Software Engineering},
  volume={14},
  number={11},
  pages={1645--1655},
  year={1988},
  publisher={IEEE}
}

@ARTICLE{davi88complexity,
  author={Davis, J.S. and LeBlanc, R.J.},
  journal={IEEE Transactions on Software Engineering}, 
  title={A study of the applicability of complexity measures}, 
  year={1988},
  volume={14},
  number={9},
  pages={1366-1372},
  doi={10.1109/32.6179}}

@ARTICLE{chen1978complexity,
author={Chen, E.T.},
journal={IEEE Transactions on Software Engineering}, 
title={Program Complexity and Programmer Productivity}, 
year={1978},
volume={SE-4},
number={3},
pages={187-194},
doi={10.1109/TSE.1978.231497}}

@inproceedings{berlinger1980complexity,
author = {Berlinger, Eli},
title = {An Information Theory Based Complexity Measure},
year = {1980},
isbn = {9781450379236},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1500518.1500651},
doi = {10.1145/1500518.1500651},
abstract = {There have been numerous measures proposed to measure program complexity. Some are completely heuristic, comparing certain measurable program features against a set of predefined standards. Some are topological, based on the number of regions on the control or data graph of the programs or a combination of the above, and of course, there is Halstead's Software Physics.},
booktitle = {Proceedings of the May 19-22, 1980, National Computer Conference},
pages = {773–779},
numpages = {7},
location = {Anaheim, California},
series = {AFIPS '80}
}

@book{halstead1977elements,
author = {Halstead, Maurice H.},
title = {Elements of Software Science (Operating and Programming Systems Series)},
year = {1977},
isbn = {0444002057},
publisher = {Elsevier Science Inc.},
address = {USA}
}

@ARTICLE{harrison1992entropy,
  author={Harrison, W.},
  journal={IEEE Transactions on Software Engineering}, 
  title={An entropy-based measure of software complexity}, 
  year={1992},
  volume={18},
  number={11},
  pages={1025-1029},
  doi={10.1109/32.177371}}

@article{cook1993information,
title={Information theory metric for assembly language},
author={Cook, Curtis},
journal={Software Engineering Strategies},
pages={52--60},
year={1993},
publisher={Citeseer}
}

@inproceedings{khoshgoftaar1992measure,
  title={A measure of software system complexity and its relationship to faults},
  author={Khoshgoftaar, TM and Munson, JC},
  booktitle={Proceedings of the 1992 International Simulation Technology Conference},
  pages={267--272},
  year={1992},
  organization={The Society for Computer Simulation San Diego, CA}
}

@article{kolmogorov1965three,
  title={Three approaches to the quantitative definition ofinformation'},
  author={Kolmogorov, Andrei N},
  journal={Problems of information transmission},
  volume={1},
  number={1},
  pages={1--7},
  year={1965}
}

@article{khoshgoftaar1998information,
  title={An information theoretic approach to predicting software faults},
  author={Khoshgoftaar, Taghi M and Allen, Edward B},
  journal={International Journal of Reliability, Quality and Safety Engineering},
  volume={5},
  number={03},
  pages={227--248},
  year={1998},
  publisher={World Scientific}
}

@inproceedings{bianchi2001evaluating,
  title={Evaluating software degradation through entropy},
  author={Bianchi, Alessandro and Caivano, Danilo and Lanubile, Filippo and Visaggio, Giuseppe},
  booktitle={Proceedings Seventh International Software Metrics Symposium},
  pages={210--219},
  year={2001},
  organization={IEEE}
}

@inproceedings{allen2002measuring,
  title={Measuring graph abstractions of software: An information-theory approach},
  author={Allen, Edward B},
  booktitle={Proceedings eighth ieee symposium on software metrics},
  pages={182--193},
  year={2002},
  organization={IEEE}
}

@inproceedings{hassan2009predicting,
  title={Predicting faults using the complexity of code changes},
  author={Hassan, Ahmed E},
  booktitle={2009 IEEE 31st international conference on software engineering},
  pages={78--88},
  year={2009},
  organization={IEEE}
}

@article{canfora2014changes,
  title={How changes affect software entropy: an empirical study},
  author={Canfora, Gerardo and Cerulo, Luigi and Cimitile, Marta and Di Penta, Massimiliano},
  journal={Empirical Software Engineering},
  volume={19},
  number={1},
  pages={1--38},
  year={2014},
  publisher={Springer}
}

@inproceedings{keenan2022investigation,
  title={An Investigation of Entropy and Refactoring in Software Evolution},
  author={Keenan, Daniel and Greer, Des and Cutting, David},
  booktitle={International Conference on Product-Focused Software Process Improvement},
  pages={282--297},
  year={2022},
  organization={Springer}
}

@book{aho86dragon,
  added-at = {2007-03-17T15:34:03.000+0100},
  annote = {Mentions (mostly) viable prefix property. Earlier dragon book is more clear on this. Also mentioned in Graham-Rhodes paper.},
  author = {Aho, Alfred V. and Sethi, Ravi and Ullman, Jeffrey D.},
  biburl = {https://www.bibsonomy.org/bibtex/2540b2a8f4a1fffbbfe439ad1b91247ac/yijunyu},
  citeulike-article-id = {608947},
  interhash = {069cab756cb575510f247044b597377d},
  intrahash = {540b2a8f4a1fffbbfe439ad1b91247ac},
  keywords = {compilation compiler},
  priority = {0},
  publisher = {Addison-Wesley},
  timestamp = {2007-03-17T15:34:11.000+0100},
  title = {{Compilers, Principles, Techniques, and Tools}},
  year = 1986
}

@book{engineering_a_compiler,
author = {Torczon, Linda and Cooper, Keith},
title = {Engineering A Compiler},
year = {2007},
isbn = {012088478X},
publisher = {Morgan Kaufmann Publishers Inc.},
address = {San Francisco, CA, USA},
edition = {2nd}
}

@inproceedings{movshovitz-attias-cohen-2013-natural,
    title = "Natural Language Models for Predicting Programming Comments",
    author = "Movshovitz-Attias, Dana  and
      Cohen, William W.",
    booktitle = "Proceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers)",
    month = aug,
    year = "2013",
    address = "Sofia, Bulgaria",
    publisher = "Association for Computational Linguistics",
    url = "https://aclanthology.org/P13-2007",
    pages = "35--40",
}

@inproceedings{allamanis2016convolutional,
  title={A convolutional attention network for extreme summarization of source code},
  author={Allamanis, Miltiadis and Peng, Hao and Sutton, Charles},
  booktitle={International conference on machine learning},
  pages={2091--2100},
  year={2016},
  organization={PMLR}
}

@inproceedings{Dabic:msr2021githubSearch,
  author    = {Ozren Dabic and Emad Aghajani and Gabriele Bavota},
  title     = {Sampling Projects in GitHub for {MSR} Studies},
  booktitle = {18th {IEEE/ACM} International Conference on Mining Software Repositories,
               {MSR} 2021},
  pages     = {560--564},
  publisher = {{IEEE}},
  year      = {2021}
}

@inproceedings{PyDriller,
    title = "PyDriller: Python Framework for Mining Software Repositories",
    abstract = "Software repositories contain historical and valuable information about the overall development of software systems. Mining software repositories (MSR) is nowadays considered one of the most interesting growing fields within software engineering. MSR focuses on extracting and analyzing data available in software repositories to uncover interesting, useful, and actionable information about the system. Even though MSR plays an important role in software engineering research, few tools have been created and made public to support developers in extracting information from Git repository. In this paper, we present PyDriller, a Python Framework that eases the process of mining Git. We compare our tool against the state-of-the-art Python Framework GitPython, demonstrating that PyDriller can achieve the same results with, on average, 50% less LOC and significantly lower complexity.URL: https://github.com/ishepard/pydrillerMaterials: https://doi.org/10.5281/zenodo.1327363Pre-print: https://doi.org/10.5281/zenodo.1327411",
    author = "Spadini, Davide and Aniche, Maurício and Bacchelli, Alberto",
    year = "2018",
    doi = "10.1145/3236024.3264598",
    booktitle = "The 26th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE)",
}

@misc{javaparser,
author = {Nicholas Smith, Danny van Bruggen, Federico Tomassetti},
title = {JavaParser},
howpublished = {Available at \url{https://github.com/javaparser/javaparser}}
}

@article{Hucka2018spiral, 
    doi = {10.21105/joss.00653}, 
    url = {https://doi.org/10.21105/joss.00653}, 
    year = {2018}, 
    publisher = {The Open Journal}, 
    volume = {3}, 
    number = {24}, 
    pages = {653}, 
    author = {Michael Hucka},
    title = {Spiral: splitters for identifiers in source code files}, journal = {Journal of Open Source Software} 
}

@book{Parr10language,
  added-at = {2017-07-11T18:25:32.000+0200},
  address = {Raleigh, NC},
  author = {Parr, Terence},
  biburl = {https://www.bibsonomy.org/bibtex/2126e5bfce36fc898006413e856462fd7/flint63},
  file = {eBook:2010/Parr10.pdf:PDF;Pragmatic Bookshelf Product page:http\://pragprog.com/book/tpdsl/language-implementation-patterns:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/193435645X/:URL},
  groups = {public},
  interhash = {e2a1e779216ae133cb979bc4a2e4aa6d},
  intrahash = {126e5bfce36fc898006413e856462fd7},
  isbn = {978-1-93435-645-6},
  keywords = {01841 105 book shelf safari software development design pattern code generation java compiler tool},
  publisher = {Pragmatic Bookshelf},
  timestamp = {2018-04-16T11:40:10.000+0200},
  title = {Language Implementation Patterns: Techniques for Implementing Domain-Specific Languages},
  url = {https://www.safaribooksonline.com/library/view/language-implementation-patterns/9781680500097/},
  username = {flint63},
  year = 2010
}

@article{munaiah2017curating,
author = {Munaiah, Nuthan and Kroh, Steven and Cabrey, Craig and Nagappan, Meiyappan},
title = {Curating GitHub for Engineered Software Projects},
year = {2017},
issue_date = {December  2017},
publisher = {Kluwer Academic Publishers},
address = {USA},
volume = {22},
number = {6},
issn = {1382-3256},
url = {https://doi.org/10.1007/s10664-017-9512-6},
doi = {10.1007/s10664-017-9512-6},
journal = {Empirical Softw. Engg.},
month = {dec},
pages = {3219–3253},
numpages = {35},
keywords = {Mining software repositories, GitHub, Curation tools, Data curation}
}

@misc{mcconnel2018techdebt,
author = {Steve McConnell},
title = {Managing Technical Debt},
howpublished = {Available at \url{http://www.construx.com/uploadedfiles/resources/whitepapers/Managing\%20Technical\%20Debt.pdf}}
}

@article{kalyuga2011cognitive,
  title={Cognitive load theory: How many types of load does it really need?},
  author={Kalyuga, Slava},
  journal={Educational Psychology Review},
  volume={23},
  number={1},
  pages={1--19},
  year={2011},
  publisher={Springer}
}

@article{akoglu2018coefficients,
author = {Akoglu, Haldun},
year = {2018},
month = {08},
pages = {},
title = {User's guide to correlation coefficients},
volume = {18},
journal = {Turkish Journal of Emergency Medicine},
doi = {10.1016/j.tjem.2018.08.001}
}

@ARTICLE{lehman1980laws,
  author={Lehman, M.M.},
  journal={Proceedings of the IEEE}, 
  title={Programs, life cycles, and laws of software evolution}, 
  year={1980},
  volume={68},
  number={9},
  pages={1060-1076},
  doi={10.1109/PROC.1980.11805}}