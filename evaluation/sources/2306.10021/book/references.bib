%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/
%% Created for Tom Mens at 2023-03-21 17:19:32 +0100
%% Saved with string encoding Unicode (UTF-8) 



@article{Gholamshahi2019,
	abstract = {Summary Nowadays, with the development of software reuse, software developers are paying more attention to component-related technologies, which have been mostly applied in the development of large-scale complex applications to enhance the productivity of software development and accelerate time to market. Component-based software development is well acknowledged as a methodology, which establishes the reusability of software and reduces the development cost effectively. Two crucial problems in component-based software development are component identification and component selection. The main purpose of this paper is to provide a reference point for future research by categorizing and classifying different component identification and component selection methods and emphasizing their respective strengths and weaknesses. We hope that it can help researchers find the current status of this issue and serve as a basis for future activities.},
	author = {Gholamshahi, Shabnam and Hasheminejad, Seyed Mohammad Hossein},
	date-added = {2023-03-21 17:19:00 +0100},
	date-modified = {2023-03-21 17:19:29 +0100},
	doi = {10.1002/spe.2656},
	journal = {Software: Practice and Experience},
	keywords = {component identification, component selection, software component},
	number = {1},
	pages = {40-69},
	title = {Software component identification and selection: A research review},
	volume = {49},
	year = {2019},
	bdsk-url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.2656},
	bdsk-url-2 = {https://doi.org/10.1002/spe.2656}}

@dataset{baltes2021zenodo,
	author = {Baltes, Sebastian},
	doi = {10.5281/zenodo.4415593},
	month = jan,
	publisher = {Zenodo},
	title = {{SOTorrent} Dataset},
	version = {2020-12-31},
	year = 2021,
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.4415593}}

@inproceedings{montgomery2022alternative,
	abstract = {Organisations use issue tracking systems (ITSs) to track and document their projects' work in units called issues. This style of documentation encourages evolutionary refinement, as each issue can be independently improved, commented on, linked to other issues, and progressed through the organisational workflow. Commonly studied ITSs so far include GitHub, GitLab, and Bugzilla, while Jira, one of the most popular ITS in practice with a wealth of additional information, has yet to receive similar attention. Unfortunately, diverse public Jira datasets are rare, likely due to the difficulty in finding and accessing these repositories. With this paper, we release a dataset of 16 public Jiras with 1822 projects, spanning 2.7 million issues with a combined total of 32 million changes, 9 million comments, and 1 million issue links. We believe this Jira dataset will lead to many fruitful research projects investigating issue evolution, issue linking, cross-project analysis, as well as cross-tool analysis when combined with existing well-studied ITS datasets.},
	author = {Montgomery, Lloyd and L\"{u}ders, Clara and Maalej, Walid},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	doi = {10.1145/3524842.3528486},
	isbn = {9781450393034},
	pages = {73--77},
	publisher = {ACM},
	title = {An Alternative Issue Tracking Dataset of Public {Jira} Repositories},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524842.3528486}}

@dataset{Montgomery2022Jira,
	author = {Montgomery, Lloyd and L{\"u}ders, Clara and Maalej, Prof. Dr. Walid},
	doi = {10.5281/zenodo.5901804},
	month = jan,
	publisher = {Zenodo},
	title = {The Public Jira Dataset},
	year = 2022,
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.5901804}}

@article{Goggins2021CHAOSS,
	author = {Goggins, Sean P. and Germonprez, Matt and Lumbard, Kevin},
	date-added = {2023-03-16 09:57:29 +0100},
	date-modified = {2023-03-16 09:57:46 +0100},
	doi = {10.1109/MC.2021.3084015},
	journal = {Computer},
	number = {8},
	pages = {104-111},
	title = {Making Open Source Project Health Transparent},
	volume = {54},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/MC.2021.3084015}}

@inproceedings{Goggins2021,
	author = {Goggins, Sean and Lumbard, Kevin and Germonprez, Matt},
	booktitle = {International Workshop on Software Health in Projects, Ecosystems and Communities ({SoHeal})},
	date-added = {2023-03-16 09:55:08 +0100},
	date-modified = {2023-03-16 09:55:27 +0100},
	doi = {10.1109/SoHeal52568.2021.00010},
	pages = {25-33},
	title = {Open Source Community Health: Analytical Metrics and Their Corresponding Narratives},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/SoHeal52568.2021.00010}}

@article{Sourcerer2014,
	author = {Bajracharya, Sushil and Ossher, Joel and Lopes, Cristina},
	chapter = {241},
	date-added = {2023-03-16 09:32:56 +0100},
	date-modified = {2023-03-16 09:33:07 +0100},
	doi = {10.1016/j.scico.2012.04.008},
	journal = {Science of Computer Programming},
	month = {Jan. 1},
	pages = {241-259},
	title = {Sourcerer: An infrastructure for large-scale collection and analysis of open-source code},
	volume = {79},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1016/j.scico.2012.04.008}}

@inproceedings{7962355,
	author = {Tiwari, Nitin M. and Upadhyaya, Ganesha and Nguyen, Hoan Anh and Rajan, Hridesh},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2023-03-16 09:22:10 +0100},
	date-modified = {2023-03-16 09:22:41 +0100},
	doi = {10.1109/MSR.2017.56},
	pages = {53-63},
	title = {Candoia: A Platform for Building and Sharing Mining Software Repositories Tools as Apps},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2017.56}}

@misc{PROMISE2005,
	author = {Sayyad Shirabad, J. and Menzies, T.J.},
	date-added = {2023-03-16 09:09:08 +0100},
	date-modified = {2023-03-16 09:09:28 +0100},
	howpublished = {School of Information Technology and Engineering, University of Ottawa, Canada},
	title = {The {PROMISE} Repository of Software Engineering Databases},
	url = {http://promise.site.uottawa.ca/SERepository},
	year = {2005},
	bdsk-url-1 = {http://promise.site.uottawa.ca/SERepository}}

@inproceedings{Fan2020MSR,
	abstract = {We collected a large C/C++ code vulnerability dataset from open-source Github projects, namely Big-Vul. We crawled the public Common Vulnerabilities and Exposures (CVE) database and CVE-related source code repositories. Specifically, we collected the descriptive information of the vulnerabilities from the CVE database, e.g., CVE IDs, CVE severity scores, and CVE summaries. With the CVE information and its related published Github code repository links, we downloaded all of the code repositories and extracted vulnerability related code changes. In total, Big-Vul contains 3,754 code vulnerabilities spanning 91 different vulnerability types. All these code vulnerabilities are extracted from 348 Github projects. All information is stored in the CSV format. We linked the code changes with the CVE descriptive information. Thus, our Big-Vul can be used for various research topics, e.g., detecting and fixing vulnerabilities, analyzing the vulnerability related code changes. Big-Vul is publicly available on Github.},
	author = {Fan, Jiahao and Li, Yi and Wang, Shaohua and Nguyen, Tien N.},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2023-03-07 16:11:42 +0100},
	date-modified = {2023-03-07 16:13:08 +0100},
	doi = {10.1145/3379597.3387501},
	isbn = {9781450375177},
	keywords = {C/C++ Code, Code Changes, Common Vulnerabilities and Exposures},
	pages = {508--512},
	publisher = {ACM},
	title = {A {C/C++} Code Vulnerability Dataset with Code Changes and {CVE} Summaries},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387501}}

@inproceedings{Nikitopoulos2021CrossVul,
	abstract = {Examining the characteristics of software vulnerabilities and the code that contains them can lead to the development of more secure software. We present a dataset (∼1.4 GB) containing vulnerable source code files together with the corresponding, patched versions. Contrary to other existing vulnerability datasets, ours includes vulnerable files written in more than 40 programming languages. Each file is associated to (1) a Common Vulnerability Exposures identifier (CVE ID) and (2) the repository it came from. Further, our dataset can be the basis for machine learning applications that identify defects, as we show in specific examples. We also present a supporting dataset that contains commit messages derived from Git commits that serve as security patches. This dataset can be used to train ML models that in turn, can be used to detect security patch commits as we highlight in a specific use case.},
	author = {Nikitopoulos, Georgios and Dritsa, Konstantina and Louridas, Panos and Mitropoulos, Dimitris},
	booktitle = {Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering ({ESEC/FSE})},
	doi = {10.1145/3468264.3473122},
	isbn = {9781450385626},
	keywords = {Dataset, security patches, commit messages, vulnerabilities},
	pages = {1565--1569},
	publisher = {ACM},
	title = {{CrossVul}: A Cross-Language Vulnerability Dataset with Commit Data},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3468264.3473122}}

@article{Lomio2022,
	abstract = {Background:
                   Software vulnerabilities are weaknesses in source code that might be exploited to cause harm or loss. Previous work has proposed a number of automated machine learning approaches to detect them. Most of these techniques work at release-level, meaning that they aim at predicting the files that will potentially be vulnerable in a future release. Yet, researchers have shown that a commit-level identification of source code issues might better fit the developer's needs, speeding up their resolution.
                   Objective:
                   To investigate how currently available machine learning-based vulnerability detection mechanisms can support developers in the detection of vulnerabilities at commit-level.
                   Method:
                   We perform an empirical study where we consider nine projects accounting for 8991 commits and experiment with eight machine learners built using process, product, and textual metrics.
                   Results:
                   We point out three main findings: (1) basic machine learners rarely perform well; (2) the use of ensemble machine learning algorithms based on boosting can substantially improve the performance; and (3) the combination of more metrics does not necessarily improve the classification capabilities.
                   Conclusion:
                   Further research should focus on just-in-time vulnerability detection, especially with respect to the introduction of smart approaches for feature selection and training strategies.},
	author = {Francesco Lomio and Emanuele Iannone and Andrea {De Lucia} and Fabio Palomba and Valentina Lenarduzzi},
	date-added = {2023-03-07 16:07:26 +0100},
	date-modified = {2023-03-07 16:07:43 +0100},
	doi = {10.1016/j.jss.2022.111283},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Software vulnerabilities, Machine learning, Empirical SE},
	pages = {111283},
	title = {Just-in-time software vulnerability detection: Are we there yet?},
	volume = {188},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2022.111283}}

@article{Hanif2021,
	abstract = {The detection of software vulnerability requires critical attention during the development phase to make it secure and less vulnerable. Vulnerable software always invites hackers to perform malicious activities and disrupt the operation of the software, which leads to millions in financial losses to software companies. In order to reduce the losses, there are many reliable and effective vulnerability detection systems introduced by security communities aiming to detect the software vulnerabilities as early as in the development or testing phases. To summarise the software vulnerability detection system, existing surveys discussed the conventional and data mining approaches. These approaches are widely used and mostly consist of traditional detection techniques. However, they lack discussion on the newly trending machine learning approaches, such as supervised learning and deep learning techniques. Furthermore, existing studies fail to discuss the growing research interest in the software vulnerability detection community throughout the years. With more discussion on this, we can predict and focus on what are the research problems in software vulnerability detection that need to be urgently addressed. Aiming to reduce these gaps, this paper presents the research interests' taxonomy in software vulnerability detection, such as methods, detection, features, code and dataset. The research interest categories exhibit current trends in software vulnerability detection. The analysis shows that there is considerable interest in addressing methods and detection problems, while only a few are interested in code and dataset problems. This indicates that there is still much work to be done in terms of code and dataset problems in the future. Furthermore, this paper extends the machine learning approaches taxonomy, which is used to detect the software vulnerabilities, like supervised learning, semi-supervised learning, ensemble learning and deep learning. Based on the analysis, supervised learning and deep learning approaches are trending in the software vulnerability detection community as these techniques are able to detect vulnerabilities such as buffer overflow, SQL injection and cross-site scripting effectively with a significant detection performance, up to 95% of F1 score. Finally, this paper concludes with several discussions on potential future work in software vulnerability detection in terms of datasets, multi-vulnerabilities detection, transfer learning and real-world applications.},
	author = {Hazim Hanif and Mohd Hairul Nizam {Md Nasir} and Mohd Faizal {Ab Razak} and Ahmad Firdaus and Nor Badrul Anuar},
	date-added = {2023-03-07 16:04:59 +0100},
	date-modified = {2023-03-07 16:05:28 +0100},
	doi = {10.1016/j.jnca.2021.103009},
	issn = {1084-8045},
	journal = {Journal of Network and Computer Applications},
	keywords = {Software vulnerability detection, Software security, Computer security, Machine learning, Deep learning},
	title = {The rise of software vulnerability: Taxonomy of software vulnerabilities detection and machine learning approaches},
	volume = {179},
	year = {2021},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S1084804521000369},
	bdsk-url-2 = {https://doi.org/10.1016/j.jnca.2021.103009}}

@inproceedings{Aladics2022,
	author = {Aladics, Tam\'as and Hegedus, P\'eter and Ferenc, Rudolf},
	booktitle = {International Conference on Software Technologies ({ICSOFT})},
	date-added = {2023-03-07 15:46:01 +0100},
	date-modified = {2023-03-07 15:48:24 +0100},
	doi = {10.5220/0011275200003266},
	pages = {68--78},
	title = {A Vulnerability Introducing Commit Dataset for {Java}: An Improved {SZZ} based Approach},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.5220/0011275200003266}}

@inproceedings{Bhandari2021PROMISE,
	abstract = {Data-driven research on the automated discovery and repair of security vulnerabilities in source code requires comprehensive datasets of real-life vulnerable code and their fixes. To assist in such research, we propose a method to automatically collect and curate a comprehensive vulnerability dataset from Common Vulnerabilities and Exposures (CVE) records in the National Vulnerability Database (NVD). We implement our approach in a fully automated dataset collection tool and share an initial release of the resulting vulnerability dataset named CVEfixes. The CVEfixes collection tool automatically fetches all available CVE records from the NVD, gathers the vulnerable code and corresponding fixes from associated open-source repositories, and organizes the collected information in a relational database. Moreover, the dataset is enriched with meta-data such as programming language, and detailed code and security metrics at five levels of abstraction. The collection can easily be repeated to keep up-to-date with newly discovered or patched vulnerabilities. The initial release of CVEfixes spans all published CVEs up to 9 June 2021, covering 5365 CVE records for 1754 open-source projects that were addressed in a total of 5495 vulnerability fixing commits. CVEfixes supports various types of data-driven software security research, such as vulnerability prediction, vulnerability classification, vulnerability severity prediction, analysis of vulnerability-related code changes, and automated vulnerability repair.},
	author = {Bhandari, Guru and Naseer, Amara and Moonen, Leon},
	booktitle = {International Conference on Predictive Models and Data Analytics in Software Engineering ({PROMISE})},
	date-added = {2023-03-07 15:40:14 +0100},
	date-modified = {2023-03-07 15:41:07 +0100},
	doi = {10.1145/3475960.3475985},
	isbn = {9781450386807},
	keywords = {Security vulnerabilities, vulnerability prediction, dataset, source code repair, vulnerability classification, software repository mining},
	pages = {30--39},
	publisher = {ACM},
	title = {{CVEfixes}: Automated Collection of Vulnerabilities and Their Fixes from Open-Source Software},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3475960.3475985}}

@inproceedings{Gkortzis2018MSR,
	abstract = {Examining the different characteristics of open-source software in relation to security vulnerabilities, can provide the research community with findings that can lead to the development of more secure systems. We present a dataset where the reported vulnerabilities of 8694 open-source project versions, can be correlated with the corresponding source code and a number of software metrics. The metrics were obtained by analyzing the project's source code via well-established tools. Apart from commonly used metrics (e.g. loc), we also provide data related to modern development trends such as continuous integration and testing. We outline motivational examples based on the dataset we describe.},
	author = {Gkortzis, Antonios and Mitropoulos, Dimitris and Spinellis, Diomidis},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	issn = {2574-3864},
	month = {May},
	pages = {18-21},
	title = {{VulinOSS}: A Dataset of Security Vulnerabilities in Open-Source Systems},
	year = {2018}}

@inproceedings{Boa2020MSR,
	abstract = {Mining Software Repositories (MSR) has recently seen a focus toward ultra-large-scale datasets. Several tools exist to support these efforts, such as the Boa language and infrastructure. While Boa has seen extensive use, in its current form it is not always possible to perform the entire analysis task within the infrastructure, often requiring some post-processing in another language. This limits end-to-end reproducibility and limits sharing/re-use of MSR queries. To address this problem, we use the notion of views from the relational database field and designed a query language and runtime infrastructure extension for Boa that we call materialized views. Materialized views provide output reuse to Boa users, so that the results of prior Boa queries can be easily reused by others. This allows for computing results not previously possible within Boa and provides for increased sharing and reuse of MSR queries. To evaluate views, we performed two partial reproductions of prior MSR studies utilizing Boa's dataset and infrastructure and compare our results to the prior studies. This shows the usability of the new infrastructure, allowing analyses in Boa that were not previously possible as well as providing a previously hand created gold dataset for identifier splitting as a reusable view for other MSR researchers. We also verified the caching behavior using the queries from one of the case studies. The results show that caching works as expected and can drastically improve runtime performance.},
	author = {Hung, Che Shian and Dyer, Robert},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2023-03-07 11:04:50 +0100},
	date-modified = {2023-03-07 11:05:32 +0100},
	doi = {10.1145/3379597.3387480},
	isbn = {9781450375177},
	keywords = {re-use, Boa, end-to-end analysis, materialized views, modularity},
	pages = {147--157},
	publisher = {ACM},
	title = {Boa Views: Easy Modularization and Sharing of {MSR} Analyses},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387480}}

@article{Ma2021WoC,
	abstract = {Open source software (OSS) is essential for modern society and, while substantial research has been done on individual (typically central) projects, only a limited understanding of the periphery of the entire OSS ecosystem exists. For example, how are the tens of millions of projects in the periphery interconnected through technical dependencies, code sharing, or knowledge flow? To answer such questions we: a) create a very large and frequently updated collection of version control data in the entire FLOSS ecosystems named World of Code (WoC), that can completely cross-reference authors, projects, commits, blobs, dependencies, and history of the FLOSS ecosystems and b) provide capabilities to efficiently correct, augment, query, and analyze that data. Our current WoC implementation is capable of being updated on a monthly basis and contains over 18B Git objects. To evaluate its research potential and to create vignettes for its usage, we employ WoC in conducting several research tasks. In particular, we find that it is capable of supporting trend evaluation, ecosystem measurement, and the determination of package usage. We expect WoC to spur investigation into global properties of OSS development leading to increased resiliency of the entire OSS ecosystem. Our infrastructure facilitates the discovery of key technical dependencies, code flow, and social networks that provide the basis to determine the structure and evolution of the relationships that drive FLOSS activities and innovation.},
	author = {Ma, Yuxing and Dey, Tapajit and Bogart, Chris and Amreen, Sadika and Valiev, Marat and Tutko, Adam and Kennard, David and Zaretzki, Russell and Mockus, Audris},
	date-added = {2023-03-07 10:41:37 +0100},
	date-modified = {2023-03-07 10:42:15 +0100},
	doi = {10.1007/s10664-020-09905-9},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {2},
	title = {World of code: enabling a research workflow for mining and analyzing the universe of open source {VCS} data},
	volume = {26},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-020-09905-9}}

@article{Chapin2001,
	author = {N. Chapin and J.E. Hale and K.Md. Khan and J.F. Ramil and W.-G. Than},
	date-added = {2023-03-02 10:59:24 +0100},
	date-modified = {2023-03-02 11:00:10 +0100},
	journal = {Journal on Software Maintenance and Evolution},
	pages = {3-30},
	publisher = {Wiley},
	title = {Types of software evolution and software maintenance},
	volume = {13},
	year = {2001}}

@book{LientzSwanson1980,
	author = {Lientz, B. P. and Swanson, E. B.},
	date-added = {2023-03-02 10:59:08 +0100},
	date-modified = {2023-03-02 11:00:54 +0100},
	publisher = {Addison-Wesley},
	title = {Software maintenance management: a study of the maintenance of computer application software in 487 data processing organizations},
	year = {1980}}

@inproceedings{wang-msr13,
	author = {Wang, Jue and Dang, Yingnong and Zhang, Hongyu and Chen, Kai and Xie, Tao and Zhang, Dongmei},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2023-02-26 17:33:55 +0100},
	date-modified = {2023-02-26 17:34:14 +0100},
	isbn = {9781467329361},
	pages = {319--328},
	publisher = {IEEE},
	title = {Mining Succinct and High-Coverage {API} Usage Patterns from Source Code},
	year = {2013}}

@inproceedings{msr19,
	author = {Sven, Amann and Nguyen, Hoan Anh and Nadi, Sarah and Nguyen, Tien N. and Mezini, Mira},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2023-02-26 17:33:26 +0100},
	date-modified = {2023-02-26 17:33:39 +0100},
	pages = {265-275},
	title = {Investigating Next Steps in Static {API}-Misuse Detection},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00053}}

@inproceedings{combine-mining-icpc16,
	author = {Saied, Mohamed Aymen and Sahraoui, Houari},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-added = {2023-02-26 17:32:53 +0100},
	date-modified = {2023-02-26 17:33:08 +0100},
	title = {A cooperative approach for combining client-based and library-based {API} usage pattern mining},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/ICPC.2016.7503717}}

@inproceedings{exas-fase09,
	author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Pham, Nam H. and Al-Kofahi, Jafar M. and Nguyen, Tien N.},
	booktitle = {Fundamental Approaches to Software Engineering ({FASE})},
	date-added = {2023-02-26 17:31:53 +0100},
	date-modified = {2023-02-26 17:32:19 +0100},
	pages = {440--455},
	publisher = {Springer},
	title = {Accurate and Efficient Structural Characteristic Feature Extraction for Clone Detection},
	year = {2009}}

@inproceedings{export-ase13,
	author = {Moritz, Evan and Linares-V{\'a}squez, Mario and Poshyvanyk, Denys and Grechanik, Mark and McMillan, Collin and Gethers, Malcom},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2023-02-26 17:30:25 +0100},
	date-modified = {2023-02-26 17:30:46 +0100},
	pages = {646-651},
	title = {{ExPort}: Detecting and visualizing {API} usages in large source code repositories},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/ASE.2013.6693127}}

@article{niu-less-frequent-17,
	author = {Niu, Haoran and Keivanloo, Iman and Zou, Ying},
	date-added = {2023-02-26 17:29:35 +0100},
	date-modified = {2023-02-28 11:07:26 +0100},
	issn = {0164-1212},
	journal = {Journal on Systems and Software},
	keywords = {Clustering, Usage pattern, Object usage},
	month = {jul},
	pages = {127--139},
	publisher = {Elsevier},
	title = {{API} Usage Pattern Recommendation for Software Development},
	volume = {129},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2016.07.026}}

@inproceedings{pam-fse16,
	author = {Fowkes, Jaroslav and Sutton, Charles},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2023-02-26 17:28:45 +0100},
	date-modified = {2023-02-26 17:29:16 +0100},
	isbn = {9781450342186},
	pages = {254--265},
	publisher = {ACM},
	title = {Parameter-Free Probabilistic {API} Mining across {GitHub}},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2950290.2950319}}

@inproceedings{qi-icpc21,
	author = {Shen, Qi and Wu, Shijun and Zou, Yanzhen and Xie, Bing},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-added = {2023-02-26 17:28:00 +0100},
	date-modified = {2023-02-26 17:28:31 +0100},
	pages = {83-93},
	title = {Comprehensive Integration of {API} Usage Patterns},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICPC52881.2021.00017}}

@inproceedings{glassman2018visualizing,
	abstract = {Using existing APIs properly is a key challenge in programming, given that libraries and APIs are increasing in number and complexity. Programmers often search for online code examples in Q&A forums and read tutorials and blog posts to learn how to use a given API. However, there are often a massive number of related code examples and it is difficult for a user to understand the commonalities and variances among them, while being able to drill down to concrete details. We introduce an interactive visualization for exploring a large collection of code examples mined from open-source repositories at scale. This visualization summarizes hundreds of code examples in one synthetic code skeleton with statistical distributions for canonicalized statements and structures enclosing an API call. We implemented this interactive visualization for a set of Java APIs and found that, in a lab study, it helped users (1) answer significantly more API usage questions correctly and comprehensively and (2) explore how other programmers have used an unfamiliar API.},
	author = {Glassman, Elena L. and Zhang, Tianyi and Hartmann, Bj\"{o}rn and Kim, Miryung},
	booktitle = {Conference on Human Factors in Computing Systems ({CHI})},
	date-added = {2023-02-26 17:25:42 +0100},
	date-modified = {2023-02-28 10:52:56 +0100},
	doi = {10.1145/3173574.3174154},
	isbn = {9781450356206},
	keywords = {api, programming support, code examples, interactive visualization},
	publisher = {ACM},
	title = {Visualizing {API} Usage Examples at Scale},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3173574.3174154}}

@inproceedings{muse-icse15,
	author = {Moreno, Laura and Bavota, Gabriele and Di Penta, Massimiliano and Oliveto, Rocco and Marcus, Andrian},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2023-02-26 17:24:14 +0100},
	date-modified = {2023-02-26 17:24:37 +0100},
	isbn = {9781479919345},
	pages = {880--890},
	publisher = {IEEE},
	title = {How Can I Use This Method?},
	year = {2015}}

@article{vldb-2022-rscas-swh,
	abstract = {Frequent queries on semi-structured hierarchical data are Content-and-Structure (CAS) queries that filter data items based on their location in the hierarchical structure and their value for some attribute. We propose the Robust and Scalable Content-and-Structure (RSCAS) index to efficiently answer CAS queries on big semi-structured data. To get an index that is robust against queries with varying selectivities, we introduce a novel dynamic interleaving that merges the path and value dimensions of composite keys in a balanced manner. We store interleaved keys in our trie-based RSCAS index, which efficiently supports a wide range of CAS queries, including queries with wildcards and descendant axes. We implement RSCAS as a log-structured merge tree to scale it to data-intensive applications with a high insertion rate. We illustrate RSCAS's robustness and scalability by indexing data from the Software Heritage (SWH) archive, which is the world's largest, publicly available source code archive.},
	author = {Wellenzohn, Kevin and B{\"o}hlen, Michael H. and Helmer, Sven and Pietri, Antoine and Zacchiroli, Stefano},
	date-added = {2023-02-21 17:25:55 +0100},
	date-modified = {2023-02-26 17:18:35 +0100},
	isbn = {0949-877X},
	journal = {The VLDB Journal},
	title = {Robust and scalable content-and-structure indexing},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s00778-022-00764-y}}

@article{1999:RRC:846218.847264,
	abstract = {Clustering, in data mining, is useful to discover distribution patterns in the underlying data. Clustering algorithms usually employ a distance metric based (e.g., euclidean) similarity measure in order to partition the database such that data points in the same partition are more similar than points in different partitions. In this paper, we study clustering algorithms for data with boolean and categorical attributes. We show that traditional clustering algorithms that use distances between points for clustering are not appropriate for boolean and categorical attributes. Instead, we propose a novel concept of links to measure the similarity/proximity between a pair of data points. We develop a robust hierarchical clustering algorithm ROCK that employs links and not distances when merging clusters. Our methods naturally extend to non-metric similarity measures that are relevant in situations where a domain expert/similarity table is the only source of knowledge. In addition to presenting detailed complexity results for ROCK, we also conduct an experimental study with real-life as well as synthetic data sets to demonstrate the effectiveness of our techniques. For data with categorical attributes, our findings indicate that ROCK not only generates better quality clusters than traditional algorithms, but it also exhibits good scalability properties.},
	author = {Sudipto Guha and Rajeev Rastogi and Kyuseok Shim},
	date-added = {2023-02-21 11:37:15 +0100},
	date-modified = {2023-02-26 17:18:35 +0100},
	issn = {0306-4379},
	journal = {Information Systems},
	keywords = {Data Mining, Knowledge Discovery, Clustering Algorithms},
	number = {5},
	pages = {345-366},
	title = {Rock: A robust clustering algorithm for categorical attributes},
	volume = {25},
	year = {2000},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0306437900000223},
	bdsk-url-2 = {https://doi.org/10.1016/S0306-4379(00)00022-3}}

@article{NGUYEN2023119477,
	abstract = {While implementing software projects, developers do not reinvent the wheel but try to reuse existing API calls and source code. In recent years, the problems related to recommending APIs and code snippets have been intensively investigated. Although current approaches have achieved encouraging performance, there is still the need to improve the recommendation process's effectiveness and efficiency. In this work, we reformulate the problem of API recommendations by proposing learning and recommending API sequences relevant to a given coding context. We present LUPE, a novel approach to API and code recommendation, exploiting cutting-edge deep learning techniques. Thanks to the underlying Encoder--Decoder architecture specialized in transforming sequences, LUPE can effectively learn the order in which invocations occur. The approach has been evaluated on two Android datasets and compared with GAPI and FACER, two state-of-the-art API recommender systems. Being fed with augmented training data, our conceived approach can obtain a high prediction accuracy, and produce a perfect match in several cases, hence outperforming the baselines.},
	author = {Nguyen, Phuong T. and Di Sipio, Claudio and Di Rocco, Juri and Di Ruscio, Davide and Di Penta, Massimiliano},
	date-modified = {2023-02-28 11:13:16 +0100},
	issn = {0957-4174},
	journal = {Expert Systems with Applications},
	keywords = {API recommendation, Source code recommendation, Encoder--Decoder LSTM, Machine translation},
	pages = {119477},
	title = {Fitting missing {API} puzzles with machine translation techniques},
	volume = {216},
	year = {2023},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0957417422024964},
	bdsk-url-2 = {https://doi.org/10.1016/j.eswa.2022.119477}}

@article{DBLP:journals/tnn/XuW05,
	author = {Rui Xu and Donald C. Wunsch II},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/tnn/XuW05.bib},
	date-modified = {2023-03-07 11:20:55 +0100},
	journal = {Transactions on Neural Networks},
	number = {3},
	pages = {645--678},
	publisher = {IEEE},
	timestamp = {Wed, 14 Nov 2018 10:32:36 +0100},
	title = {Survey of clustering algorithms},
	volume = {16},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.1109/TNN.2005.845141}}

@article{DBLP:journals/jbd/AlzubaidiZHADAS21a,
	author = {Laith Alzubaidi and Jinglan Zhang and Amjad J. Humaidi and Ayad Q. Al{-}Dujaili and Ye Duan and Omran Al{-}Shamma and Jos{\'{e}} Santamar{\'{\i}}a and Mohammed A. Fadhel and Muthana Al{-}Amidie and Laith Farhan},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/jbd/AlzubaidiZHADAS21a.bib},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Big Data},
	number = 1,
	timestamp = {Sun, 02 Oct 2022 15:40:11 +0200},
	title = {Review of deep learning: concepts, {CNN} architectures, challenges, applications, future directions},
	volume = 8,
	year = 2021,
	bdsk-url-1 = {https://doi.org/10.1186/s40537-021-00444-8}}

@inproceedings{Gousios2015,
	abstract = {In the pull-based development model, the integrator has the crucial role of managing and integrating contributions. This work focuses on the role of the integrator and investigates working habits and challenges alike. We set up an exploratory qualitative study involving a large-scale survey of 749 integrators, to which we add quantitative data from the integrator's project. Our results provide insights into the factors they consider in their decision making process to accept or reject a contribution. Our key findings are that integrators struggle to maintain the quality of their projects and have difficulties with prioritizing contributions that are to be merged. Our insights have implications for practitioners who wish to use or improve their pull-based development process, as well as for researchers striving to understand the theoretical implications of the pull-based model in software development.},
	author = {Gousios, Georgios and Zaidman, Andy and Storey, Margaret-Anne and van Deursen, Arie},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2023-01-29 22:18:43 +0100},
	date-modified = {2023-01-29 22:18:43 +0100},
	isbn = {9781479919345},
	pages = {358--368},
	publisher = {IEEE},
	title = {Work Practices and Challenges in Pull-Based Development: The Integrator's Perspective},
	year = {2015}}

@article{Zagalsky2018-EMSE,
	abstract = {One of the effects of social media's prevalence in software development is the many flourishing communities of practice where users share a common interest. These large communities use many different communication channels, but little is known about how they create, share, and curate knowledge using such channels. In this paper, we report a mixed methods study of how one community of practice, the R software development community, creates and curates knowledge associated with questions and answers (Q&A) in two of its main communication channels: the R tag in Stack Overflow and the R-Help mailing list. The results reveal that knowledge is created and curated in two main forms: participatory, where multiple users explicitly collaborate to build knowledge, and crowdsourced, where individuals primarily work independently of each other. Moreover, we take a unique approach at slicing the data based on question score and participation activities over time. Our study reveals participation patterns, showing the existence of prolific contributors: users who are active across both channels and are responsible for a large proportion of the answers, serving as a bridge of knowledge. The key contributions of this paper are: a characterization of knowledge artifacts that are exchanged by this community of practice; the reasons why users choose one channel over the other; and insights on the community participation patterns, which indicate an evolution of the community and a shift from knowledge creation to knowledge curation.},
	author = {Zagalsky, Alexey and German, Daniel M. and Storey, Margaret-Anne and Teshima, Carlos G\'{o}mez and Poo-Caama\~{n}o, Germ\'{a}n},
	date-added = {2023-01-04 12:08:38 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1382-3256},
	journal = {Empirical Software Engineering},
	keywords = {Mailing list, Survey, Qualitative study, Empirical study, Mining software repositories, Stack overflow, R},
	month = {apr},
	number = {2},
	pages = {953--986},
	publisher = {Kluwer Academic Publishers},
	title = {How the {R} Community Creates and Curates Knowledge: An Extended Study of {Stack Overflow} and Mailing Lists},
	volume = {23},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-017-9536-y}}

@inproceedings{Guzzi2013-MSR,
	abstract = {Open source software (OSS) development teams use electronic means, such as emails, instant messaging, or forums, to conduct open and public discussions. Researchers investigated mailing lists considering them as a hub for project communication. Prior work focused on specific aspects of emails, for example the handling of patches, traceability concerns, or social networks. This led to insights pertaining to the investigated aspects, but not to a comprehensive view of what developers communicate about. Our objective is to increase the understanding of development mailing lists communication. We quantitatively and qualitatively analyzed a sample of 506 email threads from the development mailing list of a major OSS project, Lucene. Our investigation reveals that implementation details are discussed only in about 35% of the threads, and that a range of other topics is discussed. Moreover, core developers participate in less than 75% of the threads. We observed that the development mailing list is not the main player in OSS project communication, as it also includes other channels such as the issue repository.},
	author = {Guzzi, Anja and Bacchelli, Alberto and Lanza, Michele and Pinzger, Martin and van Deursen, Arie},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2023-01-04 12:03:49 +0100},
	date-modified = {2023-01-04 12:05:00 +0100},
	isbn = {9781467329361},
	pages = {277--286},
	publisher = {IEEE},
	title = {Communication in Open Source Software Development Mailing Lists},
	year = {2013}}

@article{Storey2017-TSE,
	abstract = {Software developers use many different communication tools and channels in their work. The diversity of these tools has dramatically increased over the past decade and developers now have access to a wide range of socially enabled communication channels and social media to support their activities. The availability of such social tools is leading to a participatory culture of software development, where developers want to engage with, learn from, and co-create software with other developers. However, the interplay of these social channels, as well as the opportunities and challenges they may create when used together within this participatory development culture are not yet well understood. In this paper, we report on a large-scale survey conducted with 1,449 GitHub users. We discuss the channels these developers find essential to their work and gain an understanding of the challenges they face using them. Our findings lay the empirical foundation for providing recommendations to developers and tool designers on how to use and improve tools for software developers.},
	author = {Storey, Margaret-Anne and Zagalsky, Alexey and Filho, Fernando Figueira and Singer, Leif and German, Daniel M.},
	date-added = {2023-01-04 11:44:07 +0100},
	date-modified = {2023-02-21 18:28:38 +0100},
	issn = {1939-3520},
	journal = {Transactions on Software Engineering},
	month = {Feb},
	number = {2},
	pages = {185-204},
	publisher = {IEEE},
	title = {How Social and Communication Channels Shape and Challenge a Participatory Culture in Software Development},
	volume = {43},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2016.2584053}}

@article{Schueller2022-Rust,
	abstract = {Open Source Software (OSS) is widely spread in industry, research, and government. OSS represents an effective development model because it harnesses the decentralized efforts of many developers in a way that scales. As OSS developers work independently on interdependent modules, they create a larger cohesive whole in the form of an ecosystem, leaving traces of their contributions and collaborations. Data harvested from these traces enable the study of large-scale decentralized collaborative work. We present curated data on the activity of tens of thousands of developers in the Rust ecosystem and the evolving dependencies between their libraries. The data covers eight years of developer contributions to Rust libraries and can be used to reconstruct the ecosystem's development history, such as growing developer collaboration networks or dependency networks. These are complemented by data on downloads and popularity, tracking dynamics of use, visibility, and success over time. Altogether the data give a comprehensive view of several dimensions of the ecosystem.},
	author = {Schueller, William and Wachs, Johannes and Servedio, Vito D. P. and Thurner, Stefan and Loreto, Vittorio},
	date = {2022/11/16},
	date-added = {2023-01-04 11:36:38 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	id = {Schueller2022},
	isbn = {2052-4463},
	journal = {Scientific Data},
	number = {1},
	pages = {703},
	title = {Evolving collaboration, dependencies, and use in the Rust Open Source Software ecosystem},
	volume = {9},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1038/s41597-022-01819-z}}

@article{Huang2022-EMSE,
	abstract = {Third-party libraries are a key building block in software development as they allow developers to reuse common functionalities instead of reinventing the wheel. However, third-party libraries and client projects are developed and continuously evolving in an asynchronous way. As a result, outdated third-party libraries might be commonly used in client projects, while developers are unaware of the potential risk (e.g., security bugs) in usages. Outdated third-party libraries might be updated in client projects in a delayed way, while developers are less aware of the potential risk (e.g., API incompatibilities) in updates. Developers of third-party libraries may be unaware of how their third-party libraries are used or updated in client projects. Therefore, a quantitative and holistic study on usages, updates and risks of third-party libraries in open-source projects can provide concrete evidence on these problems, and practical insights to improve the ecosystem sustainably. In this paper, we make the first contribution towards such a study in the Java ecosystem. First, using 806 open-source projects and 13,565 third-party libraries, we conduct a library usage analysis (e.g., usage intensity and usage outdatedness), followed by a library update analysis (e.g., update intensity and update delay). The two analyses aim to quantify usage and update practices from the two holistic perspectives of open-source projects and third-party libraries. Then, we carry out a library risk analysis (e.g., usage risk and update risk) on 806 open-source projects and 544 security bugs. This analysis aims to quantify the potential risk of using and updating outdated third-party libraries with respect to security bugs. Our findings suggest practical implications to developers and researchers on problems and potential solutions in maintaining third-party libraries (e.g., smart alerting and automated updating of outdated third-party libraries). To demonstrate the usefulness of our findings, we propose a security bug-driven alerting system, named LibSecurify, for assisting developers to make confident decisions by quantifying risks and effort when updating outdated third-party libraries. 33 open-source projects have confirmed the presence of security bugs after receiving our alerts, and 24 of those 33 have updated their third-party libraries. We have released our dataset to foster valuable applications and improve the Java third-party library ecosystem.},
	author = {Huang, Kaifeng and Chen, Bihuan and Xu, Congying and Wang, Ying and Shi, Bowen and Peng, Xin and Wu, Yijian and Liu, Yang},
	date-added = {2023-01-02 17:23:42 +0100},
	date-modified = {2023-02-28 11:09:49 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {90},
	title = {Characterizing usages, updates and risks of third-party libraries in {Java} projects},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-022-10131-8}}

@article{Ochoa2022-EMSE,
	abstract = {Just like any software, libraries evolve to incorporate new features, bug fixes, security patches, and refactorings. However, when a library evolves, it may break the contract previously established with its clients by introducing Breaking Changes (BCs) in its API. These changes might trigger compile-time, link-time, or run-time errors in client code. As a result, clients may hesitate to upgrade their dependencies, raising security concerns and making future upgrades even more difficult. Understanding how libraries evolve helps client developers to know which changes to expect and where to expect them, and library developers to understand how they might impact their clients. In the most extensive study to date, Raemaekers et al. investigate to what extent developers of Java libraries hosted on the Maven Central Repository (MCR) follow semantic versioning conventions to signal the introduction of BCs and how these changes impact client projects. Their results suggest that BCs are widespread without regard for semantic versioning, with a significant impact on clients. In this paper, we conduct an external and differentiated replication study of their work. We identify and address some limitations of the original protocol and expand the analysis to a new corpus spanning seven more years of the MCR. We also present a novel static analysis tool for Java bytecode, Maracas, which provides us with: (i) the set of all BCs between two versions of a library, and; (ii) the set of locations in client code impacted by individual BCs. Our key findings, derived from the analysis of 119,879 library upgrades and 293,817 clients, contrast with the original study and show that 83.4{\%} of these upgrades do comply with semantic versioning. Furthermore, we observe that the tendency to comply with semantic versioning has significantly increased over time. Finally, we find that most BCs affect code that is not used by any client, and that only 7.9{\%} of all clients are affected by BCs. These findings should help (i) library developers to understand and anticipate the impact of their changes; (ii) library users to estimate library upgrading effort and to pick libraries that are less likely to break, and; (iii) researchers to better understand the dynamics of library-client co-evolution in Java.},
	author = {Ochoa, Lina and Degueule, Thomas and Falleri, Jean-R\emy and Vinju, Jurgen},
	date-added = {2023-01-02 17:18:16 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {61},
	title = {Breaking bad? Semantic versioning and impact of breaking changes in {Maven Central}},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10052-y}}

@inproceedings{Kabbedijk2011,
	abstract = {Software products are part of a larger network of products, suppliers and partners, called a software ecosystem, working together in order to provide functionality for the users and generate profit for the vendors. Not much is known about the characteristics and relationships within such a software ecosystem. This paper presents an overview of the open source Ruby ecosystem and lists its elements, characteristics, descriptives, roles, cliques and relationships. Data is gathered using the Git decentralized source code management system and is analyzed using social network and statistical analysis techniques. Our analysis shows that the Ruby ecosystem exists out of a couple very distinctive roles developers fulfil. It also shows that within the Ruby ecosystem only a small `core' of approximately 10{\%} of all developers and gems (Ruby packages) are dominant within the ecosystem. At this point in time it appears that the rails community would benefit from motivating current developers to work together more, instead of supporting new developers or gems in order to get a healthy ecosystem.},
	author = {Kabbedijk, Jaap and Jansen, Slinger},
	booktitle = {Software Business},
	date-added = {2023-01-02 17:11:27 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-3-642-21544-5},
	pages = {44--55},
	publisher = {Springer},
	title = {Steering Insight: An Exploration of the {Ruby} Software Ecosystem},
	year = {2011},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-21544-5%5C_5}}

@inproceedings{Li2022-ICSE,
	abstract = {Developers usually suffer from dependency maze (DM) issues, i.e., package dependency constraints are violated when a project's platform or dependencies are changed. This problem is especially serious in .NET ecosystem due to its fragmented platforms (e.g., .NET Framework, .NET Core, and .NET Standard). Fixing DM issues is challenging due to the complexity of dependency constraints: multiple DM issues often occur in one project; solving one DM issue usually causes another DM issue cropping up; the exponential search space of possible dependency combinations is also a barrier.In this paper, we aim to help .NET developers tackle the DM issues. First, we empirically studied a set of real DM issues, learning their common fixing strategies and developers' preferences in adopting these strategies. Based on these findings, we propose NuFix, an automated technique to repair DM issues. NuFix formulates the repair task as a binary integer linear optimization problem to effectively derive an optimal fix in line with the learnt developers' preferences. The experiment results and expert validation show that NuFix can generate high-quality fixes for all the DM issues with 262 popular .NET projects. Encouragingly, 20 projects (including affected projects such as Dropbox) have approved and merged our generated fixes, and shown great interests in our technique.},
	author = {Li, Zhenming and Wang, Ying and Lin, Zeqi and Cheung, Shing-Chi and Lou, Jian-Guang},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2023-01-02 17:07:55 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450392211},
	keywords = {dependencies, NuGet, empirical study, .NET},
	pages = {1545--1557},
	publisher = {ACM},
	title = {{Nufix}: Escape from {NuGet} Dependency Maze},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3510003.3510118}}

@article{Plakidas2017-JSS,
	abstract = {Software ecosystems are an important new concept for collaborative software development, and empirical studies on their development are important towards understanding the underlying dynamics and modelling their behaviour. We conducted an explorative analysis of the R ecosystem as an exemplar on high-level, ecosystem-wide assessment. Based principally on the documentation metadata of the R packages, we generated a variety of metrics that allow the quantification of the R ecosystem. We also categorized the ecosystem participants, both in the software marketplace and in the developer community, by characteristics that measure their activity and impact. By viewing our metrics across the ecosystem's lifecycle for the various participant categories, we discovered interrelationships between them and determined the contribution of each category to the ecosystem as a whole.},
	author = {Konstantinos Plakidas and Daniel Schall and Uwe Zdun},
	date-added = {2023-01-02 17:04:56 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {R, Software ecosystems, Evolution, Quantitative analysis, Empirical study},
	pages = {119-146},
	title = {Evolution of the {R} software ecosystem: Metrics, relationships, and their impact on qualities},
	volume = {132},
	year = {2017},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121217301371},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2017.06.095}}

@article{Hejderup2022-EMSE,
	abstract = {Modern programming languages such as Java, JavaScript, and Rust encourage software reuse by hosting diverse and fast-growing repositories of highly interdependent packages (i.e., reusable libraries) for their users. The standard way to study the interdependence between software packages is to infer a package dependency network by parsing manifest data. Such networks help answer questions such as ``How many packages have dependencies to packages with known security issues?''or ``What are the most used packages?''. However, an overlooked aspect in existing studies is that manifest-inferred relationships do not necessarily examine the actual usage of these dependencies in source code. To better model dependencies between packages, we developed Pr{\"a}zi, an approach combining manifests and call graphs of packages. Pr{\"a}zi constructs a dependency network at the more fine-grained function-level, instead of at the manifest level. This paper discusses a prototypical Pr{\"a}zi implementation for the popular system programming language Rust. We use Pr{\"a}zi to characterize Rust's package repository, Crates.io, at the function level and perform a comparative study with metadata-based networks. Our results show that metadata-based networks generalize how packages use their dependencies. Using Pr{\"a}zi, we find packages call only 40{\%} of their resolved dependencies, and that manual analysis of 34 cases reveals that not all packages use a dependency the same way. We argue that researchers and practitioners interested in understanding how developers or programs use dependencies should account for its context---not the sum of all resolved dependencies.},
	author = {Hejderup, Joseph and Beller, Moritz and Triantafyllou, Konstantinos and Gousios, Georgios},
	date-added = {2023-01-02 16:57:39 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {102},
	title = {Pr\"azi: from package-based to call-based dependency networks},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10071-9}}

@inproceedings{Beller2017-MSR,
	abstract = {Continuous Integration (CI) has become a best practice of modern software development. Thanks in part to its tight integration with GitHub, Travis CI has emerged as arguably the most widely used CI platform for Open-Source Software (OSS) development. However, despite its prominent role in Software Engineering in practice, the benefits, costs, and implications of doing CI are all but clear from an academic standpoint. Little research has been done, and even less was of quantitative nature. In order to lay the groundwork for data-driven research on CI, we built TravisTorrent, travistorrent.testroots.org, a freely available data set based on Travis CI and GitHub that provides easy access to hundreds of thousands of analyzed builds from more than 1,000 projects. Unique to TravisTorrent is that each of its 2,640,825 Travis builds is synthesized with meta data from Travis CI's API, the results of analyzing its textual build log, a link to the GitHub commit which triggered the build, and dynamically aggregated project data from the time of commit extracted through GHTorrent.},
	author = {Beller, Moritz and Gousios, Georgios and Zaidman, Andy},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2023-01-02 16:39:00 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = {May},
	pages = {447-450},
	title = {{TravisTorrent}: Synthesizing {Travis CI} and {GitHub} for Full-Stack Research on Continuous Integration},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2017.24}}

@inproceedings{Ortu2015,
	abstract = {Issue tracking systems store valuable data for testing hypotheses concerning maintenance, building statistical prediction models and recently investigating developers "affectiveness". In particular, the Jira Issue Tracking System is a proprietary tracking system that has gained a tremendous popularity in the last years and offers unique features like the project management system and the Jira agile kanban board. This paper presents a dataset extracted from the Jira ITS of four popular open source ecosystems (as well as the tools and infrastructure used for extraction) the Apache Software Foundation, Spring, JBoss and CodeHaus communities. Our dataset hosts more than 1K projects, containing more than 700K issue reports and more than 2 million issue comments. Using this data, we have been able to deeply study the communication process among developers, and how this aspect affects the development process. Furthermore, comments posted by developers contain not only technical information, but also valuable information about sentiments and emotions. Since sentiment analysis and human aspects in software engineering are gaining more and more importance in the last years, with this repository we would like to encourage further studies in this direction.},
	articleno = {1},
	author = {Ortu, Marco and Destefanis, Giuseppe and Adams, Bram and Murgia, Alessandro and Marchesi, Michele and Tonelli, Roberto},
	booktitle = {International Conference on Predictive Models and Data Analytics in Software Engineering ({PROMISE})},
	date-added = {2023-01-02 16:26:05 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450337151},
	keywords = {Mining software repository, Issue Report, Affective Analysis},
	publisher = {ACM},
	title = {The {JIRA} Repository Dataset: Understanding Social Aspects of Software Development},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2810146.2810147}}

@article{Calefato2019-IST,
	abstract = {Context
                   Large-scale distributed projects are typically the results of collective efforts performed by multiple developers with heterogeneous personalities.
                   Objective
                   We aim to find evidence that personalities can explain developers' behavior in large scale-distributed projects. For example, the propensity to trust others --- a critical factor for the success of global software engineering --- has been found to influence positively the result of code reviews in distributed projects.
                   Method
                   In this paper, we perform a quantitative analysis of ecosystem-level data from the code commits and email messages contributed by the developers working on the Apache Software Foundation (ASF) projects, as representative of large scale-distributed projects.
                   Results
                   We find that there are three common types of personality profiles among Apache developers, characterized in particular by their level of Agreeableness and Neuroticism. We also confirm that developers' personality is stable over time. Moreover, personality traits do not vary with their role, membership, and extent of contribution to the projects. We also find evidence that more open developers are more likely to make contributors to Apache projects.
                   Conclusion
                   Overall, our findings reinforce the need for future studies on human factors in software engineering to use psychometric tools to control for differences in developers' personalities.},
	author = {Fabio Calefato and Filippo Lanubile and Bogdan Vasilescu},
	date-added = {2023-01-02 15:37:01 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Personality traits, Large-scale distributed projects, Ecosystems, Apache, Big five, Five-Factor model, Open source software, Human aspects, Psychometric analysis, Computational personality detection},
	pages = {1-20},
	title = {A large-scale, in-depth analysis of developers' personalities in the {Apache} ecosystem},
	volume = {114},
	year = {2019},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0950584918301216},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2019.05.012}}

@article{Beck1999,
	abstract = {Traditional software engineering means have been characterized by a rather predictable process in the past. Users tell once and for all exactly what they want. Programmers design the system that will deliver those features. They code it; test it, and all is well. But all was not always well. The users did not tell once and for all exactly what they wanted. They changed their minds, and the users were not the only problem. Programmers could misjudge their progress. The academic software engineering community took the high cost of changing software as a challenge, creating technologies like relational databases, modular programming, and information hiding. This is where extreme programming comes in. Rather than planning, analyzing, and designing for the far-flung future, XP exploits the reduction in the cost of changing software to do all of these activities a little at a time, throughout software development. The paper discusses the major practices of XP.},
	author = {Beck, K.},
	date-added = {2022-12-30 18:14:44 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1558-0814},
	journal = {Computer},
	month = {Oct},
	number = {10},
	pages = {70-77},
	title = {Embracing change with extreme programming},
	volume = {32},
	year = {1999},
	bdsk-url-1 = {https://doi.org/10.1109/2.796139}}

@inproceedings{Schwaber1997,
	abstract = {The stated, accepted philosophy for systems development is that the development process is a well understood approach that can be planned, estimated, and successfully completed. This has proven incorrect in practice. SCRUM assumes that the systems development process is an unpredictable, complicated process that can only be roughly described as an overall progression. SCRUM defines the systems development process as a loose set of activities that combines known, workable tools and techniques with the best that a development team can devise to build systems. Since these activities are loose, controls to manage the process and inherent risk are used. SCRUM is an enhancement of the commonly used iterative/incremental object-oriented development cycle.},
	author = {Schwaber, Ken},
	booktitle = {Business Object Design and Implementation},
	date-added = {2022-12-30 18:12:22 +0100},
	date-modified = {2022-12-30 18:12:44 +0100},
	isbn = {978-1-4471-0947-1},
	pages = {117--134},
	publisher = {Springer},
	title = {{SCRUM} Development Process},
	year = {1997}}

@inproceedings{Soto-Valero2019,
	abstract = {Maven artifacts are immutable: an artifact that is uploaded on Maven Central cannot be removed nor modified. The only way for developers to upgrade their library is to release a new version. Consequently, Maven Central accumulates all the versions of all the libraries that are published there, and applications that declare a dependency towards a library can pick any version. In this work, we hypothesize that the immutability of Maven artifacts and the ability to choose any version naturally support the emergence of software diversity within Maven Central. We analyze 1,487,956 artifacts that represent all the versions of 73,653 libraries. We observe that more than 30% of libraries have multiple versions that are actively used by latest artifacts. In the case of popular libraries, more than 50% of their versions are used. We also observe that more than 17% of libraries have several versions that are significantly more used than the other versions. Our results indicate that the immutability of artifacts in Maven Central does support a sustained level of diversity among versions of libraries in the repository.},
	author = {Soto-Valero, C\'esar and Benelallam, Amine and Harrand, Nicolas and Barais, Olivier and Baudry, Benoit},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-12-30 17:49:15 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2574-3864},
	pages = {333-343},
	title = {The Emergence of Software Diversity in {Maven Central}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00059}}

@inproceedings{Raemaekers2013,
	abstract = {We present the Maven Dependency Dataset (MDD), containing metrics, changes and dependencies of 148,253 jar files. Metrics and changes have been calculated at the level of individual methods, classes and packages of multiple library versions. A complete call graph is also presented which includes call, inheritance, containment and historical relationships between all units of the entire repository. In this paper, we describe our dataset and the methodology used to obtain it. We present different conceptual views of MDD and we also describe limitations and data quality issues that researchers using this data should be aware of.},
	author = {Raemaekers, Steven and van Deursen, Arie and Visser, Joost},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-12-30 17:38:43 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2160-1860},
	month = {May},
	pages = {221-224},
	title = {The {Maven} repository dataset of metrics, changes, and dependencies},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2013.6624031}}

@inproceedings{Mitropoulos2014,
	abstract = {Examining software ecosystems can provide the research community with data regarding artifacts, processes, and communities. We present a dataset obtained from the Maven central repository ecosystem (approximately 265GB of data) by statically analyzing the repository to detect potential software bugs. For our analysis we used FindBugs, a tool that examines Java bytecode to detect numerous types of bugs. The dataset contains the metrics results that FindBugs reports for every project version (a JAR) included in the ecosystem. For every version we also stored specific metadata such as the JAR's size, its dependencies and others. Our dataset can be used to produce interesting research results, as we show in specific examples.},
	author = {Mitropoulos, Dimitris and Karakoidas, Vassilios and Louridas, Panos and Gousios, Georgios and Spinellis, Diomidis},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-12-30 17:35:36 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450328630},
	keywords = {FindBugs, Maven Repository, Software Bugs},
	pages = {372--375},
	publisher = {ACM},
	title = {The Bug Catalog of the {Maven} Ecosystem},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2597073.2597123}}

@inproceedings{Benelallam2019,
	abstract = {The Maven Central Repository provides an extraordinary source of data to understand complex architecture and evolution phenomena among Java applications. As of September 6, 2018, this repository includes 2.8M artifacts (compiled piece of code implemented in a JVM-based language), each of which is characterized with metadata such as exact version, date of upload and list of dependencies towards other artifacts. Today, one who wants to analyze the complete ecosystem of Maven artifacts and their dependencies faces two key challenges: (i) this is a huge data set; and (ii) dependency relationships among artifacts are not modeled explicitly and cannot be queried. In this paper, we present the Maven Dependency Graph. This open source data set provides two contributions: a snapshot of the whole Maven Central taken on September 6, 2018, stored in a graph database in which we explicitly model all dependencies; an open source infrastructure to query this huge dataset.},
	author = {Benelallam, Amine and Harrand, Nicolas and Soto-Valero, C\'esar and Baudry, Benoit and Barais, Olivier},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-12-30 17:30:15 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2574-3864},
	pages = {344-348},
	title = {The {Maven} Dependency Graph: A Temporal Graph-Based Representation of {Maven Central}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00060}}

@article{Lehman1976,
	author = {Belady, L. A. and Lehman, Meir M.},
	date-added = {2022-12-30 17:25:26 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {{IBM} Systems Journal},
	number = {3},
	pages = {225-252},
	title = {A model of large program development},
	volume = {15},
	year = {1976},
	bdsk-url-1 = {https://doi.org/10.1147/sj.153.0225}}

@article{Rostami2023CI,
	author = {Mazrae, Pooya Rostami and Mens, Tom and Golzadeh, Mehdi and Decan, Alexandre},
	date-added = {2022-12-30 17:04:32 +0100},
	date-modified = {2022-12-30 17:05:36 +0100},
	journal = {Empirical Software Engineering},
	title = {On the usage, co-usage and migration of CI/CD tools: a qualitative analysis},
	year = {2023}}

@book{Mens2014-ESS,
	author = {Mens, Tom and Serebrenik, Alexander and Cleve, Anthony},
	date-added = {2022-12-27 17:15:56 +0100},
	date-modified = {2022-12-27 17:17:43 +0100},
	isbn = {978-3-642-45398-4},
	publisher = {Springer},
	title = {Evolving Software Systems},
	year = {2014}}

@inproceedings{Yau1978,
	author = {Yau, S.S. and Collofello, J.S. and MacGregor, T.},
	booktitle = {International Computer Software and Applications Conference ({COMPSAC})},
	date-added = {2022-12-27 17:02:02 +0100},
	date-modified = {2023-02-21 17:13:11 +0100},
	pages = {60-65},
	publisher = {IEEE},
	title = {Ripple effect analysis of software maintenance},
	year = {1978},
	bdsk-url-1 = {https://doi.org/10.1109/CMPSAC.1978.810308}}

@article{Frakes2005,
	author = {Frakes, W.B. and Kyo Kang},
	date-added = {2022-12-27 16:34:15 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Transactions on Software Engineering},
	number = {7},
	pages = {529-536},
	publisher = {IEEE},
	title = {Software reuse research: status and future},
	volume = {31},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2005.85}}

@inproceedings{German2013,
	abstract = {Software ecosystems form the heart of modern companies' collaboration strategies with end users, open source developers and other companies. An ecosystem consists of a core platform and a halo of user contributions that provide value to a company or project. In order to sustain the level and number of high-quality contributions, it is crucial for companies and contributors to understand how ecosystems tend to evolve and can be maintained successfully over time. As a first step, this paper explores the evolution characteristics of the statistical computing project GNU R, which is a successful, end-user programming ecosystem. We find that the ecosystem of user-contributed R packages has been growing steadily since R's conception, at a significantly faster rate than core packages, yet each individual package remains stable in size. We also identified differences in the way user-contributed and core packages are able to attract an active community of users.},
	author = {German, Daniel M. and Adams, Bram and Hassan, Ahmed E.},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-added = {2022-12-18 17:26:19 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1534-5351},
	month = {March},
	pages = {243-252},
	title = {The Evolution of the {R} Software Ecosystem},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/CSMR.2013.33}}

@article{Cheng2017,
	abstract = {An open source software (OSS) ecosystem refers to an OSS development community composed of many software projects and developers contributing to these projects. The projects and developers co-evolve in an ecosystem. To keep healthy evolution of such OSS ecosystems, there is a need of attracting and retaining developers, particularly project leaders and core developers who have major impact on the project and the whole team. Therefore, it is important to figure out the factors that influence developers'chance to evolve into project leaders and core developers. To identify such factors, we conducted a case study on the GNOME ecosystem. First, we collected indicators reflecting developers'subjective willingness to contribute to the project and the project environment that they stay in. Second, we calculated such indicators based on the GNOME dataset. Then, we fitted logistic regression models by taking as independent variables the resulting indicators after eliminating the most collinear ones, and taking as a dependent variable the future developer role (the core developer or project leader). The results showed that part of such indicators (e.g., the total number of projects that a developer joined) of subjective willingness and project environment significantly influenced the developers'chance to evolve into core developers and project leaders. With different validation methods, our obtained model performs well on predicting developmental core developers, resulting in stable prediction performance (0.770, F-value).},
	author = {Cheng, Can and Li, Bing and Li, Zeng-Yang and Zhao, Yu-Qi and Liao, Feng-Ling},
	date-added = {2022-12-18 17:24:06 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1860-4749},
	journal = {Journal of Computer Science and Technology},
	number = {2},
	pages = {396--414},
	title = {Developer Role Evolution in Open Source Software Ecosystem: An Explanatory Study on {GNOME}},
	volume = {32},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s11390-017-1728-9}}

@article{Tan2020,
	author = {Tan, Jie and Feitosa, Daniel and Avgeriou, Paris and Lungu, Mircea},
	date-added = {2022-12-18 17:21:32 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of Software: Evolution and Process},
	month = {November},
	number = {4},
	title = {Evolution of technical debt remediation in {Python}: A case study on the {Apache} Software Ecosystem},
	volume = {33},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1002/smr.2319}}

@inproceedings{Goeminne2013dataset,
	author = {Goeminne, Mathieu and Claes, Ma\"elick and Mens, Tom},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-12-18 17:19:10 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {225-228},
	title = {A historical dataset for the {Gnome} ecosystem},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2013.6624032}}

@inproceedings{Grinter1999,
	author = {Grinter, Rebecca E. and Herbsleb, James D. and Perry, Dewayne E.},
	booktitle = {International ACM SIGGROUP conference on Supporting group work ({GROUP})},
	date-added = {2022-12-18 17:01:51 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = {November},
	pages = {306--315},
	title = {The geography of coordination: dealing with distance in R\&D work},
	year = {1999},
	bdsk-url-1 = {https://doi.org/10.1145/320297.320333}}

@article{Raymond1999,
	abstract = {I anatomize a successful open-source project, fetchmail, that was run as a deliberate test of some theories about software engineering suggested by the history of Linux. I discuss these theories in terms of two fundamentally different development styles, the "cathedral" model, representing most of the commercial world, versus the "bazaar" model of the Linux world. I show that these models derive from opposing assumptions about the nature of the software-debugging task. I then make a sustained argument from the Linux experience for the proposition that "Given enough eyeballs, all bugs are shallow," suggest productive analogies with other self-correcting systems of selfish agents, and conclude with some exploration of the implications of this insight for the future of software.},
	author = {Raymond, Eric},
	date-added = {2022-12-18 16:45:53 +0100},
	date-modified = {2023-03-09 15:32:21 +0100},
	doi = {10.1007/s12130-999-1026-0},
	isbn = {1874-6314},
	journal = {Knowledge, Technology \& Policy},
	number = {3},
	pages = {23--49},
	title = {The cathedral and the bazaar},
	volume = {12},
	year = {1999},
	bdsk-url-1 = {https://doi.org/10.1007/s12130-999-1026-0}}

@article{Kozaczynski1998CBSE,
	author = {Kozaczynski, Wojtek; Booch, Grady},
	date-added = {2022-12-18 16:16:59 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Software},
	month = {September},
	number = {5},
	pages = {34-36},
	title = {Component-based software engineering},
	volume = {15},
	year = {1998},
	bdsk-url-1 = {https://doi.org/10.1109/MS.1998.714621}}

@inproceedings{Bosch2009,
	author = {Bosch, Jan},
	booktitle = {International Software Product Line Conference ({SPLC})},
	date-added = {2022-12-18 15:16:09 +0100},
	date-modified = {2022-12-18 15:16:52 +0100},
	title = {From Software Product Lines to Software Ecosystems From Software Product Lines to Software Ecosystems From Software Product Lines to Software Ecosystems},
	year = {2009}}

@article{Clements1999,
	author = {Clements, Paul},
	date-added = {2022-12-18 15:05:07 +0100},
	date-modified = {2022-12-18 15:06:18 +0100},
	journal = {CrossTalk: The Journal of Defense Software Engineering},
	month = {February},
	title = {Software Product Lines: A New Paradigm for the New Century},
	year = {1999}}

@book{Weiss199SPLE,
	author = {Weiss, David M. and Lai, Chi Tau Robert},
	date-added = {2022-12-18 14:51:53 +0100},
	date-modified = {2022-12-18 14:52:10 +0100},
	isbn = {0201694387},
	publisher = {Addison-Wesley},
	title = {Software Product-Line Engineering: A Family-Based Software Development Process},
	year = {1999}}

@book{Szyperski1997,
	author = {Szyperski, Clemens and Gruntz, Dominik and Murer, Stephan},
	date-added = {2022-12-18 14:45:06 +0100},
	date-modified = {2022-12-18 14:45:39 +0100},
	edition = {1st},
	isbn = {9780201178883},
	publisher = {Addison-Wesley},
	title = {Component Software: Beyond Object-Oriented Programming},
	year = {1997}}

@book{Naur1969,
	address = {Garmisch, Germany},
	author = {Naur, Peter and Randell, Brian},
	date-added = {2022-12-17 15:04:52 +0100},
	date-modified = {2022-12-17 15:05:58 +0100},
	publisher = {NATO},
	title = {Software Engineering: Report of a Conference Sponsored by the NATO Science Committee},
	year = {1969}}

@article{GrimoireLab2021,
	abstract = {Background: After many years of research on software repositories, the knowledge for building mature, reusable tools that perform data retrieval, storage and basic analytics is readily available. However, there is still room to improvement in the area of reusable tools implementing this knowledge.
                   Goal: To produce a reusable toolset supporting the most common tasks when retrieving, curating and visualizing data from software repositories, allowing for the easy reproduction of data sets ready for more complex analytics, and sparing the researcher or the analyst of most of the tasks that can be automated.
                   Method: Use our experience in building tools in this domain to identify a collection of scenarios where a reusable toolset would be convenient, and the main components of such a toolset. Then build those components, and refine them incrementally using the feedback from their use in both commercial, community-based, and academic environments.
                   Results: GrimoireLab, an efficient toolset composed of five main components, supporting about 30 different kinds of data sources related to software development. It has been tested in many environments, for performing different kinds of studies, and providing different kinds of services. It features a common API for accessing the retrieved data, facilities for relating items from different data sources, semi-structured storage for easing later analysis and reproduction, and basic facilities for visualization, preliminary analysis and drill-down in the data. It is also modular, making it easy to support new kinds of data sources and analysis.
                   Conclusions: We present a mature toolset, widely tested in the field, that can help to improve the situation in the area of reusable tools for mining software repositories. We show some scenarios where it has already been used. We expect it will help to reduce the effort for doing studies or providing services in this area, leading to advances in reproducibility and comparison of results.},
	author = {Due{\~n}as, S. and Cosentino, Valerio and Gonzalez-Barahona, Jesus M. and del Castillo San Felix, A. and Izquierdo-Cortazar, Daniel and Ca{\~n}as-D{\'\i}az, L. and P{\'e}rez Garc{\'\i}a-Plaza, A.},
	date-added = {2022-12-13 16:54:35 +0100},
	date-modified = {2023-02-28 11:13:31 +0100},
	journal = {PeerJ Computer Science},
	title = {{GrimoireLab}: A toolset for software development analytics},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.7717/peerj-cs.601}}

@article{Gonzalez-Barahona2012,
	abstract = {Among empirical software engineering studies, those based on data retrieved from development repositories (such as those of source code management, issue tracking or communication systems) are specially suitable for reproduction. However their reproducibility status can vary a lot, from easy to almost impossible to reproduce. This paper explores which elements can be considered to characterize the reproducibility of a study in this area, and how they can be analyzed to better understand the type of reproduction studies they enable or obstruct. One of the main results of this exploration is the need of a systematic approach to asses the reproducibility of a study, due to the complexity of the processes usually involved, and the many details to be taken into account. To address this need, a methodology for assessing the reproducibility of studies is also presented and discussed, as a tool to help to raise awareness about research reproducibility in this field. The application of the methodology in practice has shown how, even for papers aimed to be reproducible, a systematic analysis raises important aspects that render reproduction difficult or impossible. We also show how, by identifying elements and attributes related to reproducibility, it can be better understood which kind of reproduction can be done for a specific study, given the description of datasets, methodologies and parameters it uses.},
	author = {Gonzalez-Barahona, Jesus M. and Robles, Gregorio},
	date-added = {2022-12-03 18:37:39 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {75--89},
	title = {On the reproducibility of empirical software engineering studies based on data retrieved from development repositories},
	volume = {17},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-011-9181-9}}

@dataset{librariesio2020,
	author = {Jeremy Katz},
	doi = {10.5281/zenodo.3626071},
	month = jan,
	publisher = {Zenodo},
	title = {{Libraries.io} Open Source Repository and Dependency Metadata},
	version = {1.6.0},
	year = 2020,
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.3626071}}

@inproceedings{Benabidallah2019SecureQualitas,
	abstract = {The preventive approach of software security is the basis of what is referred to as secure by design. The principle is to avoid vulnerabilities as soon as the system is designed. Several research work are aimed to this objective. Most of them rely on empirical studies which need a realistic corpus. This corpus holds applications with different vulnerabilities and others without any known vulnerability. To the best of our knowledge, such a security corpus does not exist.In this paper, we present a novel approach based on an automatic annotation process to build a security corpus for real Java applications. Our approach takes advantage of several existing code scanners in order to annotate the corpus. We applied our process of vulnerability annotation on a well-known corpus, namely Qualitas Corpus, from the software engineering research community. We provide the resulting security corpus, namely SecureQualitas, to the research community. The experiments we conducted demonstrate that our approach gives better results than the scanners taken alone.},
	author = {Benabidallah, Raounak and Sadou, Salah and Botne, Isabelle},
	booktitle = {International Conference on Cyber Security for Emerging Technologies ({CSET})},
	date-added = {2022-12-03 17:25:59 +0100},
	date-modified = {2023-03-07 15:45:20 +0100},
	month = {Oct},
	pages = {1-6},
	title = {{SecureQualitas}: A Security Corpus of Real {Java} Applications},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/CSET.2019.8904906}}

@inproceedings{Tempero2010QualitasCorpus,
	abstract = {In order to increase our ability to use measurement to support software development practise we need to do more analysis of code. However, empirical studies of code are expensive and their results are difficult to compare. We describe the Qualitas Corpus, a large curated collection of open source Java systems. The corpus reduces the cost of performing large empirical studies of code and supports comparison of measurements of the same artifacts. We discuss its design, organisation, and issues associated with its development.},
	author = {Tempero, Ewan and Anslow, Craig and Dietrich, Jens and Han, Ted and Li, Jing and Lumpe, Markus and Melton, Hayden and Noble, James},
	booktitle = {Asia Pacific Software Engineering Conference ({APSEC})},
	date-added = {2022-12-03 17:23:35 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1530-1362},
	month = {Nov},
	pages = {336-345},
	title = {The {Qualitas Corpus}: A Curated Collection of {Java} Code for Empirical Studies},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1109/APSEC.2010.46}}

@inproceedings{swh:dyer2013boa,
	author = {Dyer, Robert and Nguyen, Hoan Anh and Rajan, Hridesh and Nguyen, Tien N.},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-03-12 14:55:20 +0100},
	pages = {422--431},
	title = {Boa: A Language and Infrastructure for Analyzing Ultra-Large-Scale Software Repositories},
	year = {2013}}

@article{dyer2015boa,
	abstract = {In today's software-centric world, ultra-large-scale software repositories, such as SourceForge, GitHub, and Google Code, are the new library of Alexandria. They contain an enormous corpus of software and related information. Scientists and engineers alike are interested in analyzing this wealth of information. However, systematic extraction and analysis of relevant data from these repositories for testing hypotheses is hard, and best left for mining software repository (MSR) experts! Specifically, mining source code yields significant insights into software development artifacts and processes. Unfortunately, mining source code at a large scale remains a difficult task. Previous approaches had to either limit the scope of the projects studied, limit the scope of the mining task to be more coarse grained, or sacrifice studying the history of the code. In this article we address mining source code: (a) at a very large scale; (b) at a fine-grained level of detail; and (c) with full history information. To address these challenges, we present domain-specific language features for source-code mining in our language and infrastructure called Boa. The goal of Boa is to ease testing MSR-related hypotheses. Our evaluation demonstrates that Boa substantially reduces programming efforts, thus lowering the barrier to entry. We also show drastic improvements in scalability.},
	articleno = {7},
	author = {Dyer, Robert and Nguyen, Hoan Anh and Rajan, Hridesh and Nguyen, Tien N.},
	date-added = {2022-12-03 17:19:43 +0100},
	date-modified = {2023-03-07 11:13:11 +0100},
	issn = {1049-331X},
	issue_date = {2015},
	journal = {Transactions on Software Engineering and Methodology},
	keywords = {Boa, domain-specific language, lower barrier to entry, scalable, ease of use, mining software repositories},
	month = {dec},
	number = {1},
	publisher = {ACM},
	title = {Boa: Ultra-Large-Scale Software Repository and Source-Code Mining},
	volume = {25},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2803171}}

@article{Zhang2022,
	abstract = {To achieve commercial goals, companies have made substantial contributions to large open-source software (OSS) ecosystems such as OpenStack and have become the main contributors. However, they often withdraw their employees for a variety of reasons, which may affect the sustainability of OSS projects. While the turnover of individual contributors has been extensively investigated, there is a lack of knowledge about the nature of companies' withdrawal. To this end, we conduct a mixed-methods empirical study on OpenStack to reveal how common company withdrawals were, to what degree withdrawn companies made contributions, and what the rationale behind withdrawals was. By analyzing the commit data of 18 versions of OpenStack, we find that the number of companies that have left is increasing and even surpasses the number of companies that have joined in later versions. Approximately 12% of the companies in each version have exited by the next version. Compared to the sustaining companies that joined in the same version, the withdrawn companies tend to have a weaker contribution intensity but contribute to a similar scope of repositories in OpenStack. Through conducting a developer survey, we find four aspects of reasons for companies' withdrawal from OpenStack: company, community, developer, and project. The most common reasons lie in the company aspect, i.e., the company either achieved its goals or failed to do so. By fitting the survival analysis model, we find that commercial goals are associated with the probability of the company's withdrawal, and that a company's contribution intensity and scale are positively correlated with its retention. Maintaining good retention is important but challenging for OSS ecosystems, and our results may shed light on potential approaches to improve company retention and reduce the negative impact of company withdrawal.},
	author = {Zhang, Yuxia and Liu, Hui and Tan, Xin and Zhou, Minghui and Jin, Zhi and Zhu, Jiaxin},
	date-added = {2022-12-01 15:47:52 +0100},
	date-modified = {2023-02-21 18:36:47 +0100},
	issn = {1049-331X},
	journal = {Transactions on Software Engineering and Methodology},
	keywords = {survival analysis, Software development, company withdrawal, open source ecosystem, commercial participation},
	month = {jul},
	number = {4},
	publisher = {ACM},
	title = {Turnover of Companies in OpenStack: Prevalence and Rationale},
	volume = {31},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3510849}}

@inproceedings{McIllroy1968,
	address = {Garmisch, Germany},
	author = {McIlroy, Malcolm Douglas},
	booktitle = {Software Engineering: Report of a conference sponsored by the NATO Science Committee},
	date-added = {2022-12-01 15:29:07 +0100},
	date-modified = {2022-12-17 15:04:31 +0100},
	month = {October},
	title = {Mass produced software components},
	year = {1969}}

@article{Vouillon2013,
	abstract = {Modern software systems are built by composing components drawn from large repositories, whose size and complexity is increasing at a very fast pace. A fundamental challenge for the maintainability and the scalability of such software systems is the ability to quickly identify the components that can or cannot be installed together: this is the co-installability problem, which is related to boolean satisfiability and is known to be algorithmically hard. This article develops a novel theoretical framework, based on formally certified semantic preserving graph-theoretic transformations, that allows us to associate to each concrete component repository a much smaller one with a simpler structure, that we call strongly flat, with equivalent co-installability properties. This flat repository can be displayed in a way that provides a concise view of the co-installability issues in the original repository, or used as a basis for various algorithms related to co-installability, like the efficient computation of strong conflicts between components. The proofs contained in this work have been machine checked using the Coq proof assistant.},
	author = {Vouillon, J\'{e}r\^{o}me and Cosmo, Roberto Di},
	date-added = {2022-12-01 15:14:17 +0100},
	date-modified = {2023-03-07 11:17:47 +0100},
	issn = {1049-331X},
	journal = {Transactions on Software Engineering and Methodology},
	keywords = {Component, open source, package management, co-installability, conflicts, dependencies},
	month = {oct},
	number = {4},
	publisher = {ACM},
	title = {On Software Component Co-Installability},
	volume = {22},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1145/2522920.2522927}}

@article{Abate2012,
	abstract = {Maintenance of component-based software platforms often has to face rapid evolution of software components. Component dependencies, conflicts, and package managers with dependency solving capabilities are the key ingredients of prevalent software maintenance technologies that have been proposed to keep software installations synchronized with evolving component repositories. We review state-of-the-art package managers and their ability to keep up with evolution at the current growth rate of popular component-based platforms, and conclude that their dependency solving abilities are not up to the task. We show that the complexity of the underlying upgrade planning problem is NP-complete even for seemingly simple component models, and argue that the principal source of complexity lies in multiple available versions of components. We then discuss the need of expressive languages for user preferences, which makes the problem even more challenging. We propose to establish dependency solving as a separate concern from other upgrade aspects, and present CUDF as a formalism to describe upgrade scenarios. By analyzing the result of an international dependency solving competition, we provide evidence that the proposed approach is viable.},
	author = {Pietro Abate and Roberto {Di Cosmo} and Ralf Treinen and Stefano Zacchiroli},
	date-added = {2022-12-01 15:13:25 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Component, Dependency solving, Software evolution, Package management, Open source, Competition},
	number = {10},
	pages = {2228-2240},
	title = {Dependency solving: A separate concern in component evolution management},
	volume = {85},
	year = {2012},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121212000477},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2012.02.018}}

@inproceedings{Abate2009,
	abstract = {Component-based systems often describe context requirements in terms of explicit inter-component dependencies. Studying large instances of such systems - such as free and open source software (FOSS) distributions - in terms of declared dependencies between packages is appealing. It is however also misleading when the language to express dependencies is as expressive as Boolean formulae, which is often the case. In such settings, a more appropriate notion of component dependency exists: strong dependency. This paper introduces such notion as a first step towards modeling semantic, rather then syntactic, inter-component relationships. Furthermore, a notion of component sensitivity is derived from strong dependencies, with applications to quality assurance and to the evaluation of upgrade risks. An empirical study of strong dependencies and sensitivity is presented, in the context of one of the largest, freely available, component-based system.},
	author = {Abate, Pietro and Di Cosmo, Roberto and Boender, Jaap and Zacchiroli, Stefano},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-12-01 15:12:34 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1949-3789},
	month = {Oct},
	pages = {89-99},
	title = {Strong dependencies between software components},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1109/ESEM.2009.5316017}}

@inproceedings{Mancinelli2006,
	abstract = {The widespread adoption of free and open source software (FOSS) in many strategic contexts of the information technology society has drawn the attention on the issues regarding how to handle the complexity of assembling and managing a huge number of (packaged) components in a consistent and effective way. FOSS distributions (and in particular GNU/Linux-based ones) have always provided tools for managing the tasks of installing, removing and upgrading the (packaged) components they were made of While these tools provide a (not always effective) way to handle these tasks on the client side, there is still a lack of tools that could help the distribution editors to maintain, on the server side, large and high-quality distributions. In this paper we present our research whose main goal is to fill this gap: we show our approach, the tools we have developed and their application with experimental results. Our contribution provides an effective and automatic way to support distribution editors in handling those issues that were, until now, mostly addressed using ad-hoc tools and manual techniques},
	author = {Mancinelli, Fabio and Boender, Jaap and di Cosmo, Roberto and Vouillon, Jerome and Durak, Berke and Leroy, Xavier and Treinen, Ralf},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-12-01 15:11:33 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1938-4300},
	month = {September},
	pages = {199-208},
	title = {Managing the Complexity of Large Free and Open Source Package-Based Software Distributions},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1109/ASE.2006.49}}

@inproceedings{Claes2015,
	abstract = {Users and developers of software distributions are often confronted with installation problems due to conflicting packages. A prototypical example of this are the Linux distributions such as Debian. Conflicts between packages have been studied under different points of view in the literature, in particular for the Debian operating system, but little is known about how these package conflicts evolve over time. This article presents an extensive analysis of the evolution of package incompatibilities, spanning a decade of the life of the Debian stable and testing distributions for its most popular architecture, i386. Using the technique of survival analysis, this empirical study sheds some light on the origin and evolution of package incompatibilities, and provides the basis for building indicators that may be used to improve the quality of package-based distributions.},
	author = {Claes, Ma\"elick and Mens, Tom and Di Cosmo, Roberto and Vouillon, J\'er\^ome},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-12-01 15:09:27 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {212-223},
	title = {A Historical Analysis of {Debian} Package Incompatibilities},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2015.27}}

@book{Szyperski2002,
	author = {Szyperski, Clemens and Gruntz, Dominik and Murer, Stephan},
	date-added = {2022-12-01 14:53:41 +0100},
	date-modified = {2022-12-01 14:56:16 +0100},
	edition = {2nd},
	isbn = {0-201-74572-0},
	publisher = {Addison-Wesley},
	title = {Component Software: Beyond Object-Oriented Programming},
	year = {2002}}

@article{Krueger1992,
	abstract = {Software reuse is the process of creating software systems from existing software rather than building software systems from scratch. This simple yet powerful vision was introduced in 1968. Software reuse has, however, failed to become a standard software engineering practice. In an attempt to understand why, researchers have renewed their interest in software reuse and in the obstacles to implementing it.This paper surveys the different approaches to software reuse found in the research literature. It uses a taxonomy to describe and compare the different approaches and make generalizations about the field of software reuse. The taxonomy characterizes each reuse approach in terms of its reusable artifacts and the way these artifacts are abstracted, selected, specialized, and integrated.Abstraction plays a central role in software reuse. Concise and expressive abstractions are essential if software artifacts are to be effectively reused. The effectiveness of a reuse technique can be evaluated in terms of cognitive distance---an intuitive gauge of the intellectual effort required to use the technique. Cognitive distance is reduced in two ways: (1) Higher level abstractions in a reuse technique reduce the effort required to go from the initial concept of a software system to representations in the reuse technique, and (2) automation reduces the effort required to go from abstractions in a reuse technique to an executable implementation.This survey will help answer the following questions: What is software reuse? Why reuse software? What are the different approaches to reusing software? How effective are the different approaches? What is required to implement a software reuse technology? Why is software reuse difficult? What are the open areas for research in software reuse?},
	author = {Krueger, Charles W.},
	date-added = {2022-12-01 14:46:33 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0360-0300},
	journal = {ACM Computing Surveys},
	keywords = {cognitive distance, software reuse, abstraction},
	month = {jun},
	number = {2},
	pages = {131--183},
	publisher = {ACM},
	title = {Software Reuse},
	volume = {24},
	year = {1992},
	bdsk-url-1 = {https://doi.org/10.1145/130844.130856}}

@article{Kotovs2009,
	abstract = {This paper is an overview of software reuse, its origins, research areas and main historical contributions. Reuse as the process of using existing software artefacts and knowledge has more than 40-year long history, and is currently recognized as an important mechanism to improve software quality and development productivity. Main attention is paid to retrospective analysis of key researches in the area of software reuse. Starting from the seminal paper and the other earliest contributions the survey discusses important milestones in the evolution of initial ideas of component sub-industry to mature field of research in software engineering. Active areas of past researches being overviewed by this paper include reuse libraries, asset classification and selection, measurement and experimentation, design patterns and studies of systematic reuse. Separate attention is paid to consolidation of main benefits and obstacles of software reuse. The paper concludes important ideas emerging from the historical experience about multidisciplinary nature of reuse, necessity of software reuse process and the role of domain engineering. Overview of key aspects organizational, technical and economic important for establishing software reuse programs is given.},
	author = {Kotovs, Vladimirs},
	date-added = {2022-12-01 14:43:58 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1407-7493},
	journal = {Sci. J. Riga Tech. Univ.},
	keywords = {Software reuse, history of software reuse, aspects of systematic software reuse, reusable assets},
	month = {jan},
	number = {38},
	pages = {153--160},
	title = {Forty Years of Software Reuse},
	volume = {38},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.2478/v10143-009-0013-y}}

@article{Caldiera1991,
	abstract = {Identification and qualification of reusable software based on software models and metrics is explored. Software metrics provide a way to automate the extraction of reusable software components from existing systems, reducing the amount of code that experts must analyze. Also, models and metrics permit feedback and improvement to make the extraction process fit a variety of environments. Some case studies are described to validate the experimental approach. They deal with only the identification phase and use a very simple model of a reusable code component, but the results show that automated techniques can reduce the amount of code that a domain expert needs to evaluate to identify reusable parts.},
	author = {Caldiera, G. and Basili, V.R.},
	date-added = {2022-12-01 14:28:42 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Computer},
	number = {2},
	pages = {61-70},
	title = {Identifying and qualifying reusable software components},
	volume = {24},
	year = {1991},
	bdsk-url-1 = {https://doi.org/10.1109/2.67210}}

@inproceedings{Lau2006,
	abstract = {Component-based Development (CBD) is an important emerging topic in Software Engineering, promising long sought after benefits like increased reuse and reduced time-to-market (and hence software production cost). However, there are at present many obstacles to overcome before CBD can succeed. For one thing, CBD success is predicated on a standardised market place for software components, which does not yet exist. In fact currently CBD even lacks a universally accepted terminology. Existing component models adopt different component definitions and composition operators. Therefore much research remains to be done. We believe that the starting point for this endeavour should be a thorough study of current component models, identifying their key characteristics and comparing their strengths and weaknesses. A desirable side-effect would be clarifying and unifying the CBD terminology. In this tutorial, we present a clear and concise exposition of all the current major software component models, including a taxonomy. The purpose is to distill and present knowledge of current software component models, as well as to present an analysis of their properties with respect to commonly accepted criteria for CBD. The taxonomy also provides a starting point for a unified terminology.},
	author = {Lau, Kung-Kiu},
	booktitle = {International Conference on Software Engineering},
	date-added = {2022-12-01 14:26:37 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1595933751},
	keywords = {composition, software components},
	pages = {1081--1082},
	publisher = {ACM},
	title = {Software Component Models},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1145/1134285.1134516}}

@inproceedings{Steglich2019,
	abstract = {Software Ecosystems are comprised of a technology platform, business models, internal and external developers, and engaging users. The popularity of smartphones brought along the mobile software ecosystems, such as iOS and Android, which are composed of a platform, a community of users and developers, mobile applications, and online application store, and evangelists that often promote the ecosystem. Given the recent nature of the topic, this paper aims to revisit the state-of-the-art through a systematic literature mapping. We found 63 publications on the topic of mobile software ecosystems that were categorized by year (almost 50% of the publications are from 2015 and on), by author (a few collaboration clusters were identified), and by the mobile ecosystems characteristics (most publications discuss business or technical aspects) and elements (applications and the platform are the most discussed topics followed by the developers and the users). Our results provide an up-to-date map of the topic for those interested in mobile software ecosystems.},
	author = {Steglich, Caio and Marczak, Sabrina and Guerra, Luiz Pedro and Mosmann, Luiz Henrique and Perin, Marcelo and Figueira Filho, Fernando and de Souza, Cleidson},
	booktitle = {International Workshop on Software Engineering for Systems-of-Systems ({SESoS}) and Workshop on Distributed Software Development, Software Ecosystems and Systems-of-Systems ({WDES})},
	date-added = {2022-12-01 14:04:46 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {50-57},
	title = {Revisiting the Mobile Software Ecosystems Literature},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/SESoS/WDES.2019.00015}}

@inproceedings{Alfonso2020,
	author = {Afonso, Anderson Tavares Queiroz and Chueri, Luciana Vilanova and Santos, Rodrigo Pereira dos},
	booktitle = {International Conference on Software Architecture Companion ({ICSA})},
	date-added = {2022-12-01 14:03:14 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {226-233},
	publisher = {IEEE},
	title = {Business Process Management in Digital and Software Ecosystems: A Systematic Mapping Study},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ICSA-C50368.2020.00046}}

@inproceedings{Pichler2019ROS,
	abstract = {Since its beginnings ten years ago, the Robot Operating System (ROS) has created a huge community of developers and researchers and is now the most widespread open-source framework for robotics development. It is used in research, prototyping but also in commercial products and supports a wide range of robotic platforms, sensors and highlevel data processing functions. While for a research platform, quality of the software developed with it is typically of lower importance, ROS is gradually moving towards industrial applications making software quality a premier topic. In this paper, we want to gain insights on how ROS is used in practice, how high the quality of the ROS packages and applications is, and where potential pitfalls in the use of ROS lie. To achieve this, we have analyzed several thousands of open-source ROS packages found on GitHub and Bitbucket for their quality and their interdependencies. Our results include packages on the rosdistro index and, more importantly, packages that are not. From our results we show common issues in ROS-applications, quality implications, and also which packages of what quality are particularly popular.},
	author = {Pichler, Marc and Dieber, Bernhard and Pinzger, Martin},
	booktitle = {International Conference on Robotic Computing ({IRC})},
	date-added = {2022-12-01 11:38:16 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {78-85},
	publisher = {IEEE},
	title = {Can I Depend on you? Mapping the Dependency and Quality Landscape of {ROS} Packages},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/IRC.2019.00020}}

@article{Estefo2019,
	abstract = {ROS, the Robot Operating System, offers a core set of software for operating robots that can be extended by creating or using existing packages, making it possible to write robotic software that can be reused on different hardware platforms. With thousands of packages available per stable distribution, encapsulating algorithms, sensor drivers, etc., it is the de facto middleware for robotics. Like any software ecosystem, ROS must evolve in order to keep meeting the requirements of its users. In practice, packages may end up being abandoned between releases: no one may be available to update a package, or newer packages offer similar functionality. As such, we wanted to identify and understand the evolution challenges faced by the ROS ecosystem. In this article, we report our findings after interviewing 19 ROS developers in depth, followed by a focus group (4 participants) and an online survey of 119 ROS community members. We specifically focused on the issues surrounding package reuse and how to contribute to existing packages. To conclude, we discuss the implications of our findings, and propose five recommendations for overcoming the identified issues, with the goal of improving the health of the ROS ecosystem.},
	author = {Pablo Estefo and Jocelyn Simmonds and Romain Robbes and Johan Fabry},
	date-added = {2022-12-01 11:36:48 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Robot Operating System, Package management, Software ecosystems},
	pages = {226-242},
	title = {The {Robot Operating System}: Package reuse and community dynamics},
	volume = {151},
	year = {2019},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121219300342},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2019.02.024}}

@inproceedings{Kolak2020ROS,
	abstract = {Over the past eleven years, the Robot Operating System (ROS), has grown from a small research project into the most popular framework for robotics development. Composed of packages released on the Rosdistro package manager, ROS aims to simplify development by providing reusable libraries, tools and conventions for building a robot. Still, developing a complete robot is a difficult task that involves bridging many technical disciplines. Experts who create computer vision packages, for instance, may need to rely on software designed by mechanical engineers to implement motor control. As building a robot requires domain expertise in software, mechanical, and electrical engineering, as well as artificial intelligence and robotics, ROS faces knowledge based barriers to collaboration.In this paper, we examine how the necessity of domain specific knowledge impacts the open source collaboration model. We create a comprehensive corpus of package metadata and dependencies over three years in the ROS ecosystem, analyze how collaboration is structured, and study the dependency network evolution. We find that the most widely used ROS packages belong to a small cluster of foundational working groups (FWGs), each organized around a different domain in robotics. We show that the FWGs are growing at a slower rate than the rest of the ecosystem, in terms of their membership and number of packages, yet the number of dependencies on FWGs is increasing at a faster rate. In addition, we mined all ROS packages on GitHub, and showed that 82% rely exclusively on functionality provided by FWGs. Finally, we investigate these highly influential groups and describe the unique model of collaboration they support in ROS.},
	author = {Kolak, Sophia and Afzal, Afsoon and Le Goues, Claire and Hilton, Michael and Timperley, Christopher Steven},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-12-01 11:32:35 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {430-440},
	title = {It Takes a Village to Build a Robot: An Empirical Study of The {ROS} Ecosystem},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME46990.2020.00048}}

@article{Hein2020,
	abstract = {Digital platforms are an omnipresent phenomenon that challenges incumbents by changing how we consume and provide digital products and services. Whereas traditional firms create value within the boundaries of a company or a supply chain, digital platforms utilize an ecosystem of autonomous agents to co-create value. Scholars from various disciplines, such as economics, technology management, and information systems have taken different perspectives on digital platform ecosystems. In this Fundamentals article, we first synthesize research on digital platforms and digital platform ecosystems to provide a definition that integrates both concepts. Second, we use this definition to explain how different digital platform ecosystems vary according to three core building blocks: (1) platform ownership, (2) value-creating mechanisms, and (3) complementor autonomy. We conclude by giving an outlook on four overarching research areas that connect the building blocks: (1) technical properties and value creation; (2) complementor interaction with the ecosystem; (3) value capture; and (4) the make-or-join decision in digital platform ecosystems.},
	author = {Hein, Andreas and Schreieck, Maximilian and Riasanow, Tobias and Setzke, David Soto and Wiesche, Manuel and B{\"o}hm, Markus and Krcmar, Helmut},
	date-added = {2022-12-01 11:09:39 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1422-8890},
	journal = {Electronic Markets},
	number = {1},
	pages = {87--98},
	title = {Digital platform ecosystems},
	volume = {30},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1007/s12525-019-00377-4}}

@article{Iansiti2004,
	author = {Iansiti, M. and Levien, R.},
	date-added = {2022-12-01 10:19:49 +0100},
	date-modified = {2022-12-01 10:20:50 +0100},
	journal = {Harvard Business Review},
	number = {3},
	pages = {68-81},
	title = {Strategy as ecology},
	volume = {82},
	year = {2004}}

@article{Moore1993,
	author = {Moore, J.F.},
	date-added = {2022-12-01 10:18:46 +0100},
	date-modified = {2022-12-01 10:19:27 +0100},
	journal = {Harvard Business Review},
	number = {3},
	pages = {75--83},
	title = {Predators and prey: A new ecology of competition},
	volume = {71},
	year = {1993}}

@article{Um2022WordPress,
	abstract = {Software components, such as application programming interfaces (APIs), provided by both the platform owner and external developers in a platform ecosystem are vital to online digital platforms. These APIs are associated with functionality provided by the platform. A larger number of APIs used is generally associated with an increase in the platform ecosystem's variety of products. However, the precise nature of the relationship between the use of APIs and product variety in a platform ecosystem is not yet known because of the lack of appropriate methodologies to analyze the complex data generated in such platform ecosystems. Drawing on a recombinatorial design perspective, we use a dynamic network model to create metrics for product variety in a digital ecosystem and study how the use of different types of APIs affects product variety. In particular, we theorize that, contrary to existing models, the structure of APIs in a large platform ecosystem is not limited to a core--periphery structure, but includes an additional third layer that we refer to as the regular core. We further hypothesize that external APIs in the regular core play a crucial role in increasing product variety in the ecosystem. To test our hypothesis, we conduct an empirical study using longitudinal data of all available digital product (i.e., plug-in) source codes on WordPress.org, the world's largest content management system and one of the most extensive digital platform ecosystems. By analyzing all of the plug-ins on WordPress over 10 years from its inception, we find the support of our three-layer structure of APIs in a platform ecosystem: complete core, regular core, and periphery. Our empirical analysis further supports the role of external APIs in the regular core in increasing product variety. We, however, find that the strength of this effect diminishes in a newly created product category.},
	author = {Um, Sungyong and Zhang, Bin and Wattal, Sunil and Yoo, Youngjin},
	date-added = {2022-12-01 09:48:16 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Information Systems Research},
	title = {Software Components and Product Variety in a Platform Ecosystem: A Dynamic Network Analysis of {WordPress}},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1287/isre.2022.1172}}

@article{Koch2009,
	abstract = {In this paper we explore possible benefits of communication and coordination tools in open source projects using an efficiency score derived from data envelopment analysis (DEA) as dependent variable. DEA is a general non-parametric method for efficiency comparisons without asking the user to define any relations between different factors or a production function. The method can account for economies or diseconomies of scale, and is able to deal with multi-input, multi-output systems in which the factors have different scales. Using two different data sets, successful and random open source projects, retrieved from SourceForge.net, we analyze impacts on their efficiency from the usage of communication and coordination tools. The results were mixed with no clear positive effects being proven consistently: In the data set of successful projects, mostly negative influences were found. On the contrary, tool adoption showed positive relationships to efficiency in the random data set. This stresses the importance of development status as a moderating variable and might also hint at threshold values for tool benefits. In addition, adoption of tools outside the hosting platform may be more likely for successful projects.},
	author = {Koch, Stefan},
	date-added = {2022-11-29 15:02:26 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {397--417},
	title = {Exploring the effects of {SourceForge.net} coordination and communication tools on the efficiency of open source projects using data envelopment analysis},
	volume = {14},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-008-9086-4}}

@article{Nyman2011,
	author = {Linus Nyman and Tommi Mikkonen},
	date-added = {2022-11-29 14:57:55 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {International Journal of Open Source Software and Processes ({IJOSSP})},
	number = {3},
	title = {To Fork or Not to Fork: Fork Motivations in {SourceForge} Projects},
	volume = {3},
	year = {2011},
	bdsk-url-1 = {https://doi.org/10.4018/jossp.2011070101}}

@inproceedings{Robles2006,
	abstract = {The development of libre (free/open source) software is usually performed by geographically distributed teams. Participation in most cases is voluntary, sometimes sporadic, and often not framed by a pre-defined management structure. This means that anybody can contribute, and in principle no national origin has advantages over others, except for the differences in availability and quality of Internet connections and language. However, differences in participation across regions do exist, although there are little studies about them. In this paper we present some data which can be the basis for some of those studies. We have taken the database of users registered at SourceForge, the largest libre software development web-based platform, and have inferred their geographical locations. For this, we have applied several techniques and heuristics on the available data (mainly e-mail addresses and time zones), which are presented and discussed in detail. The results show a snapshot of the regional distribution of SourceForge users, which may be a good proxy of the actual distribution of libre software developers. In addition, the methodology may be of interest for similar studies in other domains, when the available data is similar (as is the case of mailing lists related to software projects).},
	author = {Robles, Gregorio and Gonzalez-Barahona, Jesus M.},
	booktitle = {International Workshop on Mining Software Repositories ({MSR})},
	date-added = {2022-11-29 14:54:40 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1595933972},
	keywords = {open source software, geographical location, free software, mining software repositories, libre software},
	pages = {144--150},
	publisher = {ACM},
	title = {Geographic Location of Developers at {SourceForge}},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1145/1137983.1138017}}

@inproceedings{Howison2004,
	author = {Howison, James and Crowston, Kevin},
	booktitle = {International Workshop on Mining Software Repositories ({MSR})},
	date-added = {2022-11-29 14:35:30 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {7-11},
	title = {The perils and pitfalls of mining {SourceForge}},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1049/ic:20040467}}

@inproceedings{Gousios2017,
	author = {Gousios, Georgios and Spinellis, Diomidis},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-11-29 14:22:41 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {501-502},
	title = {Mining Software Engineering Data from {GitHub}},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-C.2017.164}}

@inproceedings{Bangash2019,
	author = {Bangash, Abdul Ali and Sahar, Hareem and Chowdhury, Shaiful and Wong, Alexander William and Hindle, Abram and Ali, Karim},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-11-29 14:19:32 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {260-264},
	title = {What do Developers Know About Machine Learning: A Study of {ML} Discussions on {StackOverflow}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00052}}

@inproceedings{Manes2019,
	abstract = {Stack Overflow (SO) is a popular Q&A forum for software developers, providing a large number of copyable code snippets. While GitHub is an independent code collaboration platform, developers often reuse SO code in their GitHub projects. In this paper, we investigate how often GitHub developers re-use code snippets from the SO forum, as well as what concepts they are more likely to reference in their code. To accomplish our goal, we mine SOTorrent dataset that provides connectivity between code snippets on the SO posts with software projects hosted on GitHub. We then study the characteristics of GitHub projects that reference SO posts and what popular SO discussions can be found in GitHub projects. Our results demonstrate that on average developers make 45 references to SO posts in their projects, with the highest number of references being made within the JavaScript code. We also found that 79% of the SO posts with code snippets that are referenced in GitHub code do change over time (at least ones) raising code maintainability and reliability concerns.},
	author = {Manes, Saraj Singh and Baysal, Olga},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-11-29 14:18:30 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {235-239},
	title = {How Often and What {StackOverflow} Posts Do Developers Reference in Their {GitHub} Projects?},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00047}}

@inproceedings{Baltes2018,
	abstract = {Stack Overflow (SO) is the most popular question-and-answer website for software developers, providing a large amount of code snippets and free-form text on a wide variety of topics. Like other software artifacts, questions and answers on SO evolve over time, for example when bugs in code snippets are fixed, code is updated to work with a more recent library version, or text surrounding a code snippet is edited for clarity. To be able to analyze how content on SO evolves, we built SOTorrent, an open dataset based on the official SO data dump. SOTorrent provides access to the version history of SO content at the level of whole posts and individual text or code blocks. It connects SO posts to other platforms by aggregating URLs from text blocks and by collecting references from GitHub files to SO posts. In this paper, we describe how we built SOTorrent, and in particular how we evaluated 134 different string similarity metrics regarding their applicability for reconstructing the version history of text and code blocks. Based on a first analysis using the dataset, we present insights into the evolution of SO posts, e.g., that post edits are usually small, happen soon after the initial creation of the post, and that code is rarely changed without also updating the surrounding text. Further, our analysis revealed a close relationship between post edits and comments. Our vision is that researchers will use SOTorrent to investigate and understand the evolution of SO posts and their relation to other platforms such as GitHub.},
	author = {Baltes, Sebastian and Dumani, Lorik and Treude, Christoph and Diehl, Stephan},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-11-29 14:15:58 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450357166},
	keywords = {software evolution, stack overflow, open dataset, code snippets},
	pages = {319--330},
	publisher = {ACM},
	title = {{SOTorrent}: Reconstructing and Analyzing the Evolution of {Stack Overflow} Posts},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3196398.3196430}}

@inproceedings{Baltes2019,
	author = {Baltes, Sebastian and Treude, Christoph and Diehl, Stephan},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-11-29 14:11:53 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {191-194},
	publisher = {IEEE/ACM},
	title = {{SOTorrent}: Studying the Origin, Evolution, and Usage of {Stack Overflow} Code Snippets},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00038}}

@inproceedings{deLimaFontao2015,
	author = {de Lima Fontao, Awdren and Pereira dos Santos, Rodrigo and Dias-Neto, Arilo Claudio},
	booktitle = {Annual Computer Software and Applications Conference ({COMPSAC})},
	date-added = {2022-11-29 13:38:53 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {653-658},
	publisher = {IEEE},
	title = {Mobile Software Ecosystem ({MSECO}): A Systematic Mapping Study},
	volume = {2},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/COMPSAC.2015.121}}

@inproceedings{Barbosa2011,
	author = {Olavo Barbosa and Carina Alves},
	booktitle = {International Workshop on Software Ecosystems ({IWSECO})},
	date-added = {2022-11-29 13:33:42 +0100},
	date-modified = {2022-11-29 13:35:10 +0100},
	pages = {15-26},
	series = {{CEUR} Workshop Proceedings},
	title = {A Systematic Mapping Study on Software Ecosystems},
	volume = {746},
	year = {2011}}

@article{Burstrom2022,
	author = {Burstr{\"o}m, Thommie and Lahti, Tom and Parida, Vinit and Wartiovaara, Markus and Wincent, Joakim},
	date-added = {2022-11-29 13:30:29 +0100},
	date-modified = {2023-03-07 11:20:04 +0100},
	journal = {Transactions on Engineering Management},
	pages = {1-16},
	publisher = {IEEE},
	title = {Software Ecosystems Now and in the Future: A Definition, Systematic Literature Review, and Integration Into the Business and Digital Ecosystem Literature},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TEM.2022.3216633}}

@inproceedings{Seppanen2017,
	author = {Sepp{\"a}nen, Marko and Hyrynsalmi, Sami and Manikas, Konstantinos and Suominen, Arho},
	booktitle = {European Technology and Engineering Management Summit (E-TEMS)},
	date-added = {2022-11-29 13:26:29 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1-8},
	publisher = {IEEE},
	title = {Yet another ecosystem literature review: 10+1 Research communities},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/E-TEMS.2017.8244229}}

@article{Manikas2016,
	abstract = {`Software ecosystems' is argued to first appear as a concept more than 10 years ago and software ecosystem research started to take off in 2010. We conduct a systematic literature study, based on the most extensive literature review in the field up to date, with two primarily aims: (a) to provide an updated overview of the field and (b) to document evolution in the field. In total, we analyze 231 papers from 2007 until 2014 and provide an overview of the research in software ecosystems. Our analysis reveals a field that is rapidly growing, both in volume and empirical focus, while becoming more mature. We identify signs of field maturity from the increase in: (i) the number of journal articles, (ii) the empirical models within the last two years, and (iii) the number of ecosystems studied. However, we note that the field is far from mature and identify a set of challenges that are preventing the field from evolving. We propose means for future research and the community to address them. Finally, our analysis shapes the view of the field having evolved outside the existing definitions of software ecosystems and thus propose the update of the definition of software ecosystems.},
	author = {Konstantinos Manikas},
	date-added = {2022-11-29 13:25:09 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Software ecosystems, Longitudinal literature study, Software ecosystem maturity},
	pages = {84-103},
	title = {Revisiting software ecosystems Research: A longitudinal literature study},
	volume = {117},
	year = {2016},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121216000406},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2016.02.003}}

@inproceedings{Teixeira2017,
	abstract = {Much research that analyzes the evolution of a software ecosystem is confined to its own boundaries. Evidence shows, however, that software ecosystems co-evolve independently with other software ecosystems. In other words, understanding the evolution of a software ecosystem requires an especially astute awareness of its competitive landscape and much consideration for other software ecosystems in related markets. A software ecosystem does not evolve in insulation but with other software ecosystems. In this research, we analyzed the OpenStack software ecosystem with a focal perspective that attempted to understand its evolution as a function of other software ecosystems. We attempted to understand and explain the evolution of OpenStack in relation to other software ecosystems in the cloud computing market. Our findings add to theoretical knowledge in software ecosystems by identifying and discussing seven different mechanisms by which software ecosystems mutually influence each other: sedimentation and embeddedness of business relationships, strategic management of the portfolio of business relationships, firms values and reputation as a partner, core technological architecture, design of the APIs, competitive replication of functionality and multi-homing. Research addressing the evolution of software ecosystem should, therefore, acknowledge that software ecosystems entangle with other software ecosystems in multiple ways, even with competing ones. A rigorous analysis of the evolution of a software ecosystem should not be solely confined to its inner boundaries.},
	author = {Teixeira, Jose and Hyrynsalmi, Sami},
	booktitle = {International Conference of Software Business ({ICSOB})},
	date-added = {2022-11-29 13:06:23 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-3-319-69191-6},
	pages = {115--130},
	publisher = {Springer},
	title = {How Do Software Ecosystems Co-Evolve? A View from {OpenStack} and Beyond},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-69191-6}}

@article{Hyrynsalmi2014,
	abstract = {Mobile application stores have revolutionised the dynamics of mobile ecosystems. Research on mobile application ecosystems has been significantly driven by data that is focused on the visualisation of an ecosystem's dynamics. This is a valuable step towards understanding the nature of the ecosystems, but it is limited in its explanatory power. Thus, a theory-driven approach is needed to understand the overall dynamics of such systems. This study applies a theoretical framework of value creation in e-business in the context of mobile application ecosystems, with a focus on application developers. A qualitative research strategy is employed in testing operationalisation in a sample of developers. The sample comprises 27 application developers from the three leading mobile application ecosystems. The results show that efficiency is the main source of value, products seldom create value through complementarities, and approaches towards lock-in and novelty seem to vary among application developers. The managerial and theoretical implications of such biased value creation in mobile ecosystems are considered.},
	author = {Sami Hyrynsalmi and Marko Sepp{\"a}nen and Arho Suominen},
	date-added = {2022-11-29 12:57:57 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Software ecosystem, Value creation, App economy},
	pages = {61-72},
	title = {Sources of value in application ecosystems},
	volume = {96},
	year = {2014},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121214001356},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2014.05.064}}

@article{AbouKhalil2021,
	abstract = {Large software projects follow a continuous development process with regular releases during which bugs are handled. In recent years, many software projects shifted to rapid releases that reduce time-to-market and claim a faster delivery of fixed issues, but also have a shorter period to address bugs. To better understand the impact of rapid releases on bug handling activity, we empirically analyze successive releases of the Eclipse Core projects, focusing on the bug handling rates and durations as well as the feature freeze period. We study the impact of Eclipse's transition from a yearly to quarterly release cycle. We confirm our findings through feedback received from five Eclipse Core maintainers. Among others, our results reveal that Eclipse's bug handling process is becoming more stable over time, with a decreasing number of reported bugs before releases, an increasing bug fixing rate and an increasingly balanced bug handling workload before and after releases. The transition to a quarterly release cycle continued to improve bug handling. In addition, more effort is spent on bug fixing during the feature freeze period, while the bug handling rates do not differ between both periods.},
	author = {Abou Khalil, Zeinab and Constantinou, Eleni and Mens, Tom and Duchien, Laurence},
	date-added = {2022-11-29 11:57:59 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Bug handling process, Rapid release cycle, Feature freeze, Continuous software development, Software maintenance, Empirical software engineering},
	title = {On the impact of release policies on bug handling activity: A case study of {Eclipse}},
	volume = {173},
	year = {2021},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121220302727},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2020.110882}}

@incollection{Claes2018,
	abstract = {Component-based software reuse has led to the emergence of numerous open-source software ecosystems. Such ecosystems offer the user a wide and diverse collection of software components that are interconnected by dependency relationships and maintained by large communities of developers. While developers can reuse the work of others by depending on their components, such dependencies give rise to many issues that impact maintenance effort if not properly addressed. This chapter discusses some commonly encountered dependency issues, and illustrates them through two case studies of popular open-source package-based software ecosystems: Debian and R. For both of them, we present the limitations of current tool support for dependency management, and we provide results of empirical analyses that highlight how such tool support could be improved.},
	author = {Claes, Ma\"elick and Decan, Alexandre and Mens, Tom},
	booktitle = {Software Technology: 10 Years of Innovation in IEEE Computer},
	chapter = {3},
	date-added = {2022-11-29 11:48:23 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781119174240},
	pages = {35-57},
	publisher = {Wiley},
	title = {Intercomponent Dependency Issues in Software Ecosystems},
	year = {2018},
	bdsk-url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1002/9781119174240.ch3},
	bdsk-url-2 = {https://doi.org/10.1002/9781119174240.ch3}}

@article{Vasilescu2014,
	abstract = {Most empirical studies of open source software repositories focus on the analysis of isolated projects, or restrict themselves to the study of the relationships between technical artifacts. In contrast, we have carried out a case study that focuses on the actual contributors to software ecosystems, being collections of software projects that are maintained by the same community. To this aim, we defined a new series of workload and involvement metrics, as well as a novel approach---{\$}{$\backslash$}widetilde{\{}{$\backslash$}mathbf{\{}T{\}}{\}}{\$}-graphs---for reporting the results of comparing multiple distributions. We used these techniques to statistically study how workload and involvement of ecosystem contributors varies across projects and across activity types, and we explored to which extent projects and contributors specialise in particular activity types. Using Gnome as a case study we observed that, next to coding, the activities of localization, development documentation and building are prevalent throughout the ecosystem. We also observed notable differences between frequent and occasional contributors in terms of the activity types they are involved in and the number of projects they contribute to. Occasional contributors and contributors that are involved in many different projects tend to be more involved in the localization activity, while frequent contributors tend to be more involved in the coding activity in a limited number of projects.},
	author = {Vasilescu, Bogdan and Serebrenik, Alexander and Goeminne, Mathieu and Mens, Tom},
	date-added = {2022-11-29 11:35:58 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {955--1008},
	title = {On the variation and specialisation of workload: A case study of the {Gnome} ecosystem community},
	volume = {19},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-013-9244-1}}

@incollection{Dhungana2013,
	author = {Dhungana, Deepak and Groher, Iris and Schludermann, Elisabeth and Biffl, Stefan},
	booktitle = {Software Ecosystems: Analyzing and Managing Business Networks in the Software Industry},
	chapter = {3},
	date-added = {2022-11-29 11:21:09 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {43--58},
	publisher = {Edward Elgar},
	title = {Guiding principles of natural ecosystems and their applicability to software ecosystems},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.4337/9781781955628.00010}}

@incollection{Goeminne2013,
	author = {Goeminne, Mathieu and Mens, Tom},
	booktitle = {Software Ecosystems: Analyzing and Managing Business Networks in the Software Industry},
	chapter = {12},
	date-added = {2022-11-29 11:16:05 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Jansen, Slinger and Brinkkemper, Sjaak and Cusumano, Michael A.},
	pages = {247-275},
	publisher = {Edward Elgar},
	title = {Analyzing ecosystems for open source software developer communities},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.4337/9781781955628.00021}}

@article{Willis1997,
	author = {Willis, A.J.},
	date-added = {2022-11-29 11:00:35 +0100},
	date-modified = {2022-11-29 11:01:19 +0100},
	journal = {Functional Ecology},
	pages = {268-271},
	title = {The ecosystem: an evolving concept viewed historically},
	volume = {11},
	year = {1997}}

@article{Mens2015,
	author = {Mens, Tom},
	date-added = {2022-11-29 10:51:37 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {NATO Science for Peace and Security Series - D: Information and Communication Security},
	pages = {170-192},
	publisher = {IOS Press},
	title = {Evolving Software Ecosystems: A Historical and Ecological Perspective},
	volume = {Volume 40: Dependable Software Systems Engineering},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.3233/978-1-61499-495-4-170}}

@article{Hanssen2012,
	abstract = {Software ecosystems is an emerging trend within the software industry, implying a shift from closed organizations and processes towards open structures, where actors external to the software development organization are becoming increasingly involved in development. This forms an ecosystem of organizations that are related through the shared interest in a software product, leading to new opportunities and new challenges to the industry and its organizational environment. To understand why and how this change occurs, we have followed the development of a software product line organization for a period of approximately five years. We have studied their change from a waterfall-like approach, via agile software product line engineering, towards an emerging software ecosystem. We discuss implications for practice, and propose a nascent theory on software ecosystems. We conclude that the observed change has led to an increase in collaboration across (previously closed) organizational borders, and to the development of a shared value consisting of two components: the technology (the product line, as an extensible platform), and the business domain it supports. Opening up both the technical interface of the product and the organizational interfaces are key enablers of such a change.},
	author = {Hanssen, Geir K.},
	date-added = {2022-11-29 10:46:15 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Software ecosystems, Software product line engineering, Agile software development, Longitudinal case study},
	number = {7},
	pages = {1455-1466},
	title = {A longitudinal case study of an emerging software ecosystem: Implications for practice and theory},
	volume = {85},
	year = {2012},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121211000963},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2011.04.020}}

@article{lauinger2018thou,
	author = {Lauinger, Tobias and Chaabane, Abdelberi and Wilson, Christo B},
	date-added = {2022-11-28 18:31:59 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Communications of the ACM},
	number = {6},
	pages = {41--47},
	publisher = {ACM},
	title = {Thou shalt not depend on me},
	volume = {61},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3190562}}

@article{bogart2021and,
	author = {Bogart, Chris and K{\"a}stner, Christian and Herbsleb, James and Thung, Ferdian},
	date-added = {2022-11-28 18:31:18 +0100},
	date-modified = {2023-03-07 11:12:01 +0100},
	journal = {Transactions on Software Engineering and Methodology},
	number = {4},
	publisher = {ACM},
	title = {When and how to make breaking changes: Policies and practices in 18 open source software ecosystems},
	volume = {30},
	year = {2021}}

@inproceedings{abdalkareem2017developers,
	author = {Abdalkareem, Rabe and Nourry, Olivier and Wehaibi, Sultan and Mujahid, Suhaib and Shihab, Emad},
	booktitle = {Joint Meeting on Foundations of Software Engineering ({FSE})},
	date-added = {2022-11-28 18:28:47 +0100},
	date-modified = {2022-12-06 10:47:59 +0100},
	pages = {385--395},
	title = {Why do developers use trivial packages? {An} empirical case study on npm},
	year = {2017}}

@inproceedings{Businge2013CSMR,
	author = {Businge, John and Serebrenik, Alexander and van den Brand, Mark G. J.},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-added = {2022-11-28 16:58:56 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {37--46},
	publisher = {IEEE Computer Society},
	title = {Analyzing the {E}clipse {API} usage: Putting the developer in the loop},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/CSMR.2013.14}}

@inproceedings{Businge2012Survival,
	author = {John Businge and Alexander Serebrenik and Mark G. J. van den Brand},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2022-11-28 16:58:28 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {368--377},
	title = {Survival of {E}clipse third-party plug-ins},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2012.6405295}}

@inproceedings{MensRamil2008-ICSM,
	author = {Mens, Tom and Fern\'andez-Ramil, Juan and Degrandsart, Sylvain},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2022-11-28 16:58:18 +0100},
	date-modified = {2022-12-30 17:11:52 +0100},
	publisher = {IEEE Computer Society},
	title = {The Evolution of {Eclipse}},
	year = {2008}}

@inproceedings{Bavota2013-ICSM,
	author = {Bavota, Gabriele and Canfora, Gerardo and {Di Penta}, Massimiliano and Oliveto, Rocco and Panichella, Sebastiano},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2022-11-28 16:55:04 +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {280-289},
	title = {The Evolution of Project Inter-Dependencies in a Software Ecosystem: the Case of {Apache}},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2013.39}}

@inproceedings{icse12-grapacc,
	author = {Nguyen, Anh Tuan and Nguyen, Hoan Anh and Nguyen, Tung Thanh and Nguyen, Tien N.},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-19 11:07:56 +0200},
	date-modified = {2022-12-06 12:04:52 +0100},
	isbn = {9781467310673},
	numpages = {4},
	pages = {1407--1410},
	publisher = {IEEE},
	title = {{GraPacc}: A Graph-Based Pattern-Oriented, Context-Sensitive Code Completion Tool},
	year = {2012}}

@inproceedings{fse09,
	author = {Nguyen, Tung Thanh and Nguyen, Hoan Anh and Pham, Nam H. and Al-Kofahi, Jafar M. and Nguyen, Tien N.},
	booktitle = {Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-19 10:28:45 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781605580012},
	pages = {383--392},
	publisher = {ACM},
	title = {Graph-Based Mining of Multiple Object Usage Patterns},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1145/1595696.1595767}}

@inproceedings{ppa08,
	author = {Dagenais, Barth\'{e}l\'{e}my and Hendren, Laurie},
	booktitle = {Conference on Object-Oriented Programming Systems Languages and Applications ({OOPSLA})},
	date-added = {2022-10-19 10:27:12 +0200},
	date-modified = {2023-02-21 18:17:13 +0100},
	isbn = {9781605582153},
	pages = {313--328},
	publisher = {ACM},
	title = {Enabling Static Analysis for Partial {Java} Programs},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1145/1449764.1449790}}

@article{canolabel,
	author = {R. Read and D. Corneil},
	date-added = {2022-10-19 10:26:09 +0200},
	date-modified = {2022-10-19 10:26:09 +0200},
	journal = {Journal of Graph Theory},
	pages = {339--363},
	title = {The graph isomorph disease},
	volume = {1},
	year = {1977}}

@inproceedings{zeller07,
	author = {Wasylkowski. Andrzej and Zeller, Andreas and Lindig, Christian},
	booktitle = {Joint meeting of the European software engineering conference and the ACM SIGSOFT Symposium on The foundations of software engineering ({ESEC/FSE})},
	date-added = {2022-10-19 10:25:40 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {35--44},
	publisher = {ACM},
	title = {Detecting object usage anomalies},
	year = {2007},
	bdsk-url-1 = {https://doi.org/10.1145/1287624.1287632}}

@inproceedings{mapo-fse07,
	author = {Acharya,, Mithun and Xie,, Tao and Pei,, Jian and Xu,, Jun},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-19 10:25:29 +0200},
	date-modified = {2023-02-28 10:58:40 +0100},
	pages = {25--34},
	publisher = {ACM},
	title = {Mining {API} patterns as partial orders from source code: from usage scenarios to specifications},
	year = {2007}}

@article{williams-tse05,
	author = {Williams,, Chadd C. and Hollingsworth,, Jeffrey K.},
	date-added = {2022-10-19 10:25:12 +0200},
	date-modified = {2023-02-21 17:17:32 +0100},
	journal = {Transactions on Software Engineering},
	number = {6},
	pages = {466--480},
	publisher = {IEEE},
	title = {Automatic Mining of Source Code Repositories to Improve Bug Finding Techniques},
	volume = {31},
	year = {2005}}

@inproceedings{weimer-tacas05,
	author = {Weimer, Westley and Necula, George C.},
	booktitle = {International Conference on Tools and Algorithms for the Construction and Analysis of Systems ({TACAS})},
	date-added = {2022-10-19 10:25:00 +0200},
	date-modified = {2022-12-06 12:14:32 +0100},
	isbn = {3540253335},
	pages = {461--476},
	publisher = {Springer},
	title = {Mining Temporal Specifications for Error Detection},
	year = {2005}}

@inproceedings{perracotta-icse16,
	author = {Yang, Jinlin and Evans, David and Bhardwaj, Deepali and Bhat, Thirumalesh and Das, Manuvir},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-19 10:24:51 +0200},
	date-modified = {2022-11-29 15:37:27 +0100},
	isbn = {1595933751},
	pages = {282--291},
	publisher = {ACM},
	title = {Perracotta: Mining Temporal {API} Rules from Imperfect Traces},
	year = {2006}}

@inproceedings{engler-sosp01,
	author = {Engler,, Dawson and Chen,, David Yu and Hallem,, Seth and Chou,, Andy and Chelf,, Benjamin},
	booktitle = {Symposium on Operating Systems Principles ({SOSP})},
	date-added = {2022-10-19 10:24:42 +0200},
	date-modified = {2022-12-06 11:44:07 +0100},
	pages = {57--72},
	publisher = {ACM},
	title = {Bugs as deviant behavior: a general approach to inferring errors in systems code},
	year = {2001}}

@inproceedings{prminer-fse05,
	author = {Li,, Zhenmin and Zhou,, Yuanyuan},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-19 10:24:19 +0200},
	date-modified = {2022-11-29 15:15:28 +0100},
	isbn = {1-59593-014-0},
	pages = {306--315},
	publisher = {ACM},
	title = {{PR-Miner}: Automatically extracting implicit programming rules and detecting violations in large software code},
	year = {2005}}

@inproceedings{codeweb-icse00,
	author = {Michail, Amir},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-19 10:24:07 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1581132069},
	pages = {167--176},
	publisher = {ACM},
	title = {Data Mining Library Reuse Patterns Using Generalized Association Rules},
	year = {2000},
	bdsk-url-1 = {https://doi.org/10.1145/337180.337200}}

@book{Popp2010,
	author = {Karl M. Popp and Ralf Meyer},
	date-added = {2022-10-16 15:13:06 +0200},
	date-modified = {2022-10-16 15:13:18 +0200},
	isbn = {978-3-8423-0051-4},
	publisher = {Norderstedt, Germany: BOD},
	title = {Profit from Software Ecosystems: Business Models, Ecosystems and Partnerships in the Software Industry},
	year = {2010}}

@book{Jansen2013book,
	author = {Jansen, Slinger and Brinkkemper, Sjaak and Cusumano, Michael A.},
	date-added = {2022-10-16 15:11:37 +0200},
	date-modified = {2022-10-16 15:17:10 +0200},
	isbn = {978-1781955628},
	publisher = {Edward Elgar},
	title = {Software Ecosystems: Analyzing and Managing Business Networks in the Software Industry},
	year = {2013}}

@article{Herbsleb2001,
	author = {Herbsleb, James D. and Moitra, D.},
	date-added = {2022-10-16 14:38:57 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Software},
	month = {March-April},
	number = {2},
	pages = {16-20},
	title = {Global software development},
	volume = {18},
	year = {2001},
	bdsk-url-1 = {https://doi.org/10.1109/52.914732}}

@article{Akbarinasaji:2018:PBT:3174380.3174639,
	acmid = {3174639},
	author = {Akbarinasaji, Shirin and Caglayan, Bora and Bener, Ayse},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-12 16:02:16 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Bug fixing time, Deferred bugs, Effort estimation, Replication study, Software maintainability},
	month = feb,
	number = {C},
	numpages = {14},
	pages = {173--186},
	publisher = {Elsevier},
	title = {Predicting Bug-fixing Time},
	volume = {136},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2017.02.021}}

@article{AndroEvolve,
	author = {Haryono, Stefanus A. and Thung, Ferdian and Lo, David and Jiang, Lingxiao and Lawall, Julia and Kang, Hong Jin and Serrano, Lucas and Muller, Gilles},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {73},
	title = {{AndroEvolve}: automated Android {API} update with data flow analysis and variable denormalization},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10096-0}}

@article{bavota2014impact,
	author = {Bavota, Gabriele and Linares-Vasquez, Mario and Bernal-Cardenas, Carlos Eduardo and Di Penta, Massimiliano and Oliveto, Rocco and Poshyvanyk, Denys},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-07 11:21:10 +0100},
	journal = {Transactions on Software Engineering},
	number = {4},
	pages = {384--407},
	publisher = {IEEE},
	title = {The impact of {API} change-and fault-proneness on the user ratings of {Android} apps},
	volume = {41},
	year = {2014}}

@article{busereadability,
	author = {Buse, Raymond and Weimer, Westley},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:26:38 +0100},
	journal = {Transactions on Software Engineering},
	month = {07},
	pages = {546-558},
	publisher = {IEEE},
	title = {Learning a Metric for Code Readability},
	volume = {36},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2009.70}}

@article{Chen:2017:CLP:3042021.3042046,
	acmid = {3042046},
	author = {Chen, Boyuan and (Jack) Jiang, Zhen Ming},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1382-3256},
	journal = {Empirical Software Engineering},
	keywords = {Empirical study, Log messages, Logging code, MSR, Mining software engineering data, Replication},
	month = feb,
	number = {1},
	pages = {330--374},
	publisher = {Kluwer Academic Publishers},
	title = {Characterizing Logging Practices in {Java}-based Open Source Software Projects -- a Replication Study in {Apache} Software Foundation},
	volume = {22},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-016-9429-5}}

@article{dagenais2011recommending,
	author = {Dagenais, Barth{\'e}l{\'e}my and Robillard, Martin P},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-07 11:10:48 +0100},
	journal = {Transactions on Software Engineering and Methodology},
	number = {4},
	pages = {19},
	publisher = {ACM},
	title = {Recommending adaptive changes for framework evolution},
	volume = {20},
	year = {2011}}

@article{Dinh-Trong:2005:FPR:1079843.1080069,
	author = {Dinh-Trong, Trung T. and Bieman, James M.},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:22:13 +0100},
	issn = {0098-5589},
	journal = {Transactions on Software Engineering},
	keywords = {FreeBSD., Index Terms- Software engineering process, code ownership, defect density, maintainability, maintenance process, measurement, open source software, process measurement, qualitative process analysis, reliability, testing and debugging},
	month = jun,
	number = {6},
	pages = {481--494},
	publisher = {IEEE},
	title = {The FreeBSD Project: A Replication Case Study of Open Source Development},
	volume = {31},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2005.73}}

@article{fragmentationsecurity,
	author = {Zhou, Xiaoyong and Lee, Yeonjoon and Zhang, Nan and Naveed, Muhammad and Wang, Xiaofeng},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Symposium on Security and Privacy},
	month = {11},
	pages = {409-423},
	title = {The Peril of Fragmentation: Security Hazards in {Android} Device Driver Customizations},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/SP.2014.33}}

@article{lamothe2018a4,
	author = {Lamothe, Maxime and Shang, Weiyi and Chen, Tse-Hsun},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-01-04 11:31:08 +0100},
	journal = {arXiv preprint arXiv:1812.04894},
	title = {{A4}: Automatically Assisting {Android API} Migrations Using Code Examples},
	year = {2018}}

@article{li2019watch,
	author = {Li, Daoyuan and Li, Li and Kim, Dongsun and Bissyand{\'e}, Tegawend{\'e} F and Lo, David and Le Traon, Yves},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	journal = {Journal of Software: Evolution and Process},
	number = {12},
	pages = {e2181},
	publisher = {Wiley Online Library},
	title = {Watch out for this commit! a study of influential software changes},
	volume = {31},
	year = {2019}}

@article{muller2006semantic,
	author = {Muller, Gilles and Padioleau, Yoann and Lawall, Julia L and Hansen, Ren{\'e} Rydhof},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	journal = {ACM SIGOPS Operating Systems Review},
	number = {3},
	pages = {90--92},
	publisher = {ACM},
	title = {Semantic patches considered helpful},
	volume = {40},
	year = {2006}}

@article{padioleau2007smpl,
	author = {Padioleau, Yoann and Lawall, Julia L and Muller, Gilles},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-02 11:06:29 +0100},
	journal = {Electronic Notes in Theoretical Computer Science},
	pages = {47--62},
	publisher = {Elsevier},
	title = {{SmPL}: A domain-specific language for specifying collateral evolutions in {Linux} device drivers},
	volume = {166},
	year = {2007}}

@article{readabilitymodel,
	author = {Scalabrino, Simone and Linares‐V{\'a}squez, Mario and Oliveto, Rocco and Poshyvanyk, Denys},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of Software: Evolution and Process},
	month = {06},
	title = {A comprehensive model for code readability},
	volume = {30},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1002/smr.1958}}

@inproceedings{Rolim:arxiv,
	abstract = {Code analyzers such as Error Prone and FindBugs detect code patterns symptomatic of bugs, performance issues, or bad style. These tools express patterns as quick fixes that detect and rewrite unwanted code. However, it is difficult to come up with new quick fixes and decide which ones are useful and frequently appear in real code. We propose to rely on the collective wisdom of programmers and learn quick fixes from revision histories in software repositories. We present Revisar, a tool for discovering common Java edit patterns in code repositories. Given code repositories and their revision histories, Revisar (i) identifies code edits from revisions and (ii) clusters edits into sets that can be described using an edit pattern. The designers of code analyzers can then inspect the patterns and add the corresponding quick fixes to their tools. We ran Revisar on nine popular GitHub projects, and it discovered 89 useful edit patterns that appeared in 3 or more projects. Moreover, 64% of the discovered patterns did not appear in existing tools. We then conducted a survey with 164 programmers from 124 projects and found that programmers significantly preferred eight out of the nine of the discovered patterns. Finally, we submitted 16 pull requests applying our patterns to 9 projects and, at the time of the writing, programmers accepted 7 (63.6%) of them. The results of this work aid toolsmiths in discovering quick fixes and making informed decisions about which quick fixes to prioritize based on patterns programmers actually apply in practice.},
	author = {Sousa, Reudismam and Soares, Gustavo and Gheyi, Rohit and Barik, Titus and D'Antoni, Loris},
	booktitle = {Brazilian Symposium on Software Engineering ({SBES})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {74--83},
	publisher = {ACM},
	title = {Learning Quick Fixes from Code Repositories},
	year = {2021},
	bdsk-url-1 = {http://arxiv.org/abs/1803.03806},
	bdsk-url-2 = {https://doi.org/10.1145/3474624.3474650}}

@article{sawant2018reaction,
	author = {Sawant, Anand Ashok and Robbes, Romain and Bacchelli, Alberto},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	journal = {EMSE},
	number = {4},
	pages = {2158--2197},
	publisher = {Springer},
	title = {On the reaction to deprecation of clients of 4+ 1 popular {Java APIs} and the {JDK}},
	volume = {23},
	year = {2018}}

@article{understandingfic,
	author = {Wei, Lili and Liu, Yepang and Cheung, S.C. and Huang, Huaxun and Lu, Xuan and Liu, Xuanzhe},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:23:31 +0100},
	journal = {Transactions on Software Engineering},
	publisher = {IEEE},
	title = {Understanding and Detecting Fragmentation-Induced Compatibility Issues for {Android} Apps},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2018.2876439}}

@article{xing2007api,
	author = {Xing, Zhenchang and Stroulia, Eleni},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:07:44 +0100},
	journal = {Transactions on Software Engineering},
	number = {12},
	pages = {818--836},
	publisher = {IEEE},
	title = {{API}-evolution support with Diff-CatchUp},
	volume = {33},
	year = {2007}}

@book{dragon,
	address = {Reading, Mass.},
	author = {Alfred V. Aho and Sethi Ravi and Jeffrey D. Ullman},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	publisher = {Addison-Wesley Pub. Co.},
	title = {Compilers, principles, techniques, and tools},
	year = 1986}

@book{Jones:PE,
	author = {N.D. Jones and C.K. Gomard and and P. Sestoft},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	publisher = {Prentice Hall International},
	title = {Partial Evaluation and Automatic Program Generation},
	year = 1993}

@book{spencer09,
	author = {D. Spencer},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	publisher = {Rosenfeld Media},
	title = {Card Sorting: Designing Usable Categories},
	year = {2009}}

@incollection{kim2019software,
	author = {Kim, Miryung and Meng, Na and Zhang, Tianyi},
	booktitle = {Handbook of Software Engineering},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	pages = {223--284},
	publisher = {Springer},
	title = {Software Evolution},
	year = {2019}}

@inproceedings{10.1007/978-3-540-87875-9_13,
	abstract = {Software changes. During their life cycle, software systems experience a wide spectrum of changes, from minor modifications to major architectural shifts. Small-scale changes are usually performed with text editing and refactorings, while large-scale transformations require dedicated program transformation languages. For medium-scale transformations, both approaches have disadvantages. Manual modifications may require a myriad of similar yet not identical edits, leading to errors and omissions, while program transformation languages have a steep learning curve, and thus only pay off for large-scale transformations.},
	author = {Robbes, Romain and Lanza, Michele},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-07 11:15:24 +0100},
	isbn = {978-3-540-87875-9},
	pages = {174--188},
	publisher = {Springer},
	title = {Example-Based Program Transformation},
	year = {2008}}

@inproceedings{9054800,
	author = {Zhang, Zhaoxu and Zhu, Hengcheng and Wen, Ming and Tao, Yida and Liu, Yepang and Xiong, Yingfei},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {81-92},
	title = {How Do {Python} Framework {API}s Evolve? An Exploratory Study},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/SANER48275.2020.9054800}}

@inproceedings{9402075,
	author = {Zhang, Zejun and Yang, Yanming and Xia, Xin and Lo, David and Ren, Xiaoxue and Grundy, John},
	booktitle = {International Conference on Software Engineering: Software Engineering in Practice ({ICSE-SEIP})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 10:54:53 +0100},
	doi = {10.1109/ICSE-SEIP52600.2021.00033},
	pages = {238-247},
	title = {Unveiling the Mystery of {API} Evolution in Deep Learning Frameworks: A Case Study of {Tensorflow 2}},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-SEIP52600.2021.00033}}

@inproceedings{9609172,
	author = {Haryono, Stefanus A. and Thung, Ferdian and Lo, David and Lawall, Julia and Jiang, Lingxiao},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:09:35 +0100},
	pages = {137-147},
	title = {Characterization and Automatic Updates of Deprecated Machine-Learning API Usages},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME52107.2021.00019}}

@inproceedings{AllamanisBBS15,
	author = {Miltiadis Allamanis and Earl T. Barr and Christian Bird and Charles A. Sutton},
	booktitle = {Joint meeting on Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:56:59 +0100},
	pages = {38--49},
	title = {Suggesting accurate method and class names},
	year = {2015}}

@inproceedings{Andersen:2012:SPI:2351676.2351753,
	acmid = {2351753},
	author = {Andersen, Jesper and Nguyen, Anh Cuong and Lo, David and Lawall, Julia L. and Khoo, Siau-Cheng},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4503-1204-2},
	keywords = {Software evolution, collateral evolution, semantic patch},
	pages = {382--385},
	publisher = {ACM},
	title = {Semantic Patch Inference},
	year = {2012},
	bdsk-url-1 = {http://doi.acm.org/10.1145/2351676.2351753},
	bdsk-url-2 = {https://doi.org/10.1145/2351676.2351753}}

@inproceedings{api26kernel,
	author = {LWN},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:06:57 +0100},
	title = {{API} changes in the 2.6 kernel series},
	year = {2005},
	bdsk-url-1 = {https://lwn.net/Articles/2.6-kernel-api}}

@inproceedings{asyrofi2020ausearch,
	author = {Asyrofi, Muhammad Hilmi and Thung, Ferdian and Lo, David and Jiang, Lingxiao},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-12-06 11:19:23 +0100},
	publisher = {IEEE},
	title = {{AUSearch}: Accurate {API} Usage Search in {GitHub} Repositories with Type Resolution},
	year = {2020}}

@inproceedings{Bavishi:2019:PAD:3338906.3338952,
	acmid = {3338952},
	author = {Bavishi, Rohan and Yoshida, Hiroaki and Prasad, Mukul R.},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:02:19 +0100},
	isbn = {978-1-4503-5572-8},
	keywords = {program repair, program synthesis, programming-by-example, static analysis},
	pages = {613--624},
	publisher = {ACM},
	title = {Phoenix: Automated Data-driven Synthesis of Repairs for Static Analysis Violations},
	year = {2019},
	bdsk-url-1 = {http://doi.acm.org/10.1145/3338906.3338952},
	bdsk-url-2 = {https://doi.org/10.1145/3338906.3338952}}

@inproceedings{Bird:2011:DTM:2025113.2025119,
	author = {Bird, Christian and Nagappan, Nachiappan and Murphy, Brendan and Gall, Harald and Devanbu, Premkumar},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-12 16:03:59 +0100},
	isbn = {978-1-4503-0443-6},
	keywords = {emprical software engineering, expertise, ownership, quality},
	pages = {4--14},
	publisher = {ACM},
	title = {Don'T Touch My Code!: Examining the Effects of Ownership on Software Quality},
	year = {2011},
	bdsk-url-1 = {http://doi.acm.org/10.1145/2025113.2025119},
	bdsk-url-2 = {https://doi.org/10.1145/2025113.2025119}}

@inproceedings{brito2016developers,
	author = {Brito, Gleison and Hora, Andre and Valente, Marco Tulio and Robbes, Romain},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-12-06 11:30:33 +0100},
	organization = {IEEE},
	pages = {360--369},
	title = {Do developers deprecate {APIs} with replacement messages? A large-scale analysis on {Java} systems},
	volume = {1},
	year = {2016}}

@inproceedings{brunel2009foundation,
	author = {Brunel, Julien and Doligez, Damien and Hansen, Ren{\'e} Rydhof and Lawall, Julia L and Muller, Gilles},
	booktitle = {Principles of Programming Languages ({POPL})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-12 15:15:27 +0100},
	organization = {ACM},
	pages = {114--126},
	title = {A foundation for flow-based program matching: using temporal logic and model checking},
	year = {2009}}

@inproceedings{Buse:2008:MSR:1390630.1390647,
	author = {Buse, Raymond P.L. and Weimer, Westley R.},
	booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:42:06 +0100},
	isbn = {978-1-60558-050-0},
	keywords = {FindBugs, code metrics, machine learning, program understanding, software maintenance, software readability},
	pages = {121--130},
	publisher = {ACM},
	title = {A Metric for Software Readability},
	year = {2008},
	bdsk-url-1 = {http://doi.acm.org/10.1145/1390630.1390647},
	bdsk-url-2 = {https://doi.org/10.1145/1390630.1390647}}

@inproceedings{coccievolve,
	author = {Haryono, Stefanus A. and Thung, Ferdian and Kang, Hong J. and Serrano, Lucas and Muller, Gilles and Lawall, Julia and Lo, David and Jiang, Lingxiao},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:08:33 +0100},
	publisher = {IEEE},
	title = {Automatic {Android} Deprecated-{API} Usage Update by Learning from Single Updated Example},
	year = {2020}}

@inproceedings{CodeBERT,
	abstract = {We present CodeBERT, a bimodal pre-trained model for programming language (PL) and natural language (NL). CodeBERT learns general-purpose representations that support downstream NL-PL applications such as natural language code search, code documentation generation, etc. We develop CodeBERT with Transformer-based neural architecture, and train it with a hybrid objective function that incorporates the pre-training task of replaced token detection, which is to detect plausible alternatives sampled from generators. This enables us to utilize both {``}bimodal{''} data of NL-PL pairs and {``}unimodal data, where the former provides input tokens for model training while the latter helps to learn better generators. We evaluate CodeBERT on two NL-PL applications by fine-tuning model parameters. Results show that CodeBERT achieves state-of-the-art performance on both natural language code search and code documentation generation. Furthermore, to investigate what type of knowledge is learned in CodeBERT, we construct a dataset for NL-PL probing, and evaluate in a zero-shot setting where parameters of pre-trained models are fixed. Results show that CodeBERT performs better than previous pre-trained models on NLPL probing.},
	author = {Feng, Zhangyin and Guo, Daya and Tang, Duyu and Duan, Nan and Feng, Xiaocheng and Gong, Ming and Shou, Linjun and Qin, Bing and Liu, Ting and Jiang, Daxin and Zhou, Ming},
	booktitle = {Findings of the Association for Computational Linguistics: EMNLP},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-12-06 11:43:40 +0100},
	month = nov,
	pages = {1536--1547},
	publisher = {Association for Computational Linguistics},
	title = {{CodeBERT}: A Pre-Trained Model for Programming and Natural Languages},
	year = {2020}}

@inproceedings{Cossette2012SeekingTG,
	author = {Bradley Cossette and Robert J. Walker},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:01:53 +0100},
	title = {Seeking the ground truth: a retroactive study on the evolution and migration of software libraries},
	year = {2012}}

@inproceedings{d2016qlose,
	author = {D'Antoni, Loris and Samanta, Roopsha and Singh, Rishabh},
	booktitle = {CAV},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {Springer},
	pages = {383--401},
	title = {Qlose: Program repair with quantitative objectives},
	year = {2016}}

@inproceedings{dabek2002event,
	author = {Dabek, Frank and Zeldovich, Nickolai and Kaashoek, Frans and Mazi{\`e}res, David and Morris, Robert},
	booktitle = {ACM SIGOPS European workshop},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:06:31 +0100},
	organization = {ACM},
	pages = {186--189},
	title = {Event-driven programming for robust software},
	year = {2002}}

@inproceedings{dagenais2009semdiff,
	author = {Dagenais, Barthelemy and Robillard, Martin},
	booktitle = {ICSE},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 10:56:45 +0100},
	organization = {IEEE},
	pages = {599--602},
	title = {{SemDiff}: Analysis and recommendation support for {API} evolution},
	year = {2009}}

@inproceedings{dataflowaccuratevalue,
	author = {R. {Thomas} and M. {Franklin}},
	booktitle = {International Conference on Parallel Architectures and Compilation Techniques},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:01:11 +0100},
	pages = {107-117},
	title = {Using dataflow based context for accurate value prediction},
	year = {2001}}

@inproceedings{dataflowbayesian,
	author = {Claret, Guillaume and Rajamani, Sriram and Nori, Aditya and Gordon, Andrew and Borgstr{\"o}m, Johannes},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = {08},
	pages = {92-102},
	title = {Bayesian inference using data flow analysis},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1145/2491411.2491423}}

@inproceedings{dataflowstaticprofiling,
	author = {Boogerd, Cathal and Moonen, Leon},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:01:35 +0100},
	month = {09},
	pages = {79-88},
	title = {On the Use of Data Flow Analysis in Static Profiling},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1109/SCAM.2008.18}}

@inproceedings{ELEGANT,
	author = {Li, Cong and Xu, Chang and Wei, Lili and Wang, Jue and Ma, Jun and Lu, Jian},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = {12},
	pages = {278-287},
	title = {ELEGANT: Towards Effective Location of Fragmentation-Induced Compatibility Issues for Android Apps},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/APSEC.2018.00042}}

@inproceedings{fazzini2019automated,
	author = {Fazzini, Mattia and Xin, Qi and Orso, Alessandro},
	booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:08:17 +0100},
	organization = {ACM},
	pages = {204--215},
	title = {Automated {API}-usage update for {Android} apps},
	year = {2019}}

@inproceedings{GraphCodeBERT,
	author = {Daya Guo and Shuo Ren and Shuai Lu and Zhangyin Feng and Duyu Tang and Shujie Liu and Long Zhou and Nan Duan and Alexey Svyatkovskiy and Shengyu Fu andz Michele Tufano and Shao Kun Deng and Colin B. Clement and Dawn Drain and Neel Sundaresan and Jian Yin and Daxin Jiang and Ming Zhou},
	booktitle = {International Conference on Learning Representations ({ICLR})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-11-29 15:12:16 +0100},
	title = {{GraphCodeBERT}: Pre-training Code Representations with Data Flow},
	year = {2021}}

@inproceedings{Greiler:2015:COS:2820518.2820522,
	acmid = {2820522},
	author = {Greiler, Michaela and Herzig, Kim and Czerwonka, Jacek},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-0-7695-5594-2},
	keywords = {code ownership, empirical software engineering, software quality},
	numpages = {11},
	pages = {2--12},
	publisher = {IEEE},
	title = {Code Ownership and Software Quality: A Replication Study},
	year = {2015},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=2820518.2820522}}

@inproceedings{han2012understanding,
	author = {Han, Dan and Zhang, Chenlei and Fan, Xiaochao and Hindle, Abram and Wong, Kenny and Stroulia, Eleni},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-11-29 15:21:08 +0100},
	organization = {IEEE},
	pages = {83--92},
	title = {Understanding {Android} fragmentation with topic analysis of vendor-specific bugs},
	year = {2012}}

@inproceedings{he2018understanding,
	author = {He, Dongjie and Li, Lian and Wang, Lei and Zheng, Hengjie and Li, Guangwei and Xue, Jingling},
	booktitle = {Automated Software Engineering Conference ({ASE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-11-28 17:08:54 +0100},
	organization = {ACM},
	pages = {167--177},
	title = {Understanding and detecting evolution-induced compatibility issues in {Android} apps},
	year = {2018}}

@inproceedings{henkel2005catchup,
	author = {Henkel, Johannes and Diwan, Amer},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:09:14 +0100},
	organization = {IEEE},
	pages = {274--283},
	title = {{CatchUp!} Capturing and replaying refactorings to support {API} evolution},
	year = {2005}}

@inproceedings{HiTune,
	author = {Dai, Jinquan and Huang, Jie and Huang, Shengsheng and Huang, Bo and Liu, Yan},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-12-06 11:53:22 +0100},
	month = {06},
	pages = {7-7},
	title = {{HiTune}: dataflow-based performance analysis for big data cloud},
	year = {2011}}

@inproceedings{hora2015apiwave,
	author = {Hora, Andre and Valente, Marco Tulio},
	booktitle = {International Conference on Software Maintenance and Evolution (ICSME)},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {IEEE},
	pages = {321--323},
	title = {apiwave: Keeping track of {API} popularity and migration},
	year = {2015}}

@inproceedings{horadevelopersapievolution,
	author = {A. {Hora} and R. {Robbes} and N. {Anquetil} and A. {Etien} and S. {Ducasse} and Valente, Marco Tulio},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-12 16:41:38 +0200},
	pages = {251-260},
	publisher = {IEEE},
	title = {How do developers react to {API} evolution? The {Pharo} ecosystem case},
	year = {2015}}

@inproceedings{hou2011exploring,
	author = {Hou, Daqing and Yao, Xiaojia},
	booktitle = {Working Conference on Reverse Engineering (WCRE)},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {IEEE},
	pages = {131--140},
	title = {Exploring the intent behind {API} evolution: A case study},
	year = {2011}}

@inproceedings{howdopython,
	author = {Orr{\`u}, Matteo and Tempero, Ewan and Marchesi, Michele and Tonelli, Roberto},
	booktitle = {Asia-Pacific Software Engineering Conference ({APSEC})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = dec,
	title = {How Do {Python} Programs Use Inheritance? A Replication Study},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/APSEC.2015.51}}

@inproceedings{huang2018understanding,
	author = {Huang, Huaxun and Wei, Lili and Liu, Yepang and Cheung, Shing-Chi},
	booktitle = {Automated Software Engineering Conference ({ASE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-11-28 17:08:29 +0100},
	organization = {ACM},
	pages = {532--542},
	title = {Understanding and detecting callback compatibility issues for {Android} applications},
	year = {2018}}

@inproceedings{jiang2019inferring,
	author = {Jiang, Jiajun and Ren, Luyao and Xiong, Yingfei and Zhang, Lingming},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-11-29 15:18:58 +0100},
	organization = {IEEE},
	pages = {255--266},
	title = {Inferring program transformations from singular examples via big code},
	year = {2019}}

@inproceedings{kang2019automating,
	author = {Kang, Hong Jin and Thung, Ferdian and Lawall, Julia and Muller, Gilles and Jiang, Lingxiao and Lo, David},
	booktitle = {European Conference on Object-Oriented Programming (ECOOP)},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	title = {Automating Program Transformation for {Java} Using Semantic Patches},
	year = {2019}}

@inproceedings{kang2019semantic,
	author = {Kang, Hong Jin and Thung, Ferdian and Lawall, Julia and Muller, Gilles and Jiang, Lingxiao and Lo, David},
	booktitle = {European Conference on Object-Oriented Programming ({ECOOP})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-07 11:19:41 +0100},
	organization = {Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik},
	title = {Semantic Patches for Java Program Transformation (Experience Report)},
	year = {2019}}

@inproceedings{kapur2010refactoring,
	author = {Kapur, Puneet and Cossette, Brad and Walker, Robert J.},
	booktitle = {Conference on Object-Oriented Programming Systems, Languages and Applications ({OOPSLA})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:17:36 +0100},
	numpages = {13},
	pages = {726--738},
	publisher = {ACM},
	title = {Refactoring References for Library Migration},
	year = {2010}}

@inproceedings{LASE,
	author = {J. {Jacobellis} and N. {Meng} and M. {Kim}},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-07 11:16:47 +0100},
	pages = {1319-1322},
	title = {{LASE}: An example-based program transformation tool for locating and applying systematic edits},
	year = {2013}}

@inproceedings{lawall2017fast,
	author = {Lawall, Julia and Palinski, Derek and Gnirke, Lukas and Muller, Gilles},
	booktitle = {USENIX Annual Technical Conference},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-02 11:05:32 +0100},
	pages = {15--26},
	title = {Fast and precise retrieval of forward and back porting information for {Linux} device drivers},
	year = {2017}}

@inproceedings{lawall2018coccinelle,
	author = {Lawall, Julia and Muller, Gilles},
	booktitle = {USENIX Annual Technical Conference},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-02 11:04:59 +0100},
	pages = {601--614},
	title = {Coccinelle: 10 years of automated evolution in the {Linux} kernel},
	year = {2018}}

@inproceedings{Lee:2013:DRI:2486788.2486792,
	acmid = {2486792},
	author = {Lee, Yun Young and Chen, Nicholas and Johnson, Ralph E.},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4673-3076-3},
	pages = {23--32},
	publisher = {IEEE},
	title = {Drag-and-drop Refactoring: Intuitive and Efficient Program Transformation},
	year = {2013},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=2486788.2486792}}

@inproceedings{li2018characterising,
	author = {Li, Li and Gao, Jun and Bissyand{\'e}, Tegawend{\'e} F and Ma, Lei and Xia, Xin and Klein, Jacques},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:49:32 +0100},
	organization = {ACM},
	pages = {254--264},
	title = {Characterising deprecated {Android} {APIs}},
	year = {2018}}

@inproceedings{li2018cid,
	author = {Li, Li and Bissyand{\'e}, Tegawend{\'e} F and Wang, Haoyu and Klein, Jacques},
	booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:10:03 +0100},
	organization = {ACM},
	pages = {153--163},
	title = {Cid: Automating the detection of {API}-related compatibility issues in {Android} apps},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3213846.3213857}}

@inproceedings{linares2013api,
	author = {Linares-V{\'a}squez, Mario and Bavota, Gabriele and Bernal-C{\'a}rdenas, Carlos and Di Penta, Massimiliano and Oliveto, Rocco and Poshyvanyk, Denys},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:06:45 +0100},
	organization = {ACM},
	pages = {477--487},
	title = {{API} change and fault proneness: a threat to the success of {Android} apps},
	year = {2013}}

@inproceedings{Long:2017:AIC:3106237.3106253,
	acmid = {3106253},
	author = {Long, Fan and Amidon, Peter and Rinard, Martin},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:04:23 +0100},
	isbn = {978-1-4503-5105-8},
	keywords = {Code transform, Patch Generation, Search space inference},
	location = {Paderborn, Germany},
	numpages = {13},
	pages = {727--739},
	publisher = {ACM},
	title = {Automatic Inference of Code Transforms for Patch Generation},
	year = {2017},
	bdsk-url-1 = {http://doi.acm.org/10.1145/3106237.3106253},
	bdsk-url-2 = {https://doi.org/10.1145/3106237.3106253}}

@inproceedings{Lu_checkingmore,
	author = {Kangjie Lu and Zhichun Li and Vasileios P. Kemerlis and Zhenyu Wu and Long Lu and Cong Zheng and Zhiyun Qian and Wenke Lee and Guofei Jiang},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	title = {Checking More and Alerting Less: Detecting Privacy Leakages via Enhanced Data-flow Analysis and Peer Voting}}

@inproceedings{mcdonnell2013empirical,
	author = {McDonnell, Tyler and Ray, Baishakhi and Kim, Miryung},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-11-28 17:01:20 +0100},
	organization = {IEEE},
	pages = {70--79},
	title = {An empirical study of {API} stability and adoption in the {Android} ecosystem},
	year = {2013}}

@inproceedings{meng2013lase,
	acmid = {2486855},
	author = {Meng, Na and Kim, Miryung and McKinley, Kathryn S.},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:19:05 +0100},
	isbn = {978-1-4673-3076-3},
	pages = {502--511},
	publisher = {IEEE},
	title = {LASE: Locating and Applying Systematic Edits by Learning from Examples},
	year = {2013},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=2486788.2486855}}

@inproceedings{meng2011sydit,
	author = {Meng, Na and Kim, Miryung and McKinley, Kathryn S},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:01:13 +0100},
	pages = {440--443},
	title = {Sydit: Creating and applying a program transformation from an example},
	year = {2011}}

@inproceedings{meng2012history,
	author = {Meng, Sichen and Wang, Xiaoyin and Zhang, Lu and Mei, Hong},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-12-06 11:46:42 +0100},
	organization = {IEEE},
	pages = {353--363},
	title = {A history-based matching approach to identification of framework evolution},
	year = {2012}}

@inproceedings{Namjoshi:SAS18,
	author = {Kedar S. Namjoshi and Zvonimir Pavlinovic},
	booktitle = {International Symposium on Static Analysis ({SAS})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-07 11:21:29 +0100},
	pages = {306--325},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {The Impact of Program Transformations on Static Program Analysis},
	volume = {11002},
	year = {2018}}

@inproceedings{Nguyen:2019:GMI:3339505.3339608,
	author = {Nguyen, Hoan Anh and Nguyen, Tien N. and Dig, Danny and Nguyen, Son and Tran, Hieu and Hilton, Michael},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:21:44 +0100},
	keywords = {graph mining, semantic change pattern mining},
	pages = {819--830},
	publisher = {IEEE},
	title = {Graph-based Mining of In-the-wild, Fine-grained, Semantic Code Change Patterns},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2019.00089}}

@inproceedings{nguyen2010graph,
	author = {Nguyen, Hoan Anh and Nguyen, Tung Thanh and Wilson,Jr., Gary and Nguyen, Anh Tuan and Kim, Miryung and Nguyen, Tien N.},
	booktitle = {Conference on Object-Oriented Programming Systems, Languages and Applications ({OOPSLA})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:16:02 +0100},
	pages = {302--321},
	publisher = {ACM},
	title = {A Graph-based Approach to {API} Usage Adaptation},
	year = {2010}}

@inproceedings{nguyen2014statistical,
	author = {Nguyen, Anh Tuan and Nguyen, Hoan Anh and Nguyen, Tung Thanh and Nguyen, Tien N},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 10:56:13 +0100},
	organization = {ACM},
	pages = {457--468},
	title = {Statistical learning approach for mining {API} usage mappings for code migration},
	year = {2014}}

@inproceedings{nita2010using,
	author = {Nita, Marius and Notkin, David},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 10:53:29 +0100},
	organization = {IEEE},
	pages = {205--214},
	title = {Using twinning to adapt programs to alternative {API}s},
	volume = {1},
	year = {2010}}

@inproceedings{padioleau2006understanding,
	author = {Padioleau, Yoann and Lawall, Julia and Muller, Gilles},
	booktitle = {SIGOPS/EuroSys European Conference on Computer Systems ({ECCS})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-02 11:08:06 +0100},
	pages = {59--71},
	publisher = {ACM},
	title = {Understanding collateral evolution in {Linux} device drivers},
	year = {2006}}

@inproceedings{padioleau2008documenting,
	author = {Padioleau, Yoann and Lawall, Julia and Hansen, Ren{\'e} Rydhof and Muller, Gilles},
	booktitle = {European Conference on Computer Systems ({EuroSys})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-02 11:05:14 +0100},
	organization = {ACM},
	pages = {247--260},
	title = {Documenting and automating collateral evolutions in {Linux} device drivers},
	year = {2008}}

@inproceedings{PIVOT,
	author = {Wei, Lili and Liu, Yepang and Cheung, Shing-Chi},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 10:57:42 +0100},
	pages = {878-888},
	title = {{PIVOT}: Learning {API}-Device Correlations to Facilitate Android Compatibility Issue Detection},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2019.00094}}

@inproceedings{pixystaticanalysis,
	author = {Jovanovic, N. and Kruegel, C. and Kirda, E.},
	booktitle = {Symposium on Security and Privacy},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-07 15:54:25 +0100},
	title = {Pixy: a static analysis tool for detecting Web application vulnerabilities},
	year = {2006}}

@inproceedings{qi2015analysis,
	author = {Qi, Zichao and Long, Fan and Achour, Sara and Rinard, Martin},
	booktitle = {ISSTA},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {ACM},
	pages = {24--36},
	title = {An analysis of patch plausibility and correctness for generate-and-validate patch generation systems},
	year = {2015}}

@inproceedings{raemaekers2014semantic,
	author = {Raemaekers, Steven and Van Deursen, Arie and Visser, Joost},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:58:01 +0100},
	organization = {IEEE},
	pages = {215--224},
	title = {Semantic versioning versus breaking changes: A study of the {Maven} repository},
	year = {2014}}

@inproceedings{readabilityempirical,
	author = {S. {Scalabrino} and G. {Bavota} and C. {Vendome} and M. {Linares-V{\'a}squez} and D. {Poshyvanyk} and R. {Oliveto}},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:39:57 +0100},
	pages = {417-427},
	title = {Automatically assessing code understandability: How far are we?},
	year = {2017}}

@inproceedings{robbes2012developers,
	author = {Robbes, Romain and Lungu, Mircea and R{\"o}thlisberger, David},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:03:00 +0100},
	organization = {ACM},
	pages = {56},
	title = {How do developers react to {API} deprecation?: the case of a {Smalltalk} ecosystem},
	year = {2012}}

@inproceedings{rodriguez2015increasing,
	author = {Rodriguez, Luis R and Lawall, Julia},
	booktitle = {European Dependable Computing Conference ({EDCC})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-02 11:05:53 +0100},
	organization = {IEEE},
	pages = {132--143},
	title = {Increasing automation in the backporting of {Linux} drivers using {Coccinelle}},
	year = {2015}}

@inproceedings{rolim2017learning,
	author = {Rolim, Reudismam and Soares, Gustavo and D'Antoni, Loris and Polozov, Oleksandr and Gulwani, Sumit and Gheyi, Rohit and Suzuki, Ryo and Hartmann, Bj\"{o}rn},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:21:19 +0100},
	isbn = {978-1-5386-3868-2},
	keywords = {program synthesis, program transformation, refactoring, tutoring systems},
	pages = {404--415},
	publisher = {IEEE},
	title = {Learning Syntactic Program Transformations from Examples},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2017.44}}

@inproceedings{sawant2016reaction,
	author = {Sawant, Anand Ashok and Robbes, Romain and Bacchelli, Alberto},
	booktitle = {ICSME},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {IEEE},
	pages = {400--410},
	title = {On the reaction to deprecation of 25,357 clients of 4+ 1 popular {Java APIs}},
	year = {2016}}

@inproceedings{sawant2018features,
	author = {Sawant, Anand Ashok and Huang, Guangzhe and Vilen, Gabriel and Stojkovski, Stefan and Bacchelli, Alberto},
	booktitle = {ICSME},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {IEEE},
	pages = {13--24},
	title = {Why are features deprecated? An investigation into the motivation behind deprecation},
	year = {2018}}

@inproceedings{scalabrino2019data,
	author = {Scalabrino, Simone and Bavota, Gabriele and Linares-V{\'a}squez, Mario and Lanza, Michele and Oliveto, Rocco},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-28 11:11:08 +0100},
	organization = {IEEE},
	pages = {288--298},
	title = {Data-driven solutions to detect {API} compatibility issues in {Android}: an empirical study},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00055}}

@inproceedings{schafer2008mining,
	author = {Sch{\"a}fer, Thorsten and Jonas, Jan and Mezini, Mira},
	booktitle = {ICSE},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {ACM},
	pages = {471--480},
	title = {Mining framework usage changes from instantiation code},
	year = {2008}}

@inproceedings{serrano2020spinfer,
	author = {Serrano, Lucas and Nguyen, Van-Anh and Thung, Ferdian and Jiang, Lingxiao and Lo, David and Lawall, Julia and Muller, Gilles},
	booktitle = {USENIX Annual Technical Conference},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-03-02 11:06:50 +0100},
	pages = {235--248},
	title = {{SPINFER}: Inferring Semantic Patches for the {Linux} Kernel},
	year = {2020}}

@inproceedings{textualreadability,
	author = {S. {Scalabrino} and M. {Linares-V{\'a}squez} and D. {Poshyvanyk} and R. {Oliveto}},
	booktitle = {2016 IEEE 24th International Conference on Program Comprehension (ICPC)},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	pages = {1-10},
	title = {Improving code readability models with textual features},
	year = {2016}}

@inproceedings{thung2016recommending,
	author = {Thung, Ferdian and Le, Xuan-Bach D and Lo, David and Lawall, Julia},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:33:23 +0100},
	organization = {IEEE},
	pages = {222--232},
	title = {Recommending code changes for automatic backporting of {Linux} device drivers},
	year = {2016}}

@inproceedings{thung2020automated,
	author = {Thung, Ferdian and Haryono, Stefanus A and Serrano, Lucas and Muller, Gilles and Lawall, Julia and Lo, David and Jiang, Lingxiao},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:32:40 +0100},
	organization = {IEEE},
	pages = {602--611},
	title = {Automated deprecated-{API} usage update for {Android} apps: How far are we?},
	year = {2020}}

@inproceedings{Visser:2001:SLP:647200.718711,
	acmid = {718711},
	author = {Visser, Eelco},
	booktitle = {International Conference on Rewriting Techniques and Applications ({RTA})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {3-540-42117-3},
	numpages = {6},
	pages = {357--362},
	publisher = {Springer},
	title = {Stratego: A Language for Program Transformation Based on Rewriting Strategies},
	year = {2001},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=647200.718711}}

@inproceedings{wang2021codet5,
	author = {Yue Wang and Weishi Wang and Shafiq Joty and Steven C.H. Hoi},
	booktitle = {Conference on Empirical Methods in Natural Language Processing ({EMNLP})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:28:07 +0100},
	title = {{CodeT5}: Identifier-aware Unified Pre-trained Encoder-Decoder Models for Code Understanding and Generation},
	year = {2021}}

@inproceedings{wei2016taming,
	author = {Wei, Lili and Liu, Yepang and Cheung, Shing-Chi},
	booktitle = {Automated Software Engineering Conference ({ASE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	pages = {226--237},
	title = {Taming Android fragmentation: Characterizing and detecting compatibility issues for Android apps},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2970276.2970312}}

@inproceedings{wu2010aura,
	author = {Wu, Wei and Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l and Antoniol, Giuliano and Kim, Miryung},
	booktitle = {ICSE},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {IEEE},
	pages = {325--334},
	title = {Aura: a hybrid approach to identify framework evolution},
	volume = {1},
	year = {2010}}

@inproceedings{xiong2018identifying,
	author = {Xiong, Yingfei and Liu, Xinyuan and Zeng, Muhan and Zhang, Lu and Huang, Gang},
	booktitle = {ICSE},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {ACM},
	pages = {789--799},
	title = {Identifying patch correctness in test-based program repair},
	year = {2018}}

@inproceedings{xu2005jungloid,
	author = {Mandelin, David and Xu, Lin and Bod{\i}k, Rastislav and Kimelman, Doug},
	booktitle = {Programming language design and implementation (POPL)},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {ACM},
	title = {Jungloid mining: Helping to navigate the {API} jungle},
	year = {2005}}

@inproceedings{xu2019meditor,
	author = {Xu, Shengzhe and Dong, Ziqi and Meng, Na},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:15:11 +0100},
	organization = {IEEE},
	pages = {335--346},
	title = {Meditor: inference and application of {API} migration edits},
	year = {2019}}

@inproceedings{yang2018android,
	author = {Yang, Guowei and Jones, Jeffrey and Moninger, Austin and Che, Meiru},
	booktitle = {International Conference on Mobile Software Engineering and Systems},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-11-28 17:00:24 +0100},
	organization = {ACM},
	pages = {156--160},
	title = {How do {Android} operating system updates impact apps?},
	year = {2018}}

@inproceedings{yu2017api,
	author = {Yu, Ping and Yang, Fei and Cao, Chun and Hu, Hao and Ma, Xiaoxing},
	booktitle = {Asia-Pacific Symposium on Internetware},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 17:46:28 +0100},
	organization = {ACM},
	title = {{API} Usage Change Rules Mining based on Fine-grained Call Dependency Analysis},
	year = {2017}}

@inproceedings{Yuan:2012:CLP:2337223.2337236,
	acmid = {2337236},
	author = {Yuan, Ding and Park, Soyeon and Zhou, Yuanyuan},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 18:18:41 +0100},
	isbn = {978-1-4673-1067-3},
	pages = {102--112},
	publisher = {IEEE},
	title = {Characterizing Logging Practices in Open-source Software},
	year = {2012},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=2337223.2337236}}

@inproceedings{zhong2010mining,
	author = {Zhong, Hao and Thummalapenta, Suresh and Xie, Tao and Zhang, Lu and Wang, Qing},
	booktitle = {ICSE},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	organization = {ACM},
	pages = {195--204},
	title = {Mining {API} mapping for language migration},
	year = {2010}}

@inproceedings{zhou2016api,
	author = {Zhou, Jing and Walker, Robert J},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2023-02-21 15:06:37 +0100},
	organization = {ACM},
	pages = {266--277},
	title = {{API} deprecation: a retrospective analysis and detection method for code examples on the web},
	year = {2016}}

@misc{androidpie,
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	howpublished = {\url{https://www.android.com/versions/pie-9-0/}},
	note = {Accessed: 2019-04-08},
	title = {Android Pie}}

@misc{aosp,
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	howpublished = {\url{https://android.googlesource.com/platform/frameworks/base/}},
	note = {Accessed: 2019-04-08},
	title = {Android Open Source Repository}}

@misc{aospmirror,
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	howpublished = {\url{https://github.com/aosp-mirror/platformframeworksbase}},
	note = {Accessed: 2019-04-08},
	title = {Mirror of {Android} Open Source Repository in GitHub}}

@misc{fdroid,
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	howpublished = {\url{https://f-droid.org/}},
	note = {Accessed: 2019-04-08},
	title = {F-Droid}}

@misc{gsamples,
	date-added = {2022-10-11 16:31:53 +0200},
	date-modified = {2022-10-11 16:31:53 +0200},
	howpublished = {\url{https://developer.android.com/samples}},
	note = {Accessed: 2019-04-08},
	title = {Google Samples}}

@software{javaparser,
	author = {Danny van Bruggen and Federico Tomassetti and Roger Howell and Malte Langkabel and Nicholas Smith and Artur Bosch and Malte Skoruppa and Cruz Maximilien and ThLeu and Panayiotis and Sebastian Kirsch (@skirsch79) and Simon and Johann Beleites and Wim Tibackx and jean pierre L and Andr{\'e} Rou{\'e}l and edefazio and Daan Schipper and Mathiponds and Why you want to know and Ryan Beckett and ptitjes and kotari4u and Marvin Wyrich and Ricardo Morais and bresai and Ty and Romain Lebouc and Implex1v and Bernhard Haumacher},
	doi = {10.5281/zenodo.3820258},
	month = may,
	publisher = {Zenodo},
	title = {{javaparser/javaparser: Release javaparser- parent-3.15.22}},
	version = {javaparser-parent-3.15.22},
	year = 2020,
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.3820258}}

@inproceedings{10.1007/3-540-45665-1_17,
	abstract = {In this paper, we present a comprehensive survey on applications of Support Vector Machines (SVMs) for pattern recognition. Since SVMs show good generalization performance on many real-life data and the approach is properly motivated theoretically, it has been applied to wide range of applications. This paper describes a brief introduction of SVMs and summarizes its numerous applications.},
	author = {Byun, Hyeran and Lee, Seong-Whan},
	booktitle = {Pattern Recognition with Support Vector Machines},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:59:08 +0100},
	isbn = {978-3-540-45665-0},
	pages = {213--236},
	publisher = {Springer},
	title = {Applications of Support Vector Machines for Pattern Recognition: A Survey},
	year = {2002}}

@inproceedings{10.1007/978-3-030-79382-1_6,
	abstract = {Domain models capture the key concepts and relationships of a business domain. Typically, domain models are manually defined by software designers in the initial phases of a software development cycle, based on their interactions with the client and their own domain expertise. Given the key role of domain models in the quality of the final system, it is important that they properly reflect the reality of the business.},
	author = {Burgue{\~{n}}o, Loli and Claris{\'o}, Robert and G{\'e}rard, S{\'e}bastien and Li, Shuai and Cabot, Jordi},
	booktitle = {Advanced Information Systems Engineering},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-12-06 11:33:45 +0100},
	isbn = {978-3-030-79382-1},
	pages = {91--106},
	publisher = {Springer},
	title = {An {NLP}-Based Architecture for the Autocompletion of Partial Domain Models},
	year = {2021}}

@inproceedings{10.1117/12.2262589,
	author = {S. Ben Driss and M. Soua and R. Kachouri and M. Akil},
	booktitle = {Real-Time Image and Video Processing},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 14:51:49 +0100},
	keywords = {Real time character recognition, Neural Networks, Deep learning, GPU},
	organization = {International Society for Optics and Photonics},
	pages = {32 -- 42},
	publisher = {SPIE},
	title = {A comparison study between MLP and convolutional neural network models for character recognition},
	volume = {10223},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1117/12.2262589}}

@inproceedings{10.1145/3365438.3410947,
	abstract = {The availability of shared software models provides opportunities for reusing, adapting and learning from them. Public models are typically stored in a variety of locations, including model repositories, regular source code repositories, web pages, etc. To profit from them developers need effective search mechanisms to locate the models relevant for their tasks. However, to date, there has been little success in creating a generic and efficient search engine specially tailored to the modelling domain.In this paper we present MAR, a search engine for models. MAR is generic in the sense that it can index any type of model if its meta-model is known. MAR uses a query-by-example approach, that is, it uses example models as queries. The search takes the model structure into account using the notion of bag of paths, which encodes the structure of a model using paths between model elements and is a representation amenable for indexing. MAR is built over HBase using a specific design to deal with large repositories. Our benchmarks show that the engine is efficient and has fast response times in most cases. We have also evaluated the precision of the search engine by creating model mutants which simulate user queries. A REST API is available to perform queries and an Eclipse plug-in allows end users to connect to the search engine from model editors. We have currently indexed more than 50.000 models of different kinds, including Ecore meta-models, BPMN diagrams and UML models. MAR is available at http://mar-search.org.},
	author = {L\'{o}pez, Jos\'{e} Antonio Hern\'{a}ndez and Cuadrado, Jes\'{u}s S\'{a}nchez},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MODELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450370196},
	keywords = {model repositories, meta-model classification, search engine},
	pages = {57--67},
	publisher = {ACM},
	title = {{MAR}: A Structure-Based Search Engine for Models},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3365438.3410947}}

@inproceedings{10.1145/3422392.3422434,
	abstract = {Model-driven development (MDD) and Technical Debt (TD) are software engineering approaches that look for promoting the quality of systems under development. Most research on TD focuses on application code as primary TD sources. In an MDD project, however, dealing with technical debt only on the source code may not be an adequate strategy because MDD projects should focus their software building efforts on models. Besides, in MDD projects, code generation is often done at a later stage than creating models, then dealing with TD only in source code can lead to unnecessary interest payments due to unmanaged debts, such as model and source codes artifacts desynchronization. Recent works concluded that MDD project codes are not technical debt free, making it necessary to investigate the possibility and benefits of applying TD identification techniques in earlier stages of the development process, such as in modeling phases. The use of TD concept in an MDD context is also known as Model-Driven Technical Debt (MDTD). This paper intends to analyze whether it is possible to use source code technical debt detection strategies to identify TD on code-generating models in the context of model-driven development projects. A catalog of nine different model technical debt items for platform-independent code-generating models was specified. An evaluation was performed to observe the effectiveness of the proposed catalog compared to existing source code identification techniques found in the literature. Through three different open source software projects, more than 78 thousand lines of code were investigated. Results revealed that, although the catalog items present different precision rates, it is possible to identify these model-driven technical debts before source code is generated. We hope that sharing this catalog version provides future contributions and improvements.},
	author = {Gomes, Ramon Ara\'{u}jo and Pinheiro, Larissa Barbosa L. and Maciel, Rita Suzana Pitangueira},
	booktitle = {Brazilian Symposium on Software Engineering ({SBES})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450387538},
	keywords = {code smell, model-driven development, model smell, models, technical debt},
	pages = {740--749},
	publisher = {ACM},
	title = {Anticipating Identification of Technical Debt Items in Model-Driven Software Projects},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3422392.3422434}}

@inproceedings{10.1145/3463274.3463809,
	abstract = {In recent years, we have witnessed a dramatic increase in the application of Machine Learning algorithms in several domains, including the development of recommender systems for software engineering (RSSE). While researchers focused on the underpinning ML techniques to improve recommendation accuracy, little attention has been paid to make such systems robust and resilient to malicious data. By manipulating the algorithms' training set, i.e., large open-source software (OSS) repositories, it would be possible to make recommender systems vulnerable to adversarial attacks. This paper presents an initial investigation of adversarial machine learning and its possible implications on RSSE. As a proof-of-concept, we show the extent to which the presence of manipulated data can have a negative impact on the outcomes of two state-of-the-art recommender systems which suggest third-party libraries to developers. Our work aims at raising awareness of adversarial techniques and their effects on the Software Engineering community. We also propose equipping recommender systems with the capability to learn to dodge adversarial activities.},
	author = {Nguyen, Phuong T. and Di Ruscio, Davide and Di Rocco, Juri and Di Sipio, Claudio and Di Penta, Massimiliano},
	booktitle = {Evaluation and Assessment in Software Engineering ({EASE})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450390538},
	keywords = {Recommender systems, Adversarial Machine Learning},
	pages = {247--253},
	publisher = {ACM},
	title = {Adversarial Machine Learning: On the Resilience of Third-Party Library Recommender Systems},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3463274.3463809}}

@article{Rawat2017,
	address = {Cambridge, MA, USA},
	author = {Rawat, Waseem and Wang, Zenghui},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0899-7667},
	issue_date = {September 2017},
	journal = {Neural Comput.},
	month = sep,
	number = {9},
	numpages = {98},
	pages = {2352--2449},
	publisher = {MIT Press},
	title = {Deep Convolutional Neural Networks for Image Classification: A Comprehensive Review},
	volume = {29},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1162/neco_a_00990},
	bdsk-url-2 = {https://doi.org/10.1162/neco%5C_a%5C_00990}}

@article{10.1162/neco.1997.9.8.1735,
	address = {Cambridge, MA, USA},
	author = {Hochreiter, Sepp and Schmidhuber, J\"{u}rgen},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0899-7667},
	issue_date = {November 15, 1997},
	journal = {Neural Comput.},
	month = nov,
	number = {8},
	numpages = {46},
	pages = {1735--1780},
	publisher = {MIT Press},
	title = {Long Short-Term Memory},
	volume = {9},
	year = {1997},
	bdsk-url-1 = {https://doi.org/10.1162/neco.1997.9.8.1735}}

@book{10.5555/1481236,
	abstract = {This book explains the principles that make support vector machines (SVMs) a successful modelling and prediction tool for a variety of applications. The authors present the basic ideas of SVMs together with the latest developments and current research questions in a unified style. They identify three reasons for the success of SVMs: their ability to learn well with only a very small number of free parameters, their robustness against several types of model violations and outliers, and their computational efficiency compared to several other methods. Since their appearance in the early nineties, support vector machines and related kernel-based methods have been successfully applied in diverse fields of application such as bioinformatics, fraud detection, construction of insurance tariffs, direct marketing, and data and text mining. As a consequence, SVMs now play an important role in statistical machine learning and are used not only by statisticians, mathematicians, and computer scientists, but also by engineers and data analysts. The book provides a unique in-depth treatment of both fundamental and recent material on SVMs that so far has been scattered in the literature. The book can thus serve as both a basis for graduate courses and an introduction for statisticians, mathematicians, and computer scientists. It further provides a valuable reference for researchers working in the field. The book covers all important topics concerning support vector machines such as: loss functions and their role in the learning process; reproducing kernel Hilbert spaces and their properties; a thorough statistical analysis that uses both traditional uniform bounds and more advanced localized techniques based on Rademacher averages and Talagrand's inequality; a detailed treatment of classification and regression; a detailed robustness analysis; and a description of some of the most recent implementation techniques. To make the book self-contained, an extensive appendix is added which provides the reader with the necessary background from statistics, probability theory, functional analysis, convex analysis, and topology.},
	author = {Steinwart, Ingo and Christmann, Andreas},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-12-06 11:11:09 +0100},
	edition = {1st},
	isbn = {0387772413},
	publisher = {Springer},
	title = {Support Vector Machines},
	year = {2008}}

@book{10.5555/1855255,
	abstract = {This book is concerned with a fundamentally novel approach to graph-based pattern recognition based on vector space embedding of graphs. It aims at condensing the high representational power of graphs into a computationally efficient and mathematically convenient feature vector. This volume utilizes the dissimilarity space representation originally proposed by Duin and Pekalska to embed graphs in real vector spaces. Such an embedding gives one access to all algorithms developed in the past for feature vectors, which has been the predominant representation formalism in pattern recognition and related areas for a long time.},
	address = {USA},
	author = {Riesen, Kaspar and Bunke, Horst},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	isbn = {9789814304719},
	publisher = {World Scientific Publishing Co., Inc.},
	title = {Graph Classification and Clustering Based on Vector Space Embedding},
	year = {2010}}

@book{10.5555/3086952,
	author = {Goodfellow, Ian and Bengio, Yoshua and Courville, Aaron},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	isbn = {0262035618},
	publisher = {The MIT Press},
	title = {Deep Learning},
	year = {2016}}

@article{7605502,
	author = {Macedo, Nuno and Jorge, Tiago and Cunha, Alcino},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Transactions on Software Engineering},
	number = {7},
	pages = {615-640},
	title = {A Feature-Based Classification of Model Repair Approaches},
	volume = {43},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2016.2620145}}

@inproceedings{7954351,
	author = {Gamboa, Miguel Andr{\'e}s and Syriani, Eugene},
	booktitle = {International Conference on Model-Driven Engineering and Software Development (MODELSWARD)},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-18 18:28:51 +0100},
	pages = {123-133},
	title = {Automating activities in {MDE} tools},
	year = {2016}}

@article{9060868,
	author = {Lim, Wei Yang Bryan and Luong, Nguyen Cong and Hoang, Dinh Thai and Jiao, Yutao and Liang, Ying-Chang and Yang, Qiang and Niyato, Dusit and Miao, Chunyan},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Communications Surveys \& Tutorials},
	number = {3},
	pages = {2031-2063},
	title = {Federated Learning in Mobile Edge Networks: A Comprehensive Survey},
	volume = {22},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/COMST.2020.2986024}}

@article{9084352,
	author = {Li, Tian and Sahu, Anit Kumar and Talwalkar, Ameet and Smith, Virginia},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Signal Processing Magazine},
	number = {3},
	pages = {50-60},
	title = {Federated Learning: Challenges, Methods, and Future Directions},
	volume = {37},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/MSP.2020.2975749}}

@inproceedings{9678946,
	author = {Nguyen, Phuong T. and Di Sipio, Claudio and Di Rocco, Juri and Di Penta, Massimiliano and Di Ruscio, Davide},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-28 11:06:02 +0100},
	pages = {253-265},
	title = {Adversarial Attacks to {API} Recommender Systems: Time to Wake Up and Smell the Coffee?},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ASE51524.2021.9678946}}

@inproceedings{9804499,
	author = {Di Salle, Amleto and Rota, Alessandra and Nguyen, Phuong T. and Di Ruscio, Davide and Fontana, Francesca Arcelli and Sala, Irene},
	booktitle = {International Conference on Technical Debt ({TechDebt})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:08:19 +0100},
	pages = {41-45},
	title = {{PILOT}: Synergy between Text Processing and Neural Networks to Detect Self-Admitted Technical Debt},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524843.3528093}}

@inproceedings{Abid2019355,
	author = {Abid, S.B. and Mahajan, V. and Lucio, L.},
	booktitle = {International Conference on Software Engineering and Knowledge Engineering ({SEKE})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 17:59:35 +0100},
	isbn = {1-891706-48-9},
	issn = {23259000},
	keywords = {GOAL_Model-Repair,notion,TECHNIQUE_DNN,TECHNIQUE_GENETIC_ALGORITHMS,TECHNIQUE_ILP,TECHNIQUE_MARKOV_DECISION_PROCESS,TECHNIQUE_NN},
	pages = {355--360},
	title = {Towards Machine Learning for Learnability of {{MDD}} Tools},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.18293/SEKE2019-050}}

@misc{agarap2018learning,
	abstract = {We introduce the use of rectified linear units (ReLU) as the classification
                   function in a deep neural network (DNN). Conventionally, ReLU is used as an
                   activation function in DNNs, with Softmax function as their classification
                   function. However, there have been several studies on using a classification
                   function other than Softmax, and this study is an addition to those. We
                   accomplish this by taking the activation of the penultimate layer $h_{n - 1}$
                   in a neural network, then multiply it by weight parameters $\theta$ to get the
                   raw scores $o_{i}$. Afterwards, we threshold the raw scores $o_{i}$ by $0$,
                   i.e. $f(o) = \max(0, o_{i})$, where $f(o)$ is the ReLU function. We provide
                   class predictions $\hat{y}$ through argmax function, i.e. argmax $f(x)$.},
	author = {Agarap, Abien Fred},
	biburl = {https://www.bibsonomy.org/bibtex/2ac4c868baa4ea267dad6d02b9c4b5c33/kylemccaulley},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {Deep Learning using Rectified Linear Units ({ReLU})},
	year = 2018,
	bdsk-url-1 = {http://arxiv.org/abs/1803.08375},
	bdsk-url-2 = {https://doi.org/10.48550/arXiv.1803.08375}}

@incollection{B06,
	author = {Berkhin, Pavel},
	booktitle = {Grouping Multidimensional Data: Recent Advances in Clustering},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-18 18:33:12 +0100},
	doi = {10.1007/3-540-28349-8_2},
	editor = {Kogan, Jacob and Nicholas, Charles and Teboulle, Marc},
	isbn = {978-3-540-28348-5},
	language = {English},
	pages = {25-71},
	publisher = {Springer},
	title = {A Survey of Clustering Data Mining Techniques},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1007/3-540-28349-8_2},
	bdsk-url-2 = {https://doi.org/10.1007/3-540-28349-8%5C_2}}

@inproceedings{Babur2016888,
	author = {Babur, {\"O}.},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4503-3845-5},
	keywords = {GOAL_Model-Comparison,notion,TECHNIQUE_K-NEAREST-NEIGHBORS},
	pages = {888--891},
	publisher = {ACM},
	title = {Statistical Analysis of Large Sets of Models},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2970276.2975938}}

@article{Bao2021706,
	author = {Bao, Y. and Yang, Z. and Yang, Y. and Xie, J. and Zhou, Y. and Yue, T. and Huang, Z. and Guo, P.},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {10001239},
	journal = {Jisuanji Yanjiu yu Fazhan/Computer Research and Development},
	keywords = {GOAL_Model-synthesis,notion,TECHNIQUE_DNN},
	langid = {chinese},
	number = {4},
	pages = {706--730},
	publisher = {{Science Press}},
	source = {Scopus},
	title = {An Automated Approach to Generate {SysML} Models from Restricted Natural Language Requirements (in Chinese)},
	volume = {58},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.7544/issn1000-1239.2021.20200757}}

@article{Barriga20221135,
	abbrev_source_title = {Softw. Syst. Model.},
	affiliation = {Western Norway University of Applied Sciences, Bergen, Norway},
	author = {Barriga, A. and Rutle, A. and Heldal, R.},
	correspondence_address1 = {Barriga, A.; Western Norway University of Applied SciencesNorway; email: abar@hvl.no},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	document_type = {Article},
	issn = {16191366},
	journal = {Software and Systems Modeling},
	keywords = {GOAL_Model-Repair,notion,TECHNIQUE_DNN,TECHNIQUE_GENETIC_ALGORITHMS,TECHNIQUE_ILP,TECHNIQUE_MARKOV_DECISION_PROCESS,TECHNIQUE_NN},
	langid = {english},
	number = {3},
	pages = {1135--1157},
	publisher = {{Springer Science and Business Media Deutschland GmbH}},
	source = {Scopus},
	title = {{{AI-powered}} Model Repair: An Experience Report\textemdash Lessons Learned, Challenges, and Opportunities},
	volume = {21},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-022-00983-5}}

@incollection{bascianiAutomatedClusteringMetamodel2016c,
	abstract = {Over the last years, several model repositories have been proposed in response to the need of the MDE community for advanced systems supporting the reuse of modeling artifacts. Modelers can interact with MDE repositories with different intents ranging from merely repository browsing, to searching specific artifacts satisfying precise requirements. The organization and browsing facilities provided by current repositories is limited since they do not produce structured overviews of the contained artifacts, and the categorization mechanisms (if any) are based on manual activities. When dealing with large numbers of modeling artifacts, such limitations increase the effort related to both managing and reusing artifacts stored in model repositories.},
	author = {Basciani, Francesco and Di Rocco, Juri and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
	booktitle = {Advanced Information Systems Engineering},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:18:44 +0100},
	isbn = {978-3-319-39695-8 978-3-319-39696-5},
	keywords = {GOAL_Model-Classification,notion,TECHNIQUE_K-NEAREST-NEIGHBORS},
	pages = {342--358},
	publisher = {Springer},
	title = {Automated Clustering of Metamodel Repositories},
	volume = {9694},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-39696-5_21},
	bdsk-url-2 = {https://doi.org/10.1007/978-3-319-39696-5%5C_21}}

@article{batotPromotingSocialDiversity2022,
	author = {Batot, Edouard R. and Sahraoui, Houari},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1619-1366, 1619-1374},
	journal = {Software and Systems Modeling},
	keywords = {GOAL_Model-Assistance,notion,TECHNIQUE_GENETIC_ALGORITHMS},
	langid = {english},
	month = jun,
	number = {3},
	pages = {1159--1178},
	title = {Promoting Social Diversity for the Automated Learning of Complex {{MDE}} Artifacts},
	volume = {21},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-021-00969-9}}

@book{Bishop:1995:NNP:525960,
	author = {Bishop, Christopher M.},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 16:02:25 +0100},
	isbn = {0198538642},
	publisher = {Oxford University Press},
	title = {Neural Networks for Pattern Recognition},
	year = {1995}}

@article{Bodegic,
	author = {Golzadeh, Mehdi and Decan, Alexandre and Mens, Tom},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1613-0073},
	journal = {CEUR Workshop Proceedings},
	title = {Evaluating a bot detection model on git commit messages},
	volume = {2912},
	year = {2021},
	bdsk-url-1 = {https://ceur-ws.org/Vol-2912/paper5.pdf}}

@article{bot_commits,
	author = {Dey, Tapajit and Vasilescu, Bogdan and Mockus, Audris},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {International Workshop on Bots in Software Engineering (BotSE)},
	keywords = {social coding platforms, Automated Commits, Bots, Code Commits},
	month = {6},
	number = {5},
	pages = {61--65},
	title = {An Exploratory Study of Bot Commits},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3387940.3391502}}

@inproceedings{Boubekeur202084,
	author = {Boubekeur, Y. and Mussbacher, G. and McIntosh, S.},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4503-8135-2},
	pages = {84--93},
	publisher = {ACM},
	title = {Automatic Assessment of Students' Software Models Using a Simple Heuristic and Machine Learning},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3417990.3418741}}

@inproceedings{Boubekeur202094,
	author = {Boubekeur, Y. and Mussbacher, G.},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MODELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4503-8135-2},
	keywords = {GOAL_Model-Assistance,notion},
	pages = {94--103},
	publisher = {ACM},
	title = {Towards a Better Understanding of Interactions with a Domain Modeling Assistant},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3417990.3418742}}

@inproceedings{Burattin2018322,
	author = {Burattin, A. and Soffer, P. and Fahland, D. and Mendling, J. and Reijers, H.A. and Vanderfeesten, I. and Weidlich, M. and Weber, B.},
	booktitle = {International Conference on Business Process Management},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9783319986470},
	issn = {03029743},
	keywords = {GOAL_Model-Classification,notion,TECHNIQUE_FFNN},
	pages = {322--338},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {Who Is behind the Model? Classifying Modelers Based on Pragmatic Model Features},
	volume = {11080},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-98648-7_19},
	bdsk-url-2 = {https://doi.org/10.1007/978-3-319-98648-7%5C_19}}

@article{Burgueno_Cabot_Wimmer_Zschaler_2022,
	author = {Burgue{\~n}o, Lola and Cabot, Jordi and Wimmer, Manuel and Zschaler, Steffen},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1619-1366, 1619-1374},
	journal = {Software and Systems Modeling},
	language = {en},
	month = {Jun},
	number = {3},
	pages = {963--965},
	title = {Guest editorial to the theme section on {AI}-enhanced model-driven engineering},
	volume = {21},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-022-00988-0}}

@inproceedings{Burgueno2019294,
	author = {Burgue{\~n}o, L. and Cabot, J. and G{\'e}rard, S.},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MODELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-72812-535-0},
	keywords = {GOAL_Model-Transformation-Development,notion,TECHNIQUE_LSTM},
	pages = {294--299},
	publisher = {IEEE},
	title = {An {LSTM-Based} Neural Network Architecture for Model Transformations},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MODELS.2019.00013}}

@inproceedings{cabot2017cognifying,
	author = {Cabot, Jordi and Claris{\'o}, Robert and Brambilla, Marco and G{\'e}rard, S{\'e}bastien},
	booktitle = {Federation of International Conferences on Software Technologies: Applications and Foundations},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	organization = {Springer},
	pages = {154--160},
	title = {Cognifying model-driven software engineering},
	year = {2017}}

@inproceedings{Clariso20181,
	affiliation = {Multimedia and Telecommunication Dept. Barcelona, Universitat Oberta de Catalunya (UOC) IT, Spain; SOM Research Lab, ICREA, Barcelona, Spain},
	author = {Claris{\'o}, R. and Cabot, J.},
	booktitle = {International Workshop on Machine Learning and Software Engineering in Symbiosis ({MASES})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4503-5972-6},
	pages = {1--5},
	publisher = {ACM},
	title = {Applying Graph Kernels to Model-Driven Engineering Problems},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3243127.3243128}}

@incollection{czarnecki_model_2008,
	author = {Janota, Mikol{\'a}{\v{s}} and Kuzina, Victoria and Wasowski, Andrzej},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:58:06 +0100},
	isbn = {978-3-540-87875-9},
	pages = {431--445},
	publisher = {Springer},
	title = {Model Construction with External Constraints: An Interactive Journey from Semantics to Syntax},
	year = {2008}}

@inproceedings{DBLP:conf/aaai/AlemanyBPG19,
	author = {Sheila Alemany and Jonathan Beltran and Adri{\'{a}}n P{\'{e}}rez and Sam Ganzfried},
	biburl = {10.1609/aaai.v33i01.3301468},
	booktitle = {The Thirty-Third Conference on Artificial Intelligence ({AAAI}), The Ninth Symposium on Educational Advances in Artificial Intelligence ({EAAI})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-18 18:14:50 +0100},
	pages = {468--475},
	publisher = {{AAAI} Press},
	title = {Predicting Hurricane Trajectories Using a Recurrent Neural Network},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1609/aaai.v33i01.3301468}}

@inproceedings{DBLP:conf/caise/GiraldoEPGP14a,
	author = {F{\'{a}}ber D. Giraldo and Sergio Espa{\~{n}}a and Manuel A. Pineda and William J. Giraldo and Oscar Pastor},
	booktitle = {CAiSE Forum (Selected Extended Papers)},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	pages = {199--214},
	publisher = {Springer},
	series = {Lecture Notes in Business Information Processing},
	title = {Conciliating Model-Driven Engineering with Technical Debt Using a Quality Framework},
	volume = {204},
	year = {2014}}

@inproceedings{DBLP:conf/ijcai/McCallumNRS99,
	author = {Andrew McCallum and Kamal Nigam and Jason Rennie and Kristie Seymore},
	biburl = {https://dblp.org/rec/conf/ijcai/McCallumNRS99.bib},
	booktitle = {International Joint Conference on Artificial Intelligence ({IJCAI})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {662--667},
	publisher = {Morgan Kaufmann},
	timestamp = {Tue, 20 Aug 2019 16:18:16 +0200},
	title = {A Machine Learning Approach to Building Domain-Specific Search Engines},
	year = {1999},
	bdsk-url-1 = {http://ijcai.org/Proceedings/99-2/Papers/001.pdf}}

@article{DBLP:journals/corr/PortugalAC15a,
	abstract = {Recommender systems use algorithms to provide users with product or service recommendations. Recently, these systems have been using machine learning algorithms from the field of artificial intelligence. However, choosing a suitable machine learning algorithm for a recommender system is difficult because of the number of algorithms described in the literature. Researchers and practitioners developing recommender systems are left with little information about the current approaches in algorithm usage. Moreover, the development of recommender systems using machine learning algorithms often faces problems and raises questions that must be resolved. This paper presents a systematic review of the literature that analyzes the use of machine learning algorithms in recommender systems and identifies new research opportunities. The goals of this study are to (i) identify trends in the use or research of machine learning algorithms in recommender systems; (ii) identify open questions in the use or research of machine learning algorithms; and (iii) assist new researchers to position new research activity in this domain appropriately. The results of this study identify existing classes of recommender systems, characterize adopted machine learning approaches, discuss the use of big data technologies, identify types of machine learning algorithms and their application domains, and analyzes both main and alternative performance metrics.},
	author = {Ivens Portugal and Paulo Alencar and Donald Cowan},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0957-4174},
	journal = {Expert Systems with Applications},
	keywords = {Systematic review of the literature, Recommender systems, Machine learning, Machine learning algorithms, Application domains, Performance metrics},
	pages = {205-227},
	title = {The use of machine learning algorithms in recommender systems: A systematic review},
	volume = {97},
	year = {2018},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0957417417308333},
	bdsk-url-2 = {https://doi.org/10.1016/j.eswa.2017.12.020}}

@article{DBLP:journals/ese/RoccoRSNR21,
	author = {Juri {Di Rocco} and Davide {Di Ruscio} and Claudio {Di Sipio} and Phuong T. Nguyen and Riccardo Rubei},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/RoccoRSNR21.bib},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-04 18:56:03 +0100},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {69},
	timestamp = {Sat, 09 Apr 2022 12:30:25 +0200},
	title = {Development of recommendation systems for software engineering: the {CROSSMINER} experience},
	volume = {26},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-09963-7}}

@article{DBLP:journals/ese/ZampettiFSP21,
	author = {Zampetti, Fiorella and Fucci, Gianmarco and Serebrenik, Alexander and Di Penta, Massimiliano},
	biburl = {https://dblp.org/rec/journals/ese/ZampettiFSP21.bib},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-04 18:54:41 +0100},
	journal = {Empirical Software Engineering},
	number = {6},
	pages = {131},
	title = {Self-admitted technical debt practices: a comparison between industry and open-source},
	volume = {26},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10031-3}}

@article{DBLP:journals/paa/LatinneDD02,
	author = {Patrice Latinne and Olivier Debeir and Christine Decaestecker},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/paa/LatinneDD02.bib},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Pattern Anal. Appl.},
	number = {2},
	pages = {201--209},
	timestamp = {Mon, 26 Oct 2020 09:01:03 +0100},
	title = {Combining Different Methods and Numbers of Weak Decision Trees},
	volume = {5},
	year = {2002},
	bdsk-url-1 = {https://doi.org/10.1007/s100440200018}}

@article{DBLP:journals/sosym/AlmonteGCL22,
	author = {Almonte, Lissette and Guerra, Esther and Cantador, Iv\'an and de Lara, Juan},
	biburl = {https://dblp.org/rec/journals/sosym/AlmonteGCL22.bib},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Software and Systems Modeling},
	number = {1},
	pages = {249--280},
	title = {Recommender systems in model-driven engineering},
	volume = {21},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-021-00905-x}}

@article{DBLP:journals/tist/YangLCT19,
	author = {Qiang Yang and Yang Liu and Tianjian Chen and Yongxin Tong},
	biburl = {https://dblp.org/rec/journals/tist/YangLCT19.bib},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-07 11:15:42 +0100},
	journal = {Trans. Intell. Syst. Technol.},
	number = {2},
	pages = {12:1--12:19},
	publisher = {ACM},
	title = {Federated Machine Learning: Concept and Applications},
	volume = {10},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1145/3298981}}

@article{di2015collaborative,
	author = {Di Rocco, Juri and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	journal = {IEEE Software},
	number = {3},
	pages = {28--34},
	publisher = {IEEE},
	title = {Collaborative repositories in model-driven engineering [software technology]},
	volume = {32},
	year = {2015}}

@article{dirocco_memorec_2022,
	abstract = {Model-driven engineering has been widely applied in software development, aiming to facilitate the coordination among various stakeholders. Such a methodology allows for a more efficient and effective development process. Nevertheless, modeling is a strenuous activity that requires proper knowledge of components, attributes, and logic to reach the level of abstraction required by the application domain. In particular, metamodels play an important role in several paradigms, and specifying wrong entities or attributes in metamodels can negatively impact on the quality of the produced artifacts as well as other elements of the whole process. During the metamodeling phase, modelers can benefit from assistance to avoid mistakes, e.g., getting recommendations like metaclasses and structural features relevant to the metamodel being defined. However, suitable machinery is needed to mine data from repositories of existing modeling artifacts and compute recommendations. In this work, we propose MemoRec, a novel approach that makes use of a collaborative filtering strategy to recommend valuable entities related to the metamodel under construction. Our approach can provide suggestions related to both metaclasses and structured features that should be added in the metamodel under definition. We assess the quality of the work with respect to different metrics, i.e., success rate, precision, and recall. The results demonstrate that MemoRec is capable of suggesting relevant items given a partial metamodel and supporting modelers in their task.},
	author = {Di Rocco, Juri and Di Ruscio, Davide and Di Sipio, Claudio and Nguyen, Phuong T. and Pierantonio, Alfonso},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	file = {Di Rocco et al. - 2022 - MemoRec a recommender system for assisting modele.pdf:C\:\\Users\\claudio\\Zotero\\storage\\PBPWZGZB\\Di Rocco et al. - 2022 - MemoRec a recommender system for assisting modele.pdf:application/pdf},
	issn = {1619-1366, 1619-1374},
	journal = {Software and Systems Modeling},
	language = {en},
	month = mar,
	shorttitle = {{MemoRec}},
	title = {{MemoRec}: a recommender system for assisting modelers in specifying metamodels},
	urldate = {2022-04-20},
	year = {2022},
	bdsk-url-1 = {https://link.springer.com/10.1007/s10270-022-00994-2},
	bdsk-url-2 = {https://doi.org/10.1007/s10270-022-00994-2}}

@inproceedings{DiRocco202170,
	author = {Di Rocco, J. and Di Sipio, C. and Di Ruscio, D. and Nguyen, P.T.},
	booktitle = {International Conference on Model-Driven Engineering Languages and Systems ({MODELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 14:53:12 +0100},
	isbn = {978-1-66543-495-9},
	keywords = {GOAL_Model-Assistance,notion,TECHNIQUE_GNN},
	pages = {70--81},
	publisher = {IEEE},
	title = {A {GNN}-based Recommender System to Assist the Specification of Metamodels and Models},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/MODELS50736.2021.00016}}

@article{doi:10.1080/21693277.2016.1192517,
	author = {Thorsten Wuest and Daniel Weimer and Christopher Irgens and Klaus-Dieter Thoben},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Production \& Manufacturing Research},
	number = {1},
	pages = {23-45},
	publisher = {Taylor & Francis},
	title = {Machine learning in manufacturing: advantages, challenges, and applications},
	volume = {4},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1080/21693277.2016.1192517}}

@article{Domingos:2012:FUT:2347736.2347755,
	acmid = {2347755},
	author = {Domingos, Pedro},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:15:11 +0100},
	issn = {0001-0782},
	journal = {Communications of the {ACM}},
	month = oct,
	number = {10},
	pages = {78--87},
	publisher = {ACM},
	title = {A Few Useful Things to Know About Machine Learning},
	volume = {55},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1145/2347736.2347755}}

@inproceedings{eisenbergSearchingModelsHybrid2021,
	abstract = {The Model-Driven Engineering (MDE) [3] paradigm advocates for the use of models as an abstraction layer to represent complex systems. Model transformations are a central technique within MDE [10]. They either modify existing models or create new ones from scratch. Generally, these models should represent an optimal state of the system that has to be found within a large space of possible solutions. Model-driven optimization [1, 2, 4\textendash 6, 9] is a research area within MDE that proposes to automatically find optimal solutions which are constructed by a set of transformation rules given certain objectives. In order to search into large solution spaces, model-driven optimization approaches combine the expressiveness of models and domain-specific modeling languages, with the computational effectiveness of Artificial Intelligence (AI) methods to find the best model for a particular scenario.},
	author = {Eisenberg, Martin and Pichler, Hans-Peter and Garmendia, Antonio},
	booktitle = {International Workshop on Conceptual Modeling Meets Artificial Intelligence ({CMAI})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-07 11:19:10 +0100},
	keywords = {GOAL-Model_Search,notion,TECHNIQUE_ReinforcementLearning},
	langid = {english},
	pages = {2},
	title = {Searching for {{Models}} with {{Hybrid AI Techniques}}},
	year = {2021}}

@inproceedings{Eramo2021303,
	author = {Eramo, R. and Muttillo, V. and Berardinelli, L. and Bruneliere, H. and Gomez, A. and Bagnato, A. and Sadovykh, A. and Cicchetti, A.},
	booktitle = {{{Euromicro Conference}} on {{Digital System Design}} ({DSD})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-66542-703-6},
	keywords = {GOAL_Model-Assistance,notion},
	pages = {303--310},
	publisher = {IEEE},
	title = {{{AIdoArt}}: {{AI-augmented}} Automation for {{DevOps}}, a Model-Based Framework for Continuous Development in Cyber-Physical Systems},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/DSD53832.2021.00053}}

@inproceedings{Ferdjoukh20131044,
	art_number = {6735367},
	author = {Ferdjoukh, A. and Baert, A.-E. and Chateau, A. and Coletta, R. and Nebut, C.},
	booktitle = {International Conference on Tools with Artificial Intelligence ({ICTAI})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 14:52:49 +0100},
	isbn = {978-1-4799-2971-9},
	issn = {10823409},
	keywords = {GOAL_Model-synthesis,notion,TECHNIQUE_CSP},
	pages = {1044--1051},
	title = {A {CSP} Approach for Metamodel Instantiation},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/ICTAI.2013.156}}

@article{Friedman00greedyfunction,
	author = {Jerome H. Friedman},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	journal = {Annals of Statistics},
	pages = {1189--1232},
	title = {Greedy Function Approximation: A Gradient Boosting Machine},
	volume = {29},
	year = {2000}}

@article{galassoCodeSophisticationCode2022,
	abstract = {A typical approach to programming is to first code the main execution scenario, and then focus on filling out alternative behaviors and corner cases. But, almost always, there exist unusual conditions that trigger atypical behaviors, which are hard to predict in program specifications, and are thus often not coded. In this paper, we consider the problem of detecting and recommending such missing behaviors, a task that we call code sophistication. Previous research on coding assistants usually focuses on recommending code fragments based on specifications of the intended behavior. In contrast, code sophistication happens in the absence of a specification, aiming to help developers complete the logic of their programs with missing and unspecified behaviors. We outline the research challenges to this problem and present early results showing how program logic can be completed by leveraging code structure and information about the usage of input parameters.},
	archiveprefix = {arXiv},
	author = {Galasso, Jessie and Famelis, Michalis and Sahraoui, Houari},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	eprint = {2201.07674},
	eprinttype = {arxiv},
	ids = {galassoCodeSophisticationCode2022a},
	journal = {arXiv:2201.07674 [cs]},
	keywords = {GOAL_Model-Assistance,TECHNIQUE_GraphConvolutionalNetworks},
	langid = {english},
	month = jan,
	primaryclass = {cs},
	shorttitle = {Code {{Sophistication}}},
	title = {Code {{Sophistication}}: {{From Code Recommendation}} to {{Logic Recommendation}}},
	urldate = {2022-01-25},
	year = {2022},
	bdsk-url-1 = {http://arxiv.org/abs/2201.07674}}

@article{Guha:1998:CEC:276305.276312,
	author = {Guha, Sudipto and Rastogi, Rajeev and Shim, Kyuseok},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-18 18:25:33 +0100},
	issn = {0163-5808},
	journal = {SIGMOD Rec.},
	month = jun,
	number = {2},
	numpages = {12},
	pages = {73--84},
	publisher = {ACM},
	title = {{CURE}: An Efficient Clustering Algorithm for Large Databases},
	volume = {27},
	year = {1998},
	bdsk-url-1 = {http://doi.acm.org/10.1145/276305.276312},
	bdsk-url-2 = {https://doi.org/10.1145/276305.276312}}

@inproceedings{hein2009model,
	author = {Hein, Christian and Ritter, Tom and Wagner, Michael},
	booktitle = {Workshop Future Trends of Model-Driven Development},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	pages = {50--52},
	title = {Model-driven tool integration with modelbus},
	year = {2009}}

@inproceedings{hessellund_guided_2007,
	abstract = {We study the Apache Open for Business (OFBiz), an industrial-strength platform for enterprise applications. OFBiz is an example of a substantial project using model-driven development with multiple domain-specific languages (DSLs). We identify consistency management as one of its key challenges. To address this challenge, we present SmartEMF, which is an extension of the Eclipse Modeling Framework that provides support for representing, checking, and maintaining constraints in the context of multiple loosely-coupled DSLs. SmartEMF provides a simple form of user guidance by computing the valid set of editing operations that are available in a given context. We evaluate the prototype by applying it to the OFBiz project.},
	author = {Hessellund, Anders and Czarnecki, Krzysztof and Wasowski, Andrzej},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:58:54 +0100},
	isbn = {978-3-540-75209-7},
	pages = {46--60},
	publisher = {Springer},
	title = {Guided {Development} with {Multiple} {Domain}-{Specific} {Languages}},
	year = {2007}}

@article{jain1999data,
	author = {Jain, Anil K and Murty, M Narasimha and Flynn, Patrick J},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	journal = {ACM computing surveys (CSUR)},
	number = {3},
	pages = {264--323},
	publisher = {ACM},
	title = {Data clustering: a review},
	volume = {31},
	year = {1999}}

@article{JMLR:v11:vishwanathan10a,
	author = {S.V.N. Vishwanathan and Nicol N. Schraudolph and Risi Kondor and Karsten M. Borgwardt},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of Machine Learning Research},
	number = {40},
	pages = {1201-1242},
	title = {Graph Kernels},
	volume = {11},
	year = {2010},
	bdsk-url-1 = {http://jmlr.org/papers/v11/vishwanathan10a.html}}

@inproceedings{karasneh2013online,
	author = {Karasneh, Bilal and Chaudron, Michel RV},
	booktitle = {EESSMOD@ MoDELS},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	pages = {61--66},
	title = {Online Img2UML Repository: An Online Repository for UML Models.},
	year = {2013}}

@article{Karypis:1999:CHC:619043.621303,
	acmid = {621303},
	author = {Karypis, George and Han, Eui-Hong (Sam) and Kumar, Vipin},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0018-9162},
	issue_date = {August 1999},
	journal = {Computer},
	month = aug,
	number = {8},
	numpages = {8},
	pages = {68--75},
	publisher = {IEEE Computer Society},
	title = {Chameleon: Hierarchical Clustering Using Dynamic Modeling},
	volume = {32},
	year = {1999},
	bdsk-url-1 = {http://dx.doi.org/10.1109/2.781637}}

@inproceedings{koegel2010emfstore,
	author = {Koegel, Maximilian and Helming, Jonas},
	booktitle = {2010 ACM/IEEE 32nd International Conference on Software Engineering},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	organization = {IEEE},
	pages = {307--308},
	title = {{EMFStore: a model repository for EMF models}},
	volume = {2},
	year = {2010}}

@article{kutsche2008bizycle,
	author = {Kutsche, Ralf and Milanovic, Nikola and Bauhoff, Gregor and Baum, Timo and Cartsburg, Mario and Kumpe, Daniel and Widiker, J{\"u}rgen},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	journal = {Proceedings of the MDTPI at ECMDA},
	title = {Bizycle: Model-based interoperability platform for software and data integration},
	volume = {430},
	year = {2008}}

@inproceedings{Lano2020277,
	abbrev_source_title = {Proc. - ACM/IEEE Int. Conf. Model Driven Eng. Lang. Syst., MODELS-C - Companion Proc.},
	author = {Lano, K. and Fang, S. and Umar, M.A. and {Yassipour-Tehrani}, S.},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MODELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4503-8135-2},
	keywords = {GOAL_Model-Transformation-Development,notion,TECHNIQUE_ILP},
	langid = {english},
	pages = {277--286},
	publisher = {ACM},
	source = {Scopus},
	title = {Enhancing Model Transformation Synthesis Using Natural Language Processing},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3417990.3421386}}

@inproceedings{Lano2021173,
	author = {Lano, K. and {Yassipour-Tehrani}, S. and Umar, M.A.},
	booktitle = {International Conference on Model-Driven Engineering Languages and Systems ({MODELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 14:54:57 +0100},
	isbn = {978-1-66542-484-4},
	keywords = {GOAL_Model-Requirements,notion,TECHNIQUE_DECISION-TREE},
	pages = {173--180},
	publisher = {IEEE},
	title = {Automated Requirements Formalisation for Agile {{MDE}}},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/MODELS-C53483.2021.00030}}

@article{ludovicoModelRepairQualityBased2020,
	abstract = {Domain modeling is a core activity in Model-Driven Engineering, and these models must be correct. A large number of artifacts may be constructed on top of these domain models, such as instance models, transformations, and editors. Similar to any other software artifact, domain models are subject to the introduction of errors during the modeling process. There are a number of existing tools that reduce the burden of manually dealing with correctness issues in models. Although various approaches have been proposed to support the quality assessment of modeling artifacts in the past decade, the quality of the automatically repaired models has not been the focus of repairing processes. In this paper, we propose the integration of an automatic evaluation of domain models based on a quality model with a framework for personalized and automatic model repair. The framework uses reinforcement learning to find the best sequence of actions for repairing a broken model.},
	author = {Ludovico, Iovino and Barriga, Angela and Rutle, Adrian and Heldal, Rogardt},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1660-1769},
	journal = {The Journal of Object Technology},
	keywords = {GOAL-Model_Repair,notion,TECHNIQUE_ReinforcementLearning},
	langid = {english},
	number = {2},
	pages = {17:1},
	title = {Model {{Repair}} with {{Quality-Based Reinforcement Learning}}.},
	volume = {19},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.5381/jot.2020.19.2.a17}}

@book{Manning:2008:IIR:1394399,
	author = {Manning, Christopher D. and Raghavan, Prabhakar and Sch\"{u}tze, Hinrich},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 16:02:33 +0100},
	isbn = {0521865719, 9780521865715},
	publisher = {Cambridge University Press},
	title = {Introduction to Information Retrieval},
	year = {2008}}

@inproceedings{Massoni2008FormalMP,
	author = {Tiago Lima Massoni and Rohit Gheyi and Paulo Borba},
	booktitle = {FASE},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	title = {Formal Model-Driven Program Refactoring},
	year = {2008}}

@article{MDE,
	author = {Schmidt, D. C.},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1558-0814},
	journal = {Computer},
	month = feb,
	number = {2},
	pages = {25--31},
	title = {Guest Editor's Introduction: {{Model}}-Driven Engineering},
	volume = {39},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1109/MC.2006.58}}

@article{mussbacher_opportunities_2020,
	abstract = {Modeling is requiring increasingly larger efforts while becoming indispensable given the complexity of the problems we are solving. Modelers face high cognitive load to understand a multitude of complex abstractions and their relationships. There is an urgent need to better support tool builders to ultimately provide modelers with intelligent modeling assistance that learns from previous modeling experiences, automatically derives modeling knowledge, and provides context-aware assistance. However, current intelligent modeling assistants (IMAs) lack adaptability and flexibility for tool builders, and do not facilitate understanding the differences and commonalities of IMAs for modelers. Such a patchwork of limited IMAs is a lost opportunity to provide modelers with better support for the creative and rigorous aspects of software engineering. In this expert voice, we present a conceptual reference framework (RF-IMA) and its properties to identify the foundations for intelligent modeling assistance. For tool builders, RF-IMA aims to help build IMAs more systematically. For modelers, RF-IMA aims to facilitate comprehension, comparison, and integration of IMAs, and ultimately to provide more intelligent support. We envision a momentum in the modeling community that leads to the implementation of RF-IMA and consequently future IMAs. We identify open challenges that need to be addressed to realize the opportunities provided by intelligent modeling assistance.},
	author = {Mussbacher, Gunter and Combemale, Benoit and Kienzle, J{\"o}rg and Abrah{\~a}o, Silvia and Ali, Hyacinth and Bencomo, Nelly and B{\'u}r, M{\'a}rton and Burgue{\~n}o, Loli and Engels, Gregor and Jeanjean, Pierre and J{\'e}z{\'e}quel, Jean-Marc and K{\"u}hn, Thomas and Mosser, S{\'e}bastien and Sahraoui, Houari and Syriani, Eugene and Varr{\'o}, D{\'a}niel and Weyssow, Martin},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1619-1366, 1619-1374},
	journal = {Software and Systems Modeling},
	language = {en},
	month = sep,
	number = {5},
	pages = {1045--1053},
	title = {Opportunities in intelligent modeling assistance},
	volume = {19},
	year = {2020},
	bdsk-url-1 = {http://link.springer.com/10.1007/s10270-020-00814-5},
	bdsk-url-2 = {https://doi.org/10.1007/s10270-020-00814-5}}

@article{Ng:2002:CMC:627342.628263,
	acmid = {628263},
	author = {Ng, Raymond T. and Han, Jiawei},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-07 11:14:09 +0100},
	issn = {1041-4347},
	journal = {Transactions on Knowledge and Data Engineering},
	keywords = {Spatial data mining, clustering algorithms, randomized search, computational geometry.},
	month = sep,
	number = {5},
	numpages = {14},
	pages = {1003--1016},
	publisher = {IEEE},
	title = {{CLARANS}: A Method for Clustering Objects for Spatial Data Mining},
	volume = {14},
	year = {2002},
	bdsk-url-1 = {http://dx.doi.org/10.1109/TKDE.2002.1033770}}

@article{Nguyen2021,
	abbrev_source_title = {J Syst Software},
	affiliation = {Universit\`a degli studi dell'Aquila, L'Aquila, 67100, Italy; Gran Sasso Science Institute, Italy},
	art_number = {110860},
	author = {Nguyen, P.T. and Di Ruscio, D. and Pierantonio, A. and Di Rocco, J. and Iovino, L.},
	coden = {JSSOD},
	correspondence_address1 = {Di Ruscio, D.; Universit\`a degli studi dell'AquilaItaly; email: davide.diruscio@univaq.it},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	document_type = {Article},
	issn = {01641212},
	journal = {Journal of Systems and Software},
	keywords = {GOAL_Model-Classification,notion,TECHNIQUE_CNN},
	langid = {english},
	publisher = {{Elsevier Inc.}},
	source = {Scopus},
	title = {Convolutional Neural Networks for Enhanced Classification Mechanisms of Metamodels},
	volume = {172},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2020.110860}}

@inproceedings{Nguyen2019272,
	author = {Nguyen, P.T. and {Di Rocco}, J. and {Di Ruscio}, D. and Pierantonio, A. and Iovino, L.},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:31:00 +0100},
	isbn = {978-1-72812-535-0},
	langid = {english},
	pages = {272--282},
	publisher = {IEEE},
	title = {Automated Classification of Metamodel Repositories: {A} Machine Learning Approach},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MODELS.2019.00011}}

@article{Nguyen20211797,
	abbrev_source_title = {Softw. Syst. Model.},
	affiliation = {Universit\`a degli studi dell'Aquila, L'Aquila, Italy; Gran Sasso Science Institute, L'Aquila, Italy},
	author = {Nguyen, P.T. and Di Rocco, J. and Iovino, L. and Di Ruscio, D. and Pierantonio, A.},
	correspondence_address1 = {Di Ruscio, D.; Universit\`a degli studi dell'AquilaItaly; email: davide.diruscio@univaq.it},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	document_type = {Article},
	issn = {16191366},
	journal = {Software and Systems Modeling},
	keywords = {GOAL_Model-Classification,notion,TECHNIQUE_NLP,TECHNIQUE_SVM},
	langid = {english},
	number = {6},
	pages = {1797--1821},
	publisher = {{Springer Science and Business Media Deutschland GmbH}},
	source = {Scopus},
	title = {Evaluation of a Machine Learning Classifier for Metamodels},
	volume = {20},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-021-00913-x}}

@article{NGUYEN2022117267,
	abstract = {To keep their code up-to-date with the newest functionalities as well as bug fixes offered by third-party libraries, developers often need to replace an old version of third-party libraries (TPLs) with a newer one. However, choosing a suitable version for a library to be upgraded is complex and susceptible to error. So far, Dependabot is the only tool that supports library upgrades; however, it targets only security fixes and singularly analyzes libraries without considering the whole set of related libraries. In this work, we propose DeepLib as a practical approach to learn upgrades for third-party libraries that have been performed by similar clients. Such upgrades are considered safe, i.e., they do not trigger any conflict, since, in the training clients, the libraries already co-exist without causing any compatibility or dependency issues. In this way, the upgrades provided by DeepLib allow developers to maintain a harmonious relationship with other libraries. By mining the development history of projects, we build migration matrices to train deep neural networks. Once being trained, the networks are then used to forecast the subsequent versions of the related libraries, exploiting the well-founded background related to the machine translation domain. As input, DeepLib accepts a set of library versions and returns a set of future versions to which developers should upgrade the libraries. The framework has been evaluated on two real-world datasets curated from the Maven Central Repository. The results show promising outcomes: DeepLib can recommend the next version for a library as well as a set of libraries under investigation. At its best performance, DeepLib gains a perfect match for several libraries, earning an accuracy of 1.0.},
	author = {Phuong T. Nguyen and Juri {Di Rocco} and Riccardo Rubei and Claudio {Di Sipio} and Davide {Di Ruscio}},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0957-4174},
	journal = {Expert Systems with Applications},
	keywords = {Mining software repositories, Deep learning, Encoder--decoder neural network, Third-party libraries upgrade},
	pages = {117267},
	title = {{DeepLib}: Machine translation techniques to recommend upgrades for third-party libraries},
	volume = {202},
	year = {2022},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0957417422006388},
	bdsk-url-2 = {https://doi.org/10.1016/j.eswa.2022.117267}}

@misc{nielsenneural,
	added-at = {2019-01-15T22:46:49.000+0100},
	author = {Nielsen, Michael A.},
	biburl = {https://www.bibsonomy.org/bibtex/274383acee84241145ff4ffede9658206/slicside},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	interhash = {04d527cadd39f888fc3babcad3343362},
	intrahash = {74383acee84241145ff4ffede9658206},
	keywords = {ba-2018-hahnrico},
	publisher = {Determination Press},
	timestamp = {2019-01-15T22:46:49.000+0100},
	title = {Neural Networks and Deep Learning},
	type = {misc},
	year = 2018,
	bdsk-url-1 = {http://neuralnetworksanddeeplearning.com/}}

@inproceedings{NIPS20173f5ee243,
	author = {Vaswani, Ashish and Shazeer, Noam and Parmar, Niki and Uszkoreit, Jakob and Jones, Llion and Gomez, Aidan N and Kaiser, \L ukasz and Polosukhin, Illia},
	booktitle = {Advances in Neural Information Processing Systems},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 14:54:39 +0100},
	publisher = {Curran Associates, Inc.},
	title = {Attention is All you Need},
	volume = {30},
	year = {2017},
	bdsk-url-1 = {https://proceedings.neurips.cc/paper/2017/file/3f5ee243547dee91fbd053c1c4a845aa-Paper.pdf}}

@misc{olah2020,
	author = {Christopher Olah},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = May,
	title = {{Understanding LSTM Networks}},
	year = {2020},
	bdsk-url-1 = {https://colah.github.io/posts/2015-08-Understanding-LSTMs/}}

@inproceedings{Padget201435,
	art_number = {6894854},
	author = {Padget, J. and Elakehal, E.E. and Satoh, K. and Ishikawa, F.},
	booktitle = {International Workshop on Artificial Intelligence for Requirements Engineering ({AIRE})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4799-6355-3},
	keywords = {GOAL_Model-Requirements,notion,TECHNIQUE_ASP},
	pages = {35--42},
	publisher = {IEEE},
	title = {On Requirements Representation and Reasoning Using Answer Set Programming},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/AIRE.2014.6894854}}

@article{parra-ullauriEventdrivenTemporalModels2022,
	abstract = {Abstract                            Modern software systems are increasingly expected to show higher degrees of autonomy and self-management to cope with uncertain and diverse situations. As a consequence, autonomous systems can exhibit unexpected and surprising behaviours. This is exacerbated due to the ubiquity and complexity of Artificial Intelligence (AI)-based systems. This is the case of Reinforcement Learning (RL), where autonomous agents learn through trial-and-error how to find good solutions to a problem. Thus, the underlying decision-making criteria may become opaque to users that interact with the system and who may require explanations about the system's reasoning. Available work for eXplainable Reinforcement Learning (XRL) offers different trade-offs: e.g. for runtime explanations, the approaches are model-specific or can only analyse results after-the-fact. Different from these approaches, this paper aims to provide an               online model-agnostic               approach for XRL towards trustworthy and understandable AI. We present ETeMoX, an architecture based on temporal models to keep track of the decision-making processes of RL systems. In cases where the resources are limited (e.g. storage capacity or time to response), the architecture also integrates complex event processing, an event-driven approach, for detecting matches to event patterns that need to be stored, instead of keeping the entire history. The approach is applied to a mobile communications case study that uses RL for its decision-making. In order to test the generalisability of our approach, three variants of the underlying RL algorithms are used: Q-Learning, SARSA and DQN. The encouraging results show that using the proposed configurable architecture, RL developers are able to obtain explanations about the evolution of a metric, relationships between metrics, and were able to track situations of interest happening over time windows.},
	author = {{Parra-Ullauri}, Juan Marcelo and {Garc{\'\i}a-Dom{\'\i}nguez}, Antonio and Bencomo, Nelly and Zheng, Changgang and Zhen, Chen and {Boubeta-Puig}, Juan and Ortiz, Guadalupe and Yang, Shufan},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1619-1366, 1619-1374},
	journal = {Software and Systems Modeling},
	keywords = {GOAL_ExplainableReinforcementLearning,notion,TECHNIQUE_ReinforcementLearning},
	month = jun,
	number = {3},
	pages = {1091--1113},
	title = {Event-Driven Temporal Models for Explanations - {{ETeMoX}}: Explaining Reinforcement Learning},
	volume = {21},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-021-00952-4}}

@article{PinnaPuissant2015461,
	author = {Pinna Puissant, Jorge and Van Der Straeten, Ragnhild and Mens, Tom},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {16191366},
	journal = {Software and Systems Modeling},
	keywords = {GOAL_Model-Repair,notion,TECHNIQUE_AutomatedRegressionPlanning},
	number = {1},
	pages = {461--481},
	publisher = {Springer},
	title = {Resolving Model Inconsistencies Using Automated Regression Planning},
	volume = {14},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-013-0317-9}}

@inproceedings{PotdarS14,
	author = {Aniket Potdar and Emad Shihab},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-28 11:59:00 +0100},
	pages = {91--100},
	publisher = {IEEE},
	timestamp = {Wed, 16 Oct 2019 14:14:50 +0200},
	title = {An Exploratory Study on Self-Admitted Technical Debt},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME.2014.31}}

@article{power_of_bots,
	author = {Wessel, Mairieli and de Souza, Bruno Mendes and Steinmacher, Igor and Wiese, Igor S. and Polato, Ivanilton and Chaves, Ana Paula and Gerosa, Marco A.},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Proc. ACM Hum.-Comput. Interact.},
	keywords = {pull request, bots, pull-based model, chatbots, open source software, automated agents},
	month = {11},
	number = {CSCW},
	title = {The Power of Bots: Characterizing and Understanding Bots in {OSS} Projects},
	volume = {2},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3274451}}

@article{Rasiman202235,
	abbrev_source_title = {Lect. Notes Comput. Sci.},
	affiliation = {Utrecht University, Utrecht, Netherlands},
	author = {Rasiman, R. and Dalpiaz, F. and Espa{\~n}a, S.},
	correspondence_address1 = {Dalpiaz, F.; Utrecht UniversityNetherlands; email: f.dalpiaz@uu.nl},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	document_type = {Conference Paper},
	editor = {Gervasi V., Vogelsang A.},
	isbn = {9783030984632},
	issn = {03029743},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	keywords = {GOAL_Trace-link-recovery,notion,TECHNIQUE_Gradient_Boosted_Decision_Trees,TECHNIQUE_RandomForests},
	langid = {english},
	pages = {35--51},
	publisher = {{Springer Science and Business Media Deutschland GmbH}},
	source = {Scopus},
	title = {How Effective Is Automated Trace Link Recovery in Model-Driven Development?},
	volume = {13216},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-98464-9_4},
	bdsk-url-2 = {https://doi.org/10.1007/978-3-030-98464-9%5C_4}}

@article{RePEc:eee:intfor:v:14:y:1998:i:1:p:35-62,
	author = {Zhang, Guoqiang and Patuwo, B. Eddy and Hu, Michael Y.},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {International Journal of Forecasting},
	number = {1},
	pages = {35-62},
	title = {Forecasting with artificial neural networks:: The state of the art},
	volume = {14},
	year = {1998},
	bdsk-url-1 = {https://EconPapers.repec.org/RePEc:eee:intfor:v:14:y:1998:i:1:p:35-62},
	bdsk-url-2 = {https://doi.org/10.1016/S0169-2070(97)00044-7}}

@inproceedings{Rigou2020,
	author = {Rigou, Y. and Lamontagne, D. and Khriss, I.},
	booktitle = {International Conference on Innovative Research in Applied Science, Engineering and Technology ({IRASET})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-18 18:26:52 +0100},
	isbn = {978-1-72814-979-0},
	publisher = {IEEE},
	title = {A Sketch of a Deep Learning Approach for Discovering {{UML}} Class Diagrams from System's Textual Specification},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/IRASET48871.2020.9092144}}

@book{Rojas:1996:NNS:235222,
	author = {Rojas, Ra\'{u}l},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:59:21 +0100},
	isbn = {3-540-60505-3},
	publisher = {Springer},
	title = {Neural Networks: A Systematic Introduction},
	year = {1996}}

@inbook{Rokach2005,
	address = {Boston, MA},
	author = {Rokach, Lior and Maimon, Oded},
	booktitle = {Data Mining and Knowledge Discovery Handbook},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-0-387-25465-4},
	pages = {321--352},
	publisher = {Springer},
	title = {Clustering Methods},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.1007/0-387-25465-X_15},
	bdsk-url-2 = {https://doi.org/10.1007/0-387-25465-X%5C_15}}

@inproceedings{Rubei2021477,
	author = {Rubei, R. and Rocco, J.D. and Ruscio, D.D. and Nguyen, P.T. and Pierantonio, A.},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:32:47 +0100},
	isbn = {978-1-66542-484-4},
	pages = {477--482},
	publisher = {IEEE},
	title = {A Lightweight Approach for the Automated Classification and Clustering of Metamodels},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/MODELS-C53483.2021.00074}}

@article{Saini20221015,
	abbrev_source_title = {Softw. Syst. Model.},
	affiliation = {Department of Electrical and Computer Engineering, McGill University, Montr\'eal, Canada; School of Computer Science, McGill University, Montr\'eal, Canada},
	author = {Saini, R. and Mussbacher, G. and Guo, J.L.C. and Kienzle, J.},
	correspondence_address1 = {Saini, R.; Department of Electrical and Computer Engineering, Canada; email: rijul.saini@mail.mcgill.ca},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	document_type = {Article},
	issn = {16191366},
	journal = {Software and Systems Modeling},
	keywords = {GOAL_Model-Assistance,notion,TECHNIQUE_Gradient_Boosted_Decision_Trees,TECHNIQUE_RandomForests},
	langid = {english},
	number = {3},
	pages = {1015--1045},
	publisher = {{Springer Science and Business Media Deutschland GmbH}},
	source = {Scopus},
	title = {Automated, Interactive, and Traceable Domain Modelling Empowered by Artificial Intelligence},
	volume = {21},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-021-00942-6}}

@inproceedings{sainiArtificialIntelligenceEmpowered2020,
	author = {Saini, Rijul},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 17:47:52 +0100},
	isbn = {978-1-4503-8135-2},
	month = oct,
	pages = {1--6},
	publisher = {ACM},
	title = {Artificial Intelligence Empowered Domain Modelling Bot},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3417990.3419486}}

@inproceedings{sainiTeachingModellingLiteracy2019,
	abstract = {In Model-Driven Engineering (MDE), models are used to build and analyze complex systems. In the last decades, different modelling formalisms have been proposed for supporting software development. However, their adoption and practice strongly rely on mastering essential modelling skills to develop a complete and coherent model-based system. Moreover, it is often difficult for novice modellers to get direct and timely feedback and recommendations on their modelling strategies and decisions, particularly in large classroom settings which hinders their learning. Certainly, there is an opportunity to apply Artificial Intelligence (AI) techniques to an MDE learning environment to empower the provisioning of automated and intelligent modelling advocacy. In this paper, we propose a framework called ModBud (a modelling buddy) to educate novice modellers about the art of abstraction. ModBud uses natural language processing (NLP) and machine learning (ML) to create modelling bots with the aim of improving the modelling skills of novice modellers and assisting other practitioners, too. These bots could be used to support teaching with automatic creation or grading of models and enhance learning beyond the traditional classroom-based MDE education with timely feedback and personalized tutoring. Research challenges for the proposed framework are discussed and a research roadmap is presented.},
	author = {Saini, Rijul and Mussbacher, Gunter and Guo, Jin L.C. and Kienzle, Joerg},
	booktitle = {International Conference on Model Driven Engineering Languages and Systems ({MoDELS})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-03-12 15:02:34 +0100},
	isbn = {978-1-72815-125-0},
	keywords = {GOAL_Model-Teaching,notion,TECHNIQUE_DependencyGraph},
	month = sep,
	pages = {714--719},
	publisher = {IEEE},
	title = {Teaching {{Modelling Literacy}}: {{An Artificial Intelligence Approach}}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MODELS-C.2019.00108}}

@article{schmidt2006model,
	author = {Schmidt, Douglas C},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2022-10-11 16:30:37 +0200},
	journal = {Computer-IEEE Computer Society-},
	number = {2},
	pages = {25},
	publisher = {Citeseer},
	title = {Model-driven engineering},
	volume = {39},
	year = {2006}}

@article{Sidhu2022166,
	author = {Sidhu, B.K. and Singh, K. and Sharma, N.},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1206212X},
	journal = {International Journal of Computers and Applications},
	keywords = {GOAL_Model-Refactoring,notion,TECHNIQUE_DNN},
	number = {2},
	pages = {166--177},
	publisher = {{Taylor and Francis Ltd.}},
	title = {A Machine Learning Approach to Software Model Refactoring},
	volume = {44},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1080/1206212X.2020.1711616}}

@article{SIERRA201970,
	abstract = {Technical Debt is a metaphor used to express sub-optimal source code implementations that are introduced for short-term benefits that often need to be paid back later, at an increased cost. In recent years, various empirical studies have focused on investigating source code comments that indicate Technical Debt often referred to as Self-Admitted Technical Debt (SATD). Since the introduction of SATD as a concept, an increasing number of studies have examined various aspects pertaining to SATD. Therefore, in this paper we survey research work on SATD, analyzing the characteristics of current approaches and techniques for SATD detection, comprehension, and repayment. To motivate the submission of novel and improved work, we compile tools, resources, and data sets made available to replicate or extend current SATD research. To set the stage for future work, we identify open challenges in the study of SATD, areas that are missing investigation, and discuss potential future research avenues.},
	author = {Giancarlo Sierra and Emad Shihab and Yasutaka Kamei},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Self admitted technical debt, Software maintenance, Literature survey, Source code comments},
	pages = {70-82},
	title = {A survey of self-admitted technical debt},
	volume = {152},
	year = {2019},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121219300457},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2019.02.056}}

@inproceedings{Steinbach00,
	author = {Steinbach, M. and Karypis, G. and Kumar, V.},
	booktitle = {ACM SIGKDD World Text Mining Conference},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 17:38:06 +0100},
	description = {WSD},
	title = {A comparison of document clustering techniques},
	year = 2000}

@inproceedings{Stephan201921,
	author = {Stephan, M.},
	booktitle = {International Conference on Software Engineering: New Ideas and Emerging Results ({ICSE-NIER})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:34:09 +0100},
	isbn = {978-1-72811-758-4},
	pages = {21--24},
	publisher = {IEEE},
	title = {Towards a Cognizant Virtual Software Modeling Assistant Using Model Clones},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-NIER.2019.00014}}

@book{Sutton1998,
	added-at = {2019-07-13T10:11:53.000+0200},
	author = {Sutton, Richard S. and Barto, Andrew G.},
	biburl = {https://www.bibsonomy.org/bibtex/2f46601cf8b13d39d1378af0d79438b12/lanteunis},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	edition = {Second},
	interhash = {ac6b144aaec1819919a2fba9f705c852},
	intrahash = {f46601cf8b13d39d1378af0d79438b12},
	publisher = {The MIT Press},
	timestamp = {2019-07-13T10:11:53.000+0200},
	title = {Reinforcement Learning: An Introduction},
	year = {2018},
	bdsk-url-1 = {http://incompleteideas.net/book/the-book-2nd.html}}

@inproceedings{Tang2019385,
	author = {Tang, X. and Wang, Z. and Qi, J. and Li, Z.},
	booktitle = {International Conference on Software Engineering and Knowledge Engineering ({SEKE})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:34:59 +0100},
	isbn = {1-891706-48-9},
	pages = {385--390},
	title = {Improving Code Generation from Descriptive Text by Combining Deep Learning and Syntax Rules},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.18293/SEKE2019-170}}

@article{Weyssow20221071,
	abbrev_source_title = {Softw. Syst. Model.},
	affiliation = {DIRO, Universit\'e de Montr\'eal, Montreal, Canada},
	author = {Weyssow, M. and Sahraoui, H. and Syriani, E.},
	correspondence_address1 = {Weyssow, M.; DIRO, Canada; email: martin.weyssow@umontreal.ca},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	document_type = {Article},
	issn = {16191366},
	journal = {Software and Systems Modeling},
	keywords = {GOAL_Model-Assistance,notion,TECHNIQUE_LSTM},
	langid = {english},
	number = {3},
	pages = {1071--1089},
	publisher = {{Springer Science and Business Media Deutschland GmbH}},
	source = {Scopus},
	title = {Recommending Metamodel Concepts during Modeling Activities with Pre-Trained Language Models},
	volume = {21},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10270-022-00975-5}}

@inproceedings{white2015toward,
	author = {White, Martin and Vendome, Christopher and Linares-V{\'a}squez, Mario and Poshyvanyk, Denys},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 17:18:03 +0100},
	organization = {IEEE},
	pages = {334--345},
	title = {Toward deep learning software repositories},
	year = {2015}}

@article{Zhang_Babar_Tell_2011,
	author = {Zhang, He and Babar, Muhammad Ali and Tell, Paolo},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	number = {6},
	pages = {625--637},
	title = {Identifying relevant studies in software engineering},
	volume = {53},
	year = {2011},
	bdsk-url-1 = {https://doi.org/10.1016/j.infsof.2010.12.010}}

@article{Zhang:1997:BND:593415.593443,
	acmid = {593443},
	author = {Zhang, Tian and Ramakrishnan, Raghu and Livny, Miron},
	date-added = {2022-10-11 16:30:37 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1384-5810},
	issue_date = {1997},
	journal = {Data Min. Knowl. Discov.},
	keywords = {Data Classification and Compression, Data Clustering, Incremental Algorithm, Very Large Databases},
	month = jan,
	number = {2},
	numpages = {42},
	pages = {141--182},
	publisher = {Kluwer Academic Publishers},
	title = {{BIRCH}: A New Data Clustering Algorithm and Its Applications},
	volume = {1},
	year = {1997},
	bdsk-url-1 = {https://doi.org/10.1023/A:1009783824328}}

@inproceedings{2013:middleware:hummer,
	author = {Waldemar Hummer and Florian Rosenberg and F\'abio Oliveira and Tamar Eilam},
	booktitle = {ACM/IFIP/USENIX International Middleware Conference},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {368--388},
	title = {Testing Idempotence for Infrastructure as Code},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-45065-5%5C_19}}

@inproceedings{2016:msr:sharma,
	author = {Sharma, Tushar and Fragkoulis, Marios and Spinellis, Diomidis},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-12-15 18:13:09 +0100},
	pages = {189-200},
	title = {Does Your Configuration Code Smell?},
	year = {2016}}

@inproceedings{2016:pldi:shambaugh,
	author = {Shambaugh, Rian and Weiss, Aaron and Guha, Arjun},
	booktitle = {SIGPLAN Conference on Programming Language Design and Implementation ({PLDI})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	numpages = {15},
	pages = {416--430},
	publisher = {ACM},
	title = {Rehearsal: A Configuration Verification Tool for {P}uppet},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2908080.2908083}}

@inproceedings{2018:saner:bent,
	author = {van der Bent, Eduard and Hage, Jurriaan and Visser, Joost and Gousios, Georgios},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {164-174},
	title = {How good is your {Puppet}? An empirically defined and validated quality model for {Puppet}},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2018.8330206}}

@inproceedings{2019:icse:rahman,
	author = {Rahman, Akond and Parnin, Chris and Williams, Laurie},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {164--175},
	series = {ICSE '19},
	title = {The Seven Sins: Security Smells in Infrastructure as Code Scripts},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2019.00033}}

@article{2019:ist:rahman,
	author = {Akond Rahman and Rezvan Mahdavi-Hezaveh and Laurie Williams},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Devops, Configuration as code, Configuration script, Continuous deployment, Infrastructure as code, Software engineering, Systematic mapping study},
	pages = {65-77},
	title = {A systematic mapping study of infrastructure as code research},
	volume = {108},
	year = {2019},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0950584918302507},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2018.12.004}}

@article{2019:ist:rahman-props,
	author = {Akond Rahman and Laurie Williams},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Configuration as code, Continuous deployment, Defect prediction, Devops, Empirical study, Infrastructure as code, Puppet},
	pages = {148-163},
	title = {Source code properties of defective infrastructure as code scripts},
	volume = {112},
	year = {2019},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0950584919300965},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2019.04.013}}

@inproceedings{2020:icse:sotiropoulos,
	author = {Sotiropoulos, Thodoris and Mitropoulos, Dimitris and Spinellis, Diomidis},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {26--37},
	title = {Practical Fault Detection in {P}uppet Programs},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3377811.3380384}}

@article{2020:jss:dallapalma,
	author = {Stefano {Dalla Palma} and Dario {Di Nucci} and Fabio Palomba and Damian Andrew Tamburri},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-03-12 15:30:23 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Infrastructure as code, Software metrics, Software quality},
	title = {Toward a catalog of software quality metrics for infrastructure code},
	volume = {170},
	year = {2020},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121220301618},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2020.110726}}

@misc{2020:opdebeeck:voyager,
	author = {Opdebeeck, Ruben and Zerouali, Ahmed and Vel{\'a}zquez-Rodr{\'\i}guez, Camillo and De Roover, Coen},
	month = sep,
	publisher = {Zenodo},
	title = {Replication package of {SCAM 2020} {Ansible} role Semantic Versioning empirical study},
	version = {v1.0.0},
	year = 2020,
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.4041169}}

@inproceedings{2020:qrs:kokuryo,
	author = {Kokuryo, Shoma and Kondo, Masanari and Mizuno, Osamu},
	booktitle = {International Conference on Software Quality, Reliability and Security ({QRS})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {442-449},
	title = {An Empirical Study of Utilization of Imperative Modules in {A}nsible},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/QRS51102.2020.00063}}

@inproceedings{2020:socc:dai,
	author = {Dai, Ting and Karve, Alexei and Koper, Grzegorz and Zeng, Sai},
	booktitle = {Symposium on Cloud Computing ({SoCC})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {358--371},
	publisher = {ACM},
	title = {Automatically Detecting Risky Scripts in Infrastructure Code},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3419111.3421303}}

@article{2021:jss:opdebeeck,
	articleno = {111059},
	author = {Ruben Opdebeeck and Ahmed Zerouali and Camilo Vel{\'a}zquez-Rodr{\'\i}guez and Coen {De Roover}},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of Systems and Software},
	month = dec,
	numpages = {21},
	title = {On the practice of semantic versioning for {Ansible Galaxy} roles: An empirical study and a change classification model},
	volume = {182},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2021.111059}}

@inproceedings{2021:msr:opdebeeck,
	author = {Opdebeeck, Ruben and Zerouali, Ahmed and De Roover, Coen},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {580--584},
	title = {Andromeda: {A} Dataset of {A}nsible {G}alaxy Roles and Their Evolution},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/MSR52588.2021.00078}}

@article{2021:tsem:rahman,
	author = {Rahman, Akond and Rahman, Md Rayhanur and Parnin, Chris and Williams, Laurie},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 18:24:33 +0100},
	journal = {Transactions on Software Engineering and Methodology},
	month = jan,
	number = {1},
	publisher = {ACM},
	title = {Security Smells in {A}nsible and {C}hef Scripts: A Replication Study},
	volume = {30},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3408897}}

@article{2022:emse:borovits,
	author = {Nemania Borovits and Indika Kumara and Dario {Di Nucci} and Parvathy Krishnan and Stefano {Dalla Palma} and Fabio Palomba and Damian A. Tamburri and Willem-Jan {van den Heuvel}},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {178},
	title = {{FindICI}: Using machine learning to detect linguistic inconsistencies between code and natural language descriptions in infrastructure-as-code},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-022-10215-5}}

@inproceedings{2022:icsa:chiari,
	author = {Chiari, Michele and De Pascalis, Michele and Pradella, Matteo},
	booktitle = {International Conference on Software Architecture ({ICSA})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {218-225},
	title = {Static Analysis of Infrastructure as Code: a Survey},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/ICSA-C54293.2022.00049}}

@inproceedings{2022:icse:horton,
	author = {Horton, Eric and Parnin, Chris},
	booktitle = {International Conference on Software Engineering: Software Engineering in Practice ({ICSE-SEIP})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {147-148},
	title = {Dozer: Migrating Shell Commands to {A}nsible Modules via Execution Profiling and Synthesis},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3510457.3513060}}

@inproceedings{2022:icst:hassan,
	author = {Hassan, Mohammad Mehedi and Rahman, Akond},
	booktitle = {International Conference on Software Testing, Verification and Validation ({ICST})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {208-219},
	title = {As Code Testing: Characterizing Test Quality in Open Source {A}nsible Development},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/ICST53961.2022.00031}}

@inproceedings{2022:msr:opdebeeck,
	abstract = {Infrastructure as Code is the practice of automating the provision- ing, configuration, and orchestration of network nodes using code in which variable values such as configuration parameters, node hostnames, etc. play a central role. Mistakes in these values are an important cause of infrastructure defects and corresponding outages. Ansible, a popular IaC language, nonetheless features se- mantics which can cause confusion about the value of variables.In this paper, we identify six novel code smells related to Ansi- ble's intricate variable precedence rules and lazy-evaluated template expressions. Their detection requires an accurate representation of control and data flow, for which we transpose the program depen- dence graph to Ansible. We use the resulting detector to empirically investigate the prevalence of these variable smells in 21,931 open- source Ansible roles, uncovering 31,334 unique smell instances across 4,260 roles. We observe an upward trend in the number of variable smells over time, that it may take a long time before they are fixed, and that code changes more often introduce new smells than fix existing ones. Our results are a call to arms for more in- depth quality checkers for IaC code, and highlight the importance of transcending syntax in IaC research.},
	author = {Ruben Opdebeeck and Ahmed Zerouali and {De Roover}, Coen},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {ACM},
	title = {Smelly Variables in {A}nsible Infrastructure Code: Detection, Prevalence, and Lifetime},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524842.3527964}}

@article{2022:tse:dallapalma,
	author = {Dalla Palma, Stefano and Di Nucci, Dario and Palomba, Fabio and Tamburri, Damian A.},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 18:22:45 +0100},
	journal = {Transactions on Software Engineering},
	number = {6},
	pages = {2086-2104},
	publisher = {IEEE},
	title = {Within-Project Defect Prediction of Infrastructure-as-Code Using Product and Process Metrics},
	volume = {48},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2021.3051492}}

@misc{anchoreSurvey17,
	author = {{Anchore.io}},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	howpublished = {https://anchore.com/wp-content/uploads/2017/04/Anchore-Container-Survey-5.pdf},
	month = {April},
	note = {accessed: 01/12/2019},
	title = {Snapshot of the Container Ecosystem},
	year = {2017}}

@article{azuma2022empirical,
	author = {Azuma, Hideaki and Matsumoto, Shinsuke and Kamei, Yasutaka and Kusumoto, Shinji},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	journal = {Empirical Software Engineering},
	number = {2},
	pages = {1--26},
	publisher = {Springer},
	title = {An empirical study on self-admitted technical debt in Dockerfiles},
	volume = {27},
	year = {2022}}

@article{boettiger2015introduction,
	author = {Boettiger, Carl},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {ACM SIGOPS Operating Systems Review},
	number = {1},
	pages = {71--79},
	publisher = {ACM},
	title = {An introduction to {Docker} for reproducible research},
	volume = {49},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2723872.2723882}}

@inproceedings{cito2017empirical,
	author = {Cito, J{\"u}rgen and Schermann, Gerald and Wittern, John Erik and Leitner, Philipp and Zumberi, Sali and Gall, Harald C},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	pages = {323--333},
	title = {An empirical analysis of the {Docker} container ecosystem on {GitHub}},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2017.67}}

@article{combe2016docker,
	author = {Combe, Theo and Martin, Antony and Di Pietro, Roberto},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Cloud Computing},
	number = {5},
	pages = {54--62},
	title = {To {Docker} or Not to {Docker}: A Security Perspective},
	volume = {3},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/MCC.2016.100}}

@misc{Dockerfile,
	author = {{Docker Inc.}},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	howpublished = {https://docs.docker.com/engine/reference/builder/},
	note = {Accessed: 20 August 2020},
	title = {{Dockerfile} reference},
	year = {2020}}

@article{dockerSurvey15,
	author = {Bettini, Anthony},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-03-07 15:45:02 +0100},
	journal = {FlawCheck, Black Hat Europe},
	title = {Vulnerability exploitation in {Docker} container environments},
	year = {2015}}

@inproceedings{guerriero2019adoption,
	author = {Guerriero, Michele and Garriga, Martin and Tamburri, Damian A and Palomba, Fabio},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-12-15 18:29:54 +0100},
	organization = {IEEE},
	pages = {580--589},
	title = {Adoption, support, and challenges of infrastructure-as-code: Insights from industry},
	year = {2019}}

@misc{gummaraju2015over,
	author = {Gummaraju, Jayanth and Desikan, Tarun and Turner, Yoshio},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	institution = {BanyanOps Blog},
	title = {Over 30\% of official images in {Docker Hub }contain high priority security vulnerabilities},
	year = {2015}}

@inproceedings{henkel2020learning,
	author = {Henkel, Jordan and Bird, Christian and Lahiri, Shuvendu K and Reps, Thomas},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-12-15 18:24:33 +0100},
	organization = {IEEE},
	pages = {38--49},
	title = {Learning from, understanding, and supporting DevOps artifacts for Docker},
	year = {2020}}

@inproceedings{henkel2021shipwright,
	author = {Henkel, Jordan and Silva, Denini and Teixeira, Leopoldo and d'Amorim, Marcelo and Reps, Thomas},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	pages = {1148--1160},
	title = {Shipwright: A Human-in-the-Loop System for {Dockerfile} Repair},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE43902.2021.00106}}

@misc{henriksson2017static,
	author = {Henriksson, Oscar and Falk, Michael},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-03-07 15:44:48 +0100},
	title = {Static vulnerability analysis of {Docker} images},
	year = {2017}}

@inproceedings{ksontini2021refactorings,
	author = {Ksontini, Emna and Kessentini, Marouane and Ferreira, Thiago do N and Hassan, Foyzul},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	pages = {781--791},
	title = {Refactorings and Technical Debt in Docker Projects: An Empirical Study},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ASE51524.2021.9678585}}

@article{kwon2020divds,
	author = {Kwon, Soonhong and Lee, Jong-Hyouk},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Access},
	publisher = {IEEE},
	title = {DIVDS: Docker Image Vulnerability Diagnostic System},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ACCESS.2020.2976874}}

@inproceedings{lin2020large,
	author = {Lin, Changyuan and Nadi, Sarah and Khazaei, Hamzeh},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-03-12 15:54:00 +0100},
	doi = {10.1109/ICSME46990.2020.00043},
	organization = {IEEE},
	pages = {371--381},
	title = {A large-scale data set and an empirical study of {Docker} images hosted on {Docker Hub}},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME46990.2020.00043}}

@article{lu2019empirical,
	author = {Lu, Zhigang and Xu, Jiwei and Wu, Yuewen and Wang, Tao and Huang, Tao},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Access},
	publisher = {IEEE},
	title = {An empirical case study on the temporary file smell in {Dockerfiles}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ACCESS.2019.2905424}}

@mastersthesis{luu2019deep,
	author = {Socchi, Emilien and Luu, Jonathan},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	school = {University of Oslo},
	title = {A Deep Dive into {Docker Hub}'s Security Landscape -- A story of inheritance?},
	year = {2019}}

@article{rosa2022fixing,
	author = {Rosa, Giovanni and Scalabrino, Simone and Oliveto, Rocco},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 18:39:14 +0100},
	journal = {International Conference on Software Maintenance and Evolution ({ICSME})},
	title = {Fixing Dockerfile Smells: An Empirical Study},
	year = {2022}}

@inproceedings{shu2017study,
	author = {Shu, Rui and Gu, Xiaohui and Enck, William},
	booktitle = {International Conference on Data and Application Security and Privacy},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {ACM},
	pages = {269--280},
	title = {A Study of Security Vulnerabilities on {Docker Hub}},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1145/3029806.3029832}}

@misc{snykReport19,
	author = {Vermeer, Brian and Henry, William},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-03-12 15:51:41 +0100},
	howpublished = {https://snyk.io/blog/shifting-docker-security-left/},
	note = {accessed: 02/11/2019},
	title = {Shifting {Docker} security left},
	year = {2019}}

@misc{DockerAnalyzer,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {https://deepsource.io/docs/analyzer/docker/},
	title = {DeepSource Docker Analyzer},
	year = {2023}}

@misc{VScodeDocker,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {https://github.com/microsoft/vscode-docker},
	title = {VSCode Docker Extension},
	year = {2023}}

@misc{HadolintDocker,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {https://hadolint.github.io/hadolint/},
	title = {Hadolint: A Dockerfile Linter},
	year = {2023}}

@dataset{DockerLinetal,
	author = {Lin, Changyuan and Nadi, Sarah and Khazaei, Hamzeh},
	doi = {10.5281/zenodo.3862987},
	publisher = {Zenodo},
	title = {A large-scale data set of {Docker} images hosted on {Docker Hub}},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.3862987}}

@misc{SOSurvey21,
	author = {{Stack Overflow}},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	howpublished = {https://insights.stackoverflow.com/survey/2021},
	note = {accessed: 12/02/2022},
	title = {2020 Stack Overflow Developer Survey},
	year = {2021}}

@misc{SOSurvey22,
	author = {{Stack Overflow}},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	howpublished = {https://survey.stackoverflow.co/2022/},
	note = {accessed: 28/09/2022},
	title = {2022 Stack Overflow Developer Survey},
	year = {2022},
	bdsk-file-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxBALi4vLi4vLi4vLi4vRG93bmxvYWRzLzEwLjEwMDclMkY5NzgtMy0zMTktNjkxOTEtNl84LWNpdGF0aW9uLmJpYk8RAboAAAAAAboAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////x8xMC4xMDA3JTJGOTc4LTMtMzEjRkZGRkZGRkYuYmliAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAQAAgAACiBjdQAAAAAAAAAAAAAAAAAJRG93bmxvYWRzAAACAEQvOlVzZXJzOnRvbW1lbnM6RG93bmxvYWRzOjEwLjEwMDclMkY5NzgtMy0zMTktNjkxOTEtNl84LWNpdGF0aW9uLmJpYgAOAFYAKgAxADAALgAxADAAMAA3ACUAMgBGADkANwA4AC0AMwAtADMAMQA5AC0ANgA5ADEAOQAxAC0ANgBfADgALQBjAGkAdABhAHQAaQBvAG4ALgBiAGkAYgAPABoADABNAGEAYwBpAG4AdABvAHMAaAAgAEgARAASAEJVc2Vycy90b21tZW5zL0Rvd25sb2Fkcy8xMC4xMDA3JTJGOTc4LTMtMzE5LTY5MTkxLTZfOC1jaXRhdGlvbi5iaWIAEwABLwAAFQACAA7//wAAAAgADQAaACQAZwAAAAAAAAIBAAAAAAAAAAUAAAAAAAAAAAAAAAAAAAIl}}

@article{wu2020characterizing,
	author = {Wu, Yiwen and Zhang, Yang and Wang, Tao and Wang, Huaimin},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-11 16:28:47 +0200},
	journal = {IEEE Access},
	pages = {34127--34139},
	publisher = {IEEE},
	title = {Characterizing the occurrence of dockerfile smells in open-source software: An empirical study},
	volume = {8},
	year = {2020}}

@inproceedings{xu2019dockerfile,
	author = {Xu, Jiwei and Wu, Yuewen and Lu, Zhigang and Wang, Tao},
	booktitle = {Annual Computer Software and Applications Conference ({COMPSAC})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	pages = {185--190},
	title = {Dockerfile {TF} smell detection based on dynamic and static analysis methods},
	volume = {1},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/COMPSAC.2019.00033}}

@inproceedings{zerouali2018empirical,
	author = {Zerouali, Ahmed and Constantinou, Eleni and Mens, Tom and Robles, Gregorio and Gonz{\'a}lez-Barahona, Jes{\'u}s},
	booktitle = {International Conference on Software Reuse ({ICSR})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {Springer},
	pages = {95--110},
	series = {Lecture Notes in Computer Science},
	title = {An empirical analysis of technical lag in npm package dependencies},
	volume = {10826},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-90421-4%5C_6}}

@inproceedings{zerouali2019conpan,
	author = {Zerouali, Ahmed and Cosentino, Valerio and Robles, Gregorio and Gonzalez-Barahona, Jesus M and Mens, Tom},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-11-29 15:23:36 +0100},
	organization = {IEEE},
	pages = {592--596},
	title = {{Conpan}: a tool to analyze packages in software containers},
	year = {2019}}

@inproceedings{zerouali2019impact,
	author = {Zerouali, Ahmed and Cosentino, Valerio and Mens, Tom and Robles, Gregorio and Gonzalez-Barahona, Jesus M},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-11-29 15:23:50 +0100},
	organization = {IEEE},
	pages = {619--623},
	title = {On the impact of outdated and vulnerable {JavaScript} packages in {Docker} images},
	year = {2019}}

@article{zerouali2021usage,
	author = {Zerouali, Ahmed and Mens, Tom and De Roover, Coen},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-10-16 15:30:48 +0200},
	journal = {Science of Computer Programming},
	pages = {102653},
	publisher = {Elsevier},
	title = {On the usage of {JavaScript}, {Python} and {Ruby} packages in {Docker Hub} images},
	volume = {207},
	year = {2021}}

@inproceedings{zhang2022recommending,
	author = {Zhang, Yinyuan and Zhang, Yang and Mao, Xinjun and Wu, Yiwen and Lin, Bo and Wang, Shangwen},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2022-11-29 15:19:55 +0100},
	organization = {IEEE},
	pages = {449--453},
	title = {Recommending Base Image for Docker Containers based on Deep Configuration Comprehension},
	year = {2022}}

@inproceedings{zhou2019semitagrec,
	author = {Zhou, Jiahong and Chen, Wei and Wu, Guoquan and Wei, Jun},
	booktitle = {International Conference on Software and Systems Reuse},
	date-added = {2022-10-11 16:28:47 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {Springer},
	pages = {132--148},
	title = {{SemiTagRec}: A Semi-supervised Learning Based Tag Recommendation Approach for {Docker} Repositories},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-22888-0_10}}

@inproceedings{AbdellatifBotHunter2022,
	author = {Abdellatif, Ahmad and Wessel, Mairieli and Steinmacher, Igor and Gerosa, Marco A. and Shihab, Emad},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	keywords = {bot (internet);feature extraction;transformers;software;encoding;data mining;time factors},
	month = {may},
	pages = {6-17},
	publisher = {IEEE Computer Society},
	title = {{BotHunter}: An Approach to Detect Software Bots in {GitHub}},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524842.3527959}}

@inproceedings{Alfadel2021,
	abstract = {Software ecosystems play an important role in modern software development, providing an open platform of reusable packages that speed up and facilitate development tasks. However, this level of code reusability supported by software ecosystems also makes the discovery of security vulnerabilities much more difficult, as software systems depend on an increasingly high number of packages. Recently, security vulnerabilities in the npm ecosystem, the ecosystem of Node.js packages, have been studied in the literature. As different software ecosystems embodied different programming languages and particularities, we argue that it is also important to study other popular programming languages to build stronger empirical evidence about vulnerabilities in software ecosystems.In this paper, we present an empirical study of 550 vulnerability reports affecting 252 Python packages in the Python ecosystem (PyPi). In particular, we study the propagation and life span of security vulnerabilities, accounting for how long they take to be discovered and fixed. Our findings show that the discovered vulnerabilities in Python packages are increasing over time, and they take more than 3 years to be discovered. The majority of these vulnerabilities (50.55%) are only fixed after being publicly announced, giving ample time for attackers exploitation. We find similarities in some characteristics of vulnerabilities in PyPi and npm and divergences that can be attributed to specific PyPi policies. By leveraging our findings, we provide a series of implications that can help the security of software ecosystems by improving the process of discovering, fixing and managing package vulnerabilities.},
	author = {Mahmoud Alfadel and Diego Elias Costa and Emad Shihab and Emad Shihab},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {Empirical Analysis of Security Vulnerabilities in {Python} Packages},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/saner50967.2021.00048}}

@article{Arora2016,
	author = {Arora, Ritu and Goel, Sanjay and Mittal, R.},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Software: Practice and Experience},
	month = dec,
	title = {Supporting collaborative software development over {GitHub}},
	volume = {47},
	year = 2016,
	bdsk-url-1 = {https://doi.org/10.1002/spe.2468}}

@inproceedings{Avelino2019,
	author = {Avelino, Guilherme and Constantinou, Eleni and Valente, Marco Tulio and Serebrenik, Alexander},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1-12},
	title = {On the abandonment and survival of open source projects: An empirical investigation},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ESEM.2019.8870181}}

@techreport{beck2001manifesto,
	author = {Beck, Kent and Beedle, Mike and Van Bennekum, Arie and Cockburn, Alistair and Cunningham, Ward and Fowler, Martin and Grenning, James and Highsmith, Jim and Hunt, Andrew and Jeffries, Ron and others},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:33:50 +0200},
	institution = {Snowbird, UT},
	title = {Manifesto for agile software development},
	year = 2001}

@inproceedings{beller2017oops,
	author = {Beller, Moritz and Gousios, Georgios and Zaidman, Andy},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {356--367},
	publisher = {IEEE},
	title = {Oops, my tests broke the build: An explorative analysis of {Travis CI} with {GitHub}},
	year = {2017}}

@inproceedings{bernardo2018studying,
	author = {Bernardo, Jo{\~a}o Helis and da Costa, Daniel Alencar and Kulesza, Uir{\'a}},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {131--141},
	publisher = {IEEE},
	title = {Studying the impact of adopting continuous integration on the delivery time of pull requests},
	year = {2018}}

@inproceedings{Brown2019,
	author = {Brown, Chris and Parnin, Chris},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-12-06 11:31:09 +0100},
	publisher = {IEEE},
	title = {Sorry to Bother You: Designing Bots for Effective Recommendations},
	year = {2019}}

@inproceedings{brown2021nudging,
	author = {Brown, Chris and Parnin, Chris},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {11--15},
	publisher = {IEEE},
	title = {Nudging Students Toward Better Software Engineering Behaviors},
	year = {2021}}

@inproceedings{CasseeMixedAccounts,
	author = {Cassee, Nathan and Kitsanelis, Christos and Constantinou, Eleni and Serebrenik, Alexander},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {654-658},
	publisher = {IEEE},
	title = {Human, bot or both? {A} study on the capabilities of classification models on mixed accounts},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME52107.2021.00075}}

@inproceedings{Catolino2021,
	author = {Catolino, Gemma and Palomba, Fabio and Tamburri, Damian A. and Serebrenik, Alexander},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {77-86},
	title = {Understanding Community Smells Variability: A Statistical Approach},
	year = 2021,
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-SEIS52602.2021.00017}}

@book{Chandrasekara2021,
	author = {Chandrasekara, Chaminda and Herath, Pushpa},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4842-6463-8},
	publisher = {Apress},
	title = {Hands-on {GitHub Actions}: Implement {CI/C}D with {GitHub Action} Workflows for Your Applications},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/978-1-4842-6464-5}}

@inproceedings{Chen2021GHA,
	author = {Chen, Tingting and Zhang, Yang and Chen, Shu and Wang, Tao and Wu, Yiwen},
	booktitle = {International Conference on Software Quality, Reliability and Security Companion ({QRS-C})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {IEEE},
	title = {Let's Supercharge the Workflows: An Empirical Study of {GitHub Actions}},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/QRS-C55045.2021.00163}}

@article{cogo2021deprecation,
	author = {Cogo, Filipe Roseiro and Oliva, Gustavo Ansaldi and Hassan, Ahmed E},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-03-07 11:14:19 +0100},
	journal = {Transactions on Software Engineering},
	publisher = {IEEE},
	title = {Deprecation of packages and releases in software ecosystems: A case study on npm},
	year = {2021}}

@article{Constantinou2017,
	abstract = {Software ecosystems can be viewed as socio-technical networks consisting of technical components (software packages) and social components (communities of developers) that maintain the technical components. Ecosystems evolve over time through socio-technical changes that may greatly impact the ecosystem's sustainability. Social changes like developer turnover may lead to technical degradation. This motivates the need to identify those factors leading to developer abandonment, in order to automate the process of identifying developers with high abandonment risk. This paper compares such factors for two software package ecosystems, RubyGems and npm. We analyse the evolution of their packages hosted on GitHub, considering development activity in terms of commits, and social interaction with other developers in terms of comments associated to commits, issues or pull requests. We analyse this socio-technical activity for more than 30 and 60k developers for RubyGems and npm, respectively. We use survival analysis to identify which factors coincide with a lower survival probability. Our results reveal that developers with a higher probability to abandon an ecosystem: do not engage in discussions with other developers; do not have strong social and technical activity intensity; communicate or commit less frequently; and do not participate to both technical and social activities for long periods of time. Such observations could be used to automate the identification of developers with a high probability of abandoning the ecosystem and, as such, reduce the risks associated to knowledge loss.},
	author = {Constantinou, Eleni and Mens, Tom},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1614-5054},
	journal = {Innovations in Systems and Software Engineering},
	number = {2},
	pages = {101--115},
	title = {An empirical comparison of developer retention in the {RubyGems} and npm software ecosystems},
	volume = {13},
	year = 2017,
	bdsk-url-1 = {https://doi.org/10.1007/s11334-017-0303-4}}

@inproceedings{costa2011scale,
	author = {Costa, Jean M and Cataldo, Marcelo and de Souza, Cleidson R},
	booktitle = {SIGCHI Conference on Human Factors in Computing Systems},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {3151--3160},
	title = {The scale and evolution of coordination needs in large-scale distributed projects: implications for the future generation of collaborative tools},
	year = {2011}}

@inproceedings{Dabbish2012,
	abstract = {Social applications on the web let users track and follow the activities of a large number of others regardless of location or affiliation. There is a potential for this transparency to radically improve collaboration and learning in complex knowledge-based activities. Based on a series of in-depth interviews with central and peripheral GitHub users, we examined the value of transparency for large-scale distributed collaborations and communities of practice. We find that people make a surprisingly rich set of social inferences from the networked activity information in GitHub, such as inferring someone else's technical goals and vision when they edit code, or guessing which of several similar projects has the best chance of thriving in the long term. Users combine these inferences into effective strategies for coordinating work, advancing technical skills and managing their reputation.},
	author = {Dabbish, Laura and Stuart, Colleen and Tsay, Jason and Herbsleb, Jim},
	booktitle = {International Conference on Computer Supported Cooperative Work ({CSCW})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	keywords = {transparency, coordination, open source software development, awareness, social computing, collaboration},
	pages = {1277--1286},
	publisher = {ACM},
	title = {Social Coding in {GitHub}: Transparency and Collaboration in an Open Software Repository},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1145/2145204.2145396}}

@inproceedings{decan2017empirical,
	author = {Decan, Alexandre and Mens, Tom and Claes, Ma\"elick},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	title = {An empirical comparison of dependency issues in {OSS} packaging ecosystems},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2017.7884604}}

@inproceedings{decan2018evolution,
	author = {Decan, Alexandre and Mens, Tom and Constantinou, Eleni},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	organization = {IEEE},
	pages = {404--414},
	title = {On the evolution of technical lag in the npm package dependency network},
	year = {2018}}

@inproceedings{decan2018impact,
	author = {Decan, Alexandre and Mens, Tom and Constantinou, Eleni},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {181--191},
	title = {On the impact of security vulnerabilities in the npm package dependency network},
	year = {2018}}

@article{decan2021back,
	author = {Decan, Alexandre and Mens, Tom and Zerouali, Ahmed and De Roover, Coen},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-03-07 11:13:03 +0100},
	journal = {Transactions on Software Engineering},
	publisher = {IEEE},
	title = {Back to the Past -- Analysing Backporting Practices in Package Dependency Networks},
	year = {2021}}

@inproceedings{decanuse,
	author = {Decan, Alexandre and Mens, Tom and Mazrae, Pooya Rostami and Golzadeh, Mehdi},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	publisher = {IEEE},
	title = {On the Use of {GitHub Actions} in Software Development Repositories},
	year = 2022}

@inproceedings{dietrich2019dependency,
	author = {Dietrich, Jens and Pearce, David and Stringer, Jacob and Tahir, Amjed and Blincoe, Kelly},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	organization = {IEEE},
	pages = {349--359},
	title = {Dependency versioning in the wild},
	year = {2019}}

@article{Dusing2021,
	abstract = {In modern-day software development, a vast amount of public software libraries enable the reuse of existing implementations. While this practice does yield significant benefits in productivity, it also puts an increasing amount of responsibility on library maintainers. Given the fact that libraries are often interconnected, the impact of a single vulnerability may be large, and is hard to quantify. Recent studies indicate that developers in fact struggle with upgrading vulnerable dependencies, despite an ever-increasing support by automated tools. With our work we improve on this situation by providing an in-depth analysis on how developers handle dependency upgrades. In order to do so, we contribute a miner for artifact dependency graphs, which also annotates vulnerability information. We execute our application and generate a data set for Maven Central, NuGet.org and the NPM Registry. Afterwards, we conduct an extensive analysis on our data, which is aimed at understanding the impact of vulnerabilities for the three different repositories. Finally, we summarize the resulting risks and derive mitigation strategies based on our findings. For all repositories we found that vulnerabilities influence libraries via long transitive dependency chains, and that vulnerable libraries may affect thousands of other libraries transitively.},
	author = {Johannes D\"using and Ben Hermann},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Digital Threats: Research and Practice},
	publisher = {ACM},
	title = {Analyzing the Direct and Transitive Impact of Vulnerabilities onto Different Artifact Repositories},
	year = 2021,
	bdsk-url-1 = {https://doi.org/10.1145/3472811}}

@article{elazhary2021uncovering,
	author = {Elazhary, Omar and Werner, Colin and Li, Ze Shi and Lowlind, Derek and Ernst, Neil A and Storey, Margaret-Anne},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-03-07 11:21:53 +0100},
	journal = {Transactions on Software Engineering},
	publisher = {IEEE},
	title = {Uncovering the benefits and challenges of continuous integration practices},
	year = {2021}}

@inproceedings{embury2018effect,
	author = {Embury, Suzanne M and Page, Christopher},
	booktitle = {International Workshop on Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {169--183},
	publisher = {Springer},
	title = {Effect of continuous integration on build health in undergraduate team projects},
	year = {2018}}

@inproceedings{Erlenhov2019,
	author = {Erlenhov, Linda and de Oliveira Neto, Francisco Gomes and Scandariato, Riccardo and Leitner, Philipp},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	pages = {7--11},
	title = {Current and future bots in software development},
	year = 2019,
	bdsk-url-1 = {https://doi.org/10.1109/BotSE.2019.00009}}

@inproceedings{erlenhov2020empirical,
	abstract = {Software engineering bots -- automated tools that handle tedious tasks -- are increasingly used by industrial and open source projects to improve developer productivity. Current research in this area is held back by a lack of consensus of what software engineering bots (DevBots) actually are, what characteristics distinguish them from other tools, and what benefits and challenges are associated with DevBot usage. In this paper we report on a mixed-method empirical study of DevBot usage in industrial practice. We report on findings from interviewing 21 and surveying a total of 111 developers. We identify three different personas among DevBot users (focusing on autonomy, chat interfaces, and ``smartness''), each with different definitions of what a DevBot is, why developers use them, and what they struggle with.We conclude that future DevBot research should situate their work within our framework, to clearly identify what type of bot the work targets, and what advantages practitioners can expect. Further, we find that there currently is a lack of general purpose ``smart'' bots that go beyond simple automation tools or chat interfaces. This is problematic, as we have seen that such bots, if available, can have a transformative effect on the projects that use them.},
	author = {Erlenhov, Linda and Neto, Francisco Gomes de Oliveira and Leitner, Philipp},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450370431},
	keywords = {Software engineering, Software bot, Empirical study},
	pages = {445--455},
	publisher = {ACM},
	title = {An Empirical Study of Bots in Software Development: Characteristics and Challenges from a Practitioner's Perspective},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3368089.3409680}}

@article{Foundjem:2022wx,
	abstract = {Technical collaboration between multiple contributors is a natural phenomenon in distributed open source software development projects. Macro-collaboration, where each code commit is attributed to a single collaborator, has been extensively studied in the research literature. This is much less the case for so-called micro-collaboration practices, in which multiple authors contribute to the same commit. To support such practices, GitLab and GitHub started supporting social coding mechanisms such as the ``Co-Authored-By:''trailers in commit messages, which, in turn, enable to empirically study such micro-collaboration. In order to understand the mechanisms, benefits and limitations of micro-collaboration, this article provides an exemplar case study of collaboration practices in the OpenStack ecosystem. Following a mixed-method research approach we provide qualitative evidence through a thematic and content analysis of semi-structured interviews with 16 OpenStack contributors. We contrast their perception with quantitative evidence gained by statistical analysis of the git commit histories ({\$}{$\backslash$}sim {\$}1M commits) and Gerrit code review histories ({\$}{$\backslash$}sim {\$}631K change sets and {\$}{$\backslash$}sim {\$}2M patch sets) of 1,804 OpenStack project repositories over a 9-year period. Our findings provide novel empirical insights to practitioners to promote micro-collaborative coding practices, and to academics to conduct further research towards understanding and automating the micro-collaboration process.},
	author = {Foundjem, Armstrong and Constantinou, Eleni and Mens, Tom and Adams, Bram},
	date = {2022/06/18},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	id = {Foundjem2022},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {120},
	title = {A mixed-methods analysis of micro-collaborative coding practices in OpenStack},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-022-10167-w}}

@misc{Fowler2000,
	author = {Fowler, Martin and Foemmel, Matthew},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	howpublished = {\url{https://martinfowler.com/articles/originalContinuousIntegration.html}},
	month = {September},
	note = {[Online; accessed 3 January 2022]},
	title = {{Continuous Integration}},
	year = {2000}}

@article{ghaleb2019empirical,
	author = {Ghaleb, Taher Ahmed and Da Costa, Daniel Alencar and Zou, Ying},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {2102--2139},
	publisher = {Springer},
	title = {An empirical study of the long duration of continuous integration builds},
	volume = {24},
	year = {2019}}

@inproceedings{Golzadeh2021SANER,
	author = {Golzadeh, Mehdi and Decan, Alexandre and Mens, Tom},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	organization = {IEEE},
	title = {On the rise and fall of {CI} services in {GitHub}},
	year = {2021}}

@inproceedings{gonzalez2017technical,
	author = {Gonzalez-Barahona, Jesus M and Sherwood, Paul and Robles, Gregorio and Izquierdo, Daniel},
	booktitle = {IFIP International Conference on Open Source Systems},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {182--192},
	publisher = {Springer},
	title = {Technical lag in software compilations: Measuring how outdated a software deployment is},
	year = {2017}}

@inproceedings{Gousios2014,
	author = {Gousios, Georgios and Pinzger, Martin and van Deursen, Arie},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450327565},
	keywords = {distributed software development, empirical software engineering, Pull-based development, pull request},
	pages = {345--355},
	publisher = {ACM},
	title = {An Exploratory Study of the Pull-Based Software Development Model},
	year = 2014,
	bdsk-url-1 = {https://doi.org/10.1145/2568225.2568260}}

@inproceedings{Gousios2016,
	author = {Gousios, Georgios and Storey, Margaret-Anne and Bacchelli, Alberto},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450339001},
	keywords = {GitHub, distributed software development, pull-based development, open source contribution, pull request},
	pages = {285--296},
	publisher = {ACM},
	title = {Work Practices and Challenges in Pull-Based Development: The Contributor's Perspective},
	year = 2016,
	bdsk-url-1 = {https://doi.org/10.1145/2884781.2884826}}

@inproceedings{hilton2016usage,
	author = {Hilton, Michael and Tunnell, Timothy and Huang, Kai and Marinov, Darko and Dig, Danny},
	booktitle = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {426--437},
	publisher = {IEEE},
	title = {Usage, costs, and benefits of continuous integration in open-source projects},
	year = {2016}}

@inproceedings{Kaur2022,
	author = {Kaur, R. and Kaur, K.},
	booktitle = {Intelligent Sustainable Systems},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {Springer},
	series = {Lecture Notes in Networks and Systems},
	title = {Insights into Developers' Abandonment in {FLOSS} Projects},
	volume = {333},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/978-981-16-6309-3_69},
	bdsk-url-2 = {https://doi.org/10.1007/978-981-16-6309-3%5C_69}}

@inproceedings{kinsman2021software,
	author = {Kinsman, Timothy and Wessel, Mairieli and Gerosa, Marco A. and Treude, Christoph},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-12 15:42:22 +0200},
	pages = {420--431},
	publisher = {IEEE},
	title = {How do software developers use {GitHub Actions} to automate their workflows?},
	year = {2021}}

@article{kula2018developers,
	author = {Kula, Raula Gaikovina and German, Daniel M and Ouni, Ali and Ishio, Takashi and Inoue, Katsuro},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {384--417},
	publisher = {Springer},
	title = {Do developers update their library dependencies?},
	volume = {23},
	year = {2018}}

@inproceedings{mirhosseini2017can,
	author = {Mirhosseini, Samim and Parnin, Chris},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-5386-2684-9},
	numpages = {11},
	pages = {84--94},
	publisher = {IEEE},
	title = {Can Automated Pull Requests Encourage Software Developers to Upgrade Out-of-date Dependencies?},
	year = {2017},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=3155562.3155577},
	bdsk-url-2 = {https://doi.org/10.1109/ASE.2017.8115621}}

@inproceedings{monperrus2019explainable,
	author = {Monperrus, Martin},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-12-15 18:17:35 +0100},
	organization = {IEEE},
	pages = {12--15},
	title = {Explainable software bot contributions: Case study of automated bug fixes},
	year = {2019}}

@article{munaiah2017curating,
	author = {Munaiah, Nuthan and Kroh, Steven and Cabrey, Craig and Nagappan, Meiyappan},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	journal = {Empirical Software Engineering},
	number = {6},
	pages = {3219--3253},
	publisher = {Springer},
	title = {Curating github for engineered software projects},
	volume = {22},
	year = {2017}}

@misc{octoverse2022,
	author = {GitHub},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {The state of open source software},
	year = {2022},
	bdsk-url-1 = {octoverse.github.com},
	bdsk-url-2 = {https://octoverse.github.com/2022}}

@article{Peng2019,
	author = {Peng, Zhenhui and Ma, Xiaojuan},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	day = {01},
	issn = {2524-5228},
	journal = {CCF Transactions on Pervasive Computing and Interaction},
	month = {Nov},
	number = {3},
	pages = {190--203},
	title = {Exploring how software developers work with mention bot in {GitHub}},
	volume = {1},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/s42486-019-00013-2}}

@inproceedings{rausch2017empirical,
	author = {Rausch, Thomas and Hummer, Waldemar and Leitner, Philipp and Schulte, Stefan},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {345--355},
	publisher = {IEEE},
	title = {An empirical analysis of build failures in the continuous integration workflows of java-based open-source software},
	year = {2017}}

@inproceedings{ribeiro2022,
	author = {Ribeiro, Eric and Nascimento, Ronan and Steinmacher, Igor and Xavier, Laerte and Gerosa, Marco and De Paula, Hugo and Wessel, Mairieli},
	booktitle = {International Conference on Software Maintenance and Evolution - New Ideas and Emerging Results Track ({ICSME-NIER})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-03-12 15:50:31 +0100},
	publisher = {IEEE},
	title = {Together or Apart? Investigating a mediator bot to aggregate bot's comments on pull requests},
	year = {2022}}

@inproceedings{savor2016continuous,
	author = {Savor, Tony and Douglas, Mitchell and Gentili, Michael and Williams, Laurie and Beck, Kent and Stumm, Michael},
	booktitle = {International Conference on Software Engineering Companion ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {21--30},
	publisher = {IEEE},
	title = {Continuous deployment at {Facebook} and {OANDA}},
	year = {2016}}

@article{soares2022effects,
	author = {Soares, Eliezio and Sizilio, Gustavo and Santos, Jadson and da Costa, Daniel Alencar and Kulesza, Uir{\'a}},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {1--61},
	publisher = {Springer},
	title = {The effects of continuous integration on software development: a systematic literature review},
	volume = {27},
	year = {2022}}

@inproceedings{SongBee,
	abstract = {This paper introduces BEE, a tool that automatically analyzes user-written bug reports and provides feedback to reporters and developers about the system's observed behavior (OB), expected behavior (EB), and the steps to reproduce the bug (S2R). BEE employs machine learning to (i) detect if an issue describes a bug, an enhancement, or a question; (ii) identify the structure of bug descriptions by automatically labeling the sentences that correspond to the OB, EB, or S2R; and (iii) detect when bug reports fail to provide these elements. BEE is integrated with GitHub and offers a public web API that researchers can use to investigate bug management tasks based on bug reports. We evaluated BEE's underlying models on more than 5k existing bug reports and found they can correctly detect OB, EB, and S2R sentences as well as missing information in bug reports. BEE is an open-source project that can be found at <a>https://git.io/JfFnN</a>. A screencast showing the full capabilities of BEE can be found at <a>https://youtu.be/8pC48f_hClw</a>.},
	author = {Song, Yang and Chaparro, Oscar},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450370431},
	keywords = {text analysis, bug report structure, bug report quality, Bug reporting},
	pages = {1551--1555},
	publisher = {ACM},
	title = {{BEE}: A Tool for Structuring and Analyzing Bug Reports},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3368089.3417928}}

@article{soto2021comprehensive,
	author = {Soto-Valero, C{\'e}sar and Harrand, Nicolas and Monperrus, Martin and Baudry, Benoit},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {1--44},
	publisher = {Springer},
	title = {A comprehensive study of bloated dependencies in the {Maven} ecosystem},
	volume = {26},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-020-09914-8}}

@inproceedings{staahl2014automated,
	author = {St{\aa}hl, Daniel and Bosch, Jan},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {54--63},
	title = {Automated software integration flows in industry: A multiple-case study},
	year = {2014}}

@inproceedings{Tsay2014,
	author = {Tsay, Jason and Dabbish, Laura and Herbsleb, James},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450327565},
	keywords = {transparency, social media, GitHub, social computing, signaling theory, open source, contribution},
	pages = {356--366},
	publisher = {ACM},
	title = {Influence of Social and Technical Factors for Evaluating Contribution in {GitHub}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2568225.2568315}}

@inproceedings{valiev2018ecosystem,
	author = {Valiev, Marat and Vasilescu, Bogdan and Herbsleb, James},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {644--655},
	publisher = {ACM},
	title = {Ecosystem-level determinants of sustained activity in open-source projects: A case study of the {PyPI} ecosystem},
	year = {2018}}

@inproceedings{vasilescu2015quality,
	author = {Vasilescu, Bogdan and Yu, Yue and Wang, Huaimin and Devanbu, Premkumar and Filkov, Vladimir},
	booktitle = {Joint meeting on Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-17 11:34:18 +0200},
	pages = {805--816},
	title = {Quality and productivity outcomes relating to continuous integration in {GitHub}},
	year = {2015}}

@inproceedings{vassallo2019automated,
	author = {Vassallo, Carmine and Proksch, Sebastian and Gall, Harald C and Di Penta, Massimiliano},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {105--115},
	publisher = {IEEE},
	title = {Automated reporting of anti-patterns and decay in continuous integration},
	year = {2019}}

@article{Wang2022-butler,
	author = {Wang, Zhendong and Wang, Yi and Redmiles, David},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Software},
	publisher = {IEEE},
	title = {From Specialized Mechanics to Project Butlers: the Usage of Bots in {OSS} Development},
	year = 2022,
	bdsk-url-1 = {https://doi.org/10.1109/MS.2022.3180297}}

@inproceedings{wessel2020effects,
	author = {Wessel, Mairieli and Serebrenik, Alexander and Wiese, Igor and Steinmacher, Igor and Gerosa, Marco A.},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-12 15:42:43 +0200},
	pages = {1--11},
	publisher = {IEEE},
	title = {Effects of adopting code review bots on pull requests to {OSS} projects},
	year = {2020}}

@inproceedings{wessel2020expect,
	author = {Wessel, Mairieli and Serebrenik, Alexander and Wiese, Igor and Steinmacher, Igor and Gerosa, Marco A.},
	booktitle = {Brazilian Symposium on Software Engineering ({SBES})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {457--462},
	title = {What to expect from code review bots on {GitHub}? {A} survey with {OSS} maintainers},
	year = {2020}}

@article{wessel2022emse,
	abstract = {Software bots have been facilitating several development activities in Open Source Software (OSS) projects, including code review. However, these bots may bring unexpected impacts to group dynamics, as frequently occurs with new technology adoption. Understanding and anticipating such effects is important for planning and management. To analyze these effects, we investigate how several activity indicators change after the adoption of a code review bot. We employed a regression discontinuity design on 1,194 software projects from GitHub. We also interviewed 12 practitioners, including open-source maintainers and contributors. Our results indicate that the adoption of code review bots increases the number of monthly merged pull requests, decreases monthly non-merged pull requests, and decreases communication among developers. From the developers' perspective, these effects are explained by the transparency and confidence the bot comments introduce, in addition to the changes in the discussion focused on pull requests. Practitioners and maintainers may leverage our results to understand, or even predict, bot effects on their projects.},
	author = {Wessel, Mairieli and Serebrenik, Alexander and Wiese, Igor and Steinmacher, Igor and Gerosa, Marco A.},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {1573-7616},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {108},
	title = {Quality gatekeepers: investigating the effects of code review bots on pull request activities},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-022-10130-9}}

@article{wessel2022github,
	author = {Wessel, Mairieli and Vargovich, Joseph and Gerosa, Marco A. and Treude, Christoph},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-12 15:40:58 +0200},
	journal = {arXiv preprint arXiv:2206.14118},
	title = {GitHub Actions: The Impact on the Pull Request Process},
	year = {2022}}

@inproceedings{WesselICSE2022,
	author = {Wessel, Mairieli and Abdellatif, Ahmad and Wiese, Igor and Conte, Tayana and Shihab, Emad and Gerosa, Marco A. and Steinmacher, Igor},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {274-286},
	title = {Bots for Pull Requests: The Good, the Bad, and the Promising},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3510003.3512765}}

@inproceedings{widder2018m,
	author = {Widder, David and Vasilescu, Bogdan and Hilton, Michael and K{\"a}stner, Christian},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {165--169},
	publisher = {IEEE},
	title = {I'm leaving you, Travis: a continuous integration breakup story},
	year = {2018}}

@inproceedings{Wyrich2019,
	author = {Wyrich, Marvin and Bogner, Justus},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {24--28},
	title = {Towards an Autonomous Bot for Automatic Source Code Refactoring},
	year = {2019}}

@inproceedings{wyrich2021bots,
	author = {Wyrich, Marvin and Ghit, Raoul and Haller, Tobias and M{\"u}ller, Christian},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {6--10},
	publisher = {IEEE},
	title = {Bots don't mind waiting, do they? {C}omparing the interaction with automatically and manually created pull requests},
	year = {2021}}

@inproceedings{zampetti2017open,
	author = {Zampetti, Fiorella and Scalabrino, Simone and Oliveto, Rocco and Canfora, Gerardo and Di Penta, Massimiliano},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	pages = {334--344},
	publisher = {IEEE},
	title = {How open source projects use static code analysis tools in continuous integration pipelines},
	year = {2017}}

@inproceedings{Zerouali2019Docker,
	author = {Zerouali, Ahmed and Mens, Tom and Robles, Gregorio and Gonzalez-Barahona, Jesus M.},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {491-501},
	publisher = {IEEE},
	title = {On the Relation between Outdated Docker Containers, Severity Vulnerabilities, and Bugs},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2019.8668013}}

@article{zerouali2019formal,
	author = {Zerouali, Ahmed and Mens, Tom and Gonzalez-Barahona, Jesus and Decan, Alexandre and Constantinou, Eleni and Robles, Gregorio},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-11-29 15:22:48 +0100},
	journal = {Journal of Software: Evolution and Process},
	number = {8},
	publisher = {Wiley},
	title = {A formal framework for measuring technical lag in component repositories---and its application to npm},
	volume = {31},
	year = {2019}}

@article{zerouali2021multi,
	author = {Zerouali, Ahmed and Mens, Tom and Decan, Alexandre and Gonzalez-Barahona, Jesus and Robles, Gregorio},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2022-10-11 16:27:14 +0200},
	journal = {Empirical Software Engineering},
	number = {2},
	pages = {1--45},
	publisher = {Springer},
	title = {A multi-dimensional analysis of technical lag in {Debian}-based {Docker} images},
	volume = {26},
	year = {2021}}

@article{zerouali2022impact,
	author = {Zerouali, Ahmed and Mens, Tom and Decan, Alexandre and De Roover, Coen},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {1--45},
	publisher = {Springer},
	title = {On the impact of security vulnerabilities in the npm and {RubyGems} dependency networks},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-022-10154-1}}

@inproceedings{zimmermann2019small,
	author = {Zimmermann, Markus and Staicu, Cristian-Alexandru and Tenny, Cam and Pradel, Michael},
	booktitle = {USENIX Security Symposium},
	date-added = {2022-10-11 16:27:14 +0200},
	date-modified = {2023-02-21 15:05:13 +0100},
	pages = {995--1010},
	title = {Small world with high risks: A study of security threats in the npm ecosystem},
	year = {2019}}

@inproceedings{abdi22testTransplantation,
	author = {Abdi, Mehrdad and Demeyer, Serge},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	location = {Limassol, Cyprus},
	publisher = {IEEE},
	title = {Test Transplantation through Dynamic Test Slicing},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/SCAM55253.2022.00009}}

@inproceedings{Zhang2017Transplantation,
	author = {Zhang, Tianyi and Kim, Miryung},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 16:42:19 +0100},
	isbn = {9781538638682},
	pages = {665 --- 676},
	publisher = {IEEE},
	title = {Automated Transplantation and Differential Testing for Clones},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2017.67}}

@inproceedings{Zhang2018TransplantationGrafter,
	author = {Zhang, Tianyi and Kim, Miryung},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-modified = {2023-02-21 18:08:26 +0100},
	isbn = {9781450356633},
	numpages = {2},
	pages = {422--423},
	publisher = {ACM},
	title = {Grafter: Transplantation and Differential Testing for Clones},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3183440.3195038}}

@article{Salihin2021PatchTransplantation,
	author = {Shariffdeen, Ridwan Salihin and Tan, Shin Hwei and Gao, Mingyuan and Roychoudhury, Abhik},
	date-modified = {2023-03-07 11:12:50 +0100},
	issn = {1049-331X},
	journal = {Transactions on Software Engineering Methodology},
	month = {dec},
	number = {1},
	publisher = {ACM},
	title = {Automated Patch Transplantation},
	volume = {30},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3412376}}

@inproceedings{Deheng2023TransplantFix,
	author = {Yang, Deheng and Mao, Xiaoguang and Chen, Liqian and Xu, Xuezheng and Lei, Yan and Lo, David and He, Jiayu},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-modified = {2023-02-26 17:18:35 +0100},
	publisher = {ACM},
	title = {TransplantFix: Graph Differencing-Based Code Transplantation for Automated Program Repair},
	year = {2023},
	bdsk-url-1 = {https://doi.org/10.1145/3551349.3556893}}

@inproceedings{alves:RcodeReview:2014,
	author = {Alves, Everton L. G. and Song, Myoungkyu and Kim, Miryung},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450330565},
	keywords = {refactoring, Software evolution},
	pages = {751--754},
	publisher = {ACM},
	title = {{RefDistiller}: A Refactoring Aware Code Review Tool for Inspecting Manual Refactoring Edits},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2635868.2661674}}

@inproceedings{Ananieva:SPLC:2020,
	author = {Ananieva, Sofia and Greiner, Sandra and K\"{u}hn, Thomas and Kr\"{u}ger, Jacob and Linsbauer, Lukas and Gr\"{u}ner, Sten and Kehrer, Timo and Klare, Heiko and Koziolek, Anne and L\"{o}nn, Henrik and Krieter, Sebastian and Seidl, Christoph and Ramesh, S. and Reussner, Ralf and Westfechtel, Bernhard},
	booktitle = {International Conference on Systems and Software Product Lines ({SPLC})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-12 15:56:55 +0100},
	doi = {10.1145/3382025.3414955},
	publisher = {ACM},
	title = {A Conceptual Model for Unifying Variability in Space and Time},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3382025.3414955}}

@inproceedings{Barr2015Automated,
	abstract = {Automated transplantation would open many exciting avenues for software development: suppose we could autotransplant code from one system into another, entirely unrelated, system. This paper introduces a theory, an algorithm, and a tool that achieve this. Leveraging lightweight annotation, program analysis identifies an organ (interesting behavior to transplant); testing validates that the organ exhibits the desired behavior during its extraction and after its implantation into a host. While we do not claim automated transplantation is now a solved problem, our results are encouraging: we report that in 12 of 15 experiments, involving 5 donors and 3 hosts (all popular real-world systems), we successfully autotransplanted new functionality and passed all regression tests. Autotransplantation is also already useful: in 26 hours computation time we successfully autotransplanted the H.264 video encoding functionality from the x264 system to the VLC media player; compare this to upgrading x264 within VLC, a task that we estimate, from VLC's version history, took human programmers an average of 20 days of elapsed, as opposed to dedicated, time.},
	author = {Barr, Earl T. and Harman, Mark and Jia, Yue and Marginean, Alexandru and Petke, Justyna},
	booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450336208},
	keywords = {Automated software transplantation, genetic improvement, autotransplantation},
	pages = {257--269},
	publisher = {ACM},
	title = {Automated Software Transplantation},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2771783.2771796}}

@inproceedings{Baysal:patches:2012,
	author = {Baysal, Olga and Kononenko, Oleksii and Holmes, Reid and Godfrey, Michael W.},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {447-455},
	title = {The Secret Life of Patches: A {Firefox} Case Study},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1109/WCRE.2012.54}}

@article{borba:JTCS:2012,
	author = {Borba, Paulo and Teixeira, Leopoldo and Gheyi, Rohit},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Theoretical Computer Science},
	numpages = {29},
	pages = {2--30},
	publisher = {Elsevier Science Publishers Ltd.},
	title = {A Theory of Software Product Line Refinement},
	volume = {455},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1016/j.tcs.2012.01.031}}

@inproceedings{brito:R-API:2018,
	author = {Brito, Aline and Xavier, Laerte and Hora, Andre and Valente, Marco Tulio},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {507-511},
	title = {{APIDiff}: Detecting {API} breaking changes},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2018.8330249}}

@inproceedings{businge:2018icsme,
	author = {John Businge and Moses Openja and Sarah Nadi and Engineer Bainomugisha and Thorsten Berger},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-28 12:01:21 +0100},
	pages = {625--634},
	publisher = {IEEE},
	title = {Clone-Based Variability Management in the {Android} Ecosystem},
	year = {2018}}

@inproceedings{businge:benevol:2020,
	author = {Businge, John and Decan, Alexandre and Zerouali, Ahmed and Mens, Tom and Demeyer, Serge},
	booktitle = {The Belgium-Netherlands Software Evolution Workshop},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-12-30 17:06:41 +0100},
	publisher = {CEUR-WS.org},
	series = {{CEUR} Workshop Proceedings},
	title = {An Empirical Investigation of Forks as Variants in the npm Package Distribution},
	volume = {2912},
	year = {2020}}

@inproceedings{businge:blockchain:2022,
	author = {Henrique Rocha and John Businge},
	booktitle = {5th International Workshop on Blockchain Oriented Software Engineering},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	title = {Blockchain-Oriented Software Variant Forks: A Preliminary Study},
	year = {2022}}

@article{businge:emse:2022,
	author = {Businge, John and Openja, Moses and Nadi, Sarah and Berger, Thorsten},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 18:37:34 +0100},
	journal = {Empirical Software Engineering},
	number = {2},
	pages = {54},
	title = {Reuse and Maintenance Practices among Divergent Forks in Three Software Ecosystems},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10078-2}}

@inproceedings{businge:saner:2022,
	author = {Businge, John and Decan, Alexandre and Zerouali, Ahmed and Mens, Tom and Demeyer, Serge and De Roover, Coen},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-11-29 15:24:50 +0100},
	title = {Variant Forks: Motivations and Impediments},
	year = {2022}}

@inproceedings{Businge:2017,
	author = {Businge, John and Kawuma, Simon and Bainomugisha, Engineer and Khomh, Foutse and Nabaasa, Evarist},
	booktitle = {International Conference on Predictive Models and Data Analytics in Software Engineering ({PROMISE})},
	date-modified = {2023-02-26 17:18:35 +0100},
	isbn = {9781450353052},
	keywords = {Minor Contributors, Most Values Contributors, Total Contributors, Software faults, Major Contributors},
	pages = {33--42},
	publisher = {ACM},
	title = {Code Authorship and Fault-Proneness of Open-Source Android Applications: An Empirical Study},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1145/3127005.3127009}}

@inproceedings{Businge:Eclise:saner:2019,
	author = {Businge, John and Kawuma, Simon and Openja, Moses and Bainomugisha, Engineer and Serebrenik, Alexander},
	booktitle = {2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER)},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {117-127},
	title = {How Stable Are Eclipse Application Framework Internal Interfaces?},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2019.8668018}}

@article{Businge:SQJ:2015,
	abstract = {Today, when constructing software systems, many developers build their systems on top of frameworks. Eclipse is such a framework that has been in existence for over a decade. Like many other evolving software systems, the Eclipse platform has both stable and supported interfaces ("good") and unstable, discouraged and unsupported interfaces ("bad"). In this study, we investigate Eclipse interface usage by Eclipse third-party plug-ins (ETPs) based on whether they use bad interfaces or not. The investigations, based on empirical analysis present the following observations. First, we discovered that 44 \% of the 512 analyzed Eclipse third-party plug-ins depend on "bad" interfaces and that developers continue to use "bad" interfaces. Second, we have observed that plug-ins that use or extend at least one "bad" interface are comparatively larger and use more functionality from Eclipse than those that use only "good" interfaces. Third, the findings show that the ETPs use a diverse set of "bad" interfaces. Fourth, we observed that the reason why the bad interfaces are being eliminated from the ETPs' source code is, because (ETP developers believe) these non-APIs will cause incompatibilities when a version of the ETP is ported to new Eclipse SDK release. Finally, we observed that when developers eliminate problematic "bad" interfaces, they either re-implement the same functionality in their own API, find equivalent SDK good interfaces, or completely delete the entities in the ETPs' source code that use the functionality from the "bad" interfaces.},
	author = {Businge, John and Serebrenik, Alexander and Brand, Mark G.},
	date-modified = {2023-02-28 11:11:53 +0100},
	issn = {0963-9314},
	journal = {Software Quality Journal},
	keywords = {Eclipse, Software evolution, API usage},
	month = {March},
	number = {1},
	pages = {107--141},
	publisher = {Kluwer Academic Publishers},
	title = {{Eclipse} {API} Usage: The Good and the Bad},
	volume = {23},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1007/s11219-013-9221-3}}

@inproceedings{businge:2019Saner,
	author = {J. Businge and M. Openja and D. Kavaler and E. Bainomugisha and F. Khomh and V. Filkov},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-11-28 18:39:25 +0100},
	pages = {287-297},
	title = {Studying {Android} App Popularity by Cross-Linking {GitHub} and {Google Play} Store},
	year = {2019}}

@article{Chen:Rtesting:2018,
	author = {Zhiyuan Chen and Hai-Feng Guo and Myoungkyu Song},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Software evolution, Fault localization, Change impact analysis, Test selection, Refactorings},
	pages = {174-187},
	title = {Improving regression test efficiency with an awareness of refactoring changes},
	volume = {103},
	year = {2018},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S095058491830137X},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2018.07.003}}

@inproceedings{Chua:Forking:2017,
	author = {Chua, Bee Bee},
	booktitle = {Pacific Asia Conference on Information Systems ({PACIS})},
	date-modified = {2023-03-18 18:20:50 +0100},
	pages = {75},
	title = {A Survey Paper on Open Source Forking Motivation Reasons and Challenges},
	year = {2017}}

@book{Czarnecki:2000,
	address = {Reading, MA, USA},
	author = {Krzysztof Czarnecki and Ulrich, Eisenecker},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	organization = {O'Reilly Media, Inc.},
	pages = {864},
	publisher = {O'Reilly Media, Inc.},
	title = {Generative Programming: Methods, Tools, and Applications},
	year = {2000}}

@article{decan:emse:2019,
	author = {Decan, Alexandre and Mens, Tom and Grosjean, Philippe},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {381--416},
	title = {An empirical comparison of dependency network evolution in seven software packaging ecosystems},
	volume = {24},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-017-9589-y}}

@inproceedings{Demeyer:oopsla:2000,
	author = {Serge Demeyer and St{\'{e}}phane Ducasse and Oscar Nierstrasz},
	biburl = {https://dblp.org/rec/conf/oopsla/DemeyerDN00.bib},
	booktitle = {Conference on Object-Oriented Programming Systems, Languages and Applications ({OOPSLA})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {166--177},
	publisher = {ACM},
	title = {Finding refactorings via change metrics},
	year = {2000},
	bdsk-url-1 = {https://doi.org/10.1145/353171.353183}}

@inproceedings{Dey:PR:2020,
	author = {Dey, Tapajit and Mockus, Audris},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450375801},
	keywords = {Social Factors, Pull Request, Predictive Model, NPM Packages},
	publisher = {ACM},
	title = {Effect of Technical and Social Factors on Pull Request Quality for the npm Ecosystem},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3382494.3410685}}

@misc{difflib,
	author = {{The Python Software Foundation}},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	howpublished = {\url{https://docs.python.org/3/library/difflib.html}},
	title = {difflib --- Helpers for computing deltas},
	year = {2022}}

@misc{Dixion:2009Forks,
	author = {James Dixion},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	howpublished = {\url{https://jamesdixon.wordpress.com/2009/05/13/different-kinds-of-open-source-forks-salad-dinner-and-fish/}},
	title = {Different Kinds of Open Source Forks: Salad, Dinner, and Fish},
	year = {2009}}

@inproceedings{Dubinsky:csmr2013,
	author = {Dubinsky, Yael and Rubin, Julia and Berger, Thorsten and Duszynski, Slawomir and Becker, Martin and Czarnecki, Krzysztof},
	booktitle = {2013 17th European Conference on Software Maintenance and Reengineering},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {25-34},
	title = {An Exploratory Study of Cloning in Industrial Software Product Lines},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/CSMR.2013.13}}

@article{Ellis:arXiv:2021,
	abstract = {Dealing with merge conflicts in version control systems is a challenging task for software developers. Resolving merge conflicts is a time-consuming and error-prone process, which distracts developers from important tasks. Recent work shows that refactorings are often involved in merge conflicts and that refactoring-related conflicts tend to be larger, making them harder to resolve. In the literature, there are two refactoring-aware merging techniques that claim to automatically resolve refactoring-related conflicts; however, these two techniques have never been empirically compared. In this paper, we present RefMerge, a rejuvenated Java-based design and implementation of the first technique, which is an operation-based refactoring-aware merging algorithm. We compare RefMerge to Git and the state-of-the-art graph-based refactoring-aware merging tool, IntelliMerge, on 2,001 merge scenarios with refactoring-related conflicts from 20 open-source projects. We find that RefMerge resolves or reduces conflicts in 497 (25%) merge scenarios while increasing conflicting LOC in only 214 (11%) scenarios. On the other hand, we find that IntelliMerge resolves or reduces conflicts in 478 (24%) merge scenarios but increases conflicting LOC in 597 (30%) merge scenarios. We additionally conduct a qualitative analysis of the differences between the three merging algorithms and provide insights of the strengths and weaknesses of each tool. We find that while IntelliMerge does well with ordering and formatting conflicts, it struggles with class-level refactorings and scenarios with several refactorings. On the other hand, RefMerge is resilient to the number of refactorings in a merge scenario, but we find that RefMerge introduces conflicts when inverting move-related refactorings.
                   },
	author = {Ellis, Max and Nadi, Sarah and Dig, Danny},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 18:25:33 +0100},
	issn = {1939-3520},
	journal = {Transactions on Software Engineering},
	publisher = {IEEE},
	title = {Operation-based Refactoring-aware Merging: An Empirical Evaluation},
	year = {2022},
	bdsk-url-1 = {https://arxiv.org/abs/2112.10370},
	bdsk-url-2 = {https://doi.org/10.48550/ARXIV.2112.10370},
	bdsk-url-3 = {https://doi.org/10.1109/TSE.2022.3228851}}

@article{Ernst:2010,
	author = {Neil A. Ernst and Steve M. Easterbrook and John Mylopoulos},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	journal = {ArXiv},
	title = {Code forking in open-source software: a requirements perspective},
	volume = {abs/1004.2889},
	year = {2010}}

@misc{forkFA1,
	author = {react-native-maps},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	howpublished = {https://github.com/react-native-maps/react-native-maps/pull/2348},
	month = {October},
	title = {Online Appendix},
	year = {2022}}

@misc{forkRES1,
	author = {jquast},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	howpublished = {\url{https://github.com/erikrose/blessings/pull/104}},
	month = {October},
	note = {Last Accessed: February 2023},
	title = {Online Appendix},
	year = {2022}}

@book{Frank:2007,
	author = {van der Linden, Frank J. and Schmid, Klaus and Rommes, Eelco},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-12 15:58:27 +0100},
	isbn = {3540714367},
	publisher = {Springer},
	title = {Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering},
	year = {2007}}

@article{Gamalielsson:2014Sustainability,
	author = {Gamalielsson, Jonas and Lundell, Bj\"orn},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-18 18:29:24 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Open Source software, Fork, Community evolution},
	pages = {128 - 145},
	title = {Sustainability of Open Source software communities beyond a fork: How and why has the {LibreOffice} project evolved?},
	volume = {89},
	year = {2014}}

@inproceedings{ge:RcodeReview:2017,
	author = {Ge, Xi and Sarkar, Saurabh and Witschey, Jim and Murphy-Hill, Emerson},
	booktitle = {Symposium on Visual Languages and Human-Centric Computing ({VL/HCC})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {71-79},
	publisher = {IEEE},
	title = {Refactoring-aware code review},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/VLHCC.2017.8103453}}

@misc{hunks,
	author = {GitHub},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-16 16:24:54 +0200},
	howpublished = {\url{http://www.gnu.org/software/diffutils/manual/htm\-l\_node/Hunks.html}},
	title = {Online Appendix},
	year = {2021}}

@article{Iyer:TSE:2021,
	author = {Iyer, Rahul N. and Yun, S. Alex and Nagappan, Meiyappan and Hoey, Jesse},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 18:30:58 +0100},
	journal = {Transactions on Software Engineering},
	number = {11},
	pages = {2632-2643},
	publisher = {IEEE},
	title = {Effects of Personality Traits on Pull Request Acceptance},
	volume = {47},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2019.2960357}}

@inproceedings{Jacob:FSE:2020,
	author = {Kr\"{u}ger, Jacob and Berger, Thorsten},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-11-29 15:30:22 +0100},
	keywords = {software reuse, economics, software product line, empirical study, clone & own, platform engineering},
	pages = {432--444},
	publisher = {ACM},
	title = {An Empirical Analysis of the Costs of Clone- and Platform-Oriented Software Reuse},
	year = {2020}}

@article{Jiang:emse:2017,
	author = {Jiang, Jing and Lo, David and He, Jiahuan and Xia, Xin and Kochhar, Pavneet Singh and Zhang, Li},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1382-3256},
	journal = {Empirical Software Engineering},
	keywords = {GitHub, Open source software, Fork},
	month = {feb},
	number = {1},
	numpages = {32},
	pages = {547--578},
	publisher = {Kluwer Academic Publishers},
	title = {Why and How Developers Fork What from Whom in {GitHub}},
	volume = {22},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-016-9436-6}}

@inproceedings{Jiang:MSR:2013,
	author = {Jiang, Yujuan and Adams, Bram and German, Daniel M.},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-12-06 12:06:28 +0100},
	isbn = {9781467329361},
	pages = {101--110},
	publisher = {IEEE},
	title = {Will My Patch Make It? {A}nd How Fast?: {C}ase Study on the {Linux} Kernel},
	year = {2013}}

@inproceedings{Kentaro:SEAS:2006,
	author = {Yoshimura, Kentaro and Ganesan, Dharmalingam and Muthig, Dirk},
	booktitle = {International Workshop on Software Engineering for Automotive Systems ({SEAS})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-11-29 15:25:52 +0100},
	pages = {61--67},
	publisher = {ACM},
	title = {Assessing Merge Potential of Existing Engine Control Systems into a Product Line},
	year = {2006}}

@book{Klaus:2005,
	author = {Pohl, Klaus and B\"{o}ckle, G\"{u}nter and Linden, Frank J. van der},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-12-06 12:17:14 +0100},
	isbn = {3540243720},
	publisher = {Springer},
	title = {Software Product Line Engineering: Foundations, Principles and Techniques},
	year = {2005}}

@inproceedings{lapena:SPLC:2016,
	author = {Lape\~{n}a, Ra\'{u}l and Ballarin, Manuel and Cetina, Carlos},
	booktitle = {International Systems and Software Product Line Conference ({SPLC})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-12 16:00:26 +0100},
	pages = {194--203},
	publisher = {ACM},
	title = {Towards Clone-and-Own Support: Locating Relevant Methods in Legacy Products},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2934466.2934485}}

@book{Laurent:2008,
	author = {Andrew St. Laurent},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	publisher = {O'Reilly Media},
	title = {Understanding Open Source and Free Software Licensing},
	year = {2008}}

@article{Linus:2013CodeForking,
	author = {Linus Nyman and Juho Lindman},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	journal = {Technology Innovation Management Review},
	month = {January},
	pages = {7-12},
	title = {Code Forking, Governance, and Sustainability in Open Source Software},
	volume = {3},
	year = {2013}}

@inproceedings{Lukas:SPLC:2018,
	author = {Linsbauer, Lukas and Lopez-Herrejon, Roberto Erick and Egyed, Alexander},
	booktitle = {International Systems and Software Product Line Conference ({SPLC})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {ACM},
	title = {Variability Extraction and Modeling for Product Variants},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3233027.3236396}}

@inproceedings{mahmood:icse:2021,
	author = {Mahmood, Wardah and Str\"{u}ber, Daniel and Berger, Thorsten and L\"{a}mmel, Ralf and Mukelabai, Mukelabai},
	booktitle = {43rd {IEEE/ACM} International Conference on Software Engineering, {ICSE} 2021, Madrid, Spain, 22-30 May 2021},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	numpages = {13},
	pages = {1658--1670},
	publisher = {{IEEE}},
	title = {Seamless Variability Management With the Virtual Platform},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE43902.2021.00147}}

@inproceedings{Mahmoudi:R-API:2018,
	author = {Mahmoudi, Mehran and Nadi, Sarah},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450357166},
	keywords = {Android, software evolution, merge conflicts, software merging},
	pages = {220--230},
	publisher = {ACM},
	title = {The {Android} Update Problem: An Empirical Study},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3196398.3196434}}

@inproceedings{Mahmoudi:SANER:2019,
	author = {Mahmoudi, Mehran and Nadi, Sarah and Tsantalis, Nikolaos},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {151-162},
	title = {Are Refactorings to Blame? {A}n Empirical Study of Refactorings in Merge Conflicts},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2019.8668012}}

@inproceedings{Mechtaev:ICSE:2018,
	author = {Mechtaev, Sergey and Nguyen, Manh-Dung and Noller, Yannic and Grunske, Lars and Roychoudhury, Abhik},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450356381},
	keywords = {debugging, verification, program repair},
	pages = {129--139},
	publisher = {ACM},
	title = {Semantic Program Repair Using a Reference Implementation},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3180155.3180247}}

@article{mens:TSE:2002,
	author = {Mens, Tom},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Transactions on Software Engineering},
	number = {5},
	pages = {449-462},
	title = {A state-of-the-art survey on software merging},
	volume = {28},
	year = {2002},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2002.1000449}}

@book{Michael:2008,
	author = {C. Michael Pilato, Ben Collins-Sussman, Brian W. Fitzpatrick},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	organization = {Addison-Wesley},
	pages = {864},
	publisher = {Addison-Wesley},
	title = {Version Control with Subversion},
	year = {2008}}

@article{Mockus:TOSEM:2002,
	author = {Mockus, Audris and Fielding, Roy T. and Herbsleb, James D.},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-07 11:11:47 +0100},
	issn = {1049-331X},
	journal = {Transactions on Software Engineering and Methodology},
	keywords = {Apache, code ownership, repair interval, Open source software, defect density, Mozilla},
	month = {jul},
	number = {3},
	pages = {309--346},
	publisher = {ACM},
	title = {Two Case Studies of Open Source Software Development: Apache and Mozilla},
	volume = {11},
	year = {2002},
	bdsk-url-1 = {https://doi.org/10.1145/567793.567795}}

@article{Motwani2022QualityOA,
	author = {Manish Motwani and Mauricio Soto and Yuriy Brun and Ren{\'e} Just and Claire Le Goues},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-07 11:18:58 +0100},
	journal = {Transactions on Software Engineering},
	pages = {637-661},
	publisher = {IEEE},
	title = {Quality of Automated Program Repair on Real-World Defects},
	volume = {48},
	year = {2022}}

@article{Pei:TSE:2014,
	author = {Pei, Yu and Furia, Carlo A. and Nordio, Martin and Wei, Yi and Meyer, Bertrand and Zeller, Andreas},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-07 11:12:34 +0100},
	journal = {Transactions on Software Engineering},
	number = {5},
	pages = {427-449},
	publisher = {IEEE},
	title = {Automated Fixing of Programs with Contracts},
	volume = {40},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2014.2312918}}

@misc{pete,
	author = {Pete Bratach},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	howpublished = {\url{https://thenewstack.io/open-source-projects-fork/}},
	note = {Last Accessed: February, 2023},
	title = {Why {D}o {O}pen {S}ource {P}rojects {F}ork?},
	year = {2017}}

@inproceedings{pietri:msr:2020,
	author = {Pietri, Antoine and Rousseau, Guillaume and Zacchiroli, Stefano},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450375177},
	keywords = {version control system, source code, software evolution, free software, open source, software fork},
	pages = {277--287},
	publisher = {ACM},
	title = {Forking Without Clicking: On How to Identify Software Repository Forks},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387450}}

@inproceedings{poedja:fse:2022,
	author = {Ramkisoen, Poedjadevie Kadjel and Businge, John and Bradel, van Brent and Decan, Alexandre and Mens, Tom and Demeyer, Serge and De Roover, Coen and Khomh, Foutse},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {ACM},
	title = {PaReco: Patched Clones and Missed Patches among the Divergent Variants of a Software Family},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3540250.3549112}}

@inproceedings{Rahman:MSR:2014,
	author = {Rahman, Mohammad Masudur and Roy, Chanchal K.},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450328630},
	keywords = {Commit comments, pull request, topic model},
	pages = {364--367},
	publisher = {ACM},
	title = {An Insight into the Pull Requests of {GitHub}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2597073.2597121}}

@book{Raymond:Cathedral:2001,
	author = {Raymond, Eric S.},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-02 11:07:07 +0100},
	isbn = {1-565-92724-9},
	publisher = {O'Reilly},
	title = {The Cathedral \& the Bazaar: Musings on linux and open source by an accidental revolutionary},
	year = {1999}}

@inproceedings{Rubin:SPLC:2013,
	author = {Rubin, Julia and Czarnecki, Krzysztof and Chechik, Marsha},
	booktitle = {International Software Product Line Conference ({SPLC})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {101--110},
	publisher = {ACM},
	title = {Managing Cloned Variants: A Framework and Experience},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1145/2491627.2491644}}

@inproceedings{Schittekat22CanWe,
	author = {Schittekat, Igor and Abdi, Mehrdad and Demeyer, Serge},
	booktitle = {International Conference on Evaluation and Assessment in Software Engineering ({EASE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450396134},
	keywords = {Test amplification, Test coverage, Python, Software dependencies, Mutation testing},
	pages = {294--298},
	publisher = {ACM},
	title = {Can We Increase the Test-Coverage in Libraries Using Dependent Projects' Test-Suites?},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3530019.3535309}}

@inproceedings{Soares:SAC:2015,
	author = {Soares, Daric\'{e}lio Moreira and de Lima J\'{u}nior, Manoel Limeira and Murta, Leonardo and Plastino, Alexandre},
	booktitle = {Annual ACM Symposium on Applied Computing ({SAC})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450331968},
	keywords = {association rules, data mining, pull request, software repositories},
	pages = {1541--1546},
	publisher = {ACM},
	title = {Acceptance Factors of Pull Requests in Open-Source Projects},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2695664.2695856}}

@inproceedings{Stanciulescu:ICSME:2015,
	author = {Stanciulescu, Stefan and Schulze, Sandro and Wasowski, Andrzej},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 17:38:43 +0100},
	pages = {151-160},
	title = {Forked and integrated variants in an open-source firmware project},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2015.7332461}}

@inproceedings{Stefan:2016:icsme,
	address = {Los Alamitos, CA, USA},
	author = {Stanciulescu, Stefan and Berger, Thorsten and Walkingshaw, Eric and Wasowski, Andrzej},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-28 12:02:19 +0100},
	pages = {323-333},
	publisher = {IEEE Computer Society},
	title = {Concepts, Operations, and Feasibility of a Projection-Based Variation Control System},
	year = {2016}}

@inproceedings{sung:ICSE:2020,
	author = {Sung, Chungha and Lahiri, Shuvendu K. and Kaufman, Mike and Choudhury, Pallavi and Wang, Chao},
	booktitle = {International Conference on Software Engineering},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	isbn = {9781450371230},
	location = {Seoul, South Korea},
	pages = {172--181},
	publisher = {ACM},
	title = {Towards Understanding and Fixing Upstream Merge Induced Conflicts in Divergent Forks: An Industrial Case Study},
	year = {2020}}

@book{Sven:2013,
	author = {Apel, Sven and Batory, Don and Kstner, Christian and Saake, Gunter},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	isbn = {ISBN : 978-3-642-37520-0},
	publisher = {Springer Publishing Company, Incorporated},
	title = {Feature-Oriented Software Product Lines: Concepts and Implementation},
	year = {2013}}

@misc{theo:openbsd,
	author = {Theo de Raadt},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	howpublished = {https://zeus.theos.com/deraadt/coremail.html},
	note = {retrieved October 2021},
	title = {{Theo de Raadt's dispute w/ NetBSD}},
	year = {2006}}

@inproceedings{Thorsten:vamos:2013,
	articleno = {7},
	author = {Berger, Thorsten and Rublack, Ralf and Nair, Divya and Atlee, Joanne M. and Becker, Martin and Czarnecki, Krzysztof and Wasowski, Andrzej},
	booktitle = {International Workshop on Variability Modelling of Software-Intensive Systems},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450315418},
	numpages = {8},
	publisher = {ACM},
	title = {A Survey of Variability Modeling in Industrial Practice},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1145/2430502.2430513}}

@article{Timo:2014,
	author = {Timo Kehrer and Udo Kelter and Gabriele Taentzer},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	journal = {at - Automatisierungstechnik},
	number = {11},
	pages = {803--814},
	title = {Propagation of Software Model Changes in the Context of Industrial Plant Automation},
	volume = {62},
	year = {2014}}

@inproceedings{Timo:ICSE-NIER:2021,
	author = {Kehrer, Timo and Th{\"u}m, Thomas and Schulthei{\ss}, Alexander and Bittner, Paul Maximilian},
	booktitle = {International Conference on Software Engineering - New Ideas and Emerging Results ({ICSE-NIER})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-03-12 15:56:28 +0100},
	doi = {10.1109/ICSE-NIER52604.2021.00013},
	pages = {21-25},
	title = {Bridging the Gap Between Clone-and-Own and Software Product Lines},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-NIER52604.2021.00013}}

@inproceedings{Tristan:SPLC:2016,
	author = {Pfofe, Tristan and Th\"{u}m, Thomas and Schulze, Sandro and Fenske, Wolfram and Schaefer, Ina},
	booktitle = {International Systems and Software Product Line Conference ({SPLC})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-11-29 15:33:27 +0100},
	keywords = {clone-and-own, evolution, software product lines},
	pages = {329--332},
	publisher = {ACM},
	title = {Synchronizing Software Variants with Variantsync},
	year = {2016}}

@article{Tsantalis:TSE:2020,
	author = {Tsantalis, Nikolaos and Ketkar, Ameya and Dig, Danny},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 18:24:48 +0100},
	journal = {Transactions on Software Engineering},
	number = {3},
	pages = {930-950},
	publisher = {IEEE},
	title = {RefactoringMiner 2.0},
	volume = {48},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2020.3007722}}

@inproceedings{van:MSR:2015,
	author = {van der Veen, Erik and Gousios, Georgios and Zaidman, Andy},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-12-06 12:14:49 +0100},
	isbn = {9780769555942},
	pages = {357--361},
	publisher = {IEEE},
	title = {Automatically Prioritizing Pull Requests},
	year = {2015}}

@article{Viseur:2012Forks,
	author = {Viseur, Robert},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2022-10-11 16:25:39 +0200},
	journal = {International Journal of Advanced Computer Science and Applications},
	month = {February},
	number = {2},
	title = {Forks impacts and motivations in free and open source projects},
	volume = {3},
	year = {2012}}

@inproceedings{wang:Rtesting:2018,
	author = {Wang, Kaiyuan and Zhu, Chenguang and Celik, Ahmet and Kim, Jongwook and Batory, Don and Gligoric, Milos},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {233-244},
	title = {Towards Refactoring-Aware Regression Test Selection},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3180155.3180254}}

@inproceedings{Weibgerber:MSR:2008,
	author = {Wei\ss{}gerber, Peter and Neu, Daniel and Diehl, Stephan},
	booktitle = {International Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781605580241},
	keywords = {email archives, patches, case study, patch acceptance},
	pages = {67--76},
	publisher = {ACM},
	title = {Small Patches Get In!},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1145/1370750.1370767}}

@url{Wheeler:2015Forking,
	author = {David A. Wheeler},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 17:22:56 +0100},
	howpublished = {\url{https://dwheeler.com/oss_fs_why.html#forking}},
	title = {Why Open Source Software / Free Software ({OSS/FS}, {FLOSS}, or {FOSS})? Look at the Numbers! Appendix {A.6 Forking}},
	urldate = {July 18, 2015},
	year = {2015}}

@inproceedings{Yu:MSR:2015,
	author = {Yu, Yue and Wang, Huaimin and Filkov, Vladimir and Devanbu, Premkumar and Vasilescu, Bogdan},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {367-371},
	title = {Wait for It: Determinants of Pull Request Evaluation Latency on {GitHub}},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2015.42}}

@inproceedings{Zhou:ICSE:2020,
	author = {Zhou, Shurui and Vasilescu, Bogdan and K\"{a}stner, Christian},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:25:39 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450371216},
	location = {Seoul, South Korea},
	pages = {445--456},
	publisher = {ACM},
	title = {How Has Forking Changed in the Last 20 Years? {A} Study of Hard Forks on {GitHub}},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3377811.3380412}}

@article{1999-beagle-in-commons,
	author = {Beagle, Donald},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {The Journal of Academic Librarianship},
	number = {2},
	pages = {82--89},
	publisher = {Elsevier},
	title = {Conceptualizing an information commons},
	volume = {25},
	year = {1999}}

@article{2002-lerner-foss-economics,
	author = {Lerner, Josh and Tirole, Jean},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {The journal of industrial economics},
	number = {2},
	pages = {197--234},
	publisher = {Wiley Online Library},
	title = {Some simple economics of open source},
	volume = {50},
	year = {2002}}

@article{2011-peng-reproducible-computations,
	author = {Peng, Roger D},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Science},
	number = {6060},
	pages = {1226},
	publisher = {NIH Public Access},
	title = {Reproducible research in computational science},
	volume = {334},
	year = {2011}}

@article{2013-gent-recomputation-manifesto,
	author = {Ian P. Gent},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {CoRR},
	note = {\url{http://www.software.ac.uk/blog/2013-07-09-recomputation-manifesto}},
	title = {The Recomputation Manifesto},
	volume = {abs/1304.3674},
	year = {2013}}

@article{2014-fursin-collectivemind,
	author = {Grigori Fursin and Renato Miceli and Anton Lokhmotov and Michael Gerndt and Marc Baboulin and Allen D. Malony and Zbigniew Chamski and Diego Novillo and Davide Del Vento},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Scientific Programming},
	number = {4},
	pages = {309--329},
	title = {Collective mind: Towards practical and collaborative auto-tuning},
	volume = {22},
	year = {2014},
	bdsk-url-1 = {http://dx.doi.org/10.3233/SPR-140396}}

@article{2020GtCitation,
	abstract = {Software is a fundamental pillar of modern scientific
                   research, across all fields and disciplines. However, there
                   is a lack of adequate means to cite and reference software
                   due to the complexity of the problem in terms of
                   authorship, roles, and credits. This complexity is further
                   increased when it is considered over the lifetime of a
                   software that can span up to several decades. Building upon
                   the internal experience of Inria, the French research
                   institute for digital sciences, we provide in this article
                   a contribution to the ongoing efforts in order to develop
                   proper guidelines and recommendations for software citation
                   and reference. Namely, we recommend: first, a richer
                   taxonomy for software contributions with a qualitative
                   scale; second, to put humans at the heart of the
                   evaluation; and third, to distinguish citation from
                   reference.},
	author = {Alliez, Pierre and Di Cosmo, Roberto and Guedj, Benjamin and Alain {Girault} and Mohand-Said {Hacid} and Arnaud {Legrand} and Nicolas {Rougier}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1558-366X},
	journal = {Computing in Science and Engineering},
	keywords = {citation analysis;software engineering;French research institute;digital sciences;software citation;Inria;reference software;attributing software;Software packages;Complexity theory;Research and development;Libraries;Metadata;Best practices;Guidelines;Software citation;software reference;authorship;development process},
	month = {Jan},
	note = {Available from \url{https://hal.archives-ouvertes.fr/hal-02135891}},
	number = {1},
	pages = {39-52},
	title = {Attributing and Referencing (Research) Software: Best Practices and Outlook From {INRIA}},
	volume = {22},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/MCSE.2019.2949413}}

@article{alexandru2019redundancy,
	author = {Carol V. Alexandru and Sebastiano Panichella and Sebastian Proksch and Harald C. Gall},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/ese/AlexandruPPG19},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {332--380},
	timestamp = {Wed, 27 Feb 2019 18:48:53 +0100},
	title = {Redundancy-free analysis of multi-revision software artifacts},
	volume = {24},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-018-9630-9}}

@article{allamanis2018bigcodesurvey,
	author = {Allamanis, Miltiadis and Barr, Earl T and Devanbu, Premkumar and Sutton, Charles},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {ACM Computing Surveys (CSUR)},
	number = {4},
	pages = {81},
	publisher = {ACM},
	title = {A survey of machine learning for big code and naturalness},
	volume = {51},
	year = {2018}}

@article{alperin2019public,
	author = {Alperin, Juan P. and Nieves, Carol Mu{\ifmmode\tilde{n}\else\~{n}\fi}oz and Schimanski, Lesley A. and Fischman, Gustavo E. and Niles, Meredith T. and McKiernan, Erin C.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {eLife},
	month = {Feb},
	publisher = {eLife Sciences Publications, Ltd},
	title = {Meta-Research: How significant are the public dimensions of faculty work in review, promotion and tenure documents?},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.7554/eLife.42254}}

@article{andersen2020women,
	author = {Andersen, Jens Peter and Nielsen, Mathias Wullum and Simone, Nicole L. and Lewiss, Resa E. and Jagsi, Reshma},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {eLife},
	month = {Jun},
	publisher = {eLife Sciences Publications, Ltd},
	title = {Meta-Research: {COVID-19} medical papers have fewer women first authors than expected},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.7554/eLife.58807}}

@article{anderson2015digital,
	author = {Anderson, David},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Communications of the {ACM}},
	number = {12},
	pages = {20--23},
	publisher = {ACM},
	title = {The digital dark age},
	volume = {58},
	year = {2015}}

@article{apostolico2009graph,
	author = {Apostolico, Alberto and Drovandi, Guido},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Algorithms},
	number = {3},
	pages = {1031--1044},
	publisher = {Molecular Diversity Preservation International},
	title = {Graph compression by BFS},
	volume = {2},
	year = {2009}}

@article{armscacm2001,
	acmid = {375358},
	author = {Arms, William Y.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:59:48 +0100},
	issn = {0001-0782},
	journal = {Communications of the {ACM}},
	month = may,
	number = {5},
	pages = {68--},
	publisher = {ACM},
	title = {Uniform Resource Names: Handles, {PURLs}, and Digital Object Identifiers},
	volume = {44},
	year = {2001},
	bdsk-url-1 = {http://doi.acm.org/10.1145/374308.375358},
	bdsk-url-2 = {https://doi.org/10.1145/374308.375358}}

@article{ascl,
	author = {Allen, Alice and Schmidt, J},
	bibsource = {file://traveler/home/dicosmo/ACADEMIC/Paperi/Miei/SoftwareHeritage/2020-03-ICMS/biblio.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of Open Research Software},
	number = {e15},
	title = {Looking Before Leaping: Creating a Software Registry},
	volume = 3,
	year = 2015,
	bdsk-url-1 = {http://dx.doi.org/10.5334/jors.bv}}

@article{AttardiF96,
	author = {Giuseppe Attardi and Tito Flagella},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/jsc/AttardiF96},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Symb. Comput.},
	number = {3},
	pages = {293--311},
	timestamp = {Tue, 06 Jun 2017 22:26:33 +0200},
	title = {Memory Management in the PoSSo Solver},
	volume = {21},
	year = {1996},
	bdsk-url-1 = {https://doi.org/10.1006/jsco.1996.0013}}

@article{bajpai2019encouraging,
	author = {Bajpai, Vaibhav and Bonaventure, Olivier and Claffy, Kimberly and Karrenberg, Daniel},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Dagstuhl reports},
	number = {10},
	title = {Encouraging Reproducibility in Scientific Research of the Internet},
	volume = {8},
	year = {2019}}

@article{Baker2016,
	author = {Monya Baker},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Nature},
	month = {may},
	number = {7604},
	pages = {452--454},
	publisher = {Springer Nature},
	title = {1,500 scientists lift the lid on reproducibility},
	volume = {533},
	year = {2016},
	bdsk-file-1 = {YnBsaXN0MDDSAQIDBFxyZWxhdGl2ZVBhdGhZYWxpYXNEYXRhXxAoLi4vLi4vLi4vLi4vLlRyYXNoL1MwMTY0MTIxMjExMDAwOTYzLmJpYk8RAVwAAAAAAVwAAgAADE1hY2ludG9zaCBIRAAAAAAAAAAAAAAAAAAAAAAAAABCRAAB/////xVTMDE2NDEyMTIxMTAwMDk2My5iaWIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAQAAgAACiBjdQAAAAAAAAAAAAAAAAAGLlRyYXNoAAIALC86VXNlcnM6dG9tbWVuczouVHJhc2g6UzAxNjQxMjEyMTEwMDA5NjMuYmliAA4ALAAVAFMAMAAxADYANAAxADIAMQAyADEAMQAwADAAMAA5ADYAMwAuAGIAaQBiAA8AGgAMAE0AYQBjAGkAbgB0AG8AcwBoACAASABEABIAKlVzZXJzL3RvbW1lbnMvLlRyYXNoL1MwMTY0MTIxMjExMDAwOTYzLmJpYgATAAEvAAAVAAIADv//AAAACAANABoAJABPAAAAAAAAAgEAAAAAAAAABQAAAAAAAAAAAAAAAAAAAa8=},
	bdsk-url-1 = {https://doi.org/10.1038/533452a}}

@article{barabasi2002networkstats,
	author = {Albert, R{\'e}ka and Barab{\'a}si, Albert-L{\'a}szl{\'o}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Reviews of modern physics},
	number = {1},
	pages = {47},
	publisher = {APS},
	title = {Statistical mechanics of complex networks},
	volume = {74},
	year = {2002}}

@article{barabasi2003scalefree,
	author = {Barab{\'a}si, Albert-L{\'a}szl{\'o} and Bonabeau, Eric},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Scientific american},
	number = {5},
	pages = {60--69},
	publisher = {JSTOR},
	title = {Scale-free networks},
	volume = {288},
	year = {2003}}

@article{barahona2008geodiversity,
	author = {Jes{\'{u}}s M. Gonz{\'{a}}lez{-}Barahona and Gregorio Robles and Roberto Andradas{-}Izquierdo and Rishab Aiyer Ghosh},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/iepol/Gonzalez-BarahonaRAG08.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Inf. Econ. Policy},
	number = {4},
	pages = {356--363},
	timestamp = {Sat, 22 Feb 2020 13:47:15 +0100},
	title = {Geographic origin of libre software developers},
	volume = {20},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1016/j.infoecopol.2008.07.001}}

@article{basili1999building,
	author = {Basili, Victor R and Shull, Forrest and Lanubile, Filippo},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 11:13:19 +0100},
	journal = {Transactions on Software Engineering},
	number = {4},
	pages = {456--473},
	publisher = {IEEE},
	title = {Building knowledge through families of experiments},
	volume = {25},
	year = {1999}}

@article{Benureau:2018,
	author = {Fabien C. Y. Benureau and Nicolas P. Rougier},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Frontiers in Neuroinformatics},
	month = jan,
	publisher = {Frontiers Media {SA}},
	title = {Re-run, Repeat, Reproduce, Reuse, Replicate: Transforming Code into Scientific Contributions},
	volume = {11},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.3389/fninf.2017.00069}}

@article{Biagioli2016,
	author = {Biagioli, Mario},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Nature},
	month = {07},
	pages = {201-201},
	title = {Watch out for cheats in citation game},
	volume = {535},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1038/535201a}}

@article{bizer2009linked-data,
	author = {Bizer, Christian and Heath, Tom and Berners-Lee, Tim},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Semantic services, interoperability and web applications: emerging concepts},
	pages = {205--227},
	title = {Linked data-the story so far},
	year = {2009}}

@article{boisvert2016acmbadges,
	author = {Ronald F. Boisvert},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/cacm/Boisvert16.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Commun. {ACM}},
	number = {10},
	pages = {5},
	timestamp = {Tue, 06 Nov 2018 12:51:40 +0100},
	title = {Incentivizing reproducibility},
	volume = {59},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2994031}}

@inproceedings{Borgman2012,
	author = {Christine L. Borgman and Jillian C. Wallis and Matthew S. Mayernik},
	biburl = {https://dblp.org/rec/bib/journals/cscw/BorgmanWM12},
	booktitle = {Computer Supported Cooperative Work ({CSCW})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {485--523},
	title = {Who's Got the Data? Interdependencies in Science and Technology Collaborations},
	volume = {21},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1007/s10606-012-9169-z}}

@article{Buchberger1976,
	author = {Buchberger, B.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0163-5824},
	journal = {SIGSAM Bull.},
	month = aug,
	number = {3},
	pages = {19--29},
	publisher = {ACM},
	title = {A Theoretical Basis for the Reduction of Polynomials to Canonical Forms},
	volume = {10},
	year = {1976},
	bdsk-url-1 = {https://doi.org/10.1145/1088216.1088219}}

@article{BugRepair2017,
	author = {Matias Martinez and Thomas Durieux and Romain Sommerard and Jifeng Xuan and Martin Monperrus},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {1936--1964},
	title = {Automatic repair of real bugs in {Java}: a large-scale experiment on the {Defects4J} dataset},
	volume = {22},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-016-9470-4}}

@article{cacm:wikidata,
	author = {Vrande{\v{c}}i{\'c}, Denny and Kr{\"o}tzsch, Markus},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Communications of the {ACM}},
	number = {10},
	pages = {78--85},
	publisher = {ACM},
	title = {Wikidata: a free collaborative knowledgebase},
	volume = {57},
	year = {2014}}

@article{capraro2017innersource,
	author = {Capraro, Maximilian and Riehle, Dirk},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {ACM Computing Surveys (CSUR)},
	number = {4},
	pages = {67},
	publisher = {ACM},
	title = {Inner source definition, benefits, and challenges},
	volume = {49},
	year = {2017}}

@article{castagne2013consider,
	author = {Castagn{\'e}, Michel},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {SLIS Student Research Journal},
	number = {2},
	pages = {5},
	title = {Consider the Source: The Value of Source Code to Digital Preservation Strategies},
	volume = {2},
	year = {2013}}

@article{cerf2011avoiding,
	author = {Cerf, Vinton G},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Proceedings of the IEEE},
	number = {6},
	pages = {915--916},
	publisher = {IEEE},
	title = {Avoiding" Bit Rot": Long-Term Preservation of Digital Information [Point of View]},
	volume = {99},
	year = {2011}}

@article{chakroborti2022releaseconventions,
	author = {Chakroborti, Debasish and Nath, Sristy Sumana and Schneider, Kevin A. and Roy, Chanchal K.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:07:39 +0100},
	issn = {2047-7473},
	journal = {Journal of Software: Evolution and Process},
	month = {January},
	number = {1},
	pages = {e2499},
	publisher = {Wiley},
	title = {Release conventions of open-source software: An exploratory study},
	volume = {35},
	year = {2023},
	bdsk-url-1 = {https://doi.org/10.1002/smr.2499}}

@article{cise-2020-doi,
	abstract = {Among the entities involved in software citation, software
                   source code requires special attention, due to the role it
                   plays in ensuring scientific reproducibility. To reference
                   source code we need identifiers that are not only unique
                   and persistent, but also support integrity checking
                   intrinsically. Suitable iden- tifiers must guarantee that
                   denoted objects will always stay the same, without relying
                   on external third parties and administrative processes. We
                   analyze the role of identifiers for digital objects (IDOs),
                   whose properties are different from, and complementary to,
                   those of the various digital identifiers of objects (DIOs)
                   that are today popular building blocks of software and data
                   citation toolchains. We argue that both kinds of
                   identifiers are needed and detail the syntax, semantics,
                   and practical implementation of the persistent identifiers
                   (PIDs) adopted by the Software Heritage project to
                   reference billions of software source code artifacts such
                   as source code files, directories, and commits.},
	author = {Di Cosmo, Roberto and Gruenpeter, Morane and Stefano Zacchiroli},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1521-9615},
	journal = {Computing in Science and Engineering},
	month = mar,
	number = 2,
	pages = {33-43},
	publisher = {IEEE},
	title = {Referencing Source Code Artifacts: a Separate Concern in Software Citation},
	volume = 22,
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/MCSE.2019.2963148}}

@article{clauset2009powerlaw,
	author = {Clauset, Aaron and Shalizi, Cosma Rohilla and Newman, Mark EJ},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {SIAM review},
	number = {4},
	pages = {661--703},
	publisher = {SIAM},
	title = {Power-law distributions in empirical data},
	volume = {51},
	year = {2009}}

@article{collberg2014measuring,
	author = {Collberg, Christian and Proebsting, Todd and Moraila, Gina and Shankaran, Akash and Shi, Zuoming and Warren, Alex M},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Department of Computer Science, University of Arizona, Tech. Rep},
	title = {Measuring reproducibility in computer systems research},
	volume = {37},
	year = {2014},
	bdsk-url-1 = {http://reproducibility.cs.arizona.edu/tr.pdf}}

@article{CollbergCACM2016,
	author = {Christian S. Collberg and Todd A. Proebsting},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/cacm/CollbergP16},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Communications of the {ACM}},
	number = {3},
	pages = {62--69},
	timestamp = {Thu, 25 Feb 2016 18:39:51 +0100},
	title = {Repeatability in computer systems research},
	volume = {59},
	year = {2016},
	bdsk-url-1 = {http://doi.acm.org/10.1145/2812803},
	bdsk-url-2 = {https://doi.org/10.1145/2812803}}

@article{cosentino2017systematic,
	author = {Cosentino, Valerio and Izquierdo, Javier L C{\'a}novas and Cabot, Jordi},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {IEEE Access},
	pages = {7173--7192},
	publisher = {IEEE},
	title = {A systematic mapping study of software development with GitHub},
	volume = {5},
	year = {2017}}

@article{Dagstuhl-Artefacts-2016,
	address = {Dagstuhl, Germany},
	annote = {Keywords: Computer systems, artifacts, reproducibility,
                   archive},
	author = {Bruce R. Childers and Grigori Fursin and Shriram Krishnamurthi and Andreas Zeller},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Bruce R. Childers and Grigori Fursin and Shriram Krishnamurthi and Andreas Zeller},
	issn = {2192-5283},
	journal = {Dagstuhl Reports},
	number = {11},
	pages = {29--35},
	publisher = {Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
	title = {{Artifact Evaluation for Publications (Dagstuhl Perspectives Workshop 15452)}},
	urn = {urn:nbn:de:0030-drops-57620},
	volume = {5},
	year = {2016},
	bdsk-url-1 = {http://drops.dagstuhl.de/opus/volltexte/2016/5762},
	bdsk-url-2 = {https://doi.org/10.4230/DagRep.5.11.29}}

@article{DagstuhlEngineeringResearchSoftware,
	author = {Alice Allen and Cecilia R. Aragon and Christoph Becker and Jeffrey Carver and Andrei Chis and Beno{\^{\i}}t Combemale and Mike Croucher and Kevin Crowston and Daniel Garijo and Ashish Gehani and Carole A. Goble and Robert Haines and Robert Hirschfeld and James Howison and Kathryn D. Huff and Caroline Jay and Daniel S. Katz and Claude Kirchner and Katie Kuksenok and Ralf L{\"{a}}mmel and Oscar Nierstrasz and Matthew Turk and Rob van Nieuwpoort and Matthew Vaughn and Jurgen J. Vinju},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/dagstuhl-manifestos/AllenABCCCCCGGG17},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Dagstuhl Manifestos},
	number = {1},
	pages = {1--20},
	timestamp = {Wed, 02 Aug 2017 20:15:49 +0200},
	title = {Engineering Academic Software (Dagstuhl Perspectives Workshop 16252)},
	volume = {6},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.4230/DagMan.6.1.1}}

@article{DaneluttoDiCosmo2020,
	abstract = {This article provides a full report on the effort to
                   reproduce the work described in the article ``Parallel
                   Functional Programming with Skeletons: the OCamlP3L
                   experiment'', written in 1998. It presented OCamlP3L, a
                   parallel programming system written in the OCaml
                   programming language. It turns out that we found the source
                   code of the OCamlP3L system only in Software Heritage:
                   since it was saved with all its development history, we
                   could perform this reproduction experiment.},
	author = {Di Cosmo, Roberto and Danelutto, Marco},
	code_swh = {swh:1:rev:2db189928c94d62a3b4757b3eec68f0a4d4113f0;origin=https://gitorious.org/ocamlp3l/ocamlp3l_cvs.git/},
	code_url = {https://archive.softwareheritage.org/swh:1:rev:2db189928c94d62a3b4757b3eec68f0a4d4113f0;origin=https://gitorious.org/ocamlp3l/ocamlp3l_cvs.git/},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	dmi-category = {jour},
	doi = {10.5281/zenodo.3763416},
	domain = {parallel programming},
	journal = {ReScience C},
	keywords = {rescience c},
	language = {OCaml},
	month = apr,
	number = {1},
	pages = {{#2}},
	review_url = {https://github.com/ReScience/submissions/issues/22},
	title = {{[Rp] Reproducing and replicating the OCamlP3l experiment}},
	type = {Reproduction},
	urllocal = {http://www.dicosmo.org/Articles/2020-ReScienceC.pdf},
	volume = {6},
	x-topic = {opensc},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.3763416}}

@article{daniel2013ossdiversity,
	author = {Sherae L. Daniel and Ritu Agarwal and Katherine J. Stewart},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/isr/DanielAS13.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Inf. Syst. Res.},
	number = {2},
	pages = {312--333},
	timestamp = {Fri, 13 Mar 2020 14:34:54 +0100},
	title = {The Effects of Diversity in Global, Distributed Collectives: {A} Study of Open Source Project Success},
	volume = {24},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1287/isre.1120.0435}}

@article{dappert,
	author = {Dappert, A. et al.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	id = {10.5334/dsj-2017-028},
	journal = {Data Science Journal},
	pages = {28},
	title = {Connecting the Persistent Identifier Ecosystem: Building the Technical and Human Infrastructure for Open Research},
	volume = {16},
	year = 2017,
	bdsk-url-1 = {http://doi.org/10.5334/dsj-2017-028}}

@article{david2008fossdevs,
	author = {David, Paul A and Shapiro, Joseph S},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Information Economics and Policy},
	number = {4},
	pages = {364--398},
	publisher = {Elsevier},
	title = {Community-based production of open-source software: What do we know about the developers who participate?},
	volume = {20},
	year = {2008}}

@article{davidson2006,
	author = {Davidson, J},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	id = {Handle: 1842/3368},
	journal = {DCC Briefing Papers: Introduction to Curation. Edinburgh: Digital Curation Centre. Handle: 1842/3368.},
	title = {Persistent Identifiers},
	year = 2006,
	bdsk-url-1 = {http://www.dcc.ac.uk/resources/briefing-papers/introduction-curation}}

@article{debsources-ese-2016,
	author = {Caneill, Matthieu and Daniel M. German and Zacchiroli, Stefano},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1382-3256},
	journal = {Empirical Software Engineering},
	month = {June},
	pages = {1405-1437},
	publisher = {Springer},
	title = {The Debsources Dataset: Two Decades of Free and Open Source Software},
	volume = {22},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-016-9461-5}}

@article{dns,
	author = {J. Charles},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0740-7459},
	journal = {IEEE Software},
	keywords = {Contracts;Domain Name System;IP networks;Job shop scheduling;Proposals;Registers;Stability;Trademarks;US Government;Web and internet services},
	month = {July},
	number = {4},
	pages = {100-105},
	title = {Web interests tangle over DNS proposal},
	volume = {14},
	year = {1997},
	bdsk-url-1 = {https://doi.org/10.1109/MS.1997.595968}}

@article{ducasse2007identifiers,
	author = {Adrian Kuhn and St{\'{e}}phane Ducasse and Tudor G{\^{\i}}rba},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/infsof/KuhnDG07.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Inf. Softw. Technol.},
	number = {3},
	pages = {230--243},
	timestamp = {Thu, 20 Feb 2020 13:20:31 +0100},
	title = {Semantic clustering: Identifying topics in source code},
	volume = {49},
	year = {2007},
	bdsk-url-1 = {https://doi.org/10.1016/j.infsof.2006.10.017}}

@article{fairdefinition2016,
	abstract = {There is an urgent need to improve the infrastructure
                   supporting the reuse of scholarly data. A diverse set of
                   stakeholders---representing academia, industry, funding
                   agencies, and scholarly publishers---have come together to
                   design and jointly endorse a concise and measureable set of
                   principles that we refer to as the FAIR Data Principles.
                   The intent is that these may act as a guideline for those
                   wishing to enhance the reusability of their data holdings.
                   Distinct from peer initiatives that focus on the human
                   scholar, the FAIR Principles put specific emphasis on
                   enhancing the ability of machines to automatically find and
                   use the data, in addition to supporting its reuse by
                   individuals. This Comment is the first formal publication
                   of the FAIR Principles, and includes the rationale behind
                   them, and some exemplar implementations in the community.},
	author = {Wilkinson, Mark D. and Dumontier, Michel and Aalbersberg, IJsbrand Jan and Appleton, Gabrielle and Axton, Myles and Baak, Arie and Blomberg, Niklas and Boiten, Jan-Willem and da Silva Santos, Luiz Bonino and Bourne, Philip E. and Bouwman, Jildau and Brookes, Anthony J. and Clark, Tim and Crosas, Merc{\`e} and Dillo, Ingrid and Dumon, Olivier and Edmunds, Scott and Evelo, Chris T. and Finkers, Richard and Gonzalez-Beltran, Alejandra and Gray, Alasdair J.G. and Groth, Paul and Goble, Carole and Grethe, Jeffrey S. and Heringa, Jaap and 't Hoen, Peter A.C and Hooft, Rob and Kuhn, Tobias and Kok, Ruben and Kok, Joost and Lusher, Scott J. and Martone, Maryann E. and Mons, Albert and Packer, Abel L. and Persson, Bengt and Rocca-Serra, Philippe and Roos, Marco and van Schaik, Rene and Sansone, Susanna-Assunta and Schultes, Erik and Sengstag, Thierry and Slater, Ted and Strawn, George and Swertz, Morris A. and Thompson, Mark and van der Lei, Johan and van Mulligen, Erik and Velterop, Jan and Waagmeester, Andra and Wittenburg, Peter and Wolstencroft, Katherine and Zhao, Jun and Mons, Barend},
	bibsource = {file://traveler/home/dicosmo/ACADEMIC/Paperi/Miei/SoftwareHeritage/2020-03-ICMS/biblio.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	day = {15},
	issn = {2052-4463},
	journal = {Scientific Data},
	month = {Mar},
	number = {1},
	pages = {160018},
	title = {The {FAIR} Guiding Principles for scientific data management and stewardship},
	volume = {3},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1038/sdata.2016.18}}

@article{feitelson2015repeatability,
	author = {Feitelson, Dror G},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 16:04:41 +0100},
	journal = {SIGOPS Operating Systems Review},
	number = {1},
	pages = {3--11},
	publisher = {ACM},
	title = {From repeatability to reproducibility and corroboration},
	volume = {49},
	year = {2015}}

@article{FLOSSmole,
	author = {James Howison and Megan Conklin and Kevin Crowston},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/ijitwe/HowisonCC06},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {{IJITWE}},
	number = {3},
	pages = {17--26},
	timestamp = {Fri, 09 Nov 2012 14:42:08 +0100},
	title = {FLOSSmole: {A} Collaborative Repository for {FLOSS} Research Data and Analyses},
	volume = {1},
	year = {2006},
	bdsk-url-1 = {http://dx.doi.org/10.4018/jitwe.2006070102}}

@article{generalindex2021naturenews,
	author = {Else, Holly},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	howpublished = {Available online at \url{https://www.nature.com/articles/d41586-021-02895-8}, accessed 2021-12-15},
	journal = {Nature},
	month = {Oct},
	publisher = {Nature Publishing Group},
	title = {Giant, free index to world's research papers released online},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1038/d41586-021-02895-8}}

@article{GignoniGadducciCEP2019,
	archiveprefix = {arXiv},
	author = {Giovanni A. Cignoni and Fabio Gadducci},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/corr/abs-1904-00944.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	eprint = {1904.00944},
	journal = {CoRR},
	timestamp = {Wed, 24 Apr 2019 12:21:25 +0200},
	title = {Retracing and assessing the {CEP} project},
	volume = {abs/1904.00944},
	year = {2019},
	bdsk-url-1 = {http://arxiv.org/abs/1904.00944}}

@article{gil2016,
	author = {Gil, Yolanda and H. David, C{\'e}dric and Demir, Ibrahim and Essawy, Bakinam and Fulweiler, Wally and Goodall, Jonathan and Karlstrom, Leif and Lee, Huikyo and Mills, Heath and Oh, Ji-Hyun and Pierce, Suzanne and Pope, Allen and Tzeng, Mimi and Villamizar, Sandra and Yu, Xuan},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Earth and Space Science},
	month = {07},
	title = {Towards the Geoscience Paper of the Future: Best Practices for Documenting and Sharing Research from Data to Software to Provenance: Geoscience Paper of the Future},
	volume = {3},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1002/2015EA000136}}

@article{gold2022ethicsmsr,
	author = {Nicolas E. Gold and Jens Krinke},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/GoldK22.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-04 18:55:50 +0100},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {17},
	timestamp = {Wed, 15 Dec 2021 10:31:09 +0100},
	title = {Ethics in the mining of software repositories},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10057-7}}

@article{gonzalez2009macro,
	abstract = {Software evolution studies have traditionally focused on individual products. In this study we scale up the idea of software evolution by considering software compilations composed of a large quantity of independently developed products, engineered to work together. With the success of libre (free, open source) software, these compilations have become common in the form of `software distributions', which group hundreds or thousands of software applications and libraries into an integrated system. We have performed an exploratory case study on one of them, Debian GNU/Linux, finding some significant results. First, Debian has been doubling in size every 2 years, totalling about 300 million lines of code as of 2007. Second, the mean size of packages has remained stable over time. Third, the number of dependencies between packages has been growing quickly. Finally, while C is still by far the most commonly used programming language for applications, use of the C++, Java, and Python languages have all significantly increased. The study helps not only to understand the evolution of Debian, but also yields insights into the evolution of mature libre software systems in general.},
	author = {Gonzalez-Barahona, Jesus M. and Robles, Gregorio and Michlmayr, Martin and Amor, Juan Jos\'e and German, Daniel M.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {262--285},
	publisher = {Springer},
	title = {Macro-level software evolution: a case study of a large software compilation},
	volume = {14},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-008-9100-x}}

@article{gurcan2020distancelearningtrends,
	author = {Gurcan, Fatih and Cagiltay, Nergiz Ercil},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1049-4820},
	journal = {Interactive Learning Environments},
	month = {Sep},
	pages = {1--22},
	publisher = {Routledge},
	title = {{Research trends on distance learning: a text mining-based literature review from 2008 to 2018}},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1080/10494820.2020.1815795}}

@article{halevi2017googlescholar,
	author = {Gali Halevi and Henk F. Moed and Judit Bar{-}Ilan},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/joi/HaleviMB17.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Informetrics},
	number = {3},
	pages = {823--834},
	timestamp = {Fri, 30 Nov 2018 13:19:33 +0100},
	title = {Suitability of Google Scholar as a source of scientific information and as a source of data for scientific evaluation - Review of the Literature},
	volume = {11},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1016/j.joi.2017.06.005}}

@article{Hinsen2013,
	author = {Konrad Hinsen},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/cse/Hinsen13a},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Computing in Science and Engineering},
	number = {4},
	pages = {60--63},
	timestamp = {Wed, 14 Nov 2018 10:48:30 +0100},
	title = {Software Development for Reproducible Research},
	volume = {15},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/MCSE.2013.91}}

@article{hopcroft1973graphalgos,
	author = {Hopcroft, John and Tarjan, Robert},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Communications of the ACM},
	number = {6},
	pages = {372--378},
	publisher = {ACM},
	title = {Algorithm 447: efficient algorithms for graph manipulation},
	volume = {16},
	year = {1973}}

@article{HowisonBullard2016,
	abstract = {Software is increasingly crucial to scholarship, yet the
                   visibility and usefulness of software in the scientific
                   record are in question. Just as with data, the visibility
                   of software in publications is related to incentives to
                   share software in reusable ways, and so promote efficient
                   science. In this article, we examine software in
                   publications through content analysis of a random sample of
                   90 biology articles. We develop a coding scheme to identify
                   software ``mentions'' and classify them according to
                   their characteristics and ability to realize the functions
                   of citations. Overall, we find diverse and problematic
                   practices: Only between 31\% and 43\% of mentions involve
                   formal citations; informal mentions are very common, even
                   in high impact factor journals and across different kinds
                   of software. Software is frequently inaccessible
                   (15\%--29\% of packages in any form; between 90\% and 98\%
                   of specific versions; only between 24\%--40\% provide
                   source code). Cites to publications are particularly poor
                   at providing version information, whereas informal mentions
                   are particularly poor at providing crediting information.
                   We provide recommendations to improve the practice of
                   software citation, highlighting recent nascent efforts.
                   Software plays an increasingly great role in scientific
                   practice; it deserves a clear and useful place in scholarly
                   communication.},
	author = {Howison, James and Bullard, Julia},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of the Association for Information Science and Technology},
	keywords = {biology, journals, bibliographic citations},
	number = {9},
	pages = {2137-2155},
	title = {Software in the scientific literature: Problems with seeing, finding, and using software mentioned in the biology literature},
	volume = {67},
	year = {2016},
	bdsk-url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1002/asi.23538},
	bdsk-url-2 = {https://doi.org/10.1002/asi.23538}}

@article{huang2020openaccess,
	author = {Huang, Chun-Kai (Karl) and Neylon, Cameron and Hosking, Richard and Montgomery, Lucy and Wilson, Katie S. and Ozaygen, Alkim and Brookes-Kenworthy, Chloe},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {eLife},
	month = {Sep},
	publisher = {eLife Sciences Publications, Ltd},
	title = {Meta-Research: Evaluating the impact of open access policies on research institutions},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.7554/eLife.57067}}

@article{Hunter:2007,
	abstract = {Matplotlib is a 2D graphics package used for Python for
                   application development, interactive scripting, and
                   publication-quality image generation across user interfaces
                   and operating systems.},
	author = {Hunter, J. D.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Computing in Science \& Engineering},
	number = {3},
	pages = {90--95},
	publisher = {{IEEE COMPUTER SOC}},
	title = {Matplotlib: {{A 2D}} Graphics Environment},
	volume = {9},
	year = {2007},
	bdsk-url-1 = {https://doi.org/10.1109/MCSE.2007.55}}

@article{Hwang2017,
	abstract = {Abstract In geodynamics as in other scientific areas,
                   computation has become a core component of research,
                   complementing field observation, laboratory analysis,
                   experiment, and theory. Computational tools for data
                   analysis, mapping, visualization, modeling, and simulation
                   are essential for all aspects of the scientific workflow.
                   Specialized scientific software is often developed by
                   geodynamicists for their own use, and this effort
                   represents a distinctive intellectual contribution. Drawing
                   on a geodynamics community that focuses on developing and
                   disseminating scientific software, we assess the current
                   practices of software development and attribution, as well
                   as attitudes about the need and best practices for software
                   citation. We analyzed publications by participants in the
                   Computational Infrastructure for Geodynamics and conducted
                   mixed method surveys of the solid earth geophysics
                   community. From this we learned that coding skills are
                   typically learned informally. Participants considered good
                   code as trusted, reusable, readable, and not overly complex
                   and considered a good coder as one that participates in the
                   community in an open and reasonable manor contributing to
                   both long- and short-term community projects. Participants
                   strongly supported citing software reflected by the high
                   rate a software package was named in the literature and the
                   high rate of citations in the references. However, lacking
                   are clear instructions from developers on how to cite and
                   education of users on what to cite. In addition, citations
                   did not always lead to discoverability of the resource. A
                   unique identifier to the software package itself, community
                   education, and citation tools would contribute to better
                   attribution practices.},
	author = {Hwang, Lorraine and Fish, Allison and Soito, Laura and Smith, MacKenzie and Kellogg, Louise H.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	eprint = {https://agupubs.onlinelibrary.wiley.com/doi/pdf/10.1002/2016EA000225},
	journal = {Earth and Space Science},
	keywords = {attribution, software citation, software best practices, Computational Infrastructure for Geoduynamics, software credit, geodynamics},
	number = {11},
	pages = {670-680},
	title = {Software and the Scientist: Coding and Citation Practices in Geodynamics},
	volume = {4},
	year = {2017},
	bdsk-url-1 = {https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1002/2016EA000225},
	bdsk-url-2 = {https://doi.org/10.1002/2016EA000225}}

@article{idplos2017,
	abstract = {In many disciplines, data are highly decentralized across
                   thousands of online databases (repositories, registries,
                   and knowledgebases). Wringing value from such databases
                   depends on the discipline of data science and on the humble
                   bricks and mortar that make integration possible;
                   identifiers are a core component of this integration
                   infrastructure. Drawing on our experience and on work by
                   other groups, we outline 10 lessons we have learned about
                   the identifier qualities and best practices that facilitate
                   large-scale data integration. Specifically, we propose
                   actions that identifier practitioners (database providers)
                   should take in the design, provision and reuse of
                   identifiers. We also outline the important considerations
                   for those referencing identifiers in various circumstances,
                   including by authors and data generators. While the
                   importance and relevance of each lesson will vary by
                   context, there is a need for increased awareness about how
                   to avoid and manage common identifier problems, especially
                   those related to persistence and
                   web-accessibility/resolvability. We focus strongly on
                   web-based identifiers in the life sciences; however, the
                   principles are broadly relevant to other disciplines.},
	author = {McMurry, Julie A. AND Juty, Nick AND Blomberg, Niklas AND Burdett, Tony AND Conlin, Tom AND Conte, Nathalie AND Courtot, M{\'e}lanie AND Deck, John AND Dumontier, Michel AND Fellows, Donal K. AND Gonzalez-Beltran, Alejandra AND Gormanns, Philipp AND Grethe, Jeffrey AND Hastings, Janna AND H{\'e}rich{\'e}, Jean-Karim AND Hermjakob, Henning AND Ison, Jon C. AND Jimenez, Rafael C. AND Jupp, Simon AND Kunze, John AND Laibe, Camille AND Le Nov{\`e}re, Nicolas AND Malone, James AND Martin, Maria Jesus AND McEntyre, Johanna R. AND Morris, Chris AND Muilu, Juha AND M{\"u}ller, Wolfgang AND Rocca-Serra, Philippe AND Sansone, Susanna-Assunta AND Sariyar, Murat AND Snoep, Jacky L. AND Soiland-Reyes, Stian AND Stanford, Natalie J. AND Swainston, Neil AND Washington, Nicole AND Williams, Alan R. AND Wimalaratne, Sarala M. AND Winfree, Lilly M. AND Wolstencroft, Katherine AND Goble, Carole AND Mungall, Christopher J. AND Haendel, Melissa A. AND Parkinson, Helen},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {PLOS Biology},
	month = {06},
	number = {6},
	pages = {1-18},
	publisher = {Public Library of Science},
	title = {Identifiers for the 21st century: How to design, provision, and reuse persistent identifiers to maximize utility and impact of life science data},
	volume = {15},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1371/journal.pbio.2001414}}

@article{ieee-computer-continuous-compliance,
	author = {Simon Phipps and Stefano Zacchiroli},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0018-9162},
	journal = {IEEE Computer},
	number = {12},
	pages = {115-119},
	publisher = {IEEE Computer Society},
	title = {Continuous Open Source License Compliance},
	volume = {53},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/MC.2020.3024403}}

@article{ieee-sw-gender-swh,
	author = {Stefano Zacchiroli},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0740-7459},
	journal = {IEEE Software},
	number = {2},
	pages = {45-50},
	publisher = {IEEE Computer Society},
	title = {Gender Differences in Public Code Contributions: a 50-year Perspective},
	volume = {38},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2020.3038765}}

@article{ieee-sw-repro-builds,
	abstract = {Although it is possible to increase confidence in Free and
                   Open Source Software (FOSS) by reviewing its source code,
                   trusting code is not the same as trusting its executable
                   counterparts. These are typically built and distributed by
                   third-party vendors, with severe security consequences if
                   their supply chains are compromised. In this paper, we
                   present reproducible builds, an approach that can determine
                   whether generated binaries correspond with their original
                   source code. We first define the problem, and then provide
                   insight into the challenges of making real-world software
                   build in a "reproducible" manner-this is, when every build
                   generates bit-for-bit identical results. Through the
                   experience of the Reproducible Builds project making the
                   Debian Linux distribution reproducible, we also describe
                   the affinity between reproducibility and quality assurance
                   (QA).},
	author = {Chris Lamb and Stefano Zacchiroli},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0740-7459},
	journal = {IEEE Software},
	number = {2},
	pages = {62-70},
	publisher = {IEEE Computer Society},
	title = {Reproducible Builds: Increasing the Integrity of Software Supply Chains},
	volume = {39},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2021.3073045}}

@article{IJDC-conf-2020,
	author = {Di Cosmo, Roberto and Morane Gruenpeter and Bruno Marmol and Alain Monteil and Laurent Romary and Jozefina Sadowska},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {International Journal of Digital Curation},
	month = aug,
	number = {1},
	pages = {16},
	publisher = {Edinburgh University Library},
	title = {Curated Archiving of Research Software Artifacts: Lessons Learned from the French Open Archive ({HAL})},
	volume = {15},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.2218/ijdc.v15i1.698}}

@article{ioannidis2010metaresearch,
	author = {Ioannidis, John P. A.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1759-2879},
	journal = {Res. Synth. Methods},
	month = {Jul},
	number = {3-4},
	pages = {169--184},
	publisher = {John Wiley {\&} Sons, Ltd},
	title = {Meta-research: The art of getting it wrong},
	volume = {1},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1002/jrsm.19}}

@article{ioannidis2015metaresearch,
	author = {Ioannidis, John P. A. and Fanelli, Daniele and Dunne, Debbie Drake and Goodman, Steven N.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {PLoS Biol.},
	month = {Oct},
	number = {10},
	publisher = {Public Library of Science},
	title = {Meta-research: Evaluation and Improvement of Research Methods and Practices},
	volume = {13},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1371/journal.pbio.1002264}}

@article{ioannidis2016citation,
	author = {Ioannidis, John PA and Boyack, Kevin and Wouters, Paul F},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {PLoS biology},
	number = {9},
	pages = {e1002542},
	publisher = {Public Library of Science San Francisco, CA USA},
	title = {Citation metrics: a primer on how (not) to normalize},
	volume = {14},
	year = {2016}}

@article{jaeger2019reproducible,
	author = {Jaeger, Benedikt and Scholz, Dominik and Raumer, Daniel and Geyer, Fabien and Carle, Georg},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Computer Communications},
	pages = {31--43},
	publisher = {Elsevier},
	title = {Reproducible measurements of {TCP BBR} congestion control},
	volume = {144},
	year = {2019}}

@article{kagdi2007msrsurvey,
	author = {Kagdi, Huzefa and Collard, Michael L. and Maletic, Jonathan I.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Journal of software maintenance and evolution: Research and practice},
	number = {2},
	pages = {77--131},
	publisher = {Wiley Online Library},
	title = {A survey and taxonomy of approaches for mining software repositories in the context of software evolution},
	volume = {19},
	year = {2007}}

@inproceedings{Kawuma:ICPC:2016,
	author = {Kawuma, Simon and Businge, John and Bainomugisha, Engineer},
	booktitle = {2016 IEEE 24th International Conference on Program Comprehension (ICPC)},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1-10},
	title = {Can we find stable alternatives for unstable Eclipse interfaces?},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/ICPC.2016.7503716}}

@article{kettunen2005stem,
	author = {Kettunen, Kimmo and Kunttu, Tuomas and J{\"a}rvelin, Kalervo},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Journal of Documentation},
	publisher = {Emerald Group Publishing Limited},
	title = {To stem or lemmatize a highly inflectional language in a probabilistic {IR} environment?},
	year = {2005}}

@article{kitchenham2009slrslr,
	author = {Barbara A. Kitchenham and Pearl Brereton and David Budgen and Mark Turner and John Bailey and Stephen G. Linkman},
	biburl = {https://dblp.org/rec/journals/infsof/KitchenhamBBTBL09.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Inf. Softw. Technol.},
	number = {1},
	pages = {7--15},
	title = {Systematic literature reviews in software engineering - {A} systematic literature review},
	volume = {51},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1016/j.infsof.2008.09.009}}

@article{KnuthLiterate84,
	author = {Donald E. Knuth},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/cj/Knuth84},
	citation = {Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do. (page 99)},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Comput. J.},
	number = {2},
	pages = {97--111},
	title = {Literate Programming},
	volume = {27},
	year = {1984},
	bdsk-url-1 = {http://dx.doi.org/10.1093/comjnl/27.2.97}}

@article{kotti2020msrdatapapers,
	author = {Zoe Kotti and Konstantinos Kravvaritis and Konstantina Dritsa and Diomidis Spinellis},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/KottiKDS20.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-04 18:54:14 +0100},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {3288--3322},
	timestamp = {Mon, 26 Oct 2020 08:54:06 +0100},
	title = {Standing on shoulders or feet? An extended study on the usage of the {MSR} data papers},
	volume = {25},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-020-09834-7}}

@article{kranich2008information,
	author = {Kranich, Nancy and Schement, Jorge Reina},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Annual Review of Information Science and Technology},
	number = {1},
	pages = {546--591},
	publisher = {Wiley},
	title = {Information Commons},
	volume = {42},
	year = {2008}}

@article{Lamprecht2019,
	abstract = {The FAIR Guiding Principles, published in 2016, aim to
                   improve the findability, accessibility, interoperability
                   and reusability of digital research objects for both humans
                   and machines. Until now the FAIR principles have been
                   mostly applied to research data. The ideas behind these
                   principles are, however, also directly relevant to research
                   software. Hence there is a distinct need to explore how the
                   FAIR principles can be applied to software. In this work,
                   we aim to summarize the current status of the debate around
                   FAIR and software, as basis for the development of
                   community-agreed principles for FAIR research software in
                   the future. We discuss what makes software different from
                   data with regard to the application of the FAIR principles,
                   and which desired characteristics of research software go
                   beyond FAIR. Then we present an analysis of where the
                   existing principles can directly be applied to software,
                   where they need to be adapted or reinterpreted, and where
                   the definition of additional principles is required. Here
                   interoperability has proven to be the most challenging
                   principle, calling for particular attention in future
                   discussions. Finally, we outline next steps on the way
                   towards definite FAIR principles for research software.},
	author = {Lamprecht, Anna-Lena and Garcia, Leyla and Kuzak, Mateusz and Martinez, Carlos and Arcila, Ricardo and Martin Del Pico, Eva and Dominguez Del Angel, Victoria and van de Sandt, Stephanie and Ison, Jon and Martinez, Paula Andrea and McQuilton, Peter and Valencia, Alfonso and Harrow, Jennifer and Psomopoulos, Fotis and Gelpi, Josep Ll and Chue Hong, Neil and Goble, Carole and Capella-Gutierrez, Salvador},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2451-8492},
	journal = {Data Science},
	keywords = {reproducible research},
	month = {June},
	number = {1},
	pages = {37-59},
	publisher = {IOS Press},
	title = {Towards {FAIR} principles for research software},
	volume = {3},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.3233/DS-190026}}

@article{louridas2012note,
	author = {Louridas, Panos and Gousios, Georgios},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 16:02:59 +0100},
	journal = {SIGSOFT Software Engineering Notes},
	number = {5},
	pages = {1--4},
	publisher = {ACM},
	title = {A note on rigour and replicability},
	volume = {37},
	year = {2012}}

@article{matthews2010framework,
	author = {Matthews, Brian and Shaon, Arif and Bicarregui, Juan and Jones, Catherine},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {International Journal of Digital Curation},
	number = {1},
	pages = {91--105},
	title = {A framework for software preservation},
	volume = {5},
	year = {2010}}

@article{maxwell1996productivity,
	author = {Maxwell, Katrina D and Van Wassenhove, Luk and Dutta, Soumitra},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 11:19:53 +0100},
	journal = {Transactions on Software Engineering},
	number = {10},
	pages = {706--718},
	publisher = {IEEE},
	title = {Software development productivity of European space, military, and industrial applications},
	volume = {22},
	year = {1996}}

@article{maxwell2000productivity,
	author = {Maxwell, Katrina D and Forselius, Pekka},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {IEEE Software},
	number = {1},
	pages = {80--88},
	publisher = {IEEE},
	title = {Benchmarking software development productivity},
	volume = {17},
	year = {2000}}

@article{menzies2018swetrends,
	author = {Mathew, George and Agrawal, Amritanshu and Menzies, Tim},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-26 17:18:35 +0100},
	journal = {Transactions on Software Engineering},
	publisher = {IEEE},
	title = {Finding Trends in Software Research},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2018.2870388}}

@article{moro2015business,
	author = {Moro, S{\'e}rgio and Cortez, Paulo and Rita, Paulo},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Expert Systems with Applications},
	number = {3},
	pages = {1314--1324},
	publisher = {Elsevier},
	title = {Business intelligence in banking: A literature analysis from 2002 to 2013 using text mining and latent Dirichlet allocation},
	volume = {42},
	year = {2015}}

@article{myers2003software,
	author = {Myers, Christopher R},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Physical Review E},
	number = {4},
	pages = {046116},
	publisher = {APS},
	title = {Software systems as complex networks: Structure, function, and evolvability of software collaboration graphs},
	volume = {68},
	year = {2003}}

@article{nafus2012patches,
	author = {Nafus, Dawn},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {New Media \& Society},
	number = {4},
	pages = {669--683},
	publisher = {Sage Publications Sage UK: London, England},
	title = {Patches don't have gender: What is not open in open source software},
	volume = {14},
	year = {2012}}

@article{nagappan2009msr,
	author = {Nachiappan Nagappan and Andreas Zeller and Thomas Zimmermann},
	biburl = {https://dblp.org/rec/journals/software/NagappanZZ09.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {{IEEE} Software},
	number = {1},
	pages = {24--25},
	title = {Guest Editors' Introduction: Mining Software Archives},
	volume = {26},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2009.14}}

@article{nasar2018information,
	author = {Nasar, Zara and Jaffry, Syed Waqar and Malik, Muhammad Kamran},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Scientometrics},
	number = {3},
	pages = {1931--1990},
	publisher = {Springer},
	title = {Information extraction from scientific articles: a survey},
	volume = {117},
	year = {2018}}

@article{nazar2016summarizing,
	author = {Nazar, Najam and Hu, Yan and Jiang, He},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Journal of Computer Science and Technology},
	number = {5},
	pages = {883--909},
	publisher = {Springer},
	title = {Summarizing software artifacts: A literature review},
	volume = {31},
	year = {2016}}

@article{newman2001prefattach,
	author = {Newman, Mark EJ},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Physical review E},
	number = {2},
	pages = {025102},
	publisher = {APS},
	title = {Clustering and preferential attachment in growing networks},
	volume = {64},
	year = {2001}}

@article{novais2013software,
	author = {Novais, Renato Lima and Torres, Andr{\'e} and Mendes, Thiago Souto and Mendon{\c{c}}a, Manoel and Zazworka, Nico},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Information and Software Technology},
	number = {11},
	pages = {1860--1883},
	publisher = {Elsevier},
	title = {Software evolution visualization: A systematic mapping study},
	volume = {55},
	year = {2013}}

@article{NumbersGame2007,
	acmid = {1297815},
	author = {Parnas, David Lorge},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 16:01:37 +0100},
	issn = {0001-0782},
	issue_date = {November 2007},
	journal = {Communications of the {ACM}},
	month = nov,
	number = {11},
	numpages = {3},
	pages = {19--21},
	publisher = {ACM},
	title = {Stop the Numbers Game},
	volume = {50},
	year = {2007},
	bdsk-url-1 = {http://doi.acm.org/10.1145/1297797.1297815},
	bdsk-url-2 = {https://doi.org/10.1145/1297797.1297815}}

@article{nyman2016forkhistory,
	author = {Linus Nyman and Mikael Laakso},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {{IEEE} Annals of the History of Computing},
	number = {3},
	pages = {84--87},
	timestamp = {Wed, 14 Nov 2018 10:41:58 +0100},
	title = {Notes on the History of Fork and Join},
	volume = {38},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/MAHC.2016.34}}

@article{oneil2016debiansurvey,
	author = {O'Neil, Mathieu and Mahin Raissi and Molly de Blanc and Stefano Zacchiroli},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-28 10:57:20 +0100},
	issn = {2213-5316},
	journal = {Journal of Peer Production},
	number = {10},
	title = {Preliminary Report on the Influence of Capital in an Ethical-Modular Project: Quantitative data from the 2016 {Debian} Survey},
	year = {2017}}

@article{open-science-2018-review,
	author = {Vicente-S{\'a}ez, Rub{\'e}n and Mart{\'\i}nez-Fuentes, Clara},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of business research},
	pages = {428--436},
	publisher = {Elsevier},
	title = {{O}pen {S}cience now: A systematic literature review for an integrated definition},
	volume = {88},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.jbusres.2017.12.043}}

@article{osullivan2009making,
	author = {O'Sullivan, Bryan},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Communications of the {ACM}},
	number = {9},
	pages = {56--62},
	publisher = {ACM},
	title = {Making sense of revision-control systems},
	volume = {52},
	year = {2009}}

@article{papadopoulos2019methodological,
	author = {Papadopoulos, Alessandro Vittorio and Versluis, Laurens and Bauer, Andr{\'e} and Herbst, Nikolas and Von Kistowski, J{\'o}akim and Ali-Eldin, Ahmed and Abad, Cristina and Amaral, Jos{\'e} Nelson and T{\uu}ma, Petr and Iosup, Alexandru},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 11:17:13 +0100},
	journal = {Transactions on Software Engineering},
	publisher = {IEEE},
	title = {Methodological principles for reproducible performance evaluation in cloud computing},
	year = {2019}}

@article{Parmap2012,
	author = {Marco Danelutto and Di Cosmo, Roberto},
	bibsource = {DBLP, http://dblp.uni-trier.de},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	dmi-category = {intc},
	ee = {http://dx.doi.org/10.1016/j.procs.2012.04.202},
	journal = {Procedia CS},
	pages = {1837-1846},
	title = {A ``{M}inimal {D}isruption'' Skeleton Experiment: Seamless Map {\&} Reduce Embedding in {OC}aml},
	urllocal = {http://www.dicosmo.org/Articles/2012-DaneluttoDiCosmo-Pcs.pdf},
	volume = {9},
	x-topic = {parallel},
	year = {2012},
	bdsk-url-1 = {http://dx.doi.org/10.1016/j.procs.2012.04.202}}

@article{paskin2005digital,
	author = {Paskin, Norman},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Data Science Journal},
	pages = {12--20},
	publisher = {CODATA},
	title = {Digital object identifiers for scientific data},
	volume = {4},
	year = {2005}}

@article{paskin2010digital,
	author = {Paskin, Norman},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Encyclopedia of library and information sciences},
	pages = {1586--1592},
	publisher = {Taylor \& Francis England},
	title = {Digital object identifier (DOI) system},
	volume = {3},
	year = {2010}}

@article{Peng2015,
	abstract = {More people have more access to data than ever before. But
                   a comparative lack of analytical skills has resulted in
                   scientific findings that are neither replicable nor
                   reproducible. It is time to invest in statistics education,
                   says Roger Peng},
	author = {Peng, Roger},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	eprint = {https://rss.onlinelibrary.wiley.com/doi/pdf/10.1111/j.1740-9713.2015.00827.x},
	journal = {Significance},
	number = {3},
	pages = {30-32},
	title = {The reproducibility crisis in science: A statistical counterattack},
	volume = {12},
	year = {2015},
	bdsk-url-1 = {https://rss.onlinelibrary.wiley.com/doi/abs/10.1111/j.1740-9713.2015.00827.x},
	bdsk-url-2 = {https://doi.org/10.1111/j.1740-9713.2015.00827.x}}

@article{pina2021mariecurie,
	author = {Pina, David G. and Buljan, Ivan and Hren, Darko and Maru{\ifmmode\check{s}\else\v{s}\fi}i{\ifmmode\acute{c}\else\'{c}\fi}, Ana},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {eLife},
	month = {Jan},
	publisher = {eLife Sciences Publications, Ltd},
	title = {Meta-Research: A retrospective analysis of the peer review of more than 75,000 Marie Curie proposals between 2007 and 2018},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.7554/eLife.59338}}

@article{PourLaScience2013,
	author = {Di Cosmo, Roberto},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	dmi-category = {vulg},
	journal = {Pour la {S}cience},
	month = nov,
	pages = {86--90},
	title = {Organiser le partage pour pr\'eserver les donn\'ees},
	urllocal = {http://www.dicosmo.org/Articles/2013-11-PourLaScience-partage_donnees.pdf},
	volume = 433,
	year = {2013},
	bdsk-url-1 = {http://www.pourlascience.fr/ewb_pages/a/article-32240-organiser-le-partage-pour-preserver-les-donnees.php}}

@article{prana2019readme,
	author = {Gede Artha Azriadi Prana and Christoph Treude and Ferdian Thung and Thushari Atapattu and David Lo},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/PranaTTAL19.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {1296--1327},
	timestamp = {Wed, 25 Sep 2019 17:57:13 +0200},
	title = {Categorizing the Content of GitHub {README} Files},
	volume = {24},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-018-9660-3}}

@article{prana2021geogenderdiversity,
	author = {Prana, Gede Artha Azriadi and Ford, Denae and Rastogi, Ayushi and Lo, David and Purandare, Rahul and Nagappan, Nachiappan},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-26 17:18:35 +0100},
	journal = {Transactions on Software Engineering},
	pages = {3394-3409},
	publisher = {IEEE},
	title = {Including Everyone, Everywhere: Understanding Opportunities and Challenges of Geographic Gender-Inclusion in {OSS}},
	volume = {48},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2021.3092813}}

@article{rabai2011swetrends,
	author = {Rabai, Latifa Ben Arfa and Bai, Yan Zhi and Mili, Ali},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Information Sciences},
	number = {22},
	pages = {4993--5009},
	publisher = {Elsevier},
	title = {A quantitative model for software engineering trends},
	volume = {181},
	year = {2011}}

@article{rattan2013clonedetectionreview,
	author = {Rattan, Dhavleesh and Bhatia, Rajesh and Singh, Maninder},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Information and Software Technology},
	number = {7},
	pages = {1165--1199},
	publisher = {Elsevier},
	title = {Software clone detection: A systematic review},
	volume = {55},
	year = {2013}}

@article{ray2017codequality,
	author = {Ray, Baishakhi and Posnett, Daryl and Devanbu, Premkumar and Filkov, Vladimir},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-17 11:18:54 +0200},
	journal = {Communications of the ACM},
	number = {10},
	pages = {91--100},
	publisher = {ACM},
	title = {A large-scale study of programming languages and code quality in {GitHub}},
	volume = {60},
	year = {2017}}

@article{RiehleFLOSSFoundations2010,
	author = {Dirk Riehle},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/computer/Riehle10},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {{IEEE} Computer},
	number = {1},
	pages = {86--90},
	timestamp = {Mon, 05 Jun 2017 20:51:35 +0200},
	title = {The Economic Case for Open Source Foundations},
	volume = {43},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1109/MC.2010.24}}

@article{rodriguez2012productivity,
	author = {Rodr{\'\i}guez, Daniel and Sicilia, MA and Garc{\'\i}a, E and Harrison, Rachel},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Journal of Systems and Software},
	number = {3},
	pages = {562--570},
	publisher = {Elsevier},
	title = {Empirical findings on team size and productivity in software development},
	volume = {85},
	year = {2012}}

@article{rodriguez2018reproducibility,
	author = {Rodr{\'\i}guez-P{\'e}rez, Gema and Robles, Gregorio and Gonz{\'a}lez-Barahona, Jes{\'u}s M},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Information and Software Technology},
	pages = {164--176},
	publisher = {Elsevier},
	title = {Reproducibility and credibility in empirical software engineering: A case study based on a systematic literature review of the use of the szz algorithm},
	volume = {99},
	year = {2018}}

@article{rosenthal17,
	author = {David S. H. Rosenthal},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/lht/Rosenthal17},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Library Hi Tech},
	number = {1},
	pages = {11--31},
	timestamp = {Sun, 28 May 2017 13:20:10 +0200},
	title = {The medium-term prospects for long-term storage systems},
	volume = {35},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1108/LHT-11-2016-0128}}

@article{runeson2009guidelines,
	author = {Runeson, Per and H{\"o}st, Martin},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Empirical Software Engineering},
	number = {2},
	pages = {131},
	publisher = {Springer},
	title = {Guidelines for conducting and reporting case study research in software engineering},
	volume = {14},
	year = {2009}}

@article{sammet1972langhist,
	author = {Sammet, Jean E},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Communications of the ACM},
	number = {7},
	pages = {601--610},
	publisher = {ACM},
	title = {Programming languages: history and future},
	volume = {15},
	year = {1972}}

@article{santamaria2018genderapi,
	author = {Santamar{\'{\i}}a, Luc{\'{\i}}a and Mihaljevic, Helena},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/peerj-cs/SantamariaM18.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-28 11:10:32 +0100},
	journal = {PeerJ Computer Science},
	pages = {e156},
	timestamp = {Sat, 19 Oct 2019 19:13:33 +0200},
	title = {Comparison and benchmark of name-to-gender inference services},
	volume = {4},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.7717/peerj-cs.156}}

@article{scarselli2008gnn,
	author = {Scarselli, Franco and Gori, Marco and Tsoi, Ah Chung and Hagenbuchner, Markus and Monfardini, Gabriele},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 11:21:04 +0100},
	journal = {Transactions on Neural Networks},
	number = {1},
	pages = {61--80},
	publisher = {IEEE},
	title = {The graph neural network model},
	volume = {20},
	year = {2008}}

@article{seminalhgnc78,
	author = {Shows, T.B. and McAlpine, P.J.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Cytogenetic and Genome Research},
	number = {1-6},
	pages = {132--145},
	title = {The catalog of human genes and chromosome assignments},
	volume = 22,
	year = 1978,
	bdsk-url-1 = {https://www.karger.com/DOI/10.1159/000130925},
	bdsk-url-2 = {https://doi.org/10.1159/000130925}}

@article{SHA1,
	added-at = {2013-01-27T00:00:00.000+0100},
	author = {Dang, Quynh},
	biburl = {http://www.bibsonomy.org/bibtex/2639634f48d1781b5312fdc8f19cf5c43/dblp},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	ee = {http://dx.doi.org/10.1080/01611194.2012.687431},
	interhash = {aea496907c0a161be8390d0e1b69474f},
	intrahash = {639634f48d1781b5312fdc8f19cf5c43},
	journal = {Cryptologia},
	keywords = {dblp},
	number = 1,
	pages = {69-73},
	timestamp = {2013-01-29T11:36:44.000+0100},
	title = {Changes in Federal Information Processing Standard (FIPS) 180-4, Secure Hash Standard.},
	volume = 37,
	year = 2013}

@article{Shustek06,
	author = {Leonard J. Shustek},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp2.uni-trier.de/rec/bib/journals/annals/Shustek06},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {{IEEE} Annals of the History of Computing},
	number = {4},
	pages = {110--112},
	timestamp = {Tue, 05 Jan 2016 15:36:44 +0100},
	title = {What Should We Collect to Preserve the History of Software?},
	volume = {28},
	year = {2006},
	bdsk-url-1 = {http://dx.doi.org/10.1109/MAHC.2006.78}}

@article{singh2010smallworldcollab,
	author = {Param Vir Singh},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/tosem/Singh10.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 11:11:31 +0100},
	journal = {Transactions on Software Engineering and Methodology},
	number = {2},
	publisher = {ACM},
	timestamp = {Tue, 06 Nov 2018 12:51:20 +0100},
	title = {The small-world effect: The influence of macro-level properties of developer collaboration networks on open-source project success},
	volume = {20},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1145/1824760.1824763}}

@article{SoftwareAnalytics2013,
	abstract = {The guest editors of this special issue of IEEE Software
                   invited submissions that reflected the benefits (and
                   drawbacks) of software analytics, an area of explosive
                   growth. They had so many excellent submissions that they
                   had to split this special issue into two volumes--you'll
                   see even more content in the September/October issue. They
                   divided the articles on conceptual grounds, so both volumes
                   will feature equally excellent work. The Web extra at
                   http://youtu.be/nO6X0azR0nw is a video interview in which
                   IEEE Software editor in chief Forrest Shull speaks with Tim
                   Menzies about the growing importance of software
                   analytics.},
	author = {Menzies, Tim and Zimmermann, Thomas},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0740-7459},
	journal = {IEEE Software},
	keywords = {program diagnostics;software engineering;IEEE Software;explosive software growth;software analytics;Data analysis;Data models;Decision making;Software algorithms;Software development;Software engineering;Special issues and sections;analysis;big data;measurement;metrics;software analytics},
	month = {July},
	number = {4},
	pages = {31-37},
	title = {Software Analytics: So What?},
	volume = {30},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2013.86}}

@article{SoftwareCitationPrinciples-2016,
	author = {Arfon M. Smith and Daniel S. Katz and Kyle E. Niemeyer},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/peerj-cs/SmithKN16},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {PeerJ Computer Science},
	pages = {e86},
	timestamp = {Wed, 14 Nov 2018 10:22:40 +0100},
	title = {Software citation principles},
	volume = {2},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.7717/peerj-cs.86}}

@article{Soito2016,
	author = {Laura Soito and J Hwang, Lorraine},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {International Journal of Digital Curation},
	number = 2,
	title = {Citations for Software : Providing Identification, Access and Recognition for Research Software},
	volume = 11,
	year = 2016,
	bdsk-url-1 = {http://www.ijdc.net/index.php/ijdc/article/view/11.2.48/451},
	bdsk-url-2 = {https://doi.org/10.2218/ijdc.v11i2.390}}

@article{soper2012ngram,
	author = {Soper, Daniel S and Turel, Ofir},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 16:03:14 +0100},
	journal = {Communications of the {ACM}},
	number = {5},
	pages = {81--87},
	publisher = {ACM},
	title = {An n-gram analysis of Communications 2000--2010},
	volume = {55},
	year = {2012}}

@article{spinellis2005vcs,
	author = {Spinellis, Diomidis},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {IEEE Software},
	number = {5},
	pages = {108--109},
	publisher = {IEEE},
	title = {Version control systems},
	volume = {22},
	year = {2005}}

@article{SpinellisUnix2017,
	author = {Diomidis Spinellis},
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/journals/ese/Spinellis17},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {1372--1404},
	timestamp = {Thu, 01 Jun 2017 18:57:39 +0200},
	title = {A repository of Unix history and evolution},
	volume = {22},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-016-9445-5}}

@article{stanisicld15,
	author = {Luka Stanisic and Arnaud Legrand and Vincent Danjean},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/sigops/StanisicLD15},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Operating Systems Review},
	number = {1},
	pages = {61--70},
	timestamp = {Tue, 06 Nov 2018 12:51:34 +0100},
	title = {An Effective Git And Org-Mode Based Workflow For Reproducible Research},
	volume = {49},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2723872.2723881}}

@article{stewart2010spdxspec,
	author = {Stewart, Kate and Odence, Phil and Rockett, Esteban},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {IFOSS L. Rev.},
	pages = {191},
	publisher = {HeinOnline},
	title = {Software package data exchange ({SPDX}) specification},
	volume = {2},
	year = {2010}}

@article{Stodden-reprod-2012,
	author = {Victoria Stodden and Randall J. LeVeque and Ian Mitchell},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/cse/StoddenLM12},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Computing in Science and Engineering},
	number = {4},
	pages = {13--17},
	timestamp = {Thu, 15 Jun 2017 21:31:58 +0200},
	title = {Reproducible Research for Scientific Computing: Tools and Strategies for Changing the Culture},
	volume = {14},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1109/MCSE.2012.38}}

@article{stonebraker1991postgres,
	author = {Michael Stonebraker and Greg Kemnitz},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/cacm/StonebrakerK91.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Commun. {ACM}},
	number = {10},
	pages = {78--92},
	timestamp = {Tue, 06 Nov 2018 12:51:34 +0100},
	title = {The Postgres Next Generation Database Management System},
	volume = {34},
	year = {1991},
	bdsk-url-1 = {https://doi.org/10.1145/125223.125262}}

@article{suber2003openaccess,
	author = {Suber, Peter},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {College \& research libraries news},
	note = {available at \url{https://dash.harvard.edu/bitstream/handle/1/3715477/suber_crln.html}},
	pages = {92-94},
	publisher = {Association of College and Research Libraries},
	title = {Removing the barriers to research: an introduction to open access for librarians},
	volume = {64},
	year = {2003}}

@article{swh-BiblatexSoftware-SEN,
	abstract = {Software, and software source code in particular, is widely used in modern research. It must be properly archived, referenced, described and cited in order to build a stable and long lasting corpus of scienti c knowledge. And yet, up to now there was no speci c support for citing software in the popular BibTeX format that we use for our bibliographies.We got used to work around this lack of dedicated support by tweaking the @misc entry, citing the user manual, or an article related to a software artifact, or adding in the text or in a footnote urls pointing to a place where one could get the software: the project web page, or a code hosting platform.These workaround were a manifestation of the fact that software artifacts themselves were not considered rst class citizen in the scholarly world.With the recent raise of interest on reproducibility of research re- sults, from Artifact Evaluation Committees to the ACM Badges, we have started moving towards giving nally software the aca- demic dignity it deserves.},
	author = {Di Cosmo, Roberto},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-28 14:59:23 +0100},
	issn = {0163-5948},
	journal = {SIGSOFT Software Engineering Notes},
	month = {oct},
	number = {4},
	pages = {22--23},
	publisher = {ACM},
	title = {Announcing Biblatex-Software: Software Citation Made Easy},
	volume = {45},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3417564.3417570}}

@article{swh-provenance-emse,
	author = {Guillaume Rousseau and Di Cosmo, Roberto and Stefano Zacchiroli},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/RousseauCZ20.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1382-3256},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {2930--2959},
	publisher = {Springer},
	timestamp = {Thu, 18 Jun 2020 08:15:38 +0200},
	title = {Software Provenance Tracking at the Scale of Public Source Code},
	volume = {25},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-020-09828-5}}

@article{swhcacm2018,
	acmid = {3183558},
	author = {Abramatic, Jean-Fran\c{c}ois and Di Cosmo, Roberto and Zacchiroli, Stefano},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0001-0782},
	journal = {Communications of the {ACM}},
	month = sep,
	number = {10},
	pages = {29--31},
	publisher = {ACM},
	title = {Building the Universal Archive of Source Code},
	volume = {61},
	year = {2018},
	bdsk-url-1 = {http://doi.acm.org/10.1145/3183558},
	bdsk-url-2 = {https://doi.org/10.1145/3183558}}

@article{syeed-2013-oss-evol-review,
	author = {M. M. Mahbubul Syeed and Imed Hammouda and Tarja Syst{\"a}},
	bibsource = {DBLP, http://dblp.uni-trier.de},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	ee = {http://dx.doi.org/10.4304/jsw.8.11.2815-2829},
	journal = {JSW},
	number = {11},
	pages = {2815-2829},
	title = {Evolution of Open Source Software Projects: A Systematic Literature Review},
	volume = {8},
	year = {2013}}

@article{terrell2017gender,
	author = {Terrell, Josh and Kofink, Andrew and Middleton, Justin and Rainear, Clarissa and Murphy-Hill, Emerson and Parnin, Chris and Stallings, Jon},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {PeerJ Computer Science},
	pages = {e111},
	publisher = {PeerJ Inc.},
	title = {Gender differences and bias in open source: Pull request acceptance of women versus men},
	volume = {3},
	year = {2017}}

@article{thain2015,
	author = {Douglas Thain and Peter Ivie and Haiyan Meng},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:56:42 +0100},
	journal = {International Conference on Digital Preservation ({iPRES})},
	title = {Techniques for Preserving Scientific Software Executions: Preserve the Mess or Encourage Cleanliness?},
	year = {2015},
	bdsk-url-1 = {http://dx.doi.org/doi:10.7274/R0CZ353M}}

@article{the-real-software-crisis,
	author = {Krishnamurthi, Shriram and Vitek, Jan},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Communications of the {ACM}},
	month = feb,
	number = {3},
	pages = {34--36},
	publisher = {ACM},
	title = {The Real Software Crisis: Repeatability As a Core Value},
	volume = {58},
	year = {2015},
	bdsk-url-1 = {http://doi.org/10.1145/2658987}}

@article{ThummalapentaCAP10,
	author = {Suresh Thummalapenta and Luigi Cerulo and Lerina Aversano and Massimiliano Di Penta},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/journals/ese/ThummalapentaCAP10},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {1--34},
	timestamp = {Tue, 06 Jun 2017 22:24:59 +0200},
	title = {An empirical study on the maintenance of source code clones},
	volume = {15},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-009-9108-x}}

@article{tkaczyk2015cermine,
	author = {Dominika Tkaczyk and Pawel Szostek and Mateusz Fedoryszak and Piotr Jan Dendek and Lukasz Bolikowski},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ijdar/TkaczykSFDB15.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Int. J. Document Anal. Recognit.},
	number = {4},
	pages = {317--335},
	timestamp = {Thu, 13 Aug 2020 12:42:15 +0200},
	title = {{CERMINE:} automatic extraction of structured metadata from scientific literature},
	volume = {18},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1007/s10032-015-0249-8}}

@article{treolar2014,
	author = {Van de Sompel, Herbert and Andrew Treolar},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-06 12:15:32 +0100},
	journal = {International Conference on Digital Preservation ({iPRES})},
	pages = {194--198},
	title = {A perspective on Archiving the Scholarly Web},
	year = {2014}}

@article{valverde2003hierarchical,
	author = {Valverde, Sergi and Sol{\'e}, Ricard V},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-01-04 11:20:37 +0100},
	journal = {Dynamics of Continuous, Discrete and Impulsive Systems Series B: Applications and Algorithms (Special Issue on Software Engineering and Complex Networks)},
	publisher = {Watam Press},
	title = {Hierarchical small worlds in software architecture},
	year = {2007}}

@article{VanNoorden2014,
	author = {Richard Van Noorden and Brendan Maher and Regina Nuzzo},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Nature},
	month = {oct},
	number = {7524},
	pages = {550--553},
	publisher = {Springer Nature},
	title = {The top 100 papers},
	volume = {514},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1038/514550a}}

@article{vasilescu2014gender,
	author = {Vasilescu, Bogdan and Capiluppi, Andrea and Serebrenik, Alexander},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Interacting with Computers},
	number = {5},
	pages = {488--511},
	publisher = {Oxford University Press},
	title = {Gender, representation and online participation: A quantitative study},
	volume = {26},
	year = {2014}}

@article{vigna2015webstruct,
	author = {Meusel, Robert and Vigna, Sebastiano and Lehmberg, Oliver and Bizer, Christian},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {The Journal of Web Science},
	title = {The graph structure in the web--analyzed on different aggregation levels},
	volume = {1},
	year = {2015}}

@article{vine2006googlescholar,
	author = {Vine, Rita},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Med. Libr. Assoc.},
	month = {Jan},
	number = {1},
	pages = {97},
	publisher = {Medical Library Association},
	title = {{Google Scholar}},
	volume = {94},
	year = {2006},
	bdsk-url-1 = {https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1324783}}

@inproceedings{vitek2017dejavu,
	author = {Cristina V. Lopes and Petr Maj and Pedro Martins and Vaibhav Saini and Di Yang and Jakub Zitny and Hitesh Sajnani and Jan Vitek},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	booktitle = {Conference on Object-Oriented Programming Systems, Languages and Applications ({OOPSLA})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:16:50 +0100},
	timestamp = {Tue, 06 Nov 2018 12:51:05 +0100},
	title = {D{\'{e}}j{\`{a}}Vu: a map of code duplicates on {GitHub}},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1145/3133908}}

@article{vitek2019codequality,
	author = {Berger, Emery D and Hollenbeck, Celeste and Maj, Petr and Vitek, Olga and Vitek, Jan},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 11:17:59 +0100},
	journal = {Transactions on Programming Languages and Systems},
	number = {4},
	pages = {1--24},
	publisher = {ACM},
	title = {On the impact of programming languages on code quality: a reproduction study},
	volume = {41},
	year = {2019}}

@article{wachs2021ossgeography,
	author = {Wachs, Johannes and Nitecki, Mariusz and Schueller, William and Polleres, Axel},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Technological Forecasting and Social Change},
	keywords = {Geography, Open source software, GitHub, Innovation, cluster policy},
	title = {The Geography of Open Source Software: Evidence from {GitHub}},
	volume = {176},
	year = {2021},
	bdsk-url-1 = {https://arxiv.org/abs/2107.03200},
	bdsk-url-2 = {https://doi.org/10.1016/j.techfore.2022.121478}}

@article{watts1998smallworld,
	author = {Watts, Duncan J and Strogatz, Steven H},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Nature},
	number = {6684},
	pages = {440},
	publisher = {Nature Publishing Group},
	title = {Collective dynamics of ``small-world'' networks},
	volume = {393},
	year = {1998}}

@article{Whitt2017,
	author = {Whitt, Richard S.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	journal = {Santa Clara High Tech. L.J.},
	month = jan,
	note = {Available at: http://digitalcommons.law.scu.edu/chtlj/vol33/iss2/1},
	number = 2,
	pages = 117,
	title = {"Through A Glass, Darkly" Technical, Policy, and Financial Actions to Avert the Coming Digital Dark Ages},
	volume = 33,
	year = 2017}

@article{Wimalaratne2018,
	abstract = {We report here on our project to provide robust support
                   for machine-resolvable, persistent compact identifiers in
                   biomedical data citation, by harmonizing the
                   Identifiers.org and N2T.net (Name-To-Thing) meta-resolvers
                   and extending their capabilities.},
	author = {Wimalaratne, Sarala M. and Juty, Nick and Kunze, John and Jan{\'e}e, Greg and McMurry, Julie A. and Beard, Niall and Jimenez, Rafael and Grethe, Jeffrey S. and Hermjakob, Henning and Martone, Maryann E. and Clark, Tim},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	day = 08,
	journal = {Scientific Data},
	month = {May},
	note = {Article},
	pages = {180029},
	publisher = {Nature},
	title = {Uniform resolution of compact identifiers for biomedical data},
	volume = 5,
	year = 2018,
	bdsk-url-1 = {https://doi.org/10.1038/sdata.2018.29}}

@book{Abelson:SIC85,
	address = pub-mit:adr,
	author = {Harold Abelson and Gerald J. Sussman with Julie Sussman},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-06 12:19:39 +0100},
	isbn = {0-262-01077-1 (MIT Press), 0-07-000422-6 (McGraw-Hill)},
	isbn-13 = {978-0-262-01077-1 (MIT Press), 978-0-07-000422-1 (McGraw-Hill)},
	lccn = {QA76.6 .A255 1984},
	publisher = {MIT press},
	title = {Structure and Interpretation of Computer Programs},
	year = {1985}}

@book{applied-crypto,
	author = {Schneier, Bruce},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	isbn = {9788126513680},
	publisher = {{J}ohn {W}iley \& {S}ons},
	title = {Applied cryptography: protocols, algorithms, and source code in C 2nd edition},
	year = {2007}}

@book{bergin1996hopl-ii,
	author = {Bergin Jr, Thomas J and Gibson Jr, Richard G},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {ACM},
	title = {History of programming languages---II},
	year = {1996}}

@book{CGAL,
	author = {{The CGAL Project}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	edition = {{4.14}},
	publisher = {{CGAL Editorial Board}},
	title = {{CGAL} User and Reference Manual},
	year = 2019,
	bdsk-url-1 = {https://doc.cgal.org/4.14/Manual/packages.html}}

@book{felderer2020esebook,
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/books/sp/20/FT2020.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Michael Felderer and Guilherme Horta Travassos},
	isbn = {978-3-030-32488-9},
	publisher = {Springer},
	timestamp = {Fri, 26 Mar 2021 14:31:04 +0100},
	title = {Contemporary Empirical Methods in Software Engineering},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-32489-6}}

@book{fogel2005producingoss,
	author = {Fogel, Karl},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {O'Reilly Media, Inc.},
	title = {Producing open source software: How to run a successful free software project},
	year = {2005}}

@book{hill2010whysofew,
	author = {Hill, Catherine and Corbett, Christianne and St Rose, Andresse},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {ERIC},
	title = {Why so few? Women in science, technology, engineering, and mathematics.},
	year = {2010}}

@book{kernighan2019unixhistory,
	author = {Kernighan, Brian W},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	note = {\url{https://www.cs.princeton.edu/~bwk/memoir.html}, accessed 2022-01-10},
	publisher = {Independently published},
	title = {{UNIX}: A History and a Memoir},
	year = {2019}}

@book{knuth1992literate,
	author = {Knuth, D.E.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9780937073810},
	lccn = {lc91039510},
	publisher = {Cambridge University Press},
	series = {Center for the Study of Language and Information Publication Lecture Notes},
	title = {Literate Programming},
	year = {1992},
	bdsk-url-1 = {https://books.google.fr/books?id=vovpQgAACAAJ}}

@book{lessig1999code,
	author = {Lessig, Lawrence},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {Basic books},
	title = {Code and other laws of cyberspace},
	year = {1999}}

@book{margolis2002womencs,
	author = {Margolis, Jane and Fisher, Allan},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {MIT press},
	title = {Unlocking the clubhouse: Women in computing},
	year = {2002}}

@book{mckinney2012scipy,
	author = {McKinney, Wes},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {O'Reilly Media, Inc.},
	title = {Python for data analysis: Data wrangling with Pandas, NumPy, and IPython},
	year = {2012}}

@book{Mysql5,
	author = {Michael Kofler},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {Apress},
	title = {The Definitive Guide to MySQL5},
	year = {2005}}

@book{oliphant2006numpy,
	author = {Oliphant, Travis E},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {Trelgol Publishing USA},
	title = {A guide to NumPy},
	volume = {1},
	year = {2006}}

@book{Popper34,
	author = {Karl R. Popper},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	isbn = {316148410X},
	note = {Reprint of the original 1934 edition},
	publisher = {J.C.B. Mohr},
	title = {Logik der Forschung},
	year = {1971}}

@book{ProGit2014,
	address = {Berkely, CA, USA},
	author = {Chacon, Scott and Straub, Ben},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	edition = {2nd},
	isbn = {1484200772, 9781484200773},
	publisher = {Apress},
	title = {Pro Git},
	year = {2014}}

@book{raymond2003art,
	author = {Raymond, Eric S},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {Addison-Wesley Professional},
	title = {The art of Unix programming},
	year = {2003}}

@book{schweik2012internet,
	author = {Schweik, Charles M and English, Robert C},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {MIT Press},
	title = {Internet success: a study of open-source software commons},
	year = {2012}}

@book{SemiPar2003,
	author = {David Ruppert},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	isbn = {9780521785167},
	publisher = {Cambridge University Press},
	title = {Semiparametric Regression (Cambridge Series in Statistical and Probabilistic Mathematics)},
	year = {2003}}

@book{shull2008eseguide,
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/books/sp/08/SSS2008.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Forrest Shull and Janice Singer and Dag I. K. Sj{\o}berg},
	isbn = {9781848000438},
	publisher = {Springer},
	timestamp = {Wed, 07 Aug 2019 15:04:08 +0200},
	title = {Guide to Advanced Empirical Software Engineering},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1007/978-1-84800-044-5}}

@book{swh-SIRSReport2020,
	author = {Di Cosmo, Roberto and Jose Benito Gonzalez Lopez and Abramatic, Jean-Fran\c{c}ois and Kay Graf and Miguel Colom and Paolo Manghi and Melissa Harrison and Yannick Barborini and Ville Tenhunen and Michael Wagner and Wolfgang Dalitz and Jason Maassen and Carlos Martinez-Ortiz and Elisabetta Ronchieri and Sam Yates and Moritz Schubotz and Leonardo Candela and Martin Fenner and Eric Jeangirard},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	dmi-category = {livre},
	place = {LU},
	publisher = {European Commission. Directorate General for Research and Innovation},
	subtitle = {Report from the EOSC Executive Board Working Group (WG) Architecture Task Force (TF) SIRS},
	title = {Scholarly {I}nfrastructures for {R}esearch {S}oftware},
	urllocal = {http://www.dicosmo.org/Articles/2020-SIRS-Report.pdf},
	x-topic = {opensc},
	year = {2020},
	bdsk-url-1 = {https://data.europa.eu/doi/10.2777/28598},
	bdsk-url-2 = {https://doi.org/10.2777/28598}}

@book{wexelblat1981hopl-i,
	author = {Wexelblat, Richard L},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	publisher = {Academic Press},
	title = {History of programming languages},
	year = {1981}}

@incollection{2008-riehle-foss-growth,
	author = {Deshpande, Amit and Riehle, Dirk},
	booktitle = {Open Source Development, Communities and Quality},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	pages = {197--209},
	publisher = {Springer},
	title = {The total growth of open source},
	year = {2008}}

@incollection{ghosh2005understanding,
	author = {Ghosh, Rishab Aiyer},
	booktitle = {Perspectives on free and open source software},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	pages = {23--47},
	publisher = {{MIT} Press},
	title = {Understanding free software developers: Findings from the {FLOSS} study},
	volume = {28},
	year = {2005}}

@incollection{mens2008swevolintro,
	author = {Mens, Tom},
	booktitle = {Software evolution},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	pages = {1--11},
	publisher = {Springer},
	title = {Introduction and roadmap: History and challenges of software evolution},
	year = {2008}}

@incollection{sep-names,
	author = {Cumming, Sam},
	booktitle = {The Stanford Encyclopedia of Philosophy},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	edition = {Fall 2016},
	editor = {Edward N. Zalta},
	howpublished = {\url{https://plato.stanford.edu/archives/fall2016/entries/names/}},
	publisher = {Metaphysics Research Lab, Stanford University},
	title = {Names},
	year = {2016}}

@incollection{sep-peirce-semiotics,
	author = {Atkin, Albert},
	booktitle = {The Stanford Encyclopedia of Philosophy},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	edition = {Summer 2013},
	editor = {Edward N. Zalta},
	howpublished = {\url{https://plato.stanford.edu/archives/sum2013/entries/peirce-semiotics/}},
	publisher = {Metaphysics Research Lab, Stanford University},
	title = {Peirce's Theory of Signs},
	year = {2013}}

@inproceedings{2006-zeller-msr,
	author = {Nagappan, Nachiappan and Ball, Thomas and Zeller, Andreas},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-06 11:10:59 +0100},
	organization = {ACM},
	pages = {452--461},
	title = {Mining metrics to predict component failures},
	year = {2006}}

@inproceedings{2007-mockus-reuse,
	author = {Mockus, Audris},
	booktitle = {FLOOS'07: 1st International Workshop on Emerging Trends in {FLOSS} Research and Development},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	organization = {IEEE},
	title = {Large-scale code reuse in open source software},
	year = {2007}}

@inproceedings{2013-kirschenbaum-history-exe,
	author = {Matthew Kirschenbaum},
	crossref = {2013-preserving-exe},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	note = {\url{http://www.slate.com/articles/arts/culturebox/2013/07/how_will_historians_of_the_future_run_ms_word_97_how_can_we_save_it_for.single.html}},
	title = {History.exe: How can we preserve the software of today for historians of tomorrow?}}

@inproceedings{2014-kirschenbaum-software-thing,
	author = {Matthew Kirschenbaum},
	crossref = {2014-digital-preservation},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	note = {\url{https://medium.com/@mkirschenbaum/software-its-a-thing-a550448d0ed3}},
	title = {Software, It's a Thing}}

@inproceedings{alexandru2017redundancy,
	author = {Carol V. Alexandru and Sebastiano Panichella and Harald C. Gall},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/conf/wcre/AlexandruPG17},
	booktitle = {{IEEE} 24th International Conference on Software Analysis, Evolution and Reengineering, {SANER} 2017, Klagenfurt, Austria, February 20-24, 2017},
	crossref = {DBLP:conf/wcre/2017},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {148--159},
	timestamp = {Wed, 16 Oct 2019 14:14:53 +0200},
	title = {Reducing redundancies in multi-revision code analysis},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2017.7884617}}

@inproceedings{amann2013software,
	author = {Sven Amann and Stefanie Beyer and Katja Kevic and Harald C. Gall},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/laser/AmannBKG14.bib},
	booktitle = {Software Engineering - International Summer Schools, {LASER} 2013-2014, Elba, Italy, Revised Tutorial Lectures},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Bertrand Meyer and Martin Nordio},
	pages = {121--158},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	timestamp = {Tue, 14 May 2019 10:00:44 +0200},
	title = {Software Mining Studies: Goals, Approaches, Artifacts, and Replicability},
	volume = {8987},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-28406-4%5C_5}}

@inproceedings{antal2020secawareness,
	author = {G{\'{a}}bor Antal and M{\'{a}}rton Keleti and P{\'{e}}ter Heged{\"{u}}s},
	biburl = {https://dblp.org/rec/conf/msr/AntalKH20.bib},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 15:59:33 +0100},
	pages = {16--20},
	publisher = {ACM},
	title = {Exploring the Security Awareness of the {Python} and {JavaScript} Open Source Communities},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387513}}

@inproceedings{arnab2006,
	acmid = {1179514},
	author = {Arnab, Alapan and Hutchison, Andrew},
	booktitle = {Workshop on Digital Rights Management ({DRM})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:55:36 +0100},
	isbn = {1-59593-555-X},
	keywords = {data identity, digital signatures, handle system, identifier, identity verification, vdoi},
	pages = {19--26},
	publisher = {ACM},
	title = {Verifiable Digital Object Identity System},
	year = {2006},
	bdsk-url-1 = {http://doi.acm.org/10.1145/1179509.1179514},
	bdsk-url-2 = {https://doi.org/10.1145/1179509.1179514}}

@inproceedings{bajpai2017challenges,
	author = {Bajpai, Vaibhav and K{\"u}hlewind, Mirja and Ott, J{\"o}rg and Sch{\"o}nw{\"a}lder, J{\"u}rgen and Sperotto, Anna and Trammell, Brian},
	booktitle = {Proceedings of the Reproducibility Workshop},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	pages = {1--4},
	title = {Challenges with reproducibility},
	year = {2017}}

@inproceedings{bavota2016technicaldebt,
	author = {Gabriele Bavota and Barbara Russo},
	biburl = {https://dblp.org/rec/conf/msr/BavotaR16.bib},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 16:44:42 +0100},
	pages = {315--326},
	title = {A large-scale empirical study on self-admitted technical debt},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2901739.2901742}}

@inproceedings{bhattacharjee2020crossplatformforks,
	author = {Avijit Bhattacharjee and Sristy Sumana Nath and Shurui Zhou and Debasish Chakroborti and Banani Roy and Chanchal K. Roy and Kevin A. Schneider},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {11--15},
	publisher = {ACM},
	title = {An Exploratory Study to Find Motives Behind Cross-platform Forks from Software Heritage Dataset},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387512}}

@inproceedings{biazzini2014maythefork,
	author = {Biazzini, Marco and Baudry, Benoit},
	booktitle = {International Workshop on Emerging Trends in Software Metrics},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-17 11:30:27 +0200},
	organization = {ACM},
	pages = {37--43},
	title = {May the fork be with you: novel metrics to analyze collaboration on {GitHub}},
	year = {2014}}

@inproceedings{boldi-vigna-webgraph-1,
	author = {Paolo Boldi and Sebastiano Vigna},
	biburl = {https://dblp.org/rec/bib/conf/www/BoldiV04},
	booktitle = {International conference on World Wide Web ({WWW})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {595--602},
	title = {The webgraph framework {I:} compression techniques},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1145/988672.988752}}

@inproceedings{boldi-vigna-webgraph-2,
	author = {Paolo Boldi and Sebastiano Vigna},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/conf/dcc/BoldiV04},
	booktitle = {2004 Data Compression Conference {(DCC} 2004), 23-25 March 2004, Snowbird, UT, {USA}},
	crossref = {DBLP:conf/dcc/2004},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {528},
	timestamp = {Tue, 23 May 2017 01:07:01 +0200},
	title = {The WebGraph Framework {II:} Codes For The World-Wide Web},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1109/DCC.2004.1281504}}

@inproceedings{Candoia2016,
	author = {Nitin M. Tiwari and Ganesha Upadhyaya and Hridesh Rajan},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-16 09:23:17 +0100},
	doi = {10.1145/2889160.2892662},
	pages = {759--764},
	title = {Candoia: a platform and ecosystem for mining software repositories tools},
	year = {2016},
	bdsk-url-1 = {http://doi.acm.org/10.1145/2889160.2892662},
	bdsk-url-2 = {https://doi.org/10.1145/2889160.2892662}}

@inproceedings{debsources-esem-2014,
	author = {Caneill, Matthieu and Stefano Zacchiroli},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-1-4503-2774-9},
	note = {\url{http://sources.debian.net}},
	publisher = {ACM},
	title = {Debsources: Live and Historical Views on Macro-Level Software Evolution},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2652524.2652528}}

@inproceedings{demeyer2013msrtrends,
	author = {Serge Demeyer and Alessandro Murgia and Kevin Wyckmans and Ahmed Lamkanfi},
	biburl = {https://dblp.org/rec/conf/msr/DemeyerMWL13.bib},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {353--362},
	publisher = {IEEE},
	title = {Happy birthday! A trend analysis on past {MSR} papers},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2013.6624049}}

@inproceedings{dyer2013boa,
	abstract = {In today's software-centric world, ultra-large-scale software repositories, e.g. SourceForge (350,000+ projects), GitHub (250,000+ projects), and Google Code (250,000+ projects) are the new library of Alexandria. They contain an enormous corpus of software and information about software. Scientists and engineers alike are interested in analyzing this wealth of information both for curiosity as well as for testing important hypotheses. However, systematic extraction of relevant data from these repositories and analysis of such data for testing hypotheses is hard, and best left for mining software repository (MSR) experts! The goal of Boa, a domain-specific language and infrastructure described here, is to ease testing MSR-related hypotheses. We have implemented Boa and provide a web-based interface to Boa's infrastructure. Our evaluation demonstrates that Boa substantially reduces programming efforts, thus lowering the barrier to entry. We also see drastic improvements in scalability. Last but not least, reproducing an experiment conducted using Boa is just a matter of re-running small Boa programs provided by previous researchers.},
	author = {Dyer, Robert and Nguyen, Hoan Anh and Rajan, Hridesh and Nguyen, Tien N.},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	organization = {IEEE},
	pages = {422--431},
	title = {Boa: A language and infrastructure for analyzing ultra-large-scale software repositories},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2013.6606588}}

@inproceedings{edos2006wsl,
	author = {Boender, Jaap and Di Cosmo, Roberto and Durak, Berke and Leroy, Xavier and Mancinelli, Fabio and Morgado, Mario and Pinheiro, David and Treinen, Ralf and Trezentos, Paulo and Vouillon, J{\'e}r{\^o}me},
	booktitle = {International Workshop on Free Software ({IWFS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:49:26 +0100},
	isbn = {857669066-7},
	month = apr,
	pages = {199 -- 207},
	title = {News from the {EDOS} project: improving the maintenance of free software distributions},
	x-topic = {softeng},
	year = {2006},
	bdsk-url-1 = {http://www.dicosmo.org/Articles/wsl06.pdf}}

@inproceedings{esem-2022-msr-artifacts,
	abstract = {Background: Software development results in the production
                   of various types of artifacts: source code, version control
                   system metadata, bug reports, mailing list conversations,
                   test data, etc. Empirical software engineering (ESE) has
                   thrived mining those artifacts to uncover the inner
                   workings of software development and improve its practices.
                   But which artifacts are studied in the field is a moving
                   target, which we study empirically in this paper. Aims: We
                   quantitatively characterize the most frequently mined and
                   co-mined software artifacts in ESE research and the
                   research purposes they support. Method: We conduct a
                   meta-analysis of artifact mining studies published in 11
                   top conferences in ESE, for a total of 9621 papers. We use
                   natural language processing (NLP) techniques to
                   characterize the types of software artifacts that are most
                   often mined and their evolution over a 16-year period
                   (2004-2020). We analyze the combinations of artifact types
                   that are most often mined together, as well as the
                   relationship between study purposes and mined artifacts.
                   Results: We find that: (1) mining happens in the vast
                   majority of analyzed papers, (2) source code and test data
                   are the most mined artifacts, (3) there is an increasing
                   interest in mining novel artifacts, together with source
                   code, (4) researchers are most interested in the evaluation
                   of software systems and use all possible empirical signals
                   to support that goal.},
	author = {Abou Khalil, Zeinab and Stefano Zacchiroli},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {ACM},
	title = {Software Artifact Mining in Software Engineering Conferences: A Meta-Analysis},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3544902.3546239}}

@inproceedings{farias2016msrmapping,
	author = {M{\'{a}}rio Andr{\'{e}} de Freitas Farias and Renato Lima Novais and Methanias Cola{\c{c}}o J{\'{u}}nior and Luis Paulo da Silva Carvalho and Manoel G. Mendon{\c{c}}a and Rodrigo Oliveira Sp{\'{\i}}nola},
	booktitle = {Symposium on Applied Computing ({SAC})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:44:01 +0100},
	pages = {1472--1479},
	publisher = {ACM},
	title = {A systematic mapping study on mining software repositories},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2851613.2851786}}

@inproceedings{file-type-detection-swh,
	abstract = {Programming language detection is a common need in the analysis of large source code bases. It is supported by a number of existing tools that rely on several features, and most notably file extensions, to determine file types. We consider the problem of accurately detecting the type of files commonly found in software code bases, based solely on textual file content. Doing so is helpful to classify source code that lack file extensions (e.g., code snippets posted on the Web or executable scripts), to avoid misclassifying source code that has been recorded with wrong or uncommon file extensions, and also shed some light on the intrinsic recognizability of source code files. We propose a simple model that (a) use a language-agnostic word tokenizer for textual files, (b) group tokens in 1-/2-grams, (c) build feature vectors based on N-gram frequencies, and (d) use a simple fully connected neural network as classifier. As training set we use textual files extracted from GitHub repositories with at least 1000 stars, using existing file extensions as ground truth. Despite its simplicity the proposed model reaches ≈  85% in our experiments for a relatively high number of recognized classes (more than 130 file types).},
	author = {Del Bonifro, Francesca and Maurizio Gabbrielli and Stefano Zacchiroli},
	booktitle = {International Conference on Machine Learning and Computing ({ICMLC})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {485--492},
	publisher = {ACM},
	title = {Content-Based Textual File Type Detection at Scale},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3457682.3457756}}

@inproceedings{gao2007archive,
	author = {Gao, Yongqin and VanAntwerp, Matthew and Christley, Scott and Madey, Greg},
	booktitle = {International Workshop on Emerging Trends in {FLOSS} Research and Development ({FLOSS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-06 12:05:05 +0100},
	publisher = {IEEE},
	title = {A research collaboratory for open source software research.},
	year = {2007}}

@inproceedings{GHTorrent,
	author = {Gousios, Georgios and Spinellis, Diomidis},
	biburl = {http://dblp.uni-trier.de/rec/bib/conf/msr/GousiosS12},
	booktitle = {Working Conference of Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {12--21},
	title = {{GHTorrent}: {Github}'s data from a firehose},
	year = {2012},
	bdsk-url-1 = {http://dx.doi.org/10.1109/MSR.2012.6224294}}

@inproceedings{gilda2017source,
	author = {Gilda, Shlok},
	booktitle = {2017 14th International Joint Conference on Computer Science and Software Engineering (JCSSE)},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	pages = {1--6},
	publisher = {IEEE},
	title = {Source code classification using Neural Networks},
	year = {2017}}

@inproceedings{gu2018deepcodesearch,
	author = {Xiaodong Gu and Hongyu Zhang and Sunghun Kim},
	biburl = {https://dblp.org/rec/conf/icse/GuZ018.bib},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {933--944},
	publisher = {ACM},
	title = {Deep code search},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3180155.3180167}}

@inproceedings{gundersen2018state,
	author = {Gundersen, Odd Erik and Kjensmo, Sigbj{\o}rn},
	booktitle = {Conference on Artificial Intelligence ({AAAI})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-06 12:04:11 +0100},
	number = {1},
	title = {State of the art: Reproducibility in artificial intelligence},
	volume = {32},
	year = {2018}}

@inproceedings{hassan2004revengsmallworld,
	author = {Ahmed E. Hassan and Richard C. Holt},
	biburl = {https://dblp.org/rec/conf/wcre/HassanH04.bib},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {278--283},
	publisher = {IEEE},
	title = {The Small World of Software Reverse Engineering},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1109/WCRE.2004.37}}

@inproceedings{hassan2008road,
	author = {Hassan, Ahmed E.},
	booktitle = {Frontiers of Software Maintenance ({FoSM})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-15 18:27:13 +0100},
	organization = {IEEE},
	pages = {48--57},
	title = {The road ahead for mining software repositories},
	year = {2008}}

@inproceedings{herbsleb2007globalsweng,
	author = {James D. Herbsleb},
	booktitle = {International Conference on Software Engineering ({ISCE}) -- Workshop on the Future of Software Engineering},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-18 18:18:01 +0100},
	pages = {188--198},
	publisher = {IEEE},
	title = {Global Software Engineering: The Future of Socio-technical Coordination},
	year = {2007},
	bdsk-url-1 = {https://doi.org/10.1109/FOSE.2007.11}}

@inproceedings{holmstrom2006globaldev,
	author = {Helena Holmstr{\"{o}}m and Eoin {\'{O}} Conch{\'{u}}ir and P{\"{a}}r J. {\AA}gerfalk and Brian Fitzgerald},
	biburl = {https://dblp.org/rec/conf/icgse/HolmstromCAF06.bib},
	booktitle = {International Conference on Global Software Engineering ({ICGSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {3--11},
	publisher = {IEEE},
	title = {Global Software Development Challenges: {A} Case Study on Temporal, Geographical and Socio-Cultural Distance},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1109/ICGSE.2006.261210}}

@inproceedings{holzschuher2013queryperf,
	author = {Holzschuher, Florian and Peinl, Ren{\'e}},
	booktitle = {Joint EDBT/ICDT Workshops},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:10:44 +0100},
	pages = {195--204},
	title = {Performance of graph query languages: comparison of cypher, gremlin and native access in {Neo4j}},
	year = {2013}}

@inproceedings{icse-seis-2022-gender,
	abstract = {Gender imbalance is a well-known phenomenon observed
                   throughout sciences which is particularly severe in
                   software development and Free/Open Source Software
                   communities. Little is know yet about the geography of this
                   phenomenon in particular when considering large scales for
                   both its time and space dimensions. We contribute to fill
                   this gap with a longitudinal study of the population of
                   contributors to publicly available software source code. We
                   analyze the development history of 160 million software
                   projects for a total of 2.2 billion commits contributed by
                   43 million distinct authors over a period of 50 years. We
                   classify author names by gender using name frequencies and
                   author geographical locations using heuristics based on
                   email addresses and time zones. We study the evolution over
                   time of contributions to public code by gender and by world
                   region. For the world overall, we confirm previous findings
                   about the low but steadily increasing ratio of
                   contributions by female authors. When breaking down by
                   world regions we find that the long-term growth of female
                   participation is a world-wide phenomenon. We also observe a
                   decrease in the ratio of female participation during the
                   COVID-19 pandemic, suggesting that women{\^a}€{\texttrademark}s ability
                   to contribute to public code has been more hindered than
                   that of men.},
	author = {Davide Rossi and Stefano Zacchiroli},
	booktitle = {International Conference on Software Engineering - Software Engineering in Society Track ({ICSE-SEIS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:28:23 +0100},
	pages = {172-183},
	publisher = {ACM},
	title = {Worldwide Gender Differences in Public Code Contributions (and How They Have Been Affected by the {COVID-19} Pandemic)},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-SEIS55304.2022.9794118}}

@inproceedings{Inoue2017CodeClones,
	author = {Takashi Ishio and Yusuke Sakaguchi and Kaoru Ito and Katsuro Inoue},
	biburl = {http://dblp.uni-trier.de/rec/bib/conf/msr/IshioSII17},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {257--268},
	title = {Source file set search for clone-and-own reuse analysis},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2017.19}}

@inproceedings{KatzHong2018,
	author = {Daniel S. Katz and Neil P. Chue Hong},
	biburl = {https://dblp.org/rec/bib/conf/icms/KatzH18},
	booktitle = {International Conference on Mathematical Software ({ICMS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {289--296},
	title = {Software Citation in Theory and Practice},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-96418-8%5C_34}}

@inproceedings{khandelwal2017zipg,
	author = {Khandelwal, Anurag and Yang, Zongheng and Ye, Evan and Agarwal, Rachit and Stoica, Ion},
	booktitle = {International Conference on Management of Data},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:54:12 +0100},
	pages = {1149--1164},
	publisher = {ACM},
	title = {{ZipG}: A memory-efficient graph store for interactive queries},
	year = {2017}}

@inproceedings{kitchenham2004ebse,
	author = {Barbara A. Kitchenham and Tore Dyb{\aa} and Magne J{\o}rgensen},
	biburl = {https://dblp.org/rec/conf/icse/KitchenhamDJ04.bib},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {273--281},
	publisher = {IEEE},
	title = {Evidence-Based Software Engineering},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2004.1317449}}

@inproceedings{kochhar2016codequality,
	author = {Kochhar, Pavneet Singh and Wijedasa, Dinusha and Lo, David},
	booktitle = {2016 IEEE 23rd International Conference on Software Analysis, Evolution, and Reengineering (SANER)},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	organization = {IEEE},
	pages = {563--573},
	title = {A large scale study of multiple programming languages and code quality},
	volume = {1},
	year = {2016}}

@inproceedings{kuechler2012genderfoss,
	author = {Victor Kuechler and Claire Gilbertson and Carlos Jensen},
	biburl = {https://dblp.org/rec/conf/oss/KuechlerGJ12.bib},
	booktitle = {International Conference on Open Source Systems ({OSS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:13:05 +0100},
	pages = {78--93},
	publisher = {Springer},
	series = {{IFIP} Advances in Information and Communication Technology},
	title = {Gender Differences in Early Free and Open Source Software Joining Process},
	volume = {378},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-33442-9%5C_6}}

@inproceedings{ley2002dblp,
	author = {Michael Ley},
	biburl = {https://dblp.org/rec/conf/spire/Ley02.bib},
	booktitle = {International Symposium on String Processing and Information Retrieval ({SPIRE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:01:56 +0100},
	pages = {1--10},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {The {DBLP} Computer Science Bibliography: Evolution, Research Issues, Perspectives},
	volume = {2476},
	year = {2002},
	bdsk-url-1 = {https://doi.org/10.1007/3-540-45735-6%5C_1}}

@inproceedings{lima-assess-2015,
	author = {J. {Lima} and C. {Treude} and F. F. {Filho} and U. {Kulesza}},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-28 11:59:18 +0100},
	keywords = {data mining;program debugging;software metrics;repository mining-based metrics;software companies;software development;code complexity metrics;code contribution metrics;mining software repository;Measurement;Complexity theory;Computer bugs;Software;Interviews;Productivity;Encoding;Project management;software contribution metrics;mining software repositories},
	month = {Sep.},
	pages = {536-540},
	title = {Assessing developer contribution with repository mining-based metrics},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2015.7332509}}

@inproceedings{lima2014ghsocial,
	author = {Lima, Antonio and Rossi, Luca and Musolesi, Mirco},
	booktitle = {Eighth International AAAI Conference on Weblogs and Social Media},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	title = {Coding together at scale: GitHub as a collaborative social network},
	year = {2014}}

@inproceedings{mciver2000proglangnovices,
	author = {McIver, Linda},
	booktitle = {Annual Workshop of the Psychology of Programming Interest Group ({PPIG})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:02:47 +0100},
	pages = {15},
	title = {The effect of programming language on error rates of novice programmers},
	year = {2000}}

@inproceedings{Merkle,
	author = {Ralph C. Merkle},
	booktitle = {Advances in Cryptology ({CRYPTO})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:39:50 +0100},
	pages = {369--378},
	title = {A Digital Signature Based on a Conventional Encryption Function},
	year = {1987},
	bdsk-url-1 = {https://doi.org/10.1007/3-540-48184-2%5C_32}}

@inproceedings{miller2013neo4j,
	author = {Miller, Justin J.},
	booktitle = {Southern Association for Information Systems Conference},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-11-29 15:47:50 +0100},
	title = {Graph database applications and concepts with {Neo4j}},
	year = {2013}}

@inproceedings{mockus2009amassing,
	author = {Audris Mockus},
	booktitle = {International Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:44:48 +0100},
	pages = {11--20},
	publisher = {IEEE},
	title = {Amassing and indexing a large sample of version control systems: Towards the census of public source code history},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2009.5069476}}

@inproceedings{mockus2019woc,
	author = {Ma, Yuxing and Bogart, Chris and Amreen, Sadika and Zaretzki, Russell and Mockus, Audris},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:19:44 +0100},
	organization = {IEEE},
	pages = {143--154},
	title = {World of code: an infrastructure for mining the universe of open source {VCS} data},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00031}}

@inproceedings{mockus2020complete,
	author = {Audris Mockus and Diomidis Spinellis and Zoe Kotti and Gabriel John Dusing},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/msr/MockusSKD20.bib},
	booktitle = {{MSR} '20: 17th International Conference on Mining Software Repositories},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {513--517},
	publisher = {{ACM}},
	timestamp = {Tue, 29 Dec 2020 18:36:57 +0100},
	title = {A Complete Set of Related Git Repositories Identified via Community Detection Approaches Based on Shared Commits},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387499}}

@inproceedings{msr-2020-challenge,
	abstract = {Software Heritage is the largest existing public archive
                   of software source code and accompanying development
                   history. It spans more than five billion unique source code
                   files and one billion unique commits, coming from more than
                   80 million software projects. These software artifacts were
                   retrieved from major collaborative development platforms
                   (e.g., GitHub, GitLab) and package repositories (e.g.,
                   PyPI, Debian, NPM), and stored in a uniform representation
                   linking together source code files, directories, commits,
                   and full snapshots of version control systems (VCS)
                   repositories as observed by Software Heritage during
                   periodic crawls. This dataset is unique in terms of
                   accessibility and scale, and allows to explore a number of
                   research questions on the long tail of public software
                   development, instead of solely focusing on "most starred"
                   repositories as it often happens.},
	author = {Antoine Pietri and Diomidis Spinellis and Stefano Zacchiroli},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {IEEE},
	title = {The Software Heritage Graph Dataset: Large-scale Analysis of Public Software Development History},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387510}}

@inproceedings{msr-2020-topology,
	abstract = {Background: Collaborative software development has
                   produced a wealth of version control system (VCS) data that
                   can now be analyzed in full. Little is known about the
                   intrinsic structure of the entire corpus of publicly
                   available VCS as an interconnected graph. Understanding its
                   structure is needed to determine the best approach to
                   analyze it in full and to avoid methodological pitfalls
                   when doing so. Objective: We intend to determine the most
                   salient network topology properties of public software
                   development history as captured by VCS. We will explore:
                   degree distributions, determining whether they are
                   scale-free or not; distribution of connect component sizes;
                   distribution of shortest path lengths. Method: We will use
                   Software Heritage---which is the largest corpus of public
                   VCS data---compress it using webgraph compression
                   techniques, and analyze it in-memory using classic graph
                   algorithms. Analyses will be performed both on the full
                   graph and on relevant subgraphs. Limitations: The study is
                   exploratory in nature; as such no hypotheses on the
                   findings is stated at this time. Chosen graph algorithms
                   are expected to scale to the corpus size, but it will need
                   to be confirmed experimentally. External validity will
                   depend on how representative Software Heritage is of the
                   software commons.},
	author = {Antoine Pietri and Guillaume Rousseau and Stefano Zacchiroli},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {602-605},
	publisher = {IEEE},
	title = {Determining the Intrinsic Structure of Public Software Development History},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387506}}

@inproceedings{msr-2022-foss-geography,
	abstract = {We conduct an exploratory, large-scale, longitudinal study
                   of 50 years of commits to publicly available version
                   control system repositories, in order to characterize the
                   geographic diversity of contributors to public code and its
                   evolution over time. We analyze in total 2.2 billion
                   commits collected by Software Heritage from 160 million
                   projects and authored by 43 million authors during the
                   1971{\^a}€``2021 time period. We geolocate developers to 12
                   world regions derived from the United Nation geoscheme,
                   using as signals email top-level domains, author names
                   compared with names distributions around the world, and UTC
                   offsets mined from commit metadata. We find evidence of the
                   early dominance of North America in open source software,
                   later joined by Europe. After that period, the geographic
                   diversity in public code has been constantly increasing. We
                   also identify relevant historical shifts related to the
                   UNIX wars, the increase of coding literacy in Central and
                   South Asia, and broader phenomena like colonialism and
                   people movement across countries
                   (immigration/emigration).},
	author = {Davide Rossi and Stefano Zacchiroli},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-28 11:03:23 +0100},
	pages = {80-85},
	publisher = {ACM},
	title = {Geographic Diversity in Public Code Contributions: An Exploratory Large-Scale Study Over 50 Years},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524842.3528471}}

@inproceedings{msr-2022-foss-licenses,
	abstract = {We introduce a large-scale dataset of the complete texts
                   of free/open source software (FOSS) license variants. To
                   assemble it we have collected from the Software Heritage
                   archive{\^a}€''the largest publicly available archive of
                   FOSS source code with accompanying development
                   history{\^a}€''all versions of files whose names are
                   commonly used to convey licensing terms to software users
                   and developers. The dataset consists of 6.5 million unique
                   license files that can be used to conduct empirical studies
                   on open source licensing, training of automated license
                   classifiers, natural language processing (NLP) analyses of
                   legal texts, as well as historical and phylogenetic studies
                   on FOSS licensing. Additional metadata about shipped
                   license files are also provided, making the dataset ready
                   to use in various contexts; they include: file length
                   measures, detected MIME type, detected SPDX license (using
                   ScanCode), example origin (e.g., GitHub repository), oldest
                   public commit in which the license appeared. The dataset is
                   released as open data as an archive file containing all
                   deduplicated license files, plus several portable CSV files
                   for metadata, referencing files via cryptographic
                   checksums.},
	author = {Stefano Zacchiroli},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 16:44:02 +0100},
	pages = {757-761},
	publisher = {ACM},
	title = {A Large-scale Dataset of (Open Source) License Text Variants},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524842.3528491}}

@inproceedings{msr-2022-swe-general-index,
	abstract = {We introduce the General Index of Software Engineering
                   Papers, a dataset of fulltext-indexed papers from the most
                   prominent scientific venues in the field of Software
                   Engineering. The dataset includes both complete
                   bibliographic information and indexed n-grams (sequence of
                   contiguous words after removal of stopwords and non-words,
                   for a total of 577 276 382 unique n-grams in this release)
                   with length 1 to 5 for 44 581 papers retrieved from 34
                   venues over the 1971{\^a}€``2020 period. The dataset serves
                   use cases in the field of meta-research, allowing to
                   introspect the output of software engineering research even
                   when access to papers or scholarly search engines is not
                   possible (e.g., due to contractual reasons). The dataset
                   also contributes to making such analyses reproducible and
                   independently verifiable, as opposed to what happens when
                   they are conducted using 3rd-party and non-open scholarly
                   indexing services. The dataset is available as a portable
                   Postgres database dump and released as open data.},
	author = {Abou Khalil, Zeinab and Stefano Zacchiroli},
	booktitle = {International Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:25:58 +0100},
	pages = {98-102},
	publisher = {ACM},
	title = {The General Index of Software Engineering Papers},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524842.3528494}}

@inproceedings{nyman2012forking-sustainability,
	author = {Linus Nyman and Tommi Mikkonen and Juho Lindman and Martin Foug{\`{e}}re},
	booktitle = {Open Source Systems: Long-Term Sustainability - 8th {IFIP} {WG} 2.13 International Conference ({OSS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {274--279},
	title = {Perspectives on Code Forking and Sustainability in Open Source Software},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-33442-9%5C_21}}

@inproceedings{nyman2014forking-hackers,
	author = {Nyman, Linus},
	booktitle = {International Symposium on Open Collaboration ({OpenSym})},
	date-modified = {2023-03-12 15:12:31 +0100},
	isbn = {9781450330169},
	pages = {1--10},
	publisher = {ACM},
	title = {Hackers on Forking},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2641580.2641590}}

@inproceedings{oss-2022-swh-scanner,
	abstract = {Free/Open Source Software (FOSS) enables large-scale reuse of preexisting software components. The main drawback is increased complexity in software supply chain management. A common approach to tame such complexity is automated open source compliance, which consists in automating the verification of adherence to various open source management best practices about license obligation fulfillment, vulnerability tracking, software composition analysis, and nearby concerns. We consider the problem of auditing a source code base to determine which of its parts have been published before, which is an important building block of automated open source compliance toolchains. Indeed, if source code allegedly developed in house is recognized as having been previously published elsewhere, alerts should be raised to investigate where it comes from and whether this entails that additional obligations shall be fulfilled before product shipment. We propose an efficient approach for prior publication identification that relies on a knowledge base of known source code artifacts linked together in a global Merkle direct acyclic graph and a dedicated discovery protocol. We introduce swh-scanner, a source code scanner that realizes the proposed approach in practice using as knowledge base Software Heritage, the largest public archive of source code artifacts. We validate experimentally the proposed approach, showing its efficiency in both abstract (number of queries) and concrete terms (wall-clock time), performing benchmarks on 16'845 real-world public code bases of various sizes, from small to very large.},
	author = {Daniele Serafini and Stefano Zacchiroli},
	booktitle = {International Conference on Open Source Systems ({OSS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-07 15:56:13 +0100},
	publisher = {ACM},
	title = {Efficient Prior Publication Identification for Open Source Code},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3555051.3555068}}

@inproceedings{padhye2014extcontrib,
	author = {Padhye, Rohan and Mani, Senthil and Sinha, Vibha Singhal},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:43:11 +0100},
	organization = {ACM},
	pages = {332--335},
	title = {A study of external community contribution to open-source projects on {GitHub}},
	year = {2014}}

@inproceedings{qiu2010kdewomen,
	author = {Yixin Qiu and Katherine J. Stewart and Kathryn M. Bartol},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/oss/QiuSB10.bib},
	booktitle = {6th International Conference on Open Source Systems, {OSS} 2010},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {239--251},
	publisher = {Springer},
	series = {{IFIP} Advances in Information and Communication Technology},
	timestamp = {Thu, 12 Mar 2020 11:39:15 +0100},
	title = {Joining and Socialization in Open Source Women's Groups: An Exploratory Study of \emph{KDE-Women}},
	volume = {319},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-13244-5%5C_19}}

@inproceedings{rastogi2016forking,
	author = {Rastogi, Ayushi and Nagappan, Nachiappan},
	booktitle = {International Conference on Software Analysis, Evolution, and Reengineering ({SANER})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:38:57 +0100},
	organization = {IEEE},
	pages = {102--111},
	title = {Forking and the Sustainability of the Developer Community Participation--An Empirical Investigation on Outcomes and Reasons},
	volume = {1},
	year = {2016}}

@inproceedings{rastogi2016geobias,
	author = {Ayushi Rastogi},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-18 18:25:56 +0100},
	doi = {10.1145/2889160.2891035},
	pages = {665--667},
	publisher = {ACM},
	title = {Do biases related to geographical location influence work-related decisions in {GitHub}?},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2889160.2891035}}

@inproceedings{rastogi2018geobias,
	author = {Ayushi Rastogi and Nachiappan Nagappan and Georgios Gousios and Andr{\'{e}} van der Hoek},
	biburl = {https://dblp.org/rec/conf/esem/RastogiNGH18.bib},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-18 18:26:26 +0100},
	doi = {10.1145/3239235.3240504},
	publisher = {ACM},
	title = {Relationship between geographical location and evaluation of developer contributions in {GitHub}},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3239235.3240504}}

@inproceedings{ray2014large,
	author = {Ray, Baishakhi and Posnett, Daryl and Filkov, Vladimir and Devanbu, Premkumar},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-28 11:04:52 +0100},
	organization = {ACM},
	pages = {155--165},
	title = {A large scale study of programming languages and code quality in {GitHub}},
	year = {2014}}

@inproceedings{reyes2016automatic,
	author = {Reyes, Julio and Ram{\'\i}rez, Diego and Paciello, Julio},
	booktitle = {International Conference on Computational Science and Computational Intelligence ({CSCI})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:19:02 +0100},
	organization = {IEEE},
	pages = {514--519},
	title = {Automatic Classification of Source Code Archives by Programming Language: A Deep Learning Approach},
	year = {2016}}

@inproceedings{robles2012forks,
	author = {Gregorio Robles and Jes{\'{u}}s M. Gonz{\'{a}}lez{-}Barahona},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/conf/oss/RoblesG12},
	booktitle = {International Conference Open Source Systems ({OSS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:04:07 +0100},
	pages = {1--14},
	title = {A Comprehensive Study of Software Forks: Dates, Reasons and Outcomes},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-33442-9%5C_1}}

@inproceedings{robles2014surveydataset,
	author = {Gregorio Robles and Laura {Arjona Reina} and Alexander Serebrenik and Bogdan Vasilescu and Jes{\'{u}}s M. Gonz{\'{a}}lez{-}Barahona},
	biburl = {https://dblp.org/rec/conf/msr/RoblesRSVG14.bib},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:11:55 +0100},
	editor = {Premkumar T. Devanbu and Sung Kim and Martin Pinzger},
	pages = {396--399},
	publisher = {ACM},
	timestamp = {Tue, 06 Nov 2018 16:57:14 +0100},
	title = {{FLOSS} 2013: a survey dataset about free software contributors: challenges for curating, sharing, and combining},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2597073.2597129}}

@inproceedings{robles2016womeninfoss,
	author = {Gregorio Robles and Laura {Arjona Reina} and Jes{\'{u}}s M. Gonz{\'{a}}lez{-}Barahona and Santiago Due{\~{n}}as Dom{\'{\i}}nguez},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/oss/RoblesRGD16.bib},
	booktitle = {12th International Conference on Open Source Systems, {OSS} 2016},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {163--173},
	publisher = {Springer},
	series = {{IFIP} Advances in Information and Communication Technology},
	timestamp = {Sun, 02 Jun 2019 21:26:40 +0200},
	title = {Women in Free/Libre/Open Source Software: The Situation in the 2010s},
	volume = {472},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-39225-7%5C_13}}

@inproceedings{rodriguez2015gremlin,
	author = {Rodriguez, Marko A},
	booktitle = {Symposium on Database Programming Languages},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:56:18 +0100},
	pages = {1--10},
	title = {The gremlin graph traversal machine and language (invited talk)},
	year = {2015}}

@inproceedings{rougier2018rescience,
	author = {Nicolas P. Rougier and Konrad Hinsen},
	booktitle = {nternational Workshop on Reproducible Research in Pattern Recognition ({RRPR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:24:05 +0100},
	pages = {150--156},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {ReScience {C:} {A} Journal for Reproducible Replications in Computational Science},
	volume = {11455},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-23987-9%5C_14}}

@inproceedings{sahito2019swengpubtrends,
	author = {Sahito, Sanam Fayaz and Gilal, Abdul Rehman and Abro, Rizwan Ali and Waqas, Ahmad and Shaikh, Khisaluddin},
	booktitle = {2019 13th International Conference on Mathematics, Actuarial Science, Computer Science and Statistics (MACS)},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1-4},
	title = {Research Publication Trends in Software Engineering},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MACS48846.2019.9024767}}

@inproceedings{saner-2020-swh-graph,
	abstract = {We consider the problem of mining the development history---as captured by modern version control systems---of ultra-large-scale software archives (e.g., tens of millions software repositories corresponding). We show that graph compression techniques can be applied to the problem, dramatically reducing the hardware resources needed to mine similarly-sized corpus. As a concrete use case we compress the full Software Heritage archive, consisting of 5 billion unique source code files and 1 billion unique commits, harvested from more than 80 million software projects---encompassing a full mirror of GitHub. The resulting compressed graph fits in less than 100 GB of RAM, corresponding to a hardware cost of less than 300 U.S. dollars. We show that the compressed in-memory representation of the full corpus can be accessed with excellent performances, with edge lookup times close to memory random access. As a sample exploitation experiment we show that the compressed graph can be used to conduct clone detection at this scale, benefiting from main memory access speed.},
	author = {Paolo Boldi and Antoine Pietri and Sebastiano Vigna and Stefano Zacchiroli},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {184--194},
	publisher = {IEEE},
	title = {Ultra-Large-Scale Repository Analysis via Graph Compression},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/SANER48275.2020.9054827}}

@inproceedings{SemuraYCI17,
	author = {Yuichi Semura and Norihiro Yoshida and Eunjong Choi and Katsuro Inoue},
	biburl = {https://dblp.org/rec/bib/conf/apsec/SemuraYCI17},
	booktitle = {Asia-Pacific Software Engineering Conference ({APSEC})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:19:35 +0100},
	pages = {654--659},
	title = {{CCFinderSW}: Clone Detection Tool with Flexible Multilingual Tokenization},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/APSEC.2017.80}}

@inproceedings{squire2012describing,
	author = {Squire, Megan and Williams, David},
	booktitle = {System Science (HICSS), 2012 45th Hawaii International Conference on},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	organization = {IEEE},
	pages = {3416--3425},
	title = {Describing the software forge ecosystem},
	year = {2012}}

@inproceedings{sun2016topicmodels,
	author = {Xiaobing Sun and Xiangyue Liu and Bin Li and Yucong Duan and Hui Yang and Jiajun Hu},
	biburl = {https://dblp.org/rec/conf/snpd/SunLLDYH16.bib},
	booktitle = {International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing ({SNPD})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {357--362},
	publisher = {IEEE},
	title = {Exploring topic models in software engineering data analysis: {A} survey},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/SNPD.2016.7515925}}

@inproceedings{SvajlenkoR17,
	author = {Jeffrey Svajlenko and Chanchal Kumar Roy},
	biburl = {https://dblp.org/rec/bib/conf/icse/SvajlenkoR17},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:12:44 +0100},
	pages = {27--30},
	timestamp = {Fri, 07 Jul 2017 14:06:36 +0200},
	title = {Fast and flexible large-scale clone detection with {CloneWorks}},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-C.2017.3}}

@inproceedings{swh-fuse-icse2021,
	author = {Thibault Allan{\c c}on and Antoine Pietri and Stefano Zacchiroli},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-06 11:02:40 +0100},
	publisher = {IEEE},
	title = {The Software Heritage Filesystem ({SwhFS}): Integrating Source Code Archival with Development},
	year = {2021}}

@inproceedings{swh-ICMS2020,
	author = {Di Cosmo, Roberto},
	booktitle = {International Conference on Mathematical Software ({ICMS})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-03-12 15:17:44 +0100},
	dmi-category = {intc},
	pages = {362--373},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {Archiving and Referencing Source Code with Software Heritage},
	volume = {12097},
	x-topic = {opensc},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-52200-1_36},
	bdsk-url-2 = {https://doi.org/10.1007/978-3-030-52200-1}}

@inproceedings{swh-msr2019-dataset,
	author = {Antoine Pietri and Diomidis Spinellis and Stefano Zacchiroli},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {138--142},
	title = {The {S}oftware {H}eritage graph dataset: public software development under one roof},
	year = {2019},
	bdsk-url-1 = {https://dl.acm.org/citation.cfm?id=3341907},
	bdsk-url-2 = {https://doi.org/10.1109/MSR.2019.00030}}

@inproceedings{swhipres2017,
	author = {Di Cosmo, Roberto and Stefano Zacchiroli},
	booktitle = {International Conference on Digital Preservation ({iPRES})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = sep,
	title = {{Software Heritage}: Why and How to Preserve Software Source Code},
	year = {2017},
	bdsk-url-1 = {https://hal.archives-ouvertes.fr/hal-01590958/}}

@inproceedings{swhipres2018,
	author = {Di Cosmo, Roberto and Morane Gruenpeter and Stefano Zacchiroli},
	booktitle = {International Conference on Digital Preservation ({iPRES})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:13:08 +0100},
	dmi-category = {intc},
	month = sep,
	title = {Identifiers for Digital Objects: the Case of Software Source Code Preservation},
	urllocal = {http://www.dicosmo.org/Articles/iPres2018.pdf},
	x-topic = {preservation},
	year = {2018},
	bdsk-url-1 = {https://hal.archives-ouvertes.fr/hal-01865790},
	bdsk-url-2 = {https://doi.org/10.17605/OSF.IO/KDE56}}

@inproceedings{swmath,
	author = {Sebastian B{\"{o}}nisch and Michael Brickenstein and Hagen Chrapary and Gert{-}Martin Greuel and Wolfram Sperber},
	booktitle = {MKM/Calculemus/DML},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	pages = {369--373},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {swMATH - {A} New Information Service for Mathematical Software},
	volume = {7961},
	year = {2013}}

@inproceedings{tkaczyk2018machine,
	author = {Tkaczyk, Dominika and Collins, Andrew and Sheridan, Paraic and Beel, Joeran},
	booktitle = {ACM/IEEE joint conference on digital libraries},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-12-06 12:16:04 +0100},
	pages = {99--108},
	title = {Machine learning vs. rules and out-of-the-box vs. retrained: An evaluation of open-source bibliographic reference and citation parsers},
	year = {2018}}

@inproceedings{ugurel2002classification,
	author = {Ugurel, Secil and Krovetz, Robert and Giles, C Lee},
	booktitle = {ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:56:12 +0100},
	organization = {ACM},
	pages = {632--638},
	title = {What's the code?: automatic classification of source code archives},
	year = {2002}}

@inproceedings{van2016software,
	author = {van Dam, Juriaan Kennedy and Zaytsev, Vadim},
	booktitle = {International Conference on Software Analysis, Evolution, and Reengineering ({SANER})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 18:24:14 +0100},
	pages = {624--628},
	publisher = {IEEE},
	title = {Software language identification with natural language classifiers},
	volume = {1},
	year = {2016}}

@inproceedings{vasilescu2013sweconf,
	author = {Vasilescu, Bogdan and Serebrenik, Alexander and Mens, Tom},
	biburl = {https://dblp.org/rec/conf/msr/VasilescuSM13.bib},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {373--376},
	publisher = {IEEE},
	title = {A historical dataset of software engineering conferences},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2013.6624051}}

@inproceedings{vasilescu2015gender,
	author = {Vasilescu, Bogdan and Posnett, Daryl and Ray, Baishakhi and van den Brand, Mark GJ and Serebrenik, Alexander and Devanbu, Premkumar and Filkov, Vladimir},
	booktitle = {Conference on Human Factors in Computing Systems ({CHI})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = {April},
	pages = {3789--3798},
	publisher = {{ACM}},
	title = {Gender and tenure diversity in {GitHub} teams},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2702123.2702549}}

@inproceedings{yen2021ucsd,
	author = {Yen, Alex and Flowers, Bryse and Luo, Wenshan and Nagesh, Nitish and Tueller, Peter and Kastner, Ryan and Pannuto, Pat},
	booktitle = {Workshop on Benchmarking Cyber-Physical Systems and Internet of Things},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 17:44:26 +0100},
	pages = {20--25},
	title = {A {UCSD} view on replication and reproducibility for {CPS} \& {IoT}},
	year = {2021}}

@inproceedings{zhou2019fork,
	author = {Zhou, Shurui and Vasilescu, Bogdan and K{\"a}stner, Christian},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-12 16:38:44 +0200},
	organization = {ACM},
	pages = {350--361},
	title = {What the fork: a study of inefficient and efficient forking practices in social coding},
	year = {2019}}

@manual{OAIS2002,
	added-at = {2008-09-12T12:15:29.000+0200},
	biburl = {https://www.bibsonomy.org/bibtex/29a3071d3a754f11b547d8daa8d439fa1/hansgeorgbecker},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	interhash = {d81d1990c6a25e93776de70fd39e8237},
	intrahash = {9a3071d3a754f11b547d8daa8d439fa1},
	keywords = {OAIS Referenzmodell reference.model},
	month = {January},
	organization = {CCSDS - Consultative Committee for Space Data Systems},
	timestamp = {2008-09-12T12:15:29.000+0200},
	title = {Reference Model for an Open Archival Information System (OAIS), Blue Book, Issue 1},
	year = 2002,
	bdsk-url-1 = {http://public.ccsds.org/publications/archive/650x0b1.pdf}}

@misc{acmbadges,
	author = {ACM},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-11-29 15:31:32 +0100},
	howpublished = {\url{https://www.acm.org/publications/policies/artifact-review-badging}},
	month = {Apr},
	title = {Artifact Review and Badging},
	year = 2018}

@misc{ark,
	author = {The California Digital Library},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {Archival Resource Key},
	year = {2001},
	bdsk-url-1 = {http://n2t.net/e/ark_ids.html}}

@misc{bitcoin,
	author = {Satoshi Nakamoto},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved 09 April 2018},
	title = {Bitcoin: A Peer-to-Peer Electronic Cash System},
	year = {2010},
	bdsk-url-1 = {https://bitcoin.org/bitcoin.pdf}}

@misc{credit,
	author = {CASRAI},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved January 2019},
	title = {The CRediT Taxonomy},
	year = {2015},
	bdsk-url-1 = {https://casrai.org/credit/}}

@misc{crossref,
	author = {Crossref},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {Online; retrieved 09 April 2018},
	title = {DOI Fees},
	year = {2017},
	bdsk-url-1 = {https://web.archive.org/web/20180129114723/https://www.crossref.org/fees/}}

@misc{didw3c,
	author = {the Contributors to the Decentralized Identifiers (DIDs)},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {Online; Draft Community Group Report 02 April 2018},
	title = {Decentralized Identifiers (DIDs) v0.9},
	year = {2018},
	bdsk-url-1 = {https://w3c-ccg.github.io/did-spec/}}

@misc{earkproject,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{http://www.eark-project.com/}},
	key = {E-ARK},
	title = {E-ARK (European Archival Records and Knowledge Preservation) Project},
	year = {2014}}

@misc{eigenweb,
	author = {Ga\"{e}l Guennebaud and Beno\^{i}t Jacob and others},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{http://eigen.tuxfamily.org}},
	title = {Eigen v3},
	year = {2010}}

@misc{git,
	author = {Git community},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved 09 April 2018},
	title = {Git version control system},
	year = {2005},
	bdsk-url-1 = {https://git-scm.com/}}

@misc{gitorious-shutdown,
	author = {GitLab},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://about.gitlab.com/2015/03/03/gitlab-acquires-gitorious/}},
	title = {GitLab acquires Gitorious to bolster its on premises code collaboration platform},
	year = {2015}}

@misc{gnu:gpl2,
	author = {GNU},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved September 2015},
	title = {GNU General Public License, version 2},
	year = {1991},
	bdsk-url-1 = {https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html}}

@misc{google-code-shutdown,
	author = {Google Project Hosting},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://opensource.googleblog.com/2015/03/farewell-to-google-code.html}},
	title = {Bidding farewell to Google Code},
	year = {2015}}

@misc{GPLCompliance,
	author = {Bradley M. Kuhn and Aaron Williamson and Karen M. Sandler},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://www.softwarefreedom.org/resources/2008/compliance-guide.html}},
	month = aug,
	title = {A Practical Guide to {GPL} Compliance},
	year = 2008}

@misc{hugo,
	annote = {[Online; accessed March 1st 2018]},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {The HUGO Gene Nomenclature Committee},
	bdsk-url-1 = {https://www.genenames.org/}}

@misc{ImageJ,
	address = {US and National Institutes of Health. Bethesda, Maryland, USA},
	author = {Rasband, Wayne},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {Retrieved jan 7, 2018},
	title = {ImageJ},
	year = {1997--2011},
	bdsk-url-1 = {http://imagej.nih.gov/ij/}}

@misc{internet-id,
	author = {International DOI Foundation},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {Online; retrieved 09 April 2018},
	title = {Factsheet: DOI System and Internet Identifier Specifications},
	year = {2015},
	bdsk-url-1 = {https://www.doi.org/factsheets/DOIIdentifierSpecs.html}}

@misc{isbn,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {[Online; accessed February 28th 2018]},
	title = {What is an ISBN?},
	bdsk-url-1 = {https://www.isbn-international.org/content/what-isbn}}

@misc{ishida2011namesaroundtheworld,
	author = {Richard Ishida},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://www.w3.org/International/questions/qa-personal-names}},
	institution = {{W3C}},
	title = {Personal names around the world},
	year = {2011}}

@misc{keepproject,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://www.keep.eu/}},
	key = {European Union},
	title = {KEEP: EU cooperating},
	year = {2000}}

@dataset{librariesio2018,
	author = {Jeremy Katz},
	doi = {10.5281/zenodo.2536573},
	month = dec,
	publisher = {Zenodo},
	title = {{Libraries.io} Open Source Repository and Dependency Metadata},
	version = {1.4.0},
	year = 2018,
	bdsk-url-1 = {https://doi.org/10.5281/zenodo.2536573}}

@misc{linguist,
	author = {{GitHub, Inc.}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://github.com/github/linguist}},
	note = {retrieved 2020-01-06},
	title = {Linguist: Language Savant},
	year = {2011}}

@misc{linguist-accuracy,
	author = {Ganesan, Kavita and Foti, Romano},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {GitHub, Inc.~blog post: \url{https://github.blog/2019-07-02-c-or-java-typescript-or-javascript-machine-learning-based-classification-of-programming-languages/}},
	note = {retrieved 2020-01-06},
	title = {C\# or Java? TypeScript or JavaScript? Machine learning based classification of programming languages},
	year = {2019}}

@misc{ParisCall2019,
	author = {Expert group meeting},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {Available from https://unesdoc.unesco.org/ark:/48223/pf0000366715},
	title = {Paris Call: Software Source Code as Heritage for Sustainable Development},
	year = 2019}

@misc{plan9,
	author = {Wikipedia contributors},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved 09 April 2018},
	title = {Plan 9 from Bell Labs --- Wikipedia{,} The Free Encyclopedia},
	year = {2018},
	bdsk-url-1 = {https://en.wikipedia.org/w/index.php?title=Plan_9_from_Bell_Labs&oldid=832417303}}

@misc{roadsandbridges,
	author = {Nadia Eghbal},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {Report from the Ford Foundation},
	title = {Roads and Bridges: The Unseen Labor Behind Our Digital Infrastructure.},
	year = 2016}

@misc{RosenthalEUDAT,
	author = {David Rosenthal and Rob Baxter and Laurence Field},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {https://www.eudat.eu/news/towards-shared-vision-sustainability-research-and-e-infrastructures},
	month = {24-25 } # sep,
	note = {EUDAT conference},
	title = {Towards a shared vision of sustainability for research and e-infrastructures},
	year = 2014}

@misc{scancode-toolkit,
	author = {{nexB}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {Accessed 2022-01-25},
	title = {{ScanCode}},
	year = {2022},
	bdsk-url-1 = {https://www.aboutcode.org/projects/scancode.html}}

@misc{SPDXLicences,
	author = {{SPDX Workgroup}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {\url{https://spdx.org/license-list}, retrieved 30 March 2020},
	title = {Software Package Data Exchange Licence List},
	year = {2019},
	bdsk-url-1 = {https://spdx.org/license-list}}

@misc{Spectrum50,
	annote = {Accessed 24 Sep 2019},
	author = {Trust Collections},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://collectionstrust.org.uk/spectrum/spectrum-5/}},
	title = {Introduction to Spectrum 5.0}}

@misc{swh-2022-french-roadmap,
	author = {{French Ministry of Research and Higher Education}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = mar,
	publisher = {French Ministry of Higher Education and Research},
	title = {{Feuille de route nationale des infrastructures de recherche}},
	year = 2022,
	bdsk-url-1 = {https://www.enseignementsup-recherche.gouv.fr/fr/feuille-de-route-nationale-des-infrastructures-de-recherche}}

@misc{swh-arxiv,
	author = {arXiv},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = {11 October},
	title = {arXiv.org e-Print archive},
	year = {2022},
	bdsk-url-1 = {https://arxiv.org/}}

@misc{swh-dagstuhl,
	author = {Schloss Dagstuhl},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {Schloss Dagstuhl},
	urldate = {2022-09-27},
	bdsk-url-1 = {https://www.dagstuhl.de/}}

@misc{swh-dataverse,
	author = {Dataverse Project},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {The Dataverse Project},
	urldate = {2022-09-27},
	bdsk-url-1 = {https://dataverse.org/}}

@misc{swh-episciences,
	author = {Episciences},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {Episciences},
	urldate = {2022-09-27},
	bdsk-url-1 = {https://www.episciences.org/}}

@misc{swh-fc4e,
	author = {FAIRCORE4EOSC},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {FAIRCORE4EOSC project},
	urldate = {2022-09-27},
	bdsk-url-1 = {https://faircore4eosc.eu/}}

@misc{swh-hal-deposit-2018,
	author = {Yannick Barborini and Di Cosmo, Roberto and Dumont, Antoine R. and Morane Gruenpeter and Bruno Marmol and Alain Monteil and Jozefina Sadowska and Stefano Zacchiroli},
	booktitle = {RDA Eleventh Plenary Meeting},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	halid = {hal-01738741},
	howpublished = {https://www.rd-alliance.org/rda-11th-plenary-poster-session},
	title = {The creation of a new type of scientific deposit: Software},
	year = 2018}

@misc{swh-inveniordm,
	author = {Invenio},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {Invenio RDM},
	urldate = {2022-09-27},
	bdsk-url-1 = {https://inveniosoftware.org/products/rdm/}}

@misc{swh-PNSO,
	author = {{French Ministry of Research and Higher Education}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = jul,
	publisher = {French Ministry of Higher Education and Research},
	title = {{French National Plan for Open Science}},
	year = 2018,
	bdsk-url-1 = {https://www.enseignementsup-recherche.gouv.fr/fr/le-plan-national-pour-la-science-ouverte-les-resultats-de-la-recherche-scientifique-ouverts-tous-49241}}

@misc{swh-PNSO2,
	author = {{French Ministry of Research and Higher Education}},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = jul,
	publisher = {French Ministry of Higher Education and Research},
	title = {{French Second National Plan for Open Science: Support and Opportunities for Universities' Open Infrastructures and Practices.}},
	year = 2021,
	bdsk-url-1 = {https://www.enseignementsup-recherche.gouv.fr/fr/le-plan-national-pour-la-science-ouverte-2021-2024-vers-une-generalisation-de-la-science-ouverte-en-48525}}

@misc{swh-swmath,
	author = {swMATH},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {Mathematical software - swMATH},
	urldate = {2022-09-27},
	bdsk-url-1 = {https://swmath.org/}}

@misc{takhteyev2010ossgeography,
	author = {Yuri Takhteyev and Andrew Hilts},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://flosshub.org/sites/flosshub.org/files/Takhteyev-Hilts-2010.pdf}},
	title = {Investigating the geography of open source software through {GitHub}},
	year = {2010}}

@misc{titusbrown2015,
	author = {Titus Brown, C.},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	month = sep,
	note = {retrieved January 2019},
	title = {Publication of software papers, and authorship on them},
	year = {2015},
	bdsk-url-1 = {https://ivory.idyll.org/blog/2015-authorship-on-software-papers.html}}

@misc{UnescoInria2017,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{http://fr.unesco.org/news/unesco-inria-signent-accord-archivage-logiciels-presence-du-president-hollande}},
	month = apr,
	title = {L'UNESCO et INRIA signent un accord sur l'archivage des logiciels en pr\'esence du Pr\'esident Hollande},
	year = 2017}

@misc{unescopersist,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{https://unescopersist.org/}},
	key = {UNESCO},
	title = {UNESCO PERSIST Programme},
	year = {2015}}

@misc{uuid,
	author = {P. Leach, M. Mealling, R. Salz},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {A Universally Unique IDentifier (UUID) URN Namespace},
	year = {2005},
	bdsk-url-1 = {https://www.rfc-editor.org/info/rfc4122},
	bdsk-url-2 = {https://doi.org/10.17487/RFC4122}}

@misc{VirtualAGC,
	author = {Ronald Burkey},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {Available at \url{http://ibiblio.org/apollo/changes.html}},
	note = {Spans years 2003 to 2019},
	title = {Virtual AGC - Changelog}}

@misc{web:arxiv,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved June 2017},
	title = {ArXiv: e-prints archive},
	year = {2017},
	bdsk-url-1 = {https://arxiv.org/}}

@misc{web:cines,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	key = {CINES},
	note = {\url{https://www.cines.fr/}},
	title = {Centre Informatique National de l'Enseignement Sup{\'e}rieur},
	year = {2014},
	bdsk-url-1 = {https://www.cines.fr/}}

@misc{web:dp-coalition,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	key = {DPC},
	note = {\url{http://www.dpconline.org/}},
	title = {Digital Preservation Coalition},
	bdsk-url-1 = {http://www.dpconline.org/}}

@misc{web:githubarchive,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {https://www.githubarchive.org/},
	key = {GitHubArchive},
	note = {Retrivede March 2017},
	title = {GitHub Archive},
	year = {2017}}

@misc{web:gmane,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{http://gmane.org}},
	key = {Gmane},
	title = {Gmane},
	year = {2017}}

@misc{web:hal,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved June 2017},
	title = {HAL: Hyper articles en ligne},
	year = {2017},
	bdsk-url-1 = {https://hal.archives-ouvertes.fr/}}

@misc{web:internet-archive,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	key = {InternetArchive},
	note = {\url{https://archive.org}},
	title = {Internet Archive: Digital Library of Free Books, Movies, Music \& Wayback Machine},
	year = {Retrieved 3/3/2017},
	bdsk-url-1 = {https://archive.org}}

@misc{web:national-sw-ref-library,
	author = {NIST},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {\url{http://www.nsrl.nist.gov}},
	title = {{[US]} National Software Reference Library},
	year = {2014},
	bdsk-url-1 = {http://www.nsrl.nist.gov}}

@misc{web:national-sw-ref-library-hash,
	author = {Steve Mead},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {\url{http://www.nsrl.nist.gov}},
	institution = {National Institute of Standards & Technology},
	note = {smead@nist.gov},
	title = {Unique File Identification in the {National Software Reference Library}},
	year = {2014}}

@misc{web:openaire,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	key = {OpenAIRE},
	note = {\url{https://www.openaire.eu/}},
	title = {OpenAIRE},
	year = {2014},
	bdsk-url-1 = {https://www.openaire.eu/}}

@misc{web:openedition,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved June 2017},
	title = {Open Edition},
	year = {2017},
	bdsk-url-1 = {https://www.openedition.org/}}

@misc{wikipedia:cultural-heritage,
	author = {Wikipedia},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved September 2015},
	title = {Cultural heritage --- {W}ikipedia{,} The Free Encyclopedia},
	year = {2015},
	bdsk-url-1 = {https://en.wikipedia.org/wiki/Cultural_heritage}}

@misc{wikipedia:notability,
	author = {Wikipedia},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {retrieved November 2015},
	title = {{Wikipedia:Notability} --- {W}ikipedia{,} The Free Encyclopedia},
	year = {2015},
	bdsk-url-1 = {https://en.wikipedia.org/wiki/Wikipedia:Notability}}

@online{swhids,
	author = {Software Heritage},
	date = {2020-05-05},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	title = {SoftWare Heritage persistent IDentifiers (SWHIDs)},
	version = {1.4},
	bdsk-url-1 = {https://docs.softwareheritage.org/devel/swh-model/persistent-identifiers.html}}

@phdthesis{pietri2021phd,
	author = {Antoine Pietri},
	biburl = {https://dblp.org/rec/phd/hal/Pietri21.bib},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	school = {University of Paris, France},
	title = {Organizing the graph of public software development for large-scale mining. (Organisation du graphe de d{\'{e}}veloppement logiciel pour l'analyse {\`{a}} grande {\'{e}}chelle)},
	year = {2021},
	bdsk-url-1 = {https://tel.archives-ouvertes.fr/tel-03515795}}

@proceedings{2013-preserving-exe,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	editor = {Trevor Owens},
	month = jul,
	note = {\url{http://blogs.loc.gov/digitalpreservation/2013/10/preserving-exe-report-toward-a-national-strategy-for-preserving-software/}},
	title = {Preserving.exe Report: Toward a [US] National Strategy for Preserving Software},
	year = {2013}}

@proceedings{2014-digital-preservation,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	editor = {Erin Engle},
	month = jul,
	note = {\url{http://www.digitalpreservation.gov/meetings/ndiipp14.html}},
	title = {Digital Preservation 2014: annual meeting of the [US] National Digital Information Infrastructure and Preservation Program and the [US] National Digital Stewardship Alliance},
	year = {2014}}

@proceedings{DBLP:conf/dcc/2004,
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/bib/conf/dcc/2004},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {0-7695-2082-0},
	publisher = {{IEEE} Computer Society},
	timestamp = {Tue, 12 May 2015 17:11:45 +0200},
	title = {2004 Data Compression Conference {(DCC} 2004), 23-25 March 2004, Snowbird, UT, {USA}},
	year = {2004},
	bdsk-url-1 = {http://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?punumber=9014}}

@proceedings{DBLP:conf/msr/2012,
	bibsource = {dblp computer science bibliography, http://dblp.org},
	biburl = {http://dblp.uni-trier.de/rec/bib/conf/msr/2012},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Michele Lanza and Massimiliano Di Penta and Tao Xie},
	isbn = {978-1-4673-1761-0},
	publisher = {{IEEE} Computer Society},
	timestamp = {Wed, 13 May 2015 17:45:20 +0200},
	title = {9th {IEEE} Working Conference of Mining Software Repositories, {MSR} 2012, June 2-3, 2012, Zurich, Switzerland},
	year = {2012},
	bdsk-url-1 = {http://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?punumber=6220358}}

@techreport{2014-rousseau-tempsdulogiciel,
	author = {Magali Fitzgibbon and Luc Grateau and Guillaume Rousseau},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	institution = {Institut National de la Propri{\'e}t{\'e} Industrielle},
	title = {Le temps du logiciel},
	year = {2014}}

@techreport{david2003floss,
	author = {David, Paul A and Waterman, Andrew and Arora, Seema},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	institution = {Stanford Institute for Economic Policy Research},
	pages = {1--39},
	title = {FLOSS-US the free/libre/open source software survey for 2003},
	year = {2003}}

@techreport{gplo-note-2020,
	author = {Cl{\'e}ment-Fontaine, M{\'e}lanie and Di Cosmo, Roberto and Guerry, Bastien and Moreau, Patrick and Pellegrini, Fran{\c c}ois},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	hal_id = {hal-02545142},
	hal_version = {v1},
	institution = {{Committee for Open Science's Free Software and Open Source Project Group}},
	month = nov,
	pdf = {https://hal.archives-ouvertes.fr/hal-02545142/file/Opportunity%20Note_software%20derived%20from%20research_EN%20pm.pdf},
	title = {Encouraging a wider usage of software derived from research},
	type = {Research Report},
	year = {2019},
	bdsk-url-1 = {https://hal.archives-ouvertes.fr/hal-02545142}}

@techreport{halswdepositguidelines,
	author = {Gruenpeter, Morane and Sadowska, Jozefina},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	hal_id = {hal-01872189},
	hal_version = {v1},
	institution = {{Inria ; CCSD ; Software Heritage}},
	keywords = {Reproductibility ; Source code ; Open / free software ; pr{\'e}servation du patrimoine logiciel ; D{\'e}p{\^o}t ; Guide ; Logiciel open source ; code source ; Archivage ; reproductibilit{\'e} num{\'e}rique},
	title = {{Create software deposit}},
	type = {Technical Report},
	year = {2018},
	bdsk-url-1 = {https://hal.inria.fr/hal-01872189}}

@techreport{halswmoderationguidelines,
	author = {Gruenpeter, Morane and Sadowska, Jozefina},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	hal_id = {hal-01876705},
	hal_version = {v1},
	institution = {{Inria ; CCSD ; Software Heritage}},
	keywords = {code source ; pr{\'e}servation du patrimoine logiciel ; reproductibilit{\'e} num{\'e}rique ; Archivage ; Guide ; D{\'e}p{\^o}t ; Mod{\'e}ration ; Logiciel ; Logiciel open source},
	title = {{La mod{\'e}ration d'un d{\'e}p{\^o}t logiciel}},
	type = {Technical Report},
	year = {2018},
	bdsk-url-1 = {https://hal.inria.fr/hal-01876705}}

@techreport{ISO690,
	address = {Geneva, CH},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	institution = {International Organization for Standardization},
	key = {ISO 690:2010},
	month = jun,
	title = {Information and documentation -- Guidelines for bibliographic references and citations to information resources},
	type = {Standard},
	volume = {2010},
	year = {2010}}

@techreport{klein2011algorithmic,
	author = {Klein, David and Murray, Kyle and Weber, Simon},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	institution = {arXiv},
	number = {1106.4064},
	title = {Algorithmic programming language identification},
	year = {2011},
	bdsk-url-1 = {https://arxiv.org/abs/1106.4064}}

@techreport{mahadev2015olive,
	author = {Mahadev Satyanarayanan, Gloriana St Clair and Gilbert, Benjamin and Abe, Yoshihisa and Harkes, Jan and Ryan, Dan and Linke, Erika and Webster, Keith},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	institution = {Technical report, Computer Science, Carnegie Mellon University},
	title = {One-Click Time Travel},
	year = {2015}}

@techreport{RFC3650,
	author = {S. Sun and L. Lannom and B. Boesch},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	howpublished = {Internet Requests for Comments},
	institution = {RFC Editor},
	issn = {2070-1721},
	month = {November},
	number = {3650},
	publisher = {RFC Editor},
	title = {Handle System Overview},
	type = {RFC},
	year = {2003}}

@techreport{rfc3986,
	author = {T. Berners-Lee, R. Fielding, L. Masinter},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	howpublished = {The Internet Society},
	institution = {RFC Editor},
	month = {January},
	number = {3986},
	publisher = {RFC Editor},
	title = {Uniform Resource Identifier ({URI}): Generic Syntax},
	type = {RFC},
	year = {2005},
	bdsk-url-1 = {https://tools.ietf.org/html/rfc3986}}

@techreport{roy2007clonedetectionsurvey,
	author = {Roy, Chanchal Kumar and Cordy, James R},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	institution = {Queen's School of Computing},
	number = {115},
	pages = {64--68},
	title = {A survey on software clone detection research},
	volume = {541},
	year = {2007}}

@techreport{swh-provenance-tr,
	author = {Guillaume Rousseau and Di Cosmo, Roberto and Stefano Zacchiroli},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	institution = {Inria},
	note = {\url{https://hal.archives-ouvertes.fr/hal-02158292}},
	title = {Growth and Duplication of Public Source Code over Time: Provenance Tracking at Scale},
	year = {2019}}

@techreport{us-fed-strategy,
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2022-10-11 16:24:21 +0200},
	institution = {[US] Federal Register},
	key = {US Fed},
	note = {\url{https://www.federalregister.gov/articles/2014/07/29/2014-17761/strategy-for-american-innovation}},
	title = {Strategy for American Innovation},
	year = {2014}}

@unpublished{SSIguidelines,
	author = {Mike Jackson},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	note = {Accessed on December 31st 2018},
	title = {How to cite and describe software},
	bdsk-url-1 = {https://www.software.ac.uk/how-cite-software}}

@unpublished{swh-archive-guide,
	author = {Di Cosmo, Roberto},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	hal_id = {hal-02263344},
	hal_version = {v1},
	keywords = {source code ; software archival ; reproducibility ; open science ; guidelines},
	month = apr,
	note = {Available at \url{https://hal.archives-ouvertes.fr/hal-02263344}},
	pdf = {https://hal.archives-ouvertes.fr/hal-02263344/file/swh-archive-reference-howto.pdf},
	title = {{How to use Software Heritage for archiving and referencing your source code: guidelines and walkthrough}},
	year = {2019},
	bdsk-url-1 = {https://hal.archives-ouvertes.fr/hal-02263344}}

@unpublished{swh-hal-02475835,
	author = {Di Cosmo, Roberto and Gruenpeter, Morane and Marmol, Bruno P and Monteil, Alain and Romary, Laurent and Sadowska, Jozefina},
	date-added = {2022-10-11 16:24:21 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	hal_id = {hal-02475835},
	hal_version = {v1},
	keywords = {Software Heritage ; HAL ; CCSD ; IES Inria ; legacy ; preservation ; reproducibility ; software curation ; software metadata ; PID},
	month = dec,
	note = {Presented at the International Digital Curation Conference, submitted to IJDC},
	pdf = {https://hal.inria.fr/hal-02475835/file/ijdc-HAL-CCSD-SWH-2019-12-16.pdf},
	title = {{Curated Archiving of Research Software Artifacts : lessons learned from the French open archive (HAL)}},
	year = 2019,
	bdsk-url-1 = {https://hal.inria.fr/hal-02475835}}

@inproceedings{1-001,
	author = {Bin Lin and Fiorella Zampetti and Gabriele Bavota and Massimiliano Di Penta and Michele Lanza and Rocco Oliveto},
	biburl = {https://dblp.org/rec/conf/icse/0008ZBPLO18.bib},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {94--104},
	publisher = {ACM},
	title = {Sentiment analysis for software engineering: how far can we go?},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3180155.3180195}}

@inproceedings{1-007,
	author = {Zhenpeng Chen and Yanbin Cao and Xuan Lu and Qiaozhu Mei and Xuanzhe Liu},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {841--852},
	publisher = {ACM},
	title = {{SEntiMoji}: an emoji-powered learning approach for sentiment analysis in software engineering},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1145/3338906.3338977}}

@inproceedings{1-010,
	author = {Jin Ding and Hailong Sun and Xu Wang and Xudong Liu},
	biburl = {https://dblp.org/rec/conf/icse/Ding00L18.bib},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {7--13},
	publisher = {ACM},
	title = {Entity-level sentiment analysis of issue comments},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3194932.3194935}}

@inproceedings{1-011,
	author = {Daniel Pletea and Bogdan Vasilescu and Alexander Serebrenik},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:25:13 +0100},
	doi = {10.1145/2597073.2597117},
	pages = {348--351},
	publisher = {ACM},
	title = {Security and emotion: sentiment analysis of security discussions on {GitHub}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2597073.2597117}}

@article{1-015,
	author = {Fabio Calefato and Filippo Lanubile and Federico Maiorano and Nicole Novielli},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-04 18:54:32 +0100},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {1352--1382},
	title = {Sentiment Polarity Detection for Software Development},
	volume = {23},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-017-9546-9}}

@inproceedings{1-019,
	author = {Nicole Novielli and Fabio Calefato and Filippo Lanubile},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {14--17},
	publisher = {ACM},
	title = {A gold standard for emotion annotation in {Stack Overflow}},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3196398.3196453}}

@inproceedings{1-021,
	author = {Rodrigo R. G. Souza and Bruno Silva},
	biburl = {https://dblp.org/rec/conf/msr/SouzaS17.bib},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {459--462},
	publisher = {IEEE},
	title = {Sentiment analysis of {T}ravis {CI} builds},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2017.27}}

@inproceedings{1-022,
	author = {Vinayak Sinha and Alina Lazar and Bonita Sharif},
	biburl = {https://dblp.org/rec/conf/msr/SinhaLS16.bib},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {520--523},
	publisher = {{ACM}},
	title = {Analyzing developer sentiment in commit logs},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2901739.2903501}}

@inproceedings{1-023,
	author = {Daviti Gachechiladze and Filippo Lanubile and Nicole Novielli and Alexander Serebrenik},
	biburl = {https://dblp.org/rec/conf/icse/GachechiladzeLN17.bib},
	booktitle = {International Conference on Software Engineering: New Ideas and Emerging Technologies Results Track {{ICSE-NIER}}},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 15:16:46 +0100},
	pages = {11--14},
	publisher = {IEEE},
	title = {Anger and Its Direction in Collaborative Software Development},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-NIER.2017.18}}

@inproceedings{1-025,
	author = {Nasif Imtiaz and Justin Middleton and Peter Girouard and Emerson R. Murphy{-}Hill},
	biburl = {https://dblp.org/rec/conf/icse/ImtiazMGM18.bib},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {55--61},
	publisher = {ACM},
	title = {Sentiment and politeness analysis tools on developer discussions are unreliable, but so are people},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3194932.3194938}}

@inproceedings{1-026,
	author = {Karl Werder},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:27:55 +0100},
	doi = {10.1145/3194932.3194934},
	pages = {1--6},
	publisher = {ACM},
	title = {The evolution of emotional displays in open source software development teams: an individual growth curve analysis},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3194932.3194934}}

@inproceedings{1-028,
	author = {Eeshita Biswas and K. Vijay{-}Shanker and Lori L. Pollock},
	biburl = {https://dblp.org/rec/conf/msr/BiswasVP19.bib},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {68--78},
	publisher = {{IEEE} / {ACM}},
	title = {Exploring word embedding techniques to improve sentiment analysis of software engineering texts},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2019.00020}}

@inproceedings{1-029,
	author = {Marco Ortu and Alessandro Murgia and Giuseppe Destefanis and Parastou Tourani and Roberto Tonelli and Michele Marchesi and Bram Adams},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 20:44:22 +0100},
	doi = {10.1145/2901739.2903505},
	pages = {480--483},
	publisher = {ACM},
	title = {The emotional side of software developers in {JIRA}},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2901739.2903505}}

@inproceedings{1-031,
	author = {Vinicius H. S. Durelli and Rafael Serapilha Durelli and Andr{\'{e}} Takeshi Endo and Elder Cirilo and Washington Luiz and Leonardo C. da Rocha},
	biburl = {https://dblp.org/rec/conf/sbes/DurelliDECLR18.bib},
	booktitle = {Brazilian Symposium on Software Engineering ({SBES})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:13:58 +0100},
	pages = {132--141},
	publisher = {ACM},
	timestamp = {Tue, 29 Dec 2020 18:34:20 +0100},
	title = {Please please me: does the presence of test cases influence mobile app users' satisfaction?},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3266237.3266272}}

@inproceedings{1-032,
	author = {Md Rakibul Islam and Minhaz F. Zibran},
	biburl = {https://dblp.org/rec/conf/sac/IslamZ18.bib},
	booktitle = {Symposium on Applied Computing ({SAC})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1536--1543},
	publisher = {ACM},
	title = {{DEVA:} sensing emotions in the valence arousal space in software engineering text},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3167132.3167296}}

@inproceedings{1-033,
	author = {Sebastiano Panichella and Andrea Di Sorbo and Emitza Guzman and Corrado Aaron Visaggio and Gerardo Canfora and Harald C. Gall},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1023--1027},
	publisher = {ACM},
	title = {{ARdoc}: app reviews development oriented classifier},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2950290.2983938}}

@inproceedings{1-041,
	author = {Faiz Ali Shah and Yevhenii Sabanin and Dietmar Pfahl},
	biburl = {https://dblp.org/rec/conf/sigsoft/ShahSP16.bib},
	booktitle = {International Workshop on App Market Analytics ({WAMA})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Meiyappan Nagappan and Federica Sarro and Emad Shihab},
	pages = {15--21},
	publisher = {ACM},
	title = {Feature-based evaluation of competing apps},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2993259.2993267}}

@inproceedings{1-042,
	author = {Marco Ortu and Tracy Hall and Michele Marchesi and Roberto Tonelli and David Bowes and Giuseppe Destefanis},
	booktitle = {International Conference on Predictive Models and Data Analytics in Software Engineering ({PROMISE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:24:35 +0100},
	doi = {10.1145/3273934.3273943},
	pages = {70--79},
	publisher = {ACM},
	title = {Mining Communication Patterns in Software Development: {A} GitHub Analysis},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3273934.3273943}}

@inproceedings{1-047,
	author = {Faiz Ali Shah and Kairit Sirts and Dietmar Pfahl},
	biburl = {https://dblp.org/rec/conf/sigsoft/ShahSP19.bib},
	booktitle = {International Workshop on App Market Analytics ({WAMA})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 15:00:50 +0100},
	pages = {40--46},
	publisher = {ACM},
	title = {Using app reviews for competitive analysis: tool support},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1145/3340496.3342756}}

@inproceedings{1-048,
	author = {Isabella Ferreira and Kate Stewart and Daniel M. Germ{\'{a}}n and Bram Adams},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:41:34 +0100},
	pages = {17--22},
	publisher = {{IEEE} / {ACM}},
	title = {A longitudinal study on the maintainers' sentiment of a large scale open source ecosystem},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/SEmotion.2019.00011}}

@inproceedings{1-049,
	author = {Marco Ortu and Michele Marchesi and Roberto Tonelli},
	biburl = {https://dblp.org/rec/conf/icse/OrtuMT19.bib},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:08:58 +0100},
	pages = {46--48},
	publisher = {{IEEE} / {ACM}},
	title = {Empirical analysis of affect of merged issues on {GitHub}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/SEmotion.2019.00017}}

@inproceedings{1-054,
	author = {Md Rakibul Islam and Md Kauser Ahmmed and Minhaz F. Zibran},
	biburl = {https://dblp.org/rec/conf/sac/IslamAZ19.bib},
	booktitle = {Symposium on Applied Computing ({SAC})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1786--1793},
	publisher = {ACM},
	title = {MarValous: machine learning based detection of emotions in the valence-arousal space in software engineering text},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1145/3297280.3297455}}

@inproceedings{1-055,
	author = {Karl Werder and Sjaak Brinkkemper},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:27:30 +0100},
	doi = {10.1145/3194932.3194941},
	pages = {20--24},
	publisher = {ACM},
	title = {{MEME:} toward a method for emotions extraction from {GitHub}},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3194932.3194941}}

@inproceedings{1-057,
	abstract = {App store analysis has become an important discipline in recent software engineering research. It empirically studies apps using information mined from their distribution platforms. Information provided by users, such as app reviews, are of high interest to developers. Commercial providers such as App Annie analyzing this information became an important source for companies developing and marketing mobile apps. In this paper, we perform an exploratory study, which analyzes over seven million reviews from the Apple AppStore regarding their emotional sentiment. Since recent research in this field used sentiments to detail and refine their results, we aim to gain deeper insights into the nature of sentiments in user reviews. In this study we try to evaluate whether or not the emotional sentiment can be an informative feature for software engineers, as well as pitfalls of its usage. We present our initial results and discuss how they can be interpreted from the software engineering perspective.},
	author = {Daniel Martens and Timo Johann},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {8--14},
	title = {On the Emotion of Users in App Reviews},
	year = {2017},
	bdsk-url-1 = {http://arxiv.org/abs/1703.02256},
	bdsk-url-2 = {https://doi.org/10.5555/3105556.3105559}}

@article{1-063,
	author = {Jurado, Francisco and Rodr{\'{\i}}guez Mar{\'{\i}}n, Pilar},
	biburl = {https://dblp.org/rec/journals/jss/JuradoM15.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 15:03:55 +0100},
	journal = {Journal on Systems and Software},
	pages = {82--89},
	title = {Sentiment Analysis in monitoring software development processes: An exploratory case study on {GitHub}'s project issues},
	volume = {104},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2015.02.055}}

@inproceedings{1-067,
	author = {Navdeep Singh and Paramvir Singh},
	biburl = {https://dblp.org/rec/conf/apsec/SinghS17.bib},
	booktitle = {Asia-Pacific Software Engineering Conference ({APSEC})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {648--653},
	publisher = {{IEEE} Computer Society},
	title = {How Do Code Refactoring Activities Impact Software Developers' Sentiments? - An Empirical Investigation Into GitHub Commits},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/APSEC.2017.79}}

@inproceedings{1-074,
	author = {Md Rakibul Islam and Minhaz F. Zibran},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/sera/IslamZ16.bib},
	booktitle = {14th {IEEE} International Conference on Software Engineering Research, Management and Applications, {SERA} 2016, Towson, MD, USA, June 8-10, 2016},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Yeong{-}Tae Song},
	pages = {185--192},
	publisher = {{IEEE} Computer Society},
	timestamp = {Fri, 28 Aug 2020 07:47:07 +0200},
	title = {Towards understanding and exploiting developers' emotional variations in software engineering},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/SERA.2016.7516145}}

@inproceedings{1-076,
	author = {Bo Yang and Xinjie Wei and Chao Liu},
	booktitle = {Asia-Pacific Software Engineering Conference Workshops ({APSEC} Workshops)},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:15:50 +0100},
	pages = {84--89},
	publisher = {IEEE},
	title = {Sentiments Analysis in {GitHub} Repositories: An Empirical Study},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/APSECW.2017.13}}

@article{1-082,
	author = {Marc J. Lanovaz and Bram Adams},
	biburl = {https://dblp.org/rec/journals/software/LanovazA19.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Software},
	number = {5},
	pages = {46--50},
	title = {Comparing the Communication Tone and Responses of Users and Developers in Two {R} Mailing Lists: Measuring Positive and Negative Emails},
	volume = {36},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2019.2922949}}

@inproceedings{1-089,
	author = {Sergio Mu{\~{n}}oz and Oscar Araque and Antonio F. Llamas and Carlos Angel Iglesias},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/obd/MunozALI18.bib},
	booktitle = {4th International Conference on Big Data Innovations and Applications, Innovate-Data 2018, Barcelona, Spain, August 6-8, 2018},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {17--24},
	publisher = {{IEEE}},
	timestamp = {Sat, 19 Oct 2019 20:06:08 +0200},
	title = {A Cognitive Agent for Mining Bugs Reports, Feature Suggestions and Sentiment in a Mobile Application Store},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/Innovate-Data.2018.00010}}

@inproceedings{1-093,
	author = {Toufique Ahmed and Amiangshu Bosu and Anindya Iqbal and Shahram Rahimi},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:19:20 +0100},
	doi = {10.1109/ASE.2017.8115623},
	pages = {106--111},
	publisher = {IEEE},
	title = {{SentiCR}: A customized sentiment analysis tool for code review interactions},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ASE.2017.8115623}}

@article{1-096,
	author = {Walid Maalej and Zijad Kurtanovic and Hadeer Nabil and Christoph Stanik},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/re/MaalejKNS16.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Requir. Eng.},
	number = {3},
	pages = {311--331},
	timestamp = {Sat, 20 May 2017 00:26:07 +0200},
	title = {On the automatic classification of app reviews},
	volume = {21},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1007/s00766-016-0251-9}}

@inproceedings{1-098,
	author = {Amit Kumar Mondal and Mohammad Masudur Rahman and Chanchal K. Roy},
	biburl = {https://dblp.org/rec/conf/seke/MondalRR16.bib},
	booktitle = {International Conference on Software Engineering and Knowledge Engineering ({SEKE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {521--526},
	publisher = {{KSI} Research Inc. and Knowledge Systems Institute Graduate School},
	title = {Embedded Emotion-based Classification of Stack Overflow Questions Towards the Question Quality Prediction},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.18293/SEKE2016-146}}

@inproceedings{1-100,
	author = {Hoon, Leonard and Rodriguez-Garc{\'\i}a, Miguel Angel and Vasa, Rajesh and Valencia-Garc{\'\i}a, Rafael and Schneider, Jean-Guy},
	booktitle = {Trends and Applications in Software Engineering},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-12-06 11:40:17 +0100},
	isbn = {978-3-319-26285-7},
	pages = {223--233},
	publisher = {Springer},
	title = {App Reviews: Breaking the User and Developer Language Barrier},
	year = {2016}}

@inproceedings{1-102,
	author = {Shanshan Wang and Wenjun Wu and Xuan Zhou},
	biburl = {https://dblp.org/rec/conf/icycsee/WangWZ16.bib},
	booktitle = {Social Computing - Second International Conference of Young Computer Scientists, Engineers and Educators ({ICYCSEE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {206--220},
	publisher = {Springer},
	series = {Communications in Computer and Information Science},
	title = {App Store Analysis: Using Regression Model for App Downloads Prediction},
	volume = {623},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1007/978-981-10-2053-7%5C_19}}

@inproceedings{1-105,
	author = {Walid Maalej and Hadeer Nabil},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/re/MaalejN15.bib},
	booktitle = {23rd {IEEE} International Requirements Engineering Conference, {RE} 2015, Ottawa, ON, Canada, August 24-28, 2015},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Didar Zowghi and Vincenzo Gervasi and Daniel Amyot},
	pages = {116--125},
	publisher = {{IEEE} Computer Society},
	timestamp = {Wed, 16 Oct 2019 14:14:56 +0200},
	title = {Bug report, feature request, or simply praise? On automatically classifying app reviews},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/RE.2015.7320414}}

@inproceedings{1-106,
	author = {Marco Ortu and Bram Adams and Giuseppe Destefanis and Parastou Tourani and Michele Marchesi and Roberto Tonelli},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:23:55 +0100},
	doi = {10.1109/MSR.2015.35},
	pages = {303--313},
	publisher = {IEEE},
	title = {Are Bullies More Productive? Empirical Study of Affectiveness vs. Issue Fixing Time},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2015.35}}

@inproceedings{1-116,
	author = {Phong Minh Vu and Hung Viet Pham and Tam The Nguyen and Tung Thanh Nguyen},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/kbse/VuPNN15.bib},
	booktitle = {30th {IEEE/ACM} International Conference on Automated Software Engineering, {ASE} 2015, Lincoln, NE, USA, November 9-13, 2015},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Myra B. Cohen and Lars Grunske and Michael Whalen},
	pages = {789--794},
	publisher = {{IEEE} Computer Society},
	timestamp = {Wed, 16 Oct 2019 14:14:55 +0200},
	title = {Tool Support for Analyzing Mobile App Reviews},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/ASE.2015.101}}

@inproceedings{1-118,
	author = {Emitza Guzman and Omar Aly and Bernd Bruegge},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/esem/GuzmanAB15.bib},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:37:54 +0100},
	pages = {21--30},
	publisher = {IEEE},
	timestamp = {Wed, 16 Oct 2019 14:14:52 +0200},
	title = {Retrieving Diverse Opinions from App Reviews},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/ESEM.2015.7321214}}

@inproceedings{1-121,
	author = {Mateus F. Santos and Josemar Alves Caetano and Johnatan Oliveira and Humberto T. Marques Neto},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/seke/SantosCON18.bib},
	booktitle = {The 30th International Conference on Software Engineering and Knowledge Engineering, Hotel Pullman, Redwood City, California, USA, July 1-3, 2018},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {{\'{O}}scar Mort{\'{a}}gua Pereira},
	pages = {445--444},
	publisher = {{KSI} Research Inc. and Knowledge Systems Institute Graduate School},
	timestamp = {Mon, 15 Jun 2020 17:01:18 +0200},
	title = {Analyzing The Impact Of Feedback In GitHub On The Software Developer's Mood},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.18293/SEKE2018-153}}

@inproceedings{1-127,
	author = {Amin Boudeffa and Antonin Abherve and Alessandra Bagnato and Cedric Thomas and Martin Hamant and Assad Montasser},
	biburl = {https://dblp.org/rec/conf/profes/BoudeffaABTHM19.bib},
	booktitle = {International Conference on Product-Focused Software Process Improvement ({PROFES})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {577--582},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {Application of Computational Linguistics Techniques for Improving Software Quality},
	volume = {11915},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-35333-9%5C_41}}

@inproceedings{2-004,
	author = {Washington Luiz and Felipe Viegas and Rafael Odon de Alencar and Fernando Mour{\~{a}}o and Thiago Salles and D{\'{a}}rlinton B. F. Carvalho and Marcos Andr{\'{e}} Gon{\c{c}}alves and Leonardo C. da Rocha},
	booktitle = {World Wide Web Conference ({WWW})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-26 17:18:35 +0100},
	pages = {1909--1918},
	publisher = {ACM},
	title = {A Feature-Oriented Sentiment Rating for Mobile App Reviews},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3178876.3186168}}

@article{2-005,
	author = {Stuart McIlroy and Nasir Ali and Hammad Khalid and Ahmed E. Hassan},
	biburl = {https://dblp.org/rec/journals/ese/McIlroyAKH16.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {1067--1106},
	title = {Analyzing and automatically labelling the types of user issues that are raised in mobile app reviews},
	volume = {21},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-015-9375-7}}

@inproceedings{2-011,
	author = {Bin Fu and Jialiu Lin and Lei Li and Christos Faloutsos and Jason I. Hong and Norman M. Sadeh},
	biburl = {https://dblp.org/rec/conf/kdd/FuLLFHS13.bib},
	booktitle = {International Conference on Knowledge Discovery and Data Mining ({KDD})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 15:27:32 +0100},
	pages = {1276--1284},
	publisher = {ACM},
	title = {Why people hate your app: making sense of user feedback in a mobile app store},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1145/2487575.2488202}}

@inproceedings{2-018,
	author = {Liu, Jiawen and Sarkar, Mantosh Kumar and Chakraborty, Goutam and others},
	booktitle = {SAS Global Forum Conference},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:07:07 +0100},
	title = {Feature-based Sentiment analysis on android app reviews using {SAS{\textregistered}} text miner and {SAS{\textregistered}} sentiment analysis studio},
	volume = {250},
	year = {2013}}

@inproceedings{2-031,
	author = {N. S. {Chowdhury} and R. R. {Raje}},
	booktitle = {2018 21st International Conference of Computer and Information Technology (ICCIT)},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	keywords = {mobile computing;sentiment analysis;trusted computing;holistic ranking scheme;app stores;application distribution platforms;sentiments;trust-based selection;ranking system;Google Play Store;Computer bugs;Google;Tools;Games;Sentiment analysis;Information science;Task analysis;Apps;Subjective Logic;Online Marketplace;User Rating;Trust;Sentiment Analysis;Ranking},
	month = {Dec},
	pages = {1-6},
	title = {A Holistic Ranking Scheme for Apps},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/ICCITECHN.2018.8631955}}

@inproceedings{2-036,
	author = {Montassar Ben Messaoud and Ilyes Jenhani and Nermine Ben Jemaa and Mohamed Wiem Mkaouer},
	booktitle = {International Conference on Knowledge Science, Engineering and Management ({KSEM})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:42:46 +0100},
	pages = {805--816},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {A Multi-label Active Learning Approach for Mobile App User Review Classification},
	volume = {11775},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-29551-6%5C_71}}

@inproceedings{2-042,
	author = {Binil Kuriachan and Nargis Pervin},
	biburl = {https://dblp.org/rec/conf/desrist/KuriachanP18.bib},
	booktitle = {International Conference on Designing for a Digital and Globalized World ({DESRIST})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {187--204},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {{ALDA:} An Aggregated {LDA} for Polarity Enhanced Aspect Identification Technique in Mobile App Domain},
	volume = {10844},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-91800-6%5C_13}}

@inproceedings{2-045,
	author = {Zhenlian Peng and Jian Wang and Keqing He and Mingdong Tang},
	biburl = {https://dblp.org/rec/conf/colcom/PengWHT16.bib},
	booktitle = {International Conference on Collaborate Computing: Networking, Applications and Worksharing ({CollaborateCom})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Shangguang Wang and Ao Zhou},
	pages = {312--323},
	publisher = {Springer},
	series = {Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering},
	title = {An Approach of Extracting Feature Requests from App Reviews},
	volume = {201},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-59288-6%5C_28}}

@article{2-059,
	author = {Yuzhou Liu and Lei Liu and Huaxiao Liu and Xiaoyu Wang},
	biburl = {https://dblp.org/rec/journals/smr/LiuLLW18.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 14:53:49 +0100},
	journal = {Journal of Software: Evolution and Process},
	number = {12},
	title = {Analyzing reviews guided by App descriptions for the software development and evolution},
	volume = {30},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1002/smr.2112}}

@inproceedings{2-062,
	author = {V. T. {Dhinakaran} and R. {Pulle} and N. {Ajmeri} and P. K. {Murukannaiah}},
	booktitle = {International Requirements Engineering Conference ({RE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 15:17:03 +0100},
	issn = {2332-6441},
	keywords = {learning (artificial intelligence);mobile computing;pattern classification;automated app review analysis;requirements-related information;training dataset;machine learning paradigm;app review classification framework;active learning strategies;supervision effort;uncertainty sampling;rating;user experience;bugs;Training;Uncertainty;Labeling;Cloud computing;Task analysis;Computer bugs;Smart devices;app review analysis;active learning;mobile apps;Crowd RE;social requirements},
	month = {Aug},
	pages = {170-181},
	title = {App Review Analysis Via Active Learning: Reducing Supervision Effort without Compromising Classification Accuracy},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/RE.2018.00026}}

@article{2-067,
	author = {Maleknaz Nayebi and Henry Cho and Guenther Ruhe},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/NayebiCR18.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-04 18:56:42 +0100},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {2764--2794},
	timestamp = {Tue, 25 Aug 2020 16:58:53 +0200},
	title = {App store mining is not enough for app improvement},
	volume = {23},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-018-9601-1}}

@inproceedings{2-068,
	author = {Shance Wang and Zhongjie Wang and Xiaofei Xu and Quan Z. Sheng},
	booktitle = {International Conference on Service-Oriented Computing ({ICSOC})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:47:02 +0100},
	pages = {125--141},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {App Update Patterns: How Developers Act on User Reviews in Mobile App Stores},
	volume = {10601},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-69035-3%5C_9}}

@article{2-069,
	author = {Mamta Pandey and Ratnesh Litoriya and Prateek Pandey},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/pcs/PandeyLP19.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Program. Comput. Softw.},
	number = {5},
	pages = {268--287},
	timestamp = {Sun, 06 Sep 2020 18:04:12 +0200},
	title = {Application of Fuzzy {DEMATEL} Approach in Analyzing Mobile App Issues},
	volume = {45},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1134/S0361768819050050}}

@article{2-071,
	author = {Prasetyo, Budi Eko and Putri, Divi Galih Prasetyo and Pamungkas, Endang Wahyu},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {International Journal of Computer Applications},
	pages = {8887},
	title = {Aspect Extraction using Informative Data from Mobile App Data Review},
	volume = {975}}

@inproceedings{2-072,
	author = {Sherlock A. Licorish and Bastin Tony Roy Savarimuthu and Swetha Keertipati},
	booktitle = {International Conference on Evaluation and Assessment in Software Engineering ({EASE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:48:25 +0100},
	pages = {108--117},
	publisher = {ACM},
	title = {Attributes that Predict which Features to Fix: Lessons for App Store Mining},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1145/3084226.3084246}}

@inproceedings{2-078,
	author = {Mengmeng Lu and Peng Liang},
	biburl = {https://dblp.org/rec/conf/ease/LuL17.bib},
	booktitle = {International Conference on Evaluation and Assessment in Software Engineering ({EASE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {344--353},
	publisher = {ACM},
	title = {Automatic Classification of Non-Functional Requirements from Augmented App User Reviews},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1145/3084226.3084241}}

@article{2-083,
	author = {Gias {Uddin} and Foutse {Khomh}},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-28 11:08:40 +0100},
	issn = {1939-3520},
	journal = {Transactions on Software Engineering},
	keywords = {Benchmark testing;Usability;Search engines;Java;Data mining;Tools;API;Opinion;Categorization;Review;API Aspect;API Review Mining},
	pages = {1-1},
	title = {Automatic Mining of Opinions Expressed About {API}s in {Stack Overflow}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2019.2900245}}

@inproceedings{2-085,
	author = {Roger Deocadez and Rachel Harrison and Daniel Rodr{\'{\i}}guez},
	biburl = {https://dblp.org/rec/conf/re/DeocadezHR17.bib},
	booktitle = {International Requirements Engineering Conference Workshops ({RE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {367--371},
	publisher = {{IEEE} Computer Society},
	title = {Automatically Classifying Requirements from App Stores: {A} Preliminary Study},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/REW.2017.58}}

@inproceedings{2-089,
	author = {Gao, Cuiyun and Zeng, Jichuan and Xia, Xin and Lo, David and Lyu, Michael R. and King, Irwin},
	booktitle = {International Conference on Automated Software Engineering {(ASE)}},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2643-1572},
	month = {November},
	pages = {163--175},
	title = {Automating App Review Response Generation},
	year = {2019},
	bdsk-url-1 = {https://arxiv.org/abs/2002.03552},
	bdsk-url-2 = {https://doi.org/10.1109/ASE.2019.00025}}

@inproceedings{2-101,
	author = {K. {Phetrungnapha} and T. {Senivongse}},
	booktitle = {International Conference on Information Communication Technology and System ({ICTS})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 14:55:47 +0100},
	keywords = {Bayes methods;data mining;decision trees;learning (artificial intelligence);meta data;mobile computing;pattern classification;program debugging;sentiment analysis;user feedback;Play Store;issue tracking system;user review classification;text classification;review metadata;Jira ticket generating tool;review comments;duplicate user reviews;corresponding bug report;mobile development team;mobile application user reviews;mobile application development;Apple App Store;GooglePlay Store;user reviews classification;tickets generation;mobile application classification;natural language processing;sentiment analysis;LinearSVC;logistic regression;ensemble methods;Computer bugs;Mobile applications;Tools;Machine learning algorithms;Decision trees;Logistics;Maintenance engineering;user reviews;issue tracking system;text classification;text similarity;text summarization;machine learning;natural language processing},
	month = {July},
	pages = {229-234},
	title = {Classification of Mobile Application User Reviews for Generating Tickets on Issue Tracking System},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ICTS.2019.8850962}}

@inproceedings{2-110,
	author = {M. {Nayebi} and M. {Marbouti} and R. {Quapp} and F. {Maurer} and G. {Ruhe}},
	booktitle = {International Conference on Software Engineering: Software Engineering in Society Track ({ICSE-SEIS})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 15:20:24 +0100},
	keywords = {crowdsourcing;data analysis;emergency management;feature extraction;information analysis;learning (artificial intelligence);mobile computing;social networking (online);wildfires;crowdsourced exploration;mobile app features;Fort McMurray wildfire;emergency situations;social media information analysis;MAPFEAT method;features extraction;tweets analysis;machine learning techniques;Real-time systems;Mobile communication;Feature extraction;Software;Data mining;Twitter;Wildfire;Emergency;App store mining;Twitter;Mobile apps;Machine learning},
	month = {May},
	pages = {57-66},
	title = {Crowdsourced Exploration of Mobile App Features: A Case Study of the Fort {McMurray} Wildfire},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-SEIS.2017.8}}

@inproceedings{2-117,
	author = {Cuiyun Gao and Wujie Zheng and Yuetang Deng and David Lo and Jichuan Zeng and Michael R. Lyu and Irwin King},
	biburl = {https://dblp.org/rec/conf/icse/GaoZD0ZLK19.bib},
	booktitle = {International Conference on Software Engineering: Software Engineering in Practice ({ICSE-SEIP})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {279--288},
	publisher = {{IEEE} / {ACM}},
	title = {Emerging app issue identification from user feedback: experience on WeChat},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-SEIP.2019.00040}}

@inproceedings{2-122,
	author = {Fabio Calefato and Filippo Lanubile and Nicole Novielli},
	biburl = {https://dblp.org/rec/conf/acii/CalefatoLN17.bib},
	booktitle = {International Conference on Affective Computing and Intelligent Interaction Workshops and Demos ({ACII} Workshops)},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {79--80},
	publisher = {IEEE},
	title = {{EmoTxt}: {A} toolkit for emotion recognition from text},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ACIIW.2017.8272591}}

@inproceedings{2-124,
	author = {Emitza Guzman and Muhammad El{-}Haliby and Bernd Bruegge},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/kbse/GuzmanEB15.bib},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Myra B. Cohen and Lars Grunske and Michael Whalen},
	pages = {771--776},
	publisher = {{IEEE} Computer Society},
	timestamp = {Wed, 16 Oct 2019 14:14:55 +0200},
	title = {Ensemble Methods for App Review Classification: An Approach for Software Evolution {(N)}},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/ASE.2015.88}}

@inproceedings{2-130,
	author = {Kendall Bailey and Meiyappan Nagappan and Danny Dig},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/hicss/BaileyND19.bib},
	booktitle = {52nd Hawaii International Conference on System Sciences, {HICSS} 2019, Grand Wailea, Maui, Hawaii, USA, January 8-11, 2019},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Tung Bui},
	pages = {1--10},
	publisher = {ScholarSpace},
	timestamp = {Wed, 22 Apr 2020 08:54:53 +0200},
	title = {Examining User-Developer Feedback Loops in the iOS App Store},
	year = {2019},
	bdsk-url-1 = {http://hdl.handle.net/10125/60178}}

@inproceedings{2-147,
	author = {Emitza Guzman and Walid Maalej},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/re/GuzmanM14.bib},
	booktitle = {{IEEE} 22nd International Requirements Engineering Conference, {RE} 2014, Karlskrona, Sweden, August 25-29, 2014},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Tony Gorschek and Robyn R. Lutz},
	pages = {153--162},
	publisher = {{IEEE} Computer Society},
	timestamp = {Wed, 16 Oct 2019 14:14:56 +0200},
	title = {How Do Users Like This Feature? {A} Fine Grained Sentiment Analysis of App Reviews},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/RE.2014.6912257}}

@inproceedings{2-148,
	author = {Cuiyun Gao and Jichuan Zeng and David Lo and Chin{-}Yew Lin and Michael R. Lyu and Irwin King},
	biburl = {https://dblp.org/rec/conf/sigsoft/GaoZ0LLK18.bib},
	booktitle = {Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {904--907},
	publisher = {ACM},
	title = {{INFAR:} insight extraction from app reviews},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3236024.3264595}}

@article{2-149,
	author = {Yuzhou Liu and Lei Liu and Huaxiao Liu and Suji Li},
	biburl = {https://dblp.org/rec/journals/access/LiuLLL19.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {{IEEE} Access},
	pages = {9501--9514},
	title = {Information Recommendation Based on Domain Knowledge in App Descriptions for Improving the Quality of Requirements},
	volume = {7},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ACCESS.2019.2891543}}

@article{2-153,
	author = {Keng{-}Pei Lin and Yi{-}Wei Chang and Chih{-}Ya Shen and Mei{-}Chu Lin},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/tcss/LinCSL18.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-07 11:17:07 +0100},
	journal = {Trans. Comput. Soc. Syst.},
	number = {4},
	pages = {1061--1070},
	publisher = {IEEE},
	timestamp = {Mon, 26 Oct 2020 08:39:25 +0100},
	title = {Leveraging Online Word of Mouth for Personalized App Recommendation},
	volume = {5},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/TCSS.2018.2878866}}

@inproceedings{2-162,
	author = {Xueqing Liu and Yue Leng and Wei Yang and Chengxiang Zhai and Tao Xie},
	biburl = {https://dblp.org/rec/conf/re/LiuLYZX18.bib},
	booktitle = {International Requirements Engineering Conference ({RE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {147--158},
	publisher = {IEEE},
	title = {Mining {Android} App Descriptions for Permission Requirements Recommendation},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/RE.2018.00024}}

@article{2-164,
	author = {Nishant Jha and Anas Mahmoud},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/JhaM19.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-04 18:55:22 +0100},
	journal = {Empirical Software Engineering},
	number = {6},
	pages = {3659--3695},
	timestamp = {Tue, 25 Aug 2020 16:58:32 +0200},
	title = {Mining non-functional requirements from App store reviews},
	volume = {24},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-019-09716-7}}

@inproceedings{2-168,
	author = {Xiaozhou Li and Zheying Zhang and Kostas Stefanidis},
	biburl = {https://dblp.org/rec/conf/somet/LiZS18.bib},
	booktitle = {International Conference on New Trends in Intelligent Software Methodologies, Tools and Techniques ({SoMeT})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Hamido Fujita and Enrique Herrera{-}Viedma},
	pages = {773--786},
	publisher = {{IOS} Press},
	series = {Frontiers in Artificial Intelligence and Applications},
	title = {Mobile App Evolution Analysis Based on User Reviews},
	volume = {303},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.3233/978-1-61499-900-3-773}}

@inproceedings{2-172,
	author = {Parastou Tourani and Yujuan Jiang and Bram Adams},
	biburl = {https://dblp.org/rec/conf/cascon/TouraniJA14.bib},
	booktitle = {International Conference on Computer Science and Software Engineering ({CASCON})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {34--44},
	publisher = {{IBM} / {ACM}},
	title = {Monitoring sentiment in open source mailing lists: exploratory study on the {A}pache ecosystem},
	year = {2014},
	bdsk-url-1 = {http://dl.acm.org/citation.cfm?id=2735528}}

@inproceedings{2-177,
	author = {Giuseppe Destefanis and Marco Ortu and David Bowes and Michele Marchesi and Roberto Tonelli},
	biburl = {https://dblp.org/rec/conf/icse/DestefanisOBMT18.bib},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {14--19},
	publisher = {ACM},
	title = {On measuring affects of GitHub issues' commenters},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3194932.3194936}}

@inproceedings{2-186,
	author = {O. {Mahmud} and N. T. {Niloy} and M. A. {Rahman} and M. S. {Siddik}},
	booktitle = {International Conference on Smart Computing Communications ({ICSCC})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	keywords = {Android (operating system);online front-ends;Android applications;category prioritization;user ratings;user reviews;Opera reviews;Firefox reviews;Tools;Taxonomy;Browsers;Computer bugs;Weight measurement;Google;Industries;Android App Release;Natural Language Processing;Machine Learning;Prioritization;Review Management},
	month = {June},
	pages = {1-5},
	title = {Predicting an Effective Android Application Release Based on User Reviews and Ratings},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/ICSCC.2019.8843677}}

@article{2-194,
	author = {He Jiang and Jingxuan Zhang and Xiaochen Li and Zhilei Ren and David Lo and Xindong Wu and Zhongxuan Luo},
	biburl = {https://dblp.org/rec/journals/tosem/JiangZLRLWL19.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-07 11:11:06 +0100},
	journal = {Transactions on Software Engineering and Methodology},
	number = {4},
	publisher = {ACM},
	title = {Recommending New Features from Mobile App Descriptions},
	volume = {28},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1145/3344158}}

@article{2-201,
	author = {Majid Hatamian and Jetzabel M. Serna and Kai Rannenberg},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/compsec/HatamianSR19.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Comput. Secur.},
	pages = {332--353},
	timestamp = {Mon, 30 Nov 2020 08:47:18 +0100},
	title = {Revealing the unrevealed: Mining smartphone users privacy perception on app markets},
	volume = {83},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1016/j.cose.2019.02.010}}

@inproceedings{2-203,
	author = {Mohamed Ali and Mona Erfani Joorabchi and Ali Mesbah},
	booktitle = {International Conference on Mobile Software Engineering and Systems ({MOBILESoft})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 15:24:50 +0100},
	pages = {79--90},
	publisher = {IEEE},
	title = {Same App, Different App Stores: {A} Comparative Study},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MOBILESoft.2017.3}}

@article{2-209,
	author = {Qasim Umer and Hui Liu and Yasir Sultan},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/jss/UmerLS19.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Syst. Softw.},
	pages = {57--69},
	timestamp = {Mon, 24 Feb 2020 15:59:35 +0100},
	title = {Sentiment based approval prediction for enhancement reports},
	volume = {155},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2019.05.026}}

@article{2-212,
	author = {Md Rakibul Islam and Minhaz F. Zibran},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/jss/IslamZ18.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Syst. Softw.},
	pages = {125--146},
	timestamp = {Fri, 28 Aug 2020 07:47:07 +0200},
	title = {SentiStrength-SE: Exploiting domain specificity for improved sentiment analysis in software engineering text},
	volume = {145},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2018.08.030}}

@inproceedings{2-225,
	author = {Yuandong Liu and Yanwei Li and Yanhui Guo and Miao Zhang},
	biburl = {https://dblp.org/rec/conf/sitis/LiuLGZ16.bib},
	booktitle = {12th International Conference on Signal-Image Technology {\&} Internet-Based Systems, {SITIS} 2016, Naples, Italy, November 28 - December 1, 2016},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Kokou Y{\'{e}}tongnon and Albert Dipanda and Richard Chbeir and Giuseppe De Pietro and Luigi Gallo},
	pages = {581--588},
	publisher = {{IEEE} Computer Society},
	title = {Stratify Mobile App Reviews: {E-LDA} Model Based on Hot "Entity" Discovery},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/SITIS.2016.97}}

@inproceedings{2-235,
	author = {Iv{\'{a}}n Tactuk Mercado and Nuthan Munaiah and Andrew Meneely},
	biburl = {https://dblp.org/rec/conf/sigsoft/MercadoMM16.bib},
	booktitle = {International Workshop on App Market Analytics ({WAMA})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Meiyappan Nagappan and Federica Sarro and Emad Shihab},
	pages = {43--49},
	publisher = {ACM},
	title = {The impact of cross-platform development approaches for mobile applications from the user's perspective},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2993259.2993268}}

@inproceedings{2-236,
	author = {Parastou Tourani and Bram Adams},
	booktitle = {International Conference on Software Analysis, Evolution, and Reengineering ({SANER})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {189--200},
	publisher = {IEEE},
	title = {The Impact of Human Discussions on Just-in-Time Quality Assurance: An Empirical Study on {OpenStack} and {Eclipse}},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2016.113}}

@article{2-240,
	author = {E. {Noei} and F. {Zhang} and Y. {Zou}},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:23:55 +0100},
	issn = {1939-3520},
	journal = {Transactions on Software Engineering},
	keywords = {Google;Measurement;Crawlers;Natural language processing;Computer bugs;Tools;Filtering;Mobile application;Empirical study;Software release;User-review},
	pages = {1-1},
	publisher = {IEEE},
	title = {Too Many User-Reviews, What Should App Developers Look at First?},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2019.2893171}}

@inproceedings{2-250,
	author = {Syed Fatiul Huq and Ali Zafar Sadiq and Kazi Sakib},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/apsec/HuqSS19.bib},
	booktitle = {26th Asia-Pacific Software Engineering Conference, {APSEC} 2019, Putrajaya, Malaysia, December 2-5, 2019},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {514--521},
	publisher = {{IEEE}},
	timestamp = {Mon, 13 Jan 2020 17:21:42 +0100},
	title = {Understanding the Effect of Developer Sentiment on Fix-Inducing Changes: An Exploratory Study on GitHub Pull Requests},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/APSEC48747.2019.00075}}

@article{2-258,
	author = {Ali, Nazakat and Hong, Jang-Eui},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {Applied Sciences},
	number = {19},
	pages = {3944},
	publisher = {Multidisciplinary Digital Publishing Institute},
	title = {Value-Oriented Requirements: Eliciting Domain Requirements from Social Network Services to Evolve Software Product Lines},
	volume = {9},
	year = {2019}}

@inproceedings{2-261,
	author = {Andrea Di Sorbo and Sebastiano Panichella and Carol V. Alexandru and Junji Shimagaki and Corrado Aaron Visaggio and Gerardo Canfora and Harald C. Gall},
	biburl = {https://dblp.org/rec/conf/sigsoft/SorboPASVCG16.bib},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {499--510},
	publisher = {ACM},
	title = {What would users change in my app? summarizing app reviews for recommending software changes},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2950290.2950299}}

@inproceedings{2-268,
	author = {Jennifer Ferreira and Denis Dennehy and Jaganath Babu and Kieran Conboy},
	biburl = {https://dblp.org/rec/conf/i3e/FerreiraDBC19.bib},
	booktitle = {{IFIP} {WG} 6.11 Conference on e-Business, e-Services, and e-Society ({I3E})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:54:37 +0100},
	pages = {392--403},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {Winning of Hearts and Minds: Integrating Sentiment Analytics into the Analysis of Contradictions},
	volume = {11701},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-29374-1%5C_32}}

@inproceedings{10.1145/2897000.2897006,
	abstract = {Ever since the Internet has become widely available, question and answer sites have been used as a knowledge sharing service. Users ask the community about how to solve problems, hoping that there will be someone to provide a solution. However, not every question is answered. Eric Raymond claimed that how an user asks a question is important. Existing studies have presented ways to study the question quality by textual, community-based or affective features. In this paper, we investigated how affective features are related to the question quality, and we found that using affective features improves the prediction of question quality. Moreover, Favorite Vote Count feature has the highest influence on our prediction models.},
	author = {Jiarpakdee, Jirayus and Ihara, Akinori and Matsumoto, Ken-ichi},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 20:45:15 +0100},
	doi = {10.1145/2897000.2897006},
	isbn = {9781450341691},
	pages = {12---17},
	publisher = {ACM},
	title = {Understanding Question Quality through Affective Aspect in {Q\&A} Site},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2897000.2897006}}

@inproceedings{10.1145/3442442.3458612,
	abstract = {App reviews deliver user opinions and emerging issues (e.g., new bugs) about the app releases. Due to the dynamic nature of app reviews, topics and sentiment of the reviews would change along with app release versions. Although several studies have focused on summarizing user opinions by analyzing user sentiment towards app features, no practical tool is released. The large quantity of reviews and noise words also necessitates an automated tool for monitoring user reviews. In this paper, we introduce TOUR for dynamic TOpic and sentiment analysis of User Reviews. TOUR is able to (i) detect and summarize emerging app issues over app versions, (ii) identify user sentiment towards app features, and (iii) prioritize important user reviews for facilitating developers' examination. The core techniques of TOUR include the online topic modeling approach and sentiment prediction strategy. TOUR provides entries for developers to customize the hyper-parameters and the results are presented in an interactive way. We evaluate TOUR by conducting a developer survey that involves 15 developers, and all of them confirm the practical usefulness of the recommended feature changes by TOUR.},
	author = {Yang, Tianyi and Gao, Cuiyun and Zang, Jingya and Lo, David and Lyu, Michael},
	booktitle = {World Wide Web Conference ({WWW})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 16:00:39 +0100},
	isbn = {9781450383134},
	keywords = {review topic, App review, sentiment analysis},
	pages = {708--712},
	publisher = {ACM},
	title = {{TOUR}: Dynamic Topic and Sentiment Analysis of User Reviews for Assisting App Release},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3442442.3458612}}

@book{AdolphsAnderson,
	author = {Adolphs, Ralph and Anderson, David J.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	publisher = {Princeton University Press},
	title = {The Neuroscience of Emotion: A New Synthesis},
	year = 2018}

@article{AhasanuzzamanAR20,
	author = {Md. Ahasanuzzaman and Muhammad Asaduzzaman and Chanchal K. Roy and Kevin A. Schneider},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-04 18:56:23 +0100},
	journal = {Empirical Software Engineering},
	number = {2},
	pages = {1493--1532},
	title = {{CAPS:} a supervised technique for classifying {Stack Overflow} posts concerning {API} issues},
	volume = {25},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-019-09743-4}}

@article{AmabileEtAl,
	abstract = { This study explored how affect relates to creativity at work. Using both quantitative and qualitative longitudinal data from the daily diaries of 222 employees in seven companies, we examined the nature, form, and temporal dynamics of the affect-creativity relationship. The results indicate that positive affect relates positively to creativity in organizations and that the relationship is a simple linear one. Time-lagged analyses identify positive affect as an antecedent of creative thought, with incubation periods of up to two days. Qualitative analyses identify positive affect as a consequence of creative thought events, as well as a concomitant of the creative process. A preliminary theory of the affect-creativity cycle in organizations includes each of these links and proposes mechanisms by which they may operate. },
	author = {Teresa M. Amabile and Sigal G. Barsade and Jennifer S. Mueller and Barry M. Staw},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Administrative Science Quarterly},
	number = {3},
	pages = {367-403},
	title = {Affect and Creativity at Work},
	volume = {50},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.2189/asqu.2005.50.3.367}}

@book{barrett2017emotions,
	author = {Barrett, Lisa Feldman},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	isbn = {9780544129962},
	lccn = {2017004323},
	publisher = {HarperCollins},
	title = {How Emotions Are Made: The Secret Life of the Brain},
	year = {2017}}

@inproceedings{Begel2012,
	abstract = {Software development organizations are changing from traditional enterprise or open source teams to decentralized, inter-reliant, multi-scale ecosystems of software developers. This transformation presents novel challenges and opportunities to those seeking to understand, evaluate, support, and influence these organizations. The goals of this workshop are to bring together researchers who are interested in the evolution of software development organizations, highlighting the role of collaboration technology, such as crowdsourcing, social media, software hosting, and application marketplace services, in shaping organizational transformation, and coordinating future efforts.},
	author = {Begel, Andrew and Herbsleb, James D. and Storey, Margaret-Anne},
	booktitle = {Conference on Computer Supported Cooperative Work ({CSCW})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450310512},
	keywords = {crowdsourcing, software development, social media},
	pages = {17--18},
	publisher = {ACM},
	title = {The Future of Collaborative Software Development},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1145/2141512.2141522}}

@article{Bin:2021,
	author = {Bin Lin and Nathan Cassee and Alexander Serebrenik and Gabriele Bavota and Nicole Novielli and Michele Lanza},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-07 11:18:24 +0100},
	day = {5},
	issn = {1049-331X},
	journal = {Transactions on Software Engineering and Methodology},
	month = {oct},
	publisher = {ACM},
	title = {Opinion Mining for Software Development: A Systematic Literature Review},
	volume = {XX},
	year = {2021}}

@article{Bosch2010,
	author = {Jan Bosch and Petra Bosch-Sijtsema},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-12-18 15:17:14 +0100},
	journal = {Journal of Systems and Software},
	number = 1,
	pages = {67--76},
	title = {From integration to composition: on the impact of software product lines, global development and ecosystems},
	volume = 83,
	year = {2010}}

@article{BradleyLang,
	abstract = {The Self-Assessment Manikin (SAM) is a non-verbal pictorial assessment technique that directly measures the pleasure, arousal, and dominance associated with a person's affective reaction to a wide variety of stimuli. In this experiment, we compare reports of affective experience obtained using SAM, which requires only three simple judgments, to the Semantic Differential scale devised by Mehrabian and Russell (An approach to environmental psychology, 1974) which requires 18 different ratings. Subjective reports were measured to a series of pictures that varied in both affective valence and intensity. Correlations across the two rating methods were high both for reports of experienced pleasure and felt arousal. Differences obtained in the dominance dimension of the two instruments suggest that SAM may better track the personal response to an affective stimulus. SAM is an inexpensive, easy method for quickly assessing reports of affective response in many contexts.},
	author = {Margaret M. Bradley and Peter J. Lang},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0005-7916},
	journal = {Journal of Behavior Therapy and Experimental Psychiatry},
	number = {1},
	pages = {49--59},
	title = {Measuring emotion: The self-assessment manikin and the semantic differential},
	volume = {25},
	year = {1994},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/0005791694900639},
	bdsk-url-2 = {https://doi.org/10.1016/0005-7916(94)90063-9}}

@article{CagnoniEtAl,
	abstract = {When developing a software engineering project, selecting the most appropriate programming language is a crucial step. Most often, feeling at ease with the possible options becomes almost as relevant as the technical features of the language. Therefore, it appears to be worth analyzing the role that the emotional component plays in this process. In this article, we analyze the trend of the emotions expressed by developers in 2018 on the Stack Overflow platform in posts concerning 26 programming languages. To do so, we propose a learning model trained by distant supervision and the comparison of two different classifier architectures.},
	author = {Stefano Cagnoni and Lorenzo Cozzini and Gianfranco Lombardo and Monica Mordonini and Agostino Poggi and Michele Tomaiuolo},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2405-9595},
	journal = {ICT Express},
	keywords = {Programming languages, Emotion detection, Machine learning},
	number = {3},
	pages = {238-242},
	title = {Emotion-based analysis of programming languages on {Stack Overflow}},
	volume = {6},
	year = {2020},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S2405959520301077},
	bdsk-url-2 = {https://doi.org/10.1016/j.icte.2020.07.002}}

@book{calvo_oxford_2014,
	abstract = {The Oxford Handbook of Affective Computing aims to be the definite reference for research in the burgeoning field of affective computing---a field that turns 18 at the time of writing.  This introductory chapter is intended to convey the motivations of the editors and content of the chapters in order to orient the readers to the handbook.  It begins with a very high overview of the field of affective computing along with a bit of reminiscence about its formation, short history, and major accomplishments.  The five main sections of the handbook---history and theory, detection, generation, methodologies, and applications---are then discussed, along with a bird's eye view of the 41 chapters covered in the book.  The introduction is devoted to short descriptions of the chapters featured in the handbook.  A brief descript of the Glossary concludes the Introduction.},
	author = {Calvo, Rafael A. and D'Mello, Sidney and Gratch, Jonathan and Kappas, Arvid},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {978-0-19-994223-7},
	keywords = {UARC, Virtual Humans},
	month = dec,
	publisher = {Oxford University Press},
	title = {The {Oxford} {Handbook} of {Affective} {Computing}},
	year = {2014},
	bdsk-url-1 = {https://global.oup.com/academic/product/the-oxford-handbook-of-affective-computing-9780199942237?cc=us&lang=en&},
	bdsk-url-2 = {https://global.oup.com/academic/product/the-oxford-handbook-of-affective-computing-9780199942237}}

@incollection{CardelloJaeger,
	abstract = {Product emotion research is a burgeoning area of research within academia and industry. The explosion in the number of methods for measuring emotions and the rapidly growing range of applications for emotion research have created a situation filled with both important measurement and methodological issues. In this chapter we describe the measurement techniques that are currently available to capture emotional responses to products using self-report questionnaires. In addition, we address the fundamental issues related to the application of these measurement techniques, including scale issues, reliability of methods, temporal capture of self-reports, and issues related to stimulus formats, presenting the most relevant research that addresses these issues. In this way, it is our hope to provide actionable guidance and direction to new investigators coming into this area of research, as well as to stimulate thought and ideas for new avenues of research related to the self-report of emotions using questionnaires.},
	author = {Armand V. Cardello and Sara R. Jaeger},
	booktitle = {Emotion Measurement},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Herbert L. Meiselman},
	isbn = {978-0-08-100508-8},
	keywords = {Emotions, product emotions, methods, lexicons, questionnaires, emotional associations, scaling of emotions},
	pages = {165--200},
	publisher = {Woodhead Publishing},
	title = {Measurement of Consumer Product Emotions Using Questionnaires},
	year = {2016},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/B9780081005088000084},
	bdsk-url-2 = {https://doi.org/10.1016/B978-0-08-100508-8.00008-4}}

@book{Coan,
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	editor = {Coan, James A.},
	isbn = {9780195169157; 0195169158},
	publisher = {Oxford University Press, USA},
	series = {Series in Affective Science},
	title = {Handbook of Emotion Elicitation and Assessment},
	year = {2007}}

@inproceedings{DBLP:conf/emnlp/PangLV02,
	author = {Bo Pang and Lillian Lee and Shivakumar Vaithyanathan},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/conf/emnlp/PangLV02.bib},
	booktitle = {Conference on Empirical Methods in Natural Language Processing ({EMNLP})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-04 18:53:53 +0100},
	pages = {79--86},
	timestamp = {Fri, 06 Aug 2021 00:40:30 +0200},
	title = {Thumbs up? Sentiment Classification using Machine Learning Techniques},
	year = {2002},
	bdsk-url-1 = {https://aclanthology.org/W02-1011/},
	bdsk-url-2 = {https://doi.org/10.3115/1118693.1118704}}

@inproceedings{DBLP:conf/esem/ClaesMF18,
	author = {Ma{\"{e}}lick Claes and Mika M{\"{a}}ntyl{\"{a}} and Umar Farooq},
	booktitle = {International Symposium on Empirical Software Engineering and Measurement ({ESEM})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {ACM},
	title = {On the use of emoticons in open source software development},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3239235.3267434}}

@inproceedings{DBLP:conf/icse/CalikliABHA18,
	author = {G{\"{u}}l {\c{C}}alikli and Mohammed Al{-}Eryani and Emil Baldebo and Jennifer Horkoff and Alexander Ask},
	biburl = {https://dblp.org/rec/conf/icse/CalikliABHA18.bib},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {44--50},
	publisher = {ACM},
	title = {Effects of automated competency evaluation on software engineers' emotions and motivation: a case study},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3194932.3194939}}

@inproceedings{DBLP:conf/icse/GirardiNFL20,
	author = {Daniela Girardi and Nicole Novielli and Davide Fucci and Filippo Lanubile},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:31:21 +0100},
	doi = {10.1145/3377811.3380374},
	pages = {666--677},
	publisher = {ACM},
	title = {Recognizing developers' emotions while programming},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3377811.3380374}}

@inproceedings{DBLP:conf/msr/CalefatoLMN15,
	author = {Fabio Calefato and Filippo Lanubile and Maria Concetta Marasciulo and Nicole Novielli},
	biburl = {https://dblp.org/rec/conf/msr/CalefatoLMN15.bib},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {430--433},
	publisher = {IEEE},
	title = {Mining Successful Answers in {Stack Overflow}},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2015.56}}

@inproceedings{DBLP:conf/msr/NovielliCDGL20,
	author = {Nicole Novielli and Fabio Calefato and Davide Dongiovanni and Daniela Girardi and Filippo Lanubile},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:30:30 +0100},
	doi = {10.1145/3379597.3387446},
	pages = {158--168},
	publisher = {ACM},
	title = {Can We Use {SE}-specific Sentiment Analysis Tools in a Cross-Platform Setting?},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387446}}

@inproceedings{DBLP:conf/msr/NovielliGL08,
	author = {Nicole Novielli and Daniela Girardi and Filippo Lanubile},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:21:36 +0100},
	doi = {10.1145/3196398.3196403},
	pages = {364--375},
	publisher = {ACM},
	title = {A benchmark study on sentiment analysis for software engineering research},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3196398.3196403}}

@inproceedings{DBLP:conf/re/HerrmannK21,
	author = {Marc Herrmann and Jil Kl{\"{u}}nder},
	booktitle = {International Requirements Engineering Conference Workshops ({RE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:17:26 +0100},
	doi = {10.1109/REW53955.2021.00065},
	pages = {371--376},
	publisher = {IEEE},
	title = {From Textual to Verbal Communication: Towards Applying Sentiment Analysis to a Software Project Meeting},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/REW53955.2021.00065}}

@inproceedings{DBLP:conf/sigsoft/NovielliCL14,
	author = {Nicole Novielli and Fabio Calefato and Filippo Lanubile},
	biburl = {https://dblp.org/rec/conf/sigsoft/NovielliCL14.bib},
	booktitle = {International Workshop on Social Software Engineering ({SSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {33--36},
	publisher = {ACM},
	title = {Towards discovering the role of emotions in {Stack Overflow}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2661685.2661689}}

@article{DBLP:journals/ese/JongelingSDS17,
	author = {Robbert Jongeling and Proshanta Sarkar and Subhajit Datta and Alexander Serebrenik},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/JongelingSDS17.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-04 18:55:12 +0100},
	journal = {Empirical Software Engineering},
	number = {5},
	pages = {2543--2584},
	timestamp = {Thu, 14 Oct 2021 09:31:56 +0200},
	title = {On negative results when using sentiment analysis tools for software engineering research},
	volume = {22},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-016-9493-x}}

@article{DBLP:journals/ese/NovielliCLS21,
	author = {Nicole Novielli and Fabio Calefato and Filippo Lanubile and Alexander Serebrenik},
	biburl = {https://dblp.org/rec/journals/ese/NovielliCLS21.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-04 18:56:33 +0100},
	journal = {Empirical Software Engineering},
	number = {4},
	pages = {77},
	title = {Assessment of off-the-shelf {SE}-specific sentiment analysis tools: An extended replication study},
	volume = {26},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-09960-w}}

@article{DBLP:journals/infsof/CalefatoLN18,
	author = {Fabio Calefato and Filippo Lanubile and Nicole Novielli},
	biburl = {https://dblp.org/rec/journals/infsof/CalefatoLN18.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Inf. Softw. Technol.},
	pages = {186--207},
	title = {How to ask for technical help? Evidence-based guidelines for writing questions on {Stack Overflow}},
	volume = {94},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.infsof.2017.10.009}}

@article{DBLP:journals/jss/SchneiderKKHSK18,
	author = {Kurt Schneider and Jil Kl{\"{u}}nder and Fabian Kortum and Lisa Handke and Julia Straube and Simone Kauffeld},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/jss/SchneiderKKHSK18.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Syst. Softw.},
	pages = {59--70},
	timestamp = {Thu, 14 Oct 2021 09:22:40 +0200},
	title = {Positive affect through interactions in meetings: The role of proactive and supportive statements},
	volume = {143},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2018.05.001}}

@article{Diefendorff2003-fk,
	abstract = {Central to all theories of emotional labor is the idea that
                   individuals follow emotional display rules that specify the
                   appropriate expression of emotions on the job. This investigation
                   examined antecedents and consequences of emotional display rule
                   perceptions. Full-time working adults (N = 152) from a variety of
                   occupations provided self-report data, and supervisors and
                   coworkers completed measures pertaining to the focal employees.
                   Results using structural equation modeling revealed that
                   job-based interpersonal requirements, supervisor display rule
                   perceptions, and employee extraversion and neuroticism were
                   predictive of employee display rule perceptions. Employee display
                   rule perceptions, in turn, were related to self-reported job
                   satisfaction and coworker ratings of employees' emotional
                   displays on the job. Finally, neuroticism had direct negative
                   relationships with job satisfaction and coworker ratings of
                   employees' emotional displays.},
	address = {United States},
	author = {Diefendorff, James M. and Richard, Erin M.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {J Appl Psychol},
	language = {en},
	month = apr,
	number = 2,
	pages = {284--294},
	title = {Antecedents and consequences of emotional display rule perceptions},
	volume = 88,
	year = 2003}

@article{DiefendorffGreguras,
	abstract = {The present investigation explored how emotional display rules at work differed as a function of discrete emotions and specific work targets. Display rules for the positive emotion of happiness were most likely to involve expressing the emotion as felt or expressing it with less intensity than is felt. Display rules for the negative emotions of sadness and anger were equally likely to involve showing nothing of the emotion or showing the emotion with less intensity than is felt. In contrast, display rules for fear, disgust, and contempt were most likely to involve showing nothing of the emotions. Furthermore, display rules differed across organizational targets, with the most control over emotional displays occurring for customer targets and the least control occurring for coworker targets. In sum, emotional display rules at work appear to be much more complex and nuanced than has been shown in previous organizational research. (PsycINFO Database Record (c) 2016 APA, all rights reserved)},
	address = {US},
	author = {Diefendorff, James M. and Greguras, Gary J.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of Management},
	keywords = {*Attitudes; *Emotional Responses; *Organizations; Working Conditions},
	pages = {880--898},
	publisher = {Sage Publications},
	title = {Contextualizing emotional display rules: Examining the roles of targets and discrete emotions in shaping display rule perceptions.},
	volume = {35},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1177/0149206308321548}}

@inproceedings{EbertEtAl_confusion,
	author = {Ebert, Felipe and Castor, Fernando and Novielli, Nicole and Serebrenik, Alexander},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {549-553},
	publisher = {{IEEE}},
	title = {Confusion Detection in Code Reviews},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME.2017.40}}

@inproceedings{Eeshita_BERT,
	author = {Biswas, Eeshita and Karabulut, Mehmet Efruz and Pollock, Lori and Vijay-Shanker, K.},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {162-173},
	publisher = {IEEE},
	title = {Achieving Reliable Sentiment Analysis in the Software Engineering Domain using BERT},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME46990.2020.00025}}

@article{Ekman1992,
	author = {Paul Ekman},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Cognition and Emotion},
	number = {3-4},
	pages = {169-200},
	publisher = {Routledge},
	title = {An argument for basic emotions},
	volume = {6},
	year = {1992},
	bdsk-url-1 = {https://doi.org/10.1080/02699939208411068}}

@article{Ekman1993,
	abstract = {Cross-cultural research on facial expression and the developments of methods to measure facial expression are briefly summarized. What has been learned about emotion from this work on the face is then elucidated. Four questions about facial expression and emotion are discussed: What information does an expression typically convey? Can there be emotion without facial expression? Can there be a facial expression of emotion without emotion? How do individuals differ in their facial expressions of emotion? (PsycINFO Database Record (c) 2016 APA, all rights reserved)},
	address = {US},
	author = {Ekman, Paul},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {American Psychologist},
	keywords = {*Cross Cultural Differences; *Emotions; Facial Expressions},
	pages = {384-392},
	publisher = {American Psychological Association},
	title = {Facial expression and emotion},
	volume = {48},
	year = {1993},
	bdsk-url-1 = {https://doi.org/10.1037/0003-066X.48.4.384}}

@incollection{Ekman1999,
	author = {Paul Ekman},
	booktitle = {Handbook of Cognition and Emotion},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	editor = {Tim Dalgleish and M. J. Powers},
	pages = {45--60},
	publisher = {Wiley},
	title = {Basic Emotions},
	year = {1999}}

@article{Fehr1984ConceptOE,
	author = {Beverley Fehr and James A. Russell},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {Journal of Experimental Psychology: General},
	pages = {464--486},
	title = {Concept of Emotion Viewed From a Prototype Perspective},
	volume = {113},
	year = {1984}}

@inproceedings{FontaoESD17,
	author = {Awdren de Lima Font{\~{a}}o and Oswald Mesumbe Ekwoge and Rodrigo Pereira dos Santos and Arilo Claudio Dias{-}Neto},
	biburl = {https://dblp.org/rec/conf/icsr/FontaoESD17.bib},
	booktitle = {Workshop on Social, Human, and Economic Aspects of Software ({WASHES})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {5--11},
	publisher = {ACM},
	title = {Facing up the primary emotions in Mobile Software Ecosystems from Developer Experience},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1145/3098322.3098325}}

@inbook{FrijdaPsy,
	author = {Frijda, Nico H.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 16:01:09 +0100},
	edition = {3rd},
	isbn = {1-59385-650-4 (Hardcover); 978-1-59385-650-2 (Hardcover)},
	pages = {68-87},
	publisher = {The Guilford Press},
	series = {Handbook of emotions},
	title = {The Psychologists' Point of View.},
	year = {2008}}

@article{GaoEtAl,
	author = {Gao, Cuiyun and Zeng, Jichuan and Wen, Zhiyuan and Lo, David and Xia, Xin and King, Irwin and Lyu, Michael R.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:30:38 +0100},
	journal = {Transactions on Software Engineering},
	number = {8},
	pages = {3025-3043},
	publisher = {IEEE},
	title = {Emerging App Issue Identification via Online Joint Sentiment-Topic Tracing},
	volume = {48},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2021.3076179}}

@inproceedings{Garcia:2013,
	author = {Garcia, D. and Zanetti, M. S. and Schweitzer, F.},
	booktitle = {International Conference on Cloud and Green Computing},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	month = {Sept},
	pages = {410--417},
	title = {The Role of Emotions in Contributors Activity: A Case Study on the {G}entoo Community},
	year = {2013}}

@inproceedings{GHThung,
	author = {Thung, Ferdian and Bissyand{\'e}, Tegawend{\'e} F. and Lo, David and Jiang, Lingxiao},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {323--326},
	title = {Network Structure of Social Coding in GitHub},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/CSMR.2013.41}}

@article{GirardiEtAl,
	author = {Girardi, Daniela and Lanubile, Filippo and Novielli, Nicole and Serebrenik, Alexander},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-18 18:30:49 +0100},
	doi = {10.1109/TSE.2021.3087906},
	journal = {Transactions on Software Engineering},
	pages = {1-53},
	publisher = {IEEE},
	title = {Emotions and Perceived Productivity of Software Developers at the Workplace},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2021.3087906}}

@article{GraziotinEtAl,
	abstract = {
                   For more than thirty years, it has been claimed that a way to improve software developers' productivity and software quality is to focus on people and to provide incentives to make developers satisfied and happy. This claim has rarely been verified in software engineering research, which faces an additional challenge in comparison to more traditional engineering fields: software development is an intellectual activity and is dominated by often-neglected human factors (called human aspects in software engineering research). Among the many skills required for software development, developers must possess high analytical problem-solving skills and creativity for the software construction process. According to psychology research, affective states---emotions and moods---deeply influence the cognitive processing abilities and performance of workers, including creativity and analytical problem solving. Nonetheless, little research has investigated the correlation between the affective states, creativity, and analytical problem-solving performance of programmers. This article echoes the call to employ psychological measurements in software engineering research. We report a study with 42 participants to investigate the relationship between the affective states, creativity, and analytical problem-solving skills of software developers. The results offer support for the claim that happy developers are indeed better problem solvers in terms of their analytical abilities. The following contributions are made by this study: (1) providing a better understanding of the impact of affective states on the creativity and analytical problem-solving capacities of developers, (2) introducing and validating psychological measurements, theories, and concepts of affective states, creativity, and analytical-problem-solving skills in empirical software engineering, and (3) raising the need for studying the human factors of software engineering by employing a multidisciplinary viewpoint.
                   },
	author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2167-8359},
	journal = {PeerJ},
	keywords = {Emotion, Affective state, Software development, Analytical problem-solving, Feeling, Creativity, Mood, Human factors, Human aspects, Affect},
	month = mar,
	pages = {e289},
	title = {Happy software developers solve problems better: psychological measurements in empirical software engineering},
	volume = 2,
	year = 2014,
	bdsk-url-1 = {https://doi.org/10.7717/peerj.289}}

@article{GrossBarrett,
	abstract = {Emotion regulation has the odd distinction of being a wildly
                   popular construct whose scientific existence is in considerable
                   doubt. In this article, we discuss the confusion about whether
                   emotion generation and emotion regulation can and should be
                   distinguished from one another. We describe a continuum of
                   perspectives on emotion, and highlight how different (often
                   mutually incompatible) perspectives on emotion lead to different
                   views about whether emotion generation and emotion regulation can
                   be usefully distinguished. We argue that making differences in
                   perspective explicit serves the function of allowing researchers
                   with different theoretical commitments to collaborate
                   productively despite seemingly insurmountable differences in
                   terminology and methods.},
	author = {Gross, James J and Barrett, Lisa Feldman},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {Emot Rev},
	language = {en},
	month = jan,
	number = 1,
	pages = {8--16},
	title = {Emotion Generation and Emotion Regulation: One or Two Depends on Your Point of View},
	volume = 3,
	year = 2011}

@inproceedings{Guzman:2014:SAC:2597073.2597118,
	author = {Guzman, Emitza and Az\'{o}car, David and Li, Yang},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-12-15 18:06:12 +0100},
	isbn = {978-1-4503-2863-0},
	keywords = {Human Factors in Software Engineering, Sentiment Analysis},
	location = {Hyderabad, India},
	pages = {352--355},
	publisher = {ACM},
	title = {Sentiment Analysis of Commit Comments in {GitHub}: An Empirical Study},
	year = {2014}}

@article{Hall2005,
	abstract = {The vertical dimension of interpersonal relations (relating to
                   dominance, power, and status) was examined in association with
                   nonverbal behaviors that included facial behavior, gaze,
                   interpersonal distance, body movement, touch, vocal behaviors,
                   posed encoding skill, and others. Results were separately
                   summarized for people's beliefs (perceptions) about the relation
                   of verticality to nonverbal behavior and for actual relations
                   between verticality and nonverbal behavior. Beliefs/perceptions
                   were stronger and much more prevalent than were actual
                   verticality effects. Perceived and actual relations were
                   positively correlated across behaviors. Heterogeneity was great,
                   suggesting that verticality is not a psychologically uniform
                   construct in regard to nonverbal behavior. Finally, comparison of
                   the verticality effects to those that have been documented for
                   gender in relation to nonverbal behavior revealed only a limited
                   degree of parallelism.},
	author = {Hall, Judith A and Coats, Erik J and LeBeau, Lavonia Smith},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-11-29 15:41:10 +0100},
	journal = {Psychological Bulletin},
	month = nov,
	number = 6,
	pages = {898--924},
	title = {Nonverbal behavior and the vertical dimension of social relations: a meta-analysis},
	volume = 131,
	year = 2005}

@book{Hochshild1983,
	author = {Hochshild, Arlie Russel},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-16 16:37:15 +0200},
	edition = 1,
	publisher = {University of California Press},
	title = {The Managed Heart: Commercialization of Human Feeling},
	year = 1983}

@book{HoganEtAl,
	address = {London},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	editor = {Hogan, Patrick Colm and Irish, Bradley J. and Hogan, Lalita Pandit},
	isbn = {9780367809843},
	pages = {514},
	publisher = {Routledge},
	title = {The Routledge Companion to Literature and Emotion},
	year = {2022}}

@incollection{HwangMatsumoto,
	abstract = {Emotions are important to much research in consumer science. Consequently, finding valid and reliable ways of measuring emotions is crucial. This chapter focuses on how to understand and approach measuring emotions through an unobtrusive, objective methodology: assessing facial expressions of emotion. We discuss both direct and indirect approaches to measuring facial expressions. As a direct method of measuring facial expressions, our approach is based on theoretical, empirical, anatomical, and physiological aspects of facial expressions of emotion. As an indirect method, this chapter discusses observer judgments of produced facial expressions. It is critical for researchers to be aware of the pros, cons, caveats, and limitations of each method, indicating that the method of how to measure and understand facial expressions should be determined depending on the research purpose.},
	author = {Hyisung C. Hwang and David Matsumoto},
	booktitle = {Emotion Measurement},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Herbert L. Meiselman},
	isbn = {978-0-08-100508-8},
	keywords = {Facial expression, emotion, facial anatomy, facial measurement, universality, facial electromyography, nonverbal communication, judgment of emotion},
	pages = {125--144},
	publisher = {Woodhead Publishing},
	title = {Measuring Emotions in the Face},
	year = {2016},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/B9780081005088000060},
	bdsk-url-2 = {https://doi.org/10.1016/B978-0-08-100508-8.00006-0}}

@inproceedings{IacobEtAl,
	author = {Claudia Iacob and Shamal Faily and Rachel Harrison},
	biburl = {https://dblp.org/rec/conf/mobicase/IacobFH16.bib},
	booktitle = {International Conference on Mobile Computing, Applications and Services ({MobiCASE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {42--50},
	publisher = {{ACM} / {ICST}},
	title = {{MARAM:} Tool Support for Mobile App Review Management},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.4108/eai.30-11-2016.2266941}}

@incollection{JacobDazarolaEtAl,
	abstract = {This chapter discusses the subject of emotion measurement from a behavioural perspective. It analyses the external manifestations of those who experience a particular emotion, for example, facial gestures, body postures and voice tone and pitch. Particular behaviour manifestations are expressed based on specific emotions. Observers can identify the behaviour that accompanies the emotional experience and react accordingly.The chapter starts with a brief introduction of the behavioural aspects that are relevant to study emotions i.e. facial gestures, body postures and vocal expressions. Then an in-depth analysis of measurement methods that focus on behavioural aspects is carried out. The state of the art considers unimodal behaviour reactions and it concludes with multimodal approaches. The last section of the chapter discusses how the behavioural measurement of emotions can help designers develop new products with high emotional impact on people.},
	author = {Rub{\'e}n Jacob-Dazarola and Juan Carlos {Ort{\'\i}z Nicol{\'a}s} and Lina {C{\'a}rdenas Bayona}},
	booktitle = {Emotion Measurement},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Herbert L. Meiselman},
	isbn = {978-0-08-100508-8},
	keywords = {Behaviour, behavioural measures, emotion measurement, behavioural measurement methods},
	pages = {101--124},
	publisher = {Woodhead Publishing},
	title = {Behavioral Measures of Emotion},
	year = {2016},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/B9780081005088000059},
	bdsk-url-2 = {https://doi.org/10.1016/B978-0-08-100508-8.00005-9}}

@inproceedings{Jansen2009-ICSE,
	abstract = {Software vendors lack the perspective to develop software within a software ecosystem. The inability to function in a software ecosystem has already led to the demise of many software vendors, leading to loss of competition, intellectual property, and eventually jobs in the software industry. In this paper we present a research agenda on software ecosystems to study both the technical and the business aspects of software engineering in vibrant ecosystems. The results of such research enable software vendors to develop software that is adaptable to new business models and new markets, and to make strategic choices that help a software vendor to thrive in a software ecosystem.},
	author = {Jansen, S. and Finkelstein, A. and Brinkkemper, S.},
	booktitle = {International Conference on Software Engineering},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	keywords = {DP industry;intellectual property;software ecosystems;software industry;software vendors;Books;Computer industry;Ecosystems;Educational institutions;Intellectual property;Knowledge management;Portfolios;Software engineering;Software standards;Standards development},
	month = {May},
	pages = {187-190},
	title = {A sense of community: A research agenda for software ecosystems},
	year = 2009,
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-COMPANION.2009.5070978}}

@book{JuslinSloboda,
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 16:04:54 +0100},
	editor = {Juslin, Patrik N. and Sloboda, John A.},
	isbn = {0-19-923014-5 (Hardcover); 978-0-19-923014-3 (Hardcover)},
	keywords = {*Emotions; *History; *Music; Human Development; Measurement; Personality; Psychosocial Factors},
	pages = {xiv, 975-xiv, 975},
	publisher = {Oxford University Press},
	series = {Series in affective science},
	title = {Handbook of music and emotion: Theory, research, applications},
	year = {2010}}

@inproceedings{Kaur2018,
	author = {Kaur, Arvinder and Singh, Amrit Pal and Dhillon, Guneet Singh and Bisht, Divesh},
	booktitle = {Second International Conference on Electronics, Communication and Aerospace Technology},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1170-1173},
	title = {Emotion Mining and Sentiment Analysis in Software Engineering Domain},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/ICECA.2018.8474619}}

@book{Kemper,
	address = {New York},
	author = {Kemper, Theodore D.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	publisher = {Wiley},
	title = {A social interactional theory of emotions},
	year = 1978}

@article{KhanSaleh,
	author = {Khan, Khaled M. and Saleh, Moutaz},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Access},
	pages = {110194-110208},
	title = {Understanding the Impact of Emotions on the Quality of Software Artifacts},
	volume = {9},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ACCESS.2021.3102663}}

@techreport{KitchenhamCharters,
	author = {Kitchenham, Barbara and Charters, Stuart},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	institution = {Keele University and Durham University Joint Report},
	number = {EBSE-2007-01},
	title = {Guidelines for performing systematic literature reviews in software engineering},
	version = {2.3},
	year = {2007}}

@incollection{LeungChan,
	author = {Leung, Cane W. K. and Chan, Stephen, C. F.},
	booktitle = {Encyclopedia of Data Warehousing and Mining},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 16:01:47 +0100},
	edition = {2},
	editor = {Wang, John},
	pages = {1794-1799},
	publisher = {IGI Global},
	series = {Information Science Reference},
	title = {Sentiment Analysis of Product Reviews},
	volume = {4},
	year = 2008}

@article{LiEtAl,
	abstract = {Mobile applications (apps) on IOS and Android devices are mostly maintained and updated via Apple Appstore and Google Play, respectively, where the users are allowed to provide reviews regarding their satisfaction towards particular apps. Despite the importance of user reviews towards mobile app maintenance and evolution, it is time-consuming and ineffective to dissect each individual negative review. In addition, due to the different app update strategies, it is uncertain that each update can be accepted well by the users. This study aims to provide an approach to detect the particular days during the mobile app maintenance phase when the negative reviews require developers&rsquo; attention. Furthermore, the method shall facilitate the mapping of the identified abnormal days towards the updates that result in such negativity in reviews. The method&rsquo;s purpose is to enable app developers to respond swiftly to significant flaws reflected by user reviews in order to prevent user churns.},
	article-number = {152},
	author = {Li, Xiaozhou and Zhang, Boyang and Zhang, Zheying and Stefanidis, Kostas},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {2078-2489},
	journal = {Information},
	number = {3},
	title = {A Sentiment-Statistical Approach for Identifying Problematic Mobile App Updates Based on User Reviews},
	volume = {11},
	year = {2020},
	bdsk-url-1 = {https://www.mdpi.com/2078-2489/11/3/152},
	bdsk-url-2 = {https://doi.org/10.3390/info11030152}}

@inproceedings{Lungu2008,
	abstract = {Reverse engineering is the process of recovering a projectpsilas components and the relationships between them with the goal of creating representations of the project at a higher level of abstraction. When dealing with the large amounts of information that are analyzed during reverse engineering visualization and exploratory navigation are important tools. However, a software system does not exist by itself. Instead, a project is part of a larger software ecosystem of projects that is developed in the context of an organization, a research group of an open-source community. In our work, we argue that reverse engineering an ecosystem is a natural and complementary extension to the traditional single system reverse engineering. We propose a methodology based on visualization, top-down exploration, architecture recovery and software evolution analysis for the reverse engineering software ecosystems. Our methodology starts with visualizing high-level structural and evolutionary aspects of the ecosystem from which the reverse engineer can navigate to views which present architectural aspects of the individual projects. To support our approach we implemented tool support for analyzing the ecosystem level as well as the intra-project level.},
	author = {Lungu, Mircea},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-26 17:18:35 +0100},
	issn = {1063-6773},
	keywords = {program visualisation;reverse engineering;software architecture;software maintenance;software prototyping;architecture recovery;open-source community;reverse engineering visualization;software ecosystem;software evolution analysis;software maintenance;software project component recovery;tool support;top-down exploration;Computer architecture;Data analysis;Ecosystems;History;Information analysis;Navigation;Open source software;Reverse engineering;Software tools;Visualization},
	pages = {428-431},
	publisher = {IEEE},
	title = {Towards reverse engineering software ecosystems},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2008.4658096}}

@article{ManikasHansen2013,
	author = {Konstantinos Manikas and Klaus Marius Hansen},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {J. Syst. Softw.},
	number = {5},
	pages = {1294--1306},
	title = {Software ecosystems: {A} systematic literature review},
	volume = {86},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2012.12.026}}

@article{Mankad,
	abstract = {Mobile apps are one of the building blocks of the mobile digital economy. A differentiating feature of mobile apps to traditional enterprise software is online reviews, which are available on app marketplaces and represent a valuable source of consumer feedback on the app. We create a supervised topic modeling approach for app developers to use mobile reviews as useful sources of quality and customer feedback, thereby complementing traditional software testing. The approach is based on a constrained matrix factorization that leverages the relationship between term frequency and a given response variable in addition to co-occurrences between terms to recover topics that are both predictive of consumer sentiment and useful for understanding the underlying textual themes. The factorization is combined with ordinal regression to provide guidance from online reviews on a single app's performance as well as systematically compare different apps over time for benchmarking of features and consumer sentiment. We apply our approach using a dataset of over 100,000 mobile reviews over several years for three of the most popular online travel agent apps from the iTunes and Google Play marketplaces.},
	author = {Shawn Mankad and Shengli Hu and Anandasivam Gopal},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {19326157, 19417330},
	journal = {The Annals of Applied Statistics},
	number = {4},
	pages = {2279--2311},
	publisher = {Institute of Mathematical Statistics},
	title = {Single Stage Prediction With Embedded Topic Modeling of Online Reviews for Mobile App Management},
	urldate = {2022-09-05},
	volume = {12},
	year = {2018},
	bdsk-url-1 = {https://www.jstor.org/stable/26666153}}

@inproceedings{MantylaNLCK17,
	author = {Mika V. M{\"{a}}ntyl{\"{a}} and Nicole Novielli and Filippo Lanubile and Ma{\"{e}}lick Claes and Miikka Kuutila},
	biburl = {https://dblp.org/rec/conf/msr/MantylaNLCK17.bib},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {198--202},
	publisher = {IEEE},
	title = {Bootstrapping a lexicon for emotional arousal in software engineering},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2017.47}}

@book{Meiselman,
	author = {Meiselman, Herbert L.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	edition = {1},
	isbn = {0081005083; 9780081005088; 9780081005095; 0081005091},
	publisher = {Woodhead Publishing},
	title = {Emotion measurement},
	year = {2016}}

@inproceedings{MF15,
	author = {Sebastian C. {M{\"u}ller} and Thomas {Fritz}},
	booktitle = {International Conference on Software Engineering},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	pages = {688-699},
	title = {Stuck and Frustrated or in Flow and Happy: Sensing Developers' Emotions and Progress},
	year = {2015}}

@inbook{Mitleton-Kelly2003,
	author = {Mitleton-Kelly, E.},
	booktitle = {Complex Systems and Evolutionary Perspectives on Organizations: The Application of Complexity Theory to Organizations},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:34:20 +0200},
	pages = {23--50},
	publisher = {Pergamon},
	title = {Ten Principles of Complexity and Enabling Infrastructures},
	year = 2003}

@incollection{Mohammad2016,
	abstract = {Sentiment analysis is the task of automatically determining from text the attitude, emotion, or some other affectual state of the author. This chapter summarizes the diverse landscape of tasks and applications associated with sentiment analysis. We outline key challenges stemming from the complexity and subtlety of language use, the prevalence of creative and non-standard language, and the lack of paralinguistic information, such as tone and stress markers. We describe automatic systems and datasets commonly used in sentiment analysis. We summarize several manual and automatic approaches to creating valence- and emotion-association lexicons. We also discuss preliminary approaches for sentiment composition (how smaller units of text combine to express sentiment) and approaches for detecting sentiment in figurative and metaphoric language---these are the areas where we expect to see significant work in the near future.},
	author = {Saif M. Mohammad},
	booktitle = {Emotion Measurement},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Herbert L. Meiselman},
	isbn = {978-0-08-100508-8},
	keywords = {Sentiment analysis, emotion detection, subjectivity, stance detection, sentiment lexicons, machine learning, natural language processing},
	pages = {201--237},
	publisher = {Woodhead Publishing},
	title = {Sentiment Analysis: Detecting Valence, Emotions, and Other Affectual States from Text},
	year = {2016},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/B9780081005088000096},
	bdsk-url-2 = {https://doi.org/10.1016/B978-0-08-100508-8.00009-6}}

@inproceedings{murgia2014developers,
	author = {Murgia, Alessandro and Tourani, Parastou and Adams, Bram and Ortu, Marco},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:12:56 +0100},
	organization = {ACM},
	pages = {262--271},
	title = {Do developers feel emotions? an exploratory analysis of emotions in software artifacts},
	year = {2014}}

@article{MurgiaOTAD18,
	author = {Alessandro Murgia and Marco Ortu and Parastou Tourani and Bram Adams and Serge Demeyer},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/ese/MurgiaOTAD18.bib},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {521--564},
	timestamp = {Sat, 09 Apr 2022 12:30:25 +0200},
	title = {An exploratory qualitative and quantitative analysis of emotions in issue report comments of open source systems},
	volume = {23},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-017-9526-0}}

@book{NiedenthalRic,
	address = {New York},
	author = {Niedenthal, Paula M. and Ric, Fran{\c c}ois},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	publisher = {Psychology Press},
	title = {Psychology of Emotion},
	year = 2017}

@article{Nizamani2018,
	abstract = {Software applications often receive a large number of enhancement requests that suggest developers to fulfill additional functions. Such requests are usually checked manually by the developers, which is time consuming and tedious. Consequently, an approach that can automatically predict whether a new enhancement report will be approved is beneficial for both the developers and enhancement suggesters. With the approach, according to their available time, the developers can rank the reports and thus limit the number of reports to evaluate from large collection of low quality enhancement requests that are unlikely to be approved. The approach can help developers respond to the useful requests more quickly. To this end, we propose a multinomial naive Bayes based approach to automatically predict whether a new enhancement report is likely to be approved or rejected. We acquire the enhancement reports of open-source software applications from Bugzilla for evaluation. Each report is preprocessed and modeled as a vector. Using these vectors with their corresponding approval status, we train a Bayes based classifier. The trained classifier predicts approval or rejection of the new enhancement reports. We apply different machine learning and neural network algorithms, and it turns out that the multinomial naive Bayes classifier yields the highest accuracy with the given dataset. The proposed approach is evaluated with 40,000 enhancement reports from 35 open source applications. The results of tenfold cross validation suggest that the average accuracy is up to 89.25{\%}.},
	author = {Nizamani, Zeeshan Ahmed and Liu, Hui and Chen, David Matthew and Niu, Zhendong},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	day = {01},
	issn = {1573-7535},
	journal = {Automated Software Engineering},
	month = {Jun},
	number = {2},
	pages = {347-381},
	title = {Automatic approval prediction for software enhancement requests},
	volume = {25},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1007/s10515-017-0229-y}}

@incollection{NormanEtAl,
	abstract = {The link between affective states and psychophysiological activity has been central to the study of behavior for well over a century. With his publication of The expression of the emotions in man and animals, Charles Darwin (1872) provided a foundation for over 140 years of research into the nature of emotions and their physiological and behavioral manifestations. Darwin suggested the existence of distinct kinds of emotional expressions, both somatic and visceral, that were relatively well conserved across phylogeny, and gradually evolved as a result of their adaptive function. A decade later, William James (1884) first articulated his highly influential theory of emotion where he suggested the subjective experience of certain emotions was the result of particular changes in somatovisceral and behavioral responses. Walter Cannon (1927) provided an early challenge to the Jamesian explanation of emotions as a manifestation of specific patterns of somatovisceral activity. Cannon argued physiological responses were the consequence, not the cause, of emotional processes, and that physiological responses were too undifferentiated to account for the variety of distinct emotional feeling states. Cannon's views were subsequently strengthened when early research failed to demonstrate replicable and generalizable emotion-specific patterns of physiological activity (Harlow & Stagner, 1932). Subsequent work conducted by Schachter and Singer (1962) also appeared to provide strong evidence that the same pattern of physiological activity (arising from epinephrine administration) could result in the experience of different emotions depending on situational cues, which at the time, lent further evidence to the view that emotions were not caused by specific patterns of activity in peripheral physiological systems (although this perspective has now been thoroughly criticized on a number of grounds, see Friedman, 2010). The consensus view of the relationship between emotion and psychophysiological activity was again challenged with the publication of a seminal paper by Ekman, Levenson, and Friesen (1983) where they attributed much of the previous inconsistency between emotions and physiological functioning to a variety of methodological limitations, such as failure to equate the intensity of different emotions and lack of appropriate synchronization between physiological recordings with the likely onset and offset of the elicited emotion. In their study, Ekman et al. measured heart rate, finger temperature, skin resistance, and forearm flexor muscle tension as participants completed two sets of tasks designed to elicit anger, fear, sadness, happiness, surprise, and disgust. In one task, participants were asked to remember and relive past emotional episodes. Participants also completed a directed facial action task in which they were asked to contract sets of muscles to produce facial expressions associated with each emotion. The authors found that in addition to differentiating positive from negative emotions, combinations of physiological measures could differentiate some negative emotions (eg, fear) from others (eg, anger). Subsequent work suggested that the degree of emotion-specific physiological activity was context-dependent such that the specificity was greatest in real-world emotion induction procedures (Stemmler, 1989), and that different emotion induction procedures appear to elicit different patterns of physiological activity (Zajonc & McIntosh, 1992). Such findings led to a series of meta-analyses conducted by Cacioppo, Gardner, and Berntson (1997) and Cacioppo, Berntson, Larsen, Poehlmann, and Ito (2000) on all published studies comparing the effects of at least two discrete emotions on at least two measures of autonomic nervous system (ANS) functioning. Although the results were mixed, these analyses found some evidence of emotion-specific ANS responses. Similarly, a recent systematic review (Stephens, 2010) on the topic of emotion-specific patterns of autonomic functioning found some evidence that different emotions were associated with various patterns of ANS response. While the review found that there were some differences in ANS correlates across emotions, it also found that no basic emotion was entirely unique across the ANS measurements. Subsequent studies have employed multivariate approaches and reported some success in finding emotion-specific patterns of ANS function. For example, Stephens, Christie, and Friedman (2010) had participants view emotion-inducing music and affective films, while recording various ANS measures. Pattern classification analysis found that ANS variables were able to correctly classify predicted emotions at a rate of 44.6\%. Using a comparable approach, Kragel and Labar (2013) found that autonomic measures predicted distinct affective states at a rate of 58.0\%. While such findings are a clear improvement over previous univariate approaches, they are far from demonstrating discrete emotion-specific patterns of ANS responses.},
	author = {Greg J. Norman and Elizabeth Necka and Gary G. Berntson},
	booktitle = {Emotion Measurement},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	editor = {Herbert L. Meiselman},
	isbn = {978-0-08-100508-8},
	keywords = {ANS, emotion, interoception, psychophysiology},
	pages = {83--98},
	publisher = {Woodhead Publishing},
	title = {The Psychophysiology of Emotions},
	year = {2016},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/B9780081005088000047},
	bdsk-url-2 = {https://doi.org/10.1016/B978-0-08-100508-8.00004-7}}

@article{Novielli_IEEE,
	author = {Novielli, Nicole and Calefato, Fabio and Lanubile, Filippo},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {IEEE Software},
	number = {3},
	pages = {86-91},
	title = {Love, Joy, Anger, Sadness, Fear, and Surprise: {SE} Needs Special Kinds of {AI}: A Case Study on Text Mining and {SE}},
	volume = {37},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2020.2968557}}

@inproceedings{NovielliCL15,
	abstract = {A recent research trend has emerged to study the role of affect in in the social programmer ecosystem, by applying sentiment analysis to the content available in sites such as GitHub and Stack Overflow. In this paper, we aim at assessing the suitability of a state-of-the-art sentiment analysis tool, already applied in social computing, for detecting affective expressions in Stack Overflow. We also aim at verifying the construct validity of choosing sentiment polarity and strength as an appropriate way to operationalize affective states in empirical studies on Stack Overflow. Finally, we underline the need to overcome the limitations induced by domain-dependent use of lexicon that may produce unreliable results.},
	author = {Nicole Novielli and Fabio Calefato and Filippo Lanubile},
	biburl = {https://dblp.org/rec/conf/sigsoft/NovielliCL15.bib},
	booktitle = {International Workshop on Social Software Engineering ({SSE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {33--40},
	publisher = {ACM},
	title = {The challenges of sentiment detection in the social programmer ecosystem},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2804381.2804387}}

@article{Nugroho2021,
	abstract = {Although many software development projects have moved their developer discussion forums to generic platforms such as Stack Overflow, Eclipse has been steadfast in hosting their self-supported community forums. While recent studies show forums share similarities to generic communication channels, it is unknown how project-specific forums are utilized. In this paper, we analyze 832,058 forum threads and their linkages to four systems with 2,170 connected contributors to understand the participation, content and sentiment. Results show that Seniors are the most active participants to respond bug and non-bug-related threads in the forums (i.e., 66.1{\%} and 45.5{\%}), and sentiment among developers are inconsistent while knowledge sharing within Eclipse. We recommend the users to identify appropriate topics and ask in a positive procedural way when joining forums. For developers, preparing project-specific forums could be an option to bridge the communication between members. Irrespective of the popularity of Stack Overflow, we argue the benefits of using project-specific forum initiatives, such as GitHub Discussions, are needed to cultivate a community and its ecosystem.},
	author = {Nugroho, Yusuf Sulistyo and Islam, Syful and Nakasai, Keitaro and Rehman, Ifraz and Hata, Hideaki and Kula, Raula Gaikovina and Nagappan, Meiyappan and Matsumoto, Kenichi},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	day = {29},
	issn = {1573-7616},
	journal = {Empirical Software Engineering},
	month = {Sep},
	number = {6},
	pages = {132},
	title = {How are project-specific forums utilized? A study of participation, content, and sentiment in the Eclipse ecosystem},
	volume = {26},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10032-2}}

@article{ObaidiEtAl,
	abstract = {Context:
                   Software development is a collaborative task. Previous research has shown social aspects within development teams to be highly relevant for the success of software projects. A team's mood has been proven to be particularly important. It is paramount for project managers to be aware of negative moods within their teams, as such awareness enables them to intervene. Sentiment analysis tools offer a way to determine the mood of a team based on textual communication.
                   Objective:
                   We aim to help developers or stakeholders in their choice of sentiment analysis tools for their specific purpose. Therefore, we conducted a systematic mapping study (SMS).
                   Methods:
                   We present the results of our SMS of sentiment analysis tools developed for or applied in the context of software engineering (SE). Our results summarize insights from 106 papers with respect to (1) the application domain, (2) the purpose, (3) the used data sets, (4) the approaches for developing sentiment analysis tools, (5) the usage of already existing tools, and (6) the difficulties researchers face. We analyzed in more detail which tools and approaches perform how in terms of their performance.
                   Results:
                   According to our results, sentiment analysis is frequently applied to open-source software projects, and most approaches are neural networks or support-vector machines. The best performing approach in our analysis is neural networks and the best tool is BERT. Despite the frequent use of sentiment analysis in SE, there are open issues, e.g. regarding the identification of irony or sarcasm, pointing to future research directions.
                   Conclusion:
                   We conducted an SMS to gain an overview of the current state of sentiment analysis in order to help developers or stakeholders in this matter. Our results include interesting findings e.g. on the used tools and their difficulties. We present several suggestions on how to solve these identified problems.},
	author = {Martin Obaidi and Lukas Nagel and Alexander Specht and Jil Kl{\"u}nder},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Social software engineering, Sentiment analysis, Machine learning, Systematic mapping study},
	pages = {107018},
	title = {Sentiment analysis tools in software engineering: A systematic mapping study},
	volume = {151},
	year = {2022},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0950584922001422},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2022.107018}}

@inproceedings{ObaidiKluender,
	abstract = {Software development is a collaborative task and, hence, involves different persons. Research has shown the relevance of social aspects in the development team for a successful and satisfying project closure. Especially the mood of a team has been proven to be of particular importance. Thus, project managers or project leaders want to be aware of situations in which negative mood is present to allow for interventions. So-called sentiment analysis tools offer a way to determine the mood based on text-based communication. In this paper, we present the results of a systematic literature review of sentiment analysis tools developed for or applied in the context of software engineering. Our results summarize insights from 80 papers with respect to (1) the application domain, (2) the purpose, (3) the used data sets, (4) the approaches for developing sentiment analysis tools and (5) the difficulties researchers face when applying sentiment analysis in the context of software projects. According to our results, sentiment analysis is frequently applied to open-source software projects, and most tools are based on support-vector machines. Despite the frequent use of sentiment analysis in software engineering, there are open issues, e.g., regarding the identification of irony or sarcasm, pointing to future research directions.},
	author = {Obaidi, Martin and Kl\"{u}nder, Jil},
	booktitle = {Evaluation and Assessment in Software Engineering ({EASE})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450390538},
	keywords = {Systematic Literature Review, Social Software Engineering, Sentiment Analysis, Machine Learning},
	pages = {80---89},
	publisher = {ACM},
	title = {Development and Application of Sentiment Analysis Tools in Software Engineering: A Systematic Literature Review},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3463274.3463328}}

@book{parrott2001emotions,
	author = {Parrott, W Gerrod},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	publisher = {Psychology Press},
	title = {Emotions in social psychology: Essential readings},
	year = {2001}}

@book{Plamper,
	address = {Oxford},
	author = {Plamper, Jan},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	publisher = {Oxford University Press},
	title = {The History of Emotions},
	year = 2012}

@article{Plutchik1958,
	address = {United States},
	author = {Plutchik, Robert},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {Transactions of the New York Academy Sciences},
	keywords = {EMOTIONS},
	language = {en},
	month = mar,
	number = 5,
	pages = {394--403},
	title = {Outlines of a new theory of emotion},
	volume = 20,
	year = 1958}

@techreport{powell1982planning,
	author = {Powell, Patricia B},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:42:01 +0200},
	institution = {US Department of Commerce, National Bureau of Standards},
	number = {98},
	title = {Planning for software validation, verification, and testing},
	volume = {500},
	year = {1982}}

@inproceedings{RanjanMishra,
	author = {Ranjan, Sakshi and Mishra, Subhankar},
	booktitle = {2020 11th International Conference on Computing, Communication and Networking Technologies (ICCCNT)},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {1-7},
	title = {Comparative Sentiment Analysis of App Reviews},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ICCCNT49239.2020.9225348}}

@article{RekanarEtAl,
	abstract = {Digital Contact Tracing is seen as a key tool in reducing the propagation of Covid-19. But it requires high uptake and continued participation across the population to be effective. To achieve sufficient uptake/participation, health authorities should address, and thus be aware of, user concerns.},
	author = {Rekanar, Kaavya and O'Keeffe, Ian R. and Buckley, Sarah and Abbas, Manzar and Beecham, Sarah and Chochlov, Muslim and Fitzgerald, Brian and Glynn, Liam and Johnson, Kevin and Laffey, John and McNicholas, Bairbre and Nuseibeh, Bashar and O'Connell, James and O'Keeffe, Derek and O'Callaghan, Mike and Razzaq, Abdul and Richardson, Ita and Simpkin, Andrew and Storni, Cristiano and Tsvyatkova, Damyanka and Walsh, Jane and Welsh, Thomas and Buckley, Jim},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1863-4362},
	journal = {Irish Journal of Medical Science},
	month = {Feb},
	number = {1},
	pages = {103--112},
	title = {Sentiment analysis of user feedback on the {HSE}'s {Covid-19} contact tracing app},
	volume = {191},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s11845-021-02529-y}}

@inproceedings{RigbyHassan,
	abstract = {Developer mailing lists are a rich source of information about Open Source Software (OSS) development. The unstructured nature of email makes extracting information difficult. We use a psychometrically-based linguistic analysis tool, the LIWC, to examine the Apache httpd server developer mailing list. We conduct three preliminary experiments to assess the appropriateness of this tool for information extraction from mailing lists. First, using LIWC dimensions that are correlated with the big five personality traits, we assess the personality of four top developers against a baseline for the entire mailing list. The two developers that were responsible for the major Apache releases had similar personalities. Their personalities were different from the baseline and the other developers. Second, the first and last 50 emails for two top developers who have left the project are examined. The analysis shows promise in understanding why developers join and leave a project. Third, we examine word usage on the mailing list for two major Apache releases. The differences may reflect the relative success of each release.},
	author = {Rigby, Peter C. and Hassan, Ahmed E.},
	booktitle = {International Workshop on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {23-23},
	title = {What Can {OSS} Mailing Lists Tell Us? A Preliminary Psychometric Text Analysis of the {Apache} Developer Mailing List},
	year = {2007},
	bdsk-url-1 = {https://doi.org/10.1109/MSR.2007.35}}

@article{Russell1991,
	abstract = {Some writers assume--and others deny--that all human beings
                   distinguish emotions from nonemotions and divide the emotions
                   into happiness, anger, fear, and so on. A review of ethnographic
                   and cross-cultural studies on (a) emotion lexicons, (b) the
                   emotions inferred from facial expressions, and (c) dimensions
                   implicit in comparative judgments of emotions indicated both
                   similarities and differences in how the emotions are categorized
                   in different languages and cultures. Five hypotheses are
                   reviewed: (a) Basic categories of emotion are pancultural,
                   subordinate categories culture specific; (b) emotional focal
                   points are pancultural, boundaries culture specific; (c) emotion
                   categories evolved from a single primitive category of
                   physiological arousal; (d) most emotion categories are culture
                   specific but can be defined by pancultural semantic primitives;
                   and (e) an emotion category is a script with both
                   culture-specific and pancultural components.},
	address = {United States},
	author = {Russell, J.A.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-12-15 18:08:47 +0100},
	journal = {Psychological Bulletin},
	month = nov,
	number = 3,
	pages = {426--450},
	title = {Culture and the categorization of emotions},
	volume = 110,
	year = 1991}

@article{SanchezGordon,
	abstract = {Context
                   Over the past 50 years of Software Engineering, numerous studies have acknowledged the importance of human factors. However, software developers' emotions are still an area under investigation and debate that is gaining relevance in the software industry.
                   Objective
                   In this study, a systematic literature review (SLR) was carried out to identify, evaluate, and synthesize research published concerning software developers' emotions as well as the measures used to assess its existence.
                   Method
                   By searching five major bibliographic databases, authors identified 7172 articles related to emotions in Software Engineering. We selected 66 of these papers as primary studies. Then, they were analyzed in order to find empirical evidence of the intersection of emotions and software engineering.
                   Results
                   Studies report a total of 40 discrete emotions but the most frequent were: anger, fear, disgust, sadness, joy, love, and happiness. There are also 2 different dimensional approaches and 10 datasets related to this topic which are publicly available on the Web. The findings also showed that self-reported mood instruments (e.g., SAM, PANAS), physiological measures (e.g., heart rate, perspiration) or behavioral measures (e.g., keyboard use) are the least reported tools, although, there is a recognized intrinsic problem with the accuracy of current state of the art sentiment analysis tools. Moreover, most of the studies used software practitioners and/or datasets from industrial context as subjects.
                   Conclusions
                   The study of emotions has received a growing attention from the research community in the recent years, but the management of emotions has always been challenging in practice. Although it can be said that this field is not mature enough yet, our results provide a holistic view that will benefit researchers by providing the latest trends in this area and identifying the corresponding research gaps.},
	author = {Mary S\'anchez-Gord\'on and Ricardo Colomo-Palacios},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Systematic literature review, Social aspects of software development, Emotion, Affect, Mood, Behavioral software engineering},
	pages = {23-43},
	title = {Taking the emotional pulse of software engineering: A systematic literature review of empirical studies},
	volume = {115},
	year = {2019},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0950584919301661},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2019.08.002}}

@misc{SentiSE,
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	howpublished = {\url{https://github.com/amiangshu/SentiSE}},
	title = {SentiSE}}

@article{shaver1987emotion,
	author = {Shaver, Phillip and Schwartz, Judith and Kirson, Donald and O'connor, Cary},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {Journal of personality and social psychology},
	number = {6},
	pages = {1061--1066},
	publisher = {American Psychological Association},
	title = {Emotion knowledge: further exploration of a prototype approach},
	volume = {52},
	year = {1987}}

@inproceedings{SO1,
	author = {Nasehi, Seyed Mehdi and Sillito, Jonathan and Maurer, Frank and Burns, Chris},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {25-34},
	publisher = {IEEE},
	title = {What makes a good code example? A study of programming {Q\&A} in {StackOverflow}},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2012.6405249}}

@article{SO2,
	author = {Barua, Anton and Thomas, Stephen W. and Hassan, Ahmed E.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-12-15 18:27:34 +0100},
	journal = {Empirical Software Engineering},
	number = {3},
	pages = {619--654},
	publisher = {Springer},
	title = {What are developers talking about? An analysis of topics and trends in {Stack Overflow}},
	volume = {19},
	year = {2014}}

@inproceedings{SO3,
	abstract = {Question answering (Q&amp;A) websites are now large repositories of valuable knowledge. While most Q&amp;A sites were initially aimed at providing useful answers to the question asker, there has been a marked shift towards question answering as a community-driven knowledge creation process whose end product can be of enduring value to a broad audience. As part of this shift, specific expertise and deep knowledge of the subject at hand have become increasingly important, and many Q&amp;A sites employ voting and reputation mechanisms as centerpieces of their design to help users identify the trustworthiness and accuracy of the content.To better understand this shift in focus from one-off answers to a group knowledge-creation process, we consider a question together with its entire set of corresponding answers as our fundamental unit of analysis, in contrast with the focus on individual question-answer pairs that characterized previous work. Our investigation considers the dynamics of the community activity that shapes the set of answers, both how answers and voters arrive over time and how this influences the eventual outcome. For example, we observe significant assortativity in the reputations of co-answerers, relationships between reputation and answer speed, and that the probability of an answer being chosen as the best one strongly depends on temporal characteristics of answer arrivals. We then show that our understanding of such properties is naturally applicable to predicting several important quantities, including the long-term value of the question and its answers, as well as whether a question requires a better answer. Finally, we discuss the implications of these results for the design of Q&amp;A sites.},
	author = {Anderson, Ashton and Huttenlocher, Daniel and Kleinberg, Jon and Leskovec, Jure},
	booktitle = {SIGKDD International Conference on Knowledge Discovery and Data Mining ({KDD})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450314626},
	keywords = {value prediction, reputation, question-answering},
	pages = {850--858},
	publisher = {ACM},
	title = {Discovering Value from Community Activity on Focused Question Answering Sites: A Case Study of {Stack Overflow}},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1145/2339530.2339665}}

@inbook{SolomonPhilosophy,
	abstract = {In what follows, I have tried to sketch a somewhat selective history of philosophical attempts to understand emotion, followed by a brief summary of questions still central to philosophical debate. Given the nature of philosophy and its emphasis on reason, however, we would expect that the focus of most philosophical analysis has been and remains the more cognitive aspects of emotion, with the physiological and to a certain extent the social and behavioral dimensions of emotion diminished or even denied. The dialectic in philosophy, accordingly, tends to go back and forth in its rediscovery of these often neglected dimensions. Sometimes emotions are dismissed as mere feelings and physiology, utterly unintelligent, even subhuman. In reaction, emotions are then ascribed the virtues of true wisdom; they are defended as the proper masters of reason and even the very foundation of our being-in-the- world. Most philosophers, however, try to find some more moderate, multidimensional position. One might object that philosophical theories of emotion tend to be "armchair" speculation, devoid of the empirical support supplied by social scientists. However, this objection ignores the fact that philosophers, contrary to their own self-styled reputations as men and women of pure reason, have emotions themselves, and in most (but not all) cases a sufficiently rich repertoire of emotions to fund and support a dozen theories of emotion. As Descartes (1649/ 1989) said in his introduction to the subject, "everyone has experience of the passions within himself, and there is no necessity to borrow one's observations from elsewhere in order to discover their nature." Ultimately, there is no justification for the century-old feud between philosophy and psychology. Their history is in fact the same, and the phenomenon of emotion lies equally open to both of them. (PsycINFO Database Record (c) 2019 APA, all rights reserved)},
	author = {Solomon, Robert C.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-03-12 16:05:46 +0100},
	edition = {3rd},
	isbn = {1-59385-650-4 (Hardcover); 978-1-59385-650-2 (Hardcover)},
	keywords = {*Emotions; *Philosophies; Cognition; History; Reasoning; Theories},
	pages = {3-16},
	publisher = {The Guilford Press},
	series = {Handbook of emotions},
	title = {The philosophy of emotions},
	year = {2008}}

@inproceedings{Storey2012,
	abstract = {Social media has revolutionized how humans create and curate knowledge artifacts [1]. It has increased individual engagement, broadened community participation and led to the formation of new social networks. This paradigm shift is particularly evident in software engineering in three distinct ways: firstly, in how software stakeholders co-develop and form communities of practice; secondly, in the complex and distributed software ecosystems that are enabled through insourcing, outsourcing, open sourcing and crowdsourcing of components and related artifacts; and thirdly, by the emergence of socially-enabled software repositories and collaborative development environments [2].},
	author = {Storey, Margaret-Anne},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:36:31 +0100},
	isbn = {9781467317610},
	publisher = {IEEE},
	title = {The Evolution of the Social Programmer},
	year = {2012}}

@article{Thelwall:2010:SSS:1890706.1890713,
	author = {Thelwall, Mike and Buckley, Kevan and Paltoglou, Georgios and Cai, Di and Kappas, Arvid},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:34:15 +0100},
	issn = {1532-2882},
	journal = {J. Am. Soc. Inf. Sci. Technol.},
	keywords = {affect, data mining, informal communication, machine learning, sentiment analysis},
	month = dec,
	number = {12},
	pages = {2544--2558},
	publisher = {John Wiley \& Sons, Inc.},
	title = {Sentiment in Short Strength Detection Informal Text},
	volume = {61},
	year = {2010}}

@article{Thelwall:2012:SSD:2336247.2336261,
	author = {Thelwall, Mike and Buckley, Kevan and Paltoglou, Georgios},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:34:03 +0100},
	issn = {1532-2882},
	journal = {J. Am. Soc. Inf. Sci. Technol.},
	month = jan,
	number = {1},
	pages = {163--173},
	publisher = {John Wiley \& Sons, Inc.},
	title = {Sentiment Strength Detection for the Social Web},
	volume = {63},
	year = {2012}}

@article{Uddin2022,
	abstract = {Sentiment analysis in software engineering (SE) has shown promise to analyze and support diverse development activities. Recently, several tools are proposed to detect sentiments in software artifacts. While the tools improve accuracy over off-the-shelf tools, recent research shows that their performance could still be unsatisfactory. A more accurate sentiment detector for SE can help reduce noise in analysis of software scenarios where sentiment analysis is required. Recently, combinations, i.e., hybrids of stand-alone classifiers are found to offer better performance than the stand-alone classifiers for fault detection. However, we are aware of no such approach for sentiment detection for software artifacts. We report the results of an empirical study that we conducted to determine the feasibility of developing an ensemble engine by combining the polarity labels of stand-alone SE-specific sentiment detectors. Our study has two phases. In the first phase, we pick five SE-specific sentiment detection tools from two recently published papers by Lin et al.;[29, 30], who first reported negative results with stand alone sentiment detectors and then proposed an improved SE-specific sentiment detector, POME [29]. We report the study results on 17,581 units (sentences/documents) coming from six currently available sentiment benchmarks for software engineering. We find that the existing tools can be complementary to each other in 85-95\% of the cases, i.e., one is wrong but another is right. However, a majority voting-based ensemble of those tools fails to improve the accuracy of sentiment detection. We develop Sentisead, a supervised tool by combining the polarity labels and bag of words as features. Sentisead improves the performance (F1-score) of the individual tools by 4\% (over Senti4SD [5]) -- 100\% (over POME [29]). The initial development of Sentisead occurred before we observed the use of deep learning models for SE-specific sentiment detection. In particular, recent papers show the superiority of advanced language-based pre-trained transformer models (PTM) over rule-based and shallow learning models. Consequently, in a second phase, we compare and improve Sentisead infrastructure using the PTMs. We find that a Sentisead infrastructure with RoBERTa as the ensemble of the five stand-alone rule-based and shallow learning SE-specific tools from Lin et al[29, 30] offers the best F1-score of 0.805 across the six datasets, while a stand-alone RoBERTa shows an F1-score of 0.801.},
	articleno = {48},
	author = {Uddin, Gias and Gu\'{e}h\'{e}nuc, Yann-Ga\"{e}l and Khomh, Foutse and Roy, Chanchal K.},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 18:41:28 +0100},
	issn = {1049-331X},
	issue_date = {July 2022},
	journal = {Transactions on Software Engineering and Methodology},
	keywords = {Sentiment analysis, machine learning, ensemble classifier},
	month = {apr},
	number = {3},
	numpages = {38},
	publisher = {ACM},
	title = {An Empirical Study of the Effectiveness of an Ensemble of Stand-Alone Sentiment Detection Tools for Software Engineering Datasets},
	volume = {31},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3491211}}

@article{Vrzakova2020,
	author = {Hana Vrzakova and Andrew Begel and Lauri Meht{\"a}talo and Roman Bednarik},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0164-1212},
	journal = {J. Syst. Softw.},
	title = {Affect Recognition in Code Review: An In-situ Biometric Study of Reviewer's Affect},
	volume = {159},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2019.110434}}

@article{WaeldeMoors,
	abstract = { Positive and negative feelings were central to the development of economics, especially in utility theory in classical economics. While neoclassical utility theory ignored feelings, behavioral economics more recently reintroduced feelings in utility theory. Beyond feelings, economic theorists use full-fledged specific emotions to explain behavior that otherwise could not be understood or they study emotions out of interest for the emotion itself. While some analyses display a strong overlap between psychological thinking and economic modelling, in most cases there is still a large gap between economic and psychological approaches to emotion research. Ways how to reduce this gap are discussed. },
	author = {Klaus W\"alde and Agnes Moors},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Emotion Review},
	number = {3},
	pages = {271--278},
	title = {Current Emotion Research in Economics},
	volume = {9},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1177/1754073916665470}}

@article{Watson1988,
	author = {Watson, Daniel and Clark, Ludwig August and Tellegen, Arno},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2022-10-11 16:22:49 +0200},
	journal = {Journal of Personality and Social Psychology},
	number = 6,
	pages = {1063--1070},
	title = {Development and validation of brief measures of positive and negative affect: the {PANAS} scales},
	volume = 54,
	year = 1988}

@inproceedings{Williams_Mahmoud,
	author = {Williams, Grant and Mahmoud, Anas},
	booktitle = {International Workshop on Emotion Awareness in Software Engineering ({SEmotion})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 17:16:43 +0100},
	pages = {2-7},
	title = {Analyzing, Classifying, and Interpreting Emotions in Software Users' Tweets},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SEmotion.2017.1}}

@inproceedings{ZhangEtAl,
	author = {Zhang, Ting and Xu, Bowen and Thung, Ferdian and Haryono, Stefanus Agus and Lo, David and Jiang, Lingxiao},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-added = {2022-10-11 16:22:49 +0200},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {70-80},
	publisher = {IEEE},
	title = {Sentiment Analysis for Software Engineering: How Far Can Pre-trained Transformer Models Go?},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME46990.2020.00017}}

@article{maeprasart2022understanding,
	author = {Maeprasart, Vittunyuta and Wattanakriengkrai, Supatsara and Kula, Raula Gaikovina and Treude, Christoph and Matsumoto, Kenichi},
	journal = {arXiv preprint arXiv:2207.04933},
	title = {Understanding the Role of External Pull Requests in the NPM Ecosystem},
	year = {2022}}

@article{wattanakriengkrai2022giving,
	abstract = {The widespread adoption of third-party libraries for contemporary software development has led to the creation of large inter-dependency networks, where sustainability issues of a single library can have widespread network effects. Maintainers of these libraries are often overworked, relying on the contributions of volunteers to sustain these libraries. To understand these contributions, in this work, we leverage socio-technical techniques to introduce and formalise dependency-contribution congruence (DC congruence) at both ecosystem and library level, i.e., to understand the degree and origins of contributions congruent to dependency changes, analyze whether they contribute to library dormancy (i.e., a lack of activity), and investigate similarities between these congruent contributions compared to typical contributions. We conduct a large-scale empirical study to measure the DC congruence for the npm ecosystem using 1.7 million issues, 970 thousand pull requests (PRs), and over 5.3 million commits belonging to 107,242 npm libraries. We find that the most congruent contributions originate from contributors who can only submit (not commit) to both a client and a library. At the project level, we find that DC congruence shares an inverse relationship with the likelihood that a library becomes dormant. Specifically, a library is less likely to become dormant if the contributions are congruent with upgrading dependencies. Finally, by comparing the source code of contributions, we find statistical differences in the file path and added lines in the source code of congruent contributions when compared to typical contributions. Our work has implications to encourage dependency contributions, especially to support library maintainers in sustaining their projects.
                   },
	author = {Wattanakriengkrai, Supatsara and Wang, Dong and Kula, Raula Gaikovina and Treude, Christoph and Thongtanunam, Patanamon and Ishio, Takashi and Matsumoto, Kenichi},
	date-modified = {2023-02-26 17:18:35 +0100},
	issn = {1939-3520},
	journal = {Transactions on Software Engineering},
	title = {Giving Back: Contributions Congruent to Library Dependency Changes in a Software Ecosystem},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2022.3225197}}

@inproceedings{wiese2016mailing,
	author = {Wiese, Igor Scaliante and Da Silva, Jos{\'e} Teodoro and Steinmacher, Igor and Treude, Christoph and Gerosa, Marco A.},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2022-12-07 13:35:43 +0100},
	organization = {IEEE},
	pages = {345--355},
	title = {Who is who in the mailing list? Comparing six disambiguation heuristics to identify multiple addresses of a participant},
	year = {2016}}

@inproceedings{golzadeh2022accuracy,
	author = {Golzadeh, Mehdi and Decan, Alexandre and Chidambaram, Natarajan},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {{IEEE}},
	title = {On the accuracy of bot detection techniques},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3528228.3528406}}

@article{FRANCOBEDOYA2017160,
	author = {Oscar Franco-Bedoya and David Ameller and Dolors Costal and Xavier Franch},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	pages = {160-185},
	title = {Open source software ecosystems: A Systematic mapping},
	volume = {91},
	year = {2017},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0950584917304512},
	bdsk-url-2 = {https://doi.org/10.1016/j.infsof.2017.07.007}}

@inproceedings{bosch2011software,
	author = {Bosch, Jan},
	booktitle = {International Software Product Line Conference ({SPLC})},
	date-modified = {2022-12-06 11:27:16 +0100},
	organization = {IEEE},
	pages = {351--351},
	title = {Software ecosystems: Implications for strategy, business model and architecture},
	year = {2011}}

@inproceedings{KulaSANER18,
	author = {Kula, Raula Gaikovina and De Roover, Coen and German, Daniel M. and Ishio, Takashi and Inoue, Katsuro},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-21 11:18:52 +0100},
	pages = {288-299},
	title = {A generalized model for visualizing library popularity, adoption, and diffusion within a software ecosystem},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2018.8330217}}

@inproceedings{Kalliamvakou2014,
	author = {Kalliamvakou, Eirini and Gousios, Georgios and Blincoe, Kelly and Singer, Leif and German, Daniel M. and Damian, Daniela},
	booktitle = {Working Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-01-21 1:03:53 AM +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450328630},
	keywords = {github, bias, code reviews, Mining software repositories, git},
	location = {Hyderabad, India},
	numpages = {10},
	pages = {92--101},
	publisher = {ACM},
	series = {MSR 2014},
	title = {The Promises and Perils of Mining {GitHub}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2597073.2597074}}

@article{Beschastnikh2017,
	author = {Beschastnikh, Ivan and Lungu, Mircea F. and Zhuang, Yanyan},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781538626757},
	journal = {International Conference on Software Engineering: New Ideas and Emerging Results Track},
	keywords = {research tool adoption,software analysis,software engineering research evaluation,software engineering tools},
	month = {September},
	pages = {35--38},
	title = {Accelerating software engineering research adoption with analysis bots},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-NIER.2017.17}}

@article{Urli2018,
	author = {Urli, Simon and Yu, Zhongxing and Seinturier, Lionel and Monperrus, Martin},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450356596},
	issn = {02705257},
	journal = {International Conference on Software Engineering ({ICSE})},
	pages = {95--104},
	title = {How to design a program repair bot: Insights from the repairnator project},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3183519.3183540}}

@inproceedings{Lin2016,
	abstract = {Slack is a modern communication platform for teams that is seeing wide and rapid adoption by software develop-ment teams. Slack not only facilitates team messaging and archiving, but it also supports a wide plethora of inte-grations to external services and bots. We have found that Slack and its integrations (i.e., bots) are playing an increas-ingly significant role in software development, replacing email in some cases and disrupting software development processes. To understand how Slack impacts development team dynamics, we designed an exploratory study to inves-tigate how developers use Slack and how they benefit from it. We find that developers use Slack for personal, team-wide and community-wide purposes. Our research also reveals that developers use and create diverse integrations (called bots) to support their work. This study serves as the first step towards understanding the role of Slack in sup-porting software engineering.},
	author = {Lin, Bin and Zagalsky, Alexey and Storey, Margaret-Anne and Serebrenik, Alexander},
	booktitle = {International Conference on Computer Supported Cooperative Work ({CSCW})},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450339506},
	keywords = {Bots,Collaboration,Slack,Social media,Software development},
	pages = {333--336},
	publisher = {ACM},
	title = {Why developers are slacking off: Understanding how software teams use {Slack}},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2818052.2869117}}

@article{Lebeuf2017a,
	author = {Lebeuf, Carlene and Storey, Margaret Anne and Zagalsky, Alexey},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {07407459},
	journal = {IEEE Software},
	keywords = {Slack,Software Technology,bots,chatbots,software bots,software development,software engineering},
	number = {1},
	pages = {18--23},
	title = {Software Bots},
	volume = {35},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/MS.2017.4541027}}

@inproceedings{Storey2016,
	author = {Storey, Margaret Anne and Zagalsky, Alexey},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-modified = {2023-02-28 11:04:04 +0100},
	isbn = {9781450342186},
	keywords = {Computer supported collabo-rative work,Human computer interaction,Productivity,Software engineering},
	pages = {928--931},
	title = {Disrupting developer productivity one Bot at a Time},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2950290.2983989}}

@article{Farooq2016,
	author = {Farooq, Umer and Grudin, Jonathan},
	date-modified = {2023-02-21 11:18:52 +0100},
	issn = {1072-5520},
	issue_date = {November-December 2016},
	journal = {Interactions},
	month = oct,
	number = {6},
	numpages = {7},
	pages = {26--32},
	publisher = {ACM},
	title = {Human-Computer Integration},
	volume = {23},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/3001896}}

@inproceedings{bot_modify_wf,
	author = {Saadat, Samaneh and Colmenares, Natalia and Sukthankar, Gita},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-added = {2022-01-21 12:02:57 AM +0100},
	date-modified = {2023-02-21 18:31:59 +0100},
	title = {Do Bots Modify the Workflow of {GitHub} Teams?},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/BotSE52550.2021.00008}}

@inproceedings{BIMAN,
	author = {Dey, Tapajit and Mousavi, Sara and Ponce, Eduardo and Fry, Tanner and Vasilescu, Bogdan and Filippova, Anna and Mockus, Audris},
	booktitle = {17th International Conference on Mining Software Repositories ({MSR})},
	date-added = {2022-01-20 11:50:03 PM +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	isbn = {9781450375177},
	pages = {209--219},
	publisher = {ACM},
	title = {Detecting and Characterizing Bots That Commit Code},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387478}}

@inproceedings{bot_influence,
	author = {Wessel, Mairieli and Wiese, Igor and Steinmacher, Igor and Gerosa, Marco A.},
	booktitle = {ACM Hum.-Comput. Interact. ({CHI})},
	date-modified = {2023-02-21 11:18:52 +0100},
	publisher = {ACM},
	title = {Don't Disturb Me: Challenges of Interacting with Software Bots on Open Source Software Projects},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3476042}}

@inproceedings{bot_or_not,
	author = {Golzadeh, Mehdi and Legay, Damien and Decan, Alexandre and Mens, Tom},
	booktitle = {International Workshop on Bots in Software Engineering (BotSE)},
	date-modified = {2023-02-21 11:18:52 +0100},
	keywords = {bot activity, text similarity, software repository mining, pull requests, GitHub, social coding, empirical analysis},
	pages = {31--35},
	title = {Bot or Not? Detecting Bots in {GitHub} Pull Request Activity Based on Comment Similarity},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3387940.3391503}}

@article{Bodegha2021,
	author = {Golzadeh, Mehdi and Decan, Alexandre and Legay, Damien and Mens, Tom},
	date-added = {2022-01-12 2:09:56 PM +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {Journal of Systems and Software},
	keywords = {Distributed software developmentBot identificationGitHub repositoriesText similarityClassification model},
	title = {A ground-truth dataset and classification model for detecting bots in {GitHub} issue and {PR} comments},
	volume = {175},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2021.110911}}

@article{contributions_count,
	author = {Young, Jean-Gabriel and Casari, Amanda and McLaughlin, Katie and Trujillo, Milo Z. and H{\'e}bert-Dufresne, Laurent and Bagrow, James P.},
	date-added = {2022-01-12 2:05:42 PM +0100},
	date-modified = {2023-02-21 11:18:52 +0100},
	journal = {International Conference on Mining Software Repositories (MSR)},
	month = {6},
	pages = {242-253},
	title = {Which contributions count? Analysis of attribution in open source},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/MSR52588.2021.00036}}

@article{Milojicic2020,
	author = {Milojicic, Dejan},
	issue = {11},
	journal = {IEEE Annals of the History of Computing},
	pages = {16--25},
	title = {The edge-to-cloud continuum},
	volume = {53},
	year = {2020}}

@inproceedings{Goeminne2014,
	_doi = {10.1109/CSMR-WCRE.2014.6747193},
	_pages = {353-357},
	abstract = {Current empirical studies on the evolution of software systems are primarily analysing source code. Sometimes, social aspects such as the activity of contributors are considered as well. Very few studies, however, focus on data-intensive software systems (DISS), in which a significant part of the total development effort is devoted to maintaining and evolving the database schema. We report on early results obtained in the empirical analysis of the co-evolution between code-related and database-related activities in a large open source DISS. As a case study, we have analysed OSCAR, for which the historical information spanning many years is available in a Git repository.},
	author = {Goeminne, Mathieu and Decan, Alexandre and Mens, Tom},
	booktitle = {Software Evoluton Week ({CSMR/WCRE})},
	date-modified = {2022-12-30 17:09:17 +0100},
	title = {Co-evolving code-related and database-related changes in a data-intensive software system},
	year = {2014}}

@inproceedings{Lin2009,
	author = {Lin, Dien-Yen and Neamtiu, Iulian},
	booktitle = {Joint Int'l Workshop on Principles of software evolution and ERCIM software evolution workshop},
	date-modified = {2017-03-31 09:41:19 +0000},
	isbn = {978-1-60558-678-6},
	keywords = {collateral evolution, coupled software transformation, empirical study, mozilla, schema evolution, schema migration, software evolution, sqlite},
	pages = {31--40},
	publisher = {ACM},
	title = {Collateral Evolution of Applications and Databases},
	year = {2009},
	bdsk-url-1 = {dx.doi.org/10.1145/1595808.1595817}}

@inproceedings{Skoulis2014,
	author = {Skoulis, I. and Vassiliadis, P. and Zarras, A.},
	booktitle = {International Conference on Advanced Information Systems Engineering ({CAiSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {978-3-319-07880-9},
	keywords = {Schema evolution; software evolution; Lehman's laws},
	pages = {379--393},
	publisher = {Springer},
	series = {LNCS},
	title = {Open-Source Databases: Within, Outside, or Beyond {Lehman}'s Laws of Software Evolution?},
	volume = {8484},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-07881-6%5C_26}}

@article{Vassiliadis2017c,
	author = {Panos Vassiliadis and Apostolos V. Zarras and Ioannis Skoulis},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0306-4379},
	journal = {Information Systems},
	keywords = {Schema evolution, Database evolution, Analysis of evolution history, Patterns in schema evolution, Software rigidity, Software repository mining, Exploratory study, Software maintenance},
	pages = {24--46},
	title = {Gravitating to rigidity: Patterns of schema evolution, and its absence in the lives of tables},
	volume = {63},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1016/j.is.2016.06.010}}

@article{Arzamasova2018,
	author = {Arzamasova, Natalia and Sch{\"a}ler, Martin and B{\"o}hm, Klemens},
	date-modified = {2023-03-07 11:13:59 +0100},
	issn = {2326-3865},
	journal = {Transactions on Knowledge and Data Engineering},
	month = mar,
	number = {3},
	pages = {421--434},
	publisher = {IEEE},
	title = {Cleaning Antipatterns in an {SQL} Query Log},
	volume = {30},
	year = {2018}}

@inproceedings{AlmeidaFilho2019,
	author = {de Almeida Filho, Francisco Gon{\c{c}}alves and Martins, Ant{\^o}nio Diogo Forte and Vinuto, Tiago da Silva and Monteiro, Jos{\'e} Maria and de Sousa, {\'I}talo Pereira and de Castro Machado, Javam and Rocha, Lincoln Souza},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-modified = {2022-12-06 10:55:18 +0100},
	organization = {IEEE},
	pages = {116--121},
	title = {Prevalence of bad smells in {PL/SQL} projects},
	year = {2019}}

@inproceedings{Khumnin2017,
	abstract = {SQL antipatterns are frequently-made missteps that are commonly found in the design of relational databases, the use of SQL, and the development of database applications. They are intended to solve certain problems but will eventually lead to other problems. The motivation of this paper is how to assist database administrators in diagnosing SQL antipatterns and suggest refactoring techniques to solve the antipatterns. Specifically, we attempt to automate the detection of logical database design antipatterns by developing a tool that uses Transact-SQL language to query and analyze the database schema. The tool reports on potential antipatterns and gives an instruction on how to refactor the database schema. In an evaluation based on three databases from the industry, the performance of the tool is satisfactory in terms of recall of the antipatterns but the tool detects a number of false positives which affect its precision. It is found that SQL antipatterns detection still largely depends on the semantics of the data and the detection tool should rather be used in a semi-automated manner, i.e it can point out potential problematic locations in the database schema which require further diagnosis by the database administrators. This approach would be useful especially in the context of large databases where manual antipatterns inspection is very difficult.},
	author = {Khumnin, Poonyanuch and Senivongse, Twittie},
	booktitle = {ACIS International Conference on Software Engineering, Artificial Intelligence, Networking, and Parallel/Distributed Computing ({SNPD})},
	date-modified = {2023-03-12 15:03:33 +0100},
	isbn = {9781509055043},
	keywords = {Database refactoring, Relational database, SQL antipattern, Transact-SQL},
	pages = {199--205},
	title = {{SQL} antipatterns detection and database refactoring process},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SNPD.2017.8022723}}

@inproceedings{Spadini2018,
	abstract = {Software repositories contain historical and valuable information about the overall development of software systems. Mining software repositories (MSR) is nowadays considered one of the most interesting growing fields within software engineering. MSR focuses on extracting and analyzing data available in software repositories to uncover interesting, useful, and actionable information about the system. Even though MSR plays an important role in software engineering research, few tools have been created and made public to support developers in extracting information from Git repository. In this paper, we present PyDriller, a Python Framework that eases the process of mining Git. We compare our tool against the state-of-the-art Python Framework GitPython, demonstrating that PyDriller can achieve the same results with, on average, 50% less LOC and significantly lower complexity.},
	author = {Spadini, Davide and Aniche, Maur\'{\i}cio and Bacchelli, Alberto},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {908--911},
	publisher = {ACM},
	title = {{PyDriller}: {Python} Framework for Mining Software Repositories},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3236024.3264598}}

@inproceedings{Gueheneuc2007,
	author = {Gu{\'e}h{\'e}neuc, Yann-Ga{\"e}l},
	booktitle = {2007 IEEE International Conference on Software Maintenance},
	organization = {IEEE},
	pages = {529--530},
	title = {Ptidej: A flexible reverse engineering tool suite},
	year = {2007}}

@inproceedings{Foidl2019,
	author = {H. {Foidl} and M. {Felderer} and S. {Biffl}},
	booktitle = {45th Euromicro Conference on Software Engineering and Advanced Applications (SEAA 2019)},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {338--341},
	title = {Technical Debt in Data-Intensive Software Systems},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/SEAA.2019.00058}}

@inproceedings{AlBarak2016,
	author = {Albarak, Mashel and Bahsoon, Rami},
	booktitle = {International Workshop on Managing Technical Debt ({MTD})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {17--23},
	title = {Database Design Debts through Examining Schema Evolution},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/MTD.2016.9}}

@article{Ramasubbu2016,
	author = {Ramasubbu, Narayan and Kemerer, Chris F.},
	date-modified = {2023-02-21 11:18:53 +0100},
	journal = {Management Science},
	number = {5},
	pages = {1487--1510},
	title = {Technical Debt and the Reliability of Enterprise Software Systems: A Competing Risks Analysis},
	volume = {62},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1287/mnsc.2015.2196}}

@book{Stasko1998,
	author = {John T. Stasko and Marc H. Brown and John B. Domingue and Blaine A. Price},
	date-modified = {2023-02-21 11:29:34 +0100},
	isbn = {0-262-19395-7},
	publisher = {MIT Press},
	title = {Software Visualization - Programming as a Multimedia Experience},
	year = {1998}}

@book{Bertin1974,
	author = {Jacques Bertin},
	edition = {Second},
	isbn = {3-11-003660-6},
	keywords = {lib-iene},
	publisher = {Walter de Gruyter},
	title = {Graphische Semiologie},
	year = {1974}}

@book{Tufte1990,
	author = {Edward Tufte},
	isbn = {0-9613921-1-8},
	keywords = {lib-iene},
	publisher = {Graphics Press},
	title = {Envisioning Information},
	year = {1990}}

@book{Tufte1997,
	author = {Edward Tufte},
	isbn = {978-0961392123},
	keywords = {lib-iene},
	publisher = {Graphics Press},
	title = {Visual Explanations},
	year = {1997}}

@book{Tufte2001,
	author = {Edward Tufte},
	edition = {Second},
	isbn = {0-9613921-4-2},
	keywords = {lib-iene},
	publisher = {Graphics Press},
	title = {The Visual Display of Quantitative Information},
	year = {2001}}

@book{Ware2004,
	author = {Colin Ware},
	edition = {Second},
	keywords = {lib-iene},
	publisher = {Morgan Kaufmann},
	title = {Information Visualization: Perception for Design},
	year = {2004}}

@book{Card1999,
	editor = {Stuart K. Card and Jock D. Mackinlay and Ben Shneiderman},
	keywords = {scglib},
	publisher = {Morgan Kaufmann},
	title = {Readings in Information Visualization --- Using Vision to Think},
	year = {1999}}

@inproceedings{Storey2001,
	author = {Storey, Margaret-Anne and C. Best and J. Michaud},
	booktitle = {International Workshop on Program Comprehension ({IWPC})},
	date-modified = {2022-12-30 17:16:49 +0100},
	title = {{SHriMP} Views: An Interactive and Customizable Environment for Software Exploration},
	year = {2001}}

@inproceedings{Marcus2003,
	author = {Andrian Marcus and Louis Feng and Jonathan I. Maletic},
	booktitle = {ACM Symposium on Software Visualization},
	date-modified = {2022-11-28 18:37:30 +0100},
	keywords = {visualization},
	pages = {27},
	publisher = {IEEE},
	title = {{3D} Representations for Software Visualization},
	year = {2003}}

@techreport{Beyer2003,
	author = {Dirk Beyer and Claus Lewerentz},
	institution = {Institute of Computer Science, Brandenburgische Technische Universit{\"a}t Cottbus},
	month = jan,
	number = {I-04/2003},
	title = {{CrocoPat}: A Tool for Efficient Pattern Recognition in Large Object-Oriented Programs},
	year = {2003}}

@inproceedings{Favre2001,
	author = {Jean-Marie Favre},
	booktitle = {International Workshop on Program Comprehension ({ICPC})},
	date-modified = {2022-12-06 12:06:47 +0100},
	month = may,
	pages = {233--244},
	publisher = {IEEE},
	title = {{GSEE}: a Generic Software Exploration Environment},
	year = {2001}}

@inproceedings{Storey1997,
	author = {Storey, Margaret-Anne and Wong, Kenny and M\"uller, Hausi},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-modified = {2022-12-30 17:16:10 +0100},
	pages = {12--21},
	publisher = {IEEE},
	title = {How Do Program Understanding Tools Affect How Programmers Understand Programs?},
	year = {1997}}

@article{Lehman1980,
	author = {Lehman, Meir M.},
	date-added = {2010-01-28 12:04:50 +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	journal = {Journal of Systems and Software},
	number = {3},
	pages = {213--221},
	title = {On Understanding Laws, Evolution and Conservation in the Large Program Life Cycle},
	volume = {1},
	year = {1980},
	bdsk-url-1 = {https://doi.org/10.1016/0164-1212(79)90022-0}}

@article{Lehman1980a,
	author = {Lehman, Meir M.},
	date-added = {2010-01-28 12:04:50 +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0018-9219},
	journal = {Proceedings of the IEEE},
	number = {9},
	pages = {1060--1076},
	title = {Programs, life cycles, and laws of software evolution},
	volume = {68},
	year = {1980},
	bdsk-url-1 = {https://doi.org/10.1109/PROC.1980.11805}}

@book{Arthur1988,
	author = {Lowell Jay Arthur},
	date-added = {2010-01-28 12:04:50 +0100},
	date-modified = {2010-01-28 12:04:50 +0100},
	isbn = {0-471-62871-9},
	keywords = {software evolution},
	publisher = {John Wiley and Sons},
	title = {Software Evolution: The Software Maintenance Challenge},
	year = {1988}}

@book{Oman1990,
	author = {Paul W. Oman and Ted G. Lewis},
	date-added = {2010-01-28 12:04:50 +0100},
	date-modified = {2010-01-28 12:04:50 +0100},
	publisher = {IEEE Computer Society Pres},
	title = {Milestones in Software Evolution},
	year = {1990}}

@inproceedings{Graves1998,
	author = {Graves, Todd L. and Mockus, Audris},
	booktitle = {International Symposium on Software Metrics ({METRICS})},
	date-added = {2010-01-29 18:11:23 +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	keywords = {mining software repositories},
	pages = {267--273},
	publisher = {IEEE},
	title = {Inferring change effort from configuration management databases},
	year = {1998},
	bdsk-url-1 = {http://dx.doi.org/10.1109/METRIC.1998.731253}}

@inproceedings{Atkins1999,
	author = {David L. Atkins and Thomas Ball and Todd L. Graves and Audris Mockus},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2010-01-29 18:08:50 +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	keywords = {mining software repositories},
	pages = {324--333},
	publisher = {ACM},
	title = {Using Version Control Data to Evaluate the Impact of Software Tools},
	year = {1999},
	bdsk-url-1 = {https://doi.org/10.1145/302405.302649}}

@inproceedings{Holmes2008,
	author = {Holmes, Reid and Begel, Andrew},
	booktitle = {International Working Conference on Mining Software Repositories ({MSR})},
	date-modified = {2022-12-06 12:01:26 +0100},
	month = may,
	publisher = {ACM},
	title = {{Deep intellisense: a tool for rehydrating evaporated information}},
	year = {2008}}

@inproceedings{Cubraniundefined2004,
	author = {\v{C}ubraniundefined, Davor and Murphy, Gail C. and Singer, Janice and Booth, Kellogg S.},
	booktitle = {Conference on Computer Supported Cooperative Work ({CSCW})},
	date-modified = {2023-02-21 18:14:54 +0100},
	month = nov,
	publisher = {ACM},
	title = {Learning from project history: a case study for software development},
	year = {2004}}

@inproceedings{Sinha2005,
	author = {Sinha, Vineet and Karger, David and Miller, Rob},
	booktitle = {Symposium on Visual Languages and Human Centric Computing (VL/HCC)},
	date-modified = {2023-03-12 15:06:26 +0100},
	doi = {10.1109/VLHCC.2006.40},
	pages = {187--194},
	publisher = {IEEE},
	title = {Relo: Helping users manage context during interactive exploratory visualization of large codebases},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1109/VLHCC.2006.40}}

@inproceedings{DeLine2011,
	author = {Robert DeLine and Kael Rowan},
	booktitle = {International Conference on Software Engineering ({ICSE-NIER})},
	date-modified = {2023-02-21 17:51:25 +0100},
	title = {Code Canvas: Zooming towards Better Development Environments},
	year = {2011}}

@inproceedings{Rothlisberger2008,
	author = {Rothlisberger, D. and Greevy, O. and Nierstrasz, O.},
	booktitle = {16th IEEE International Conference on Program Comprehension (ICPC 2008)},
	month = jun,
	pages = {63--72},
	title = {Exploiting Runtime Information in the IDE},
	year = {2008}}

@inproceedings{Smith1995,
	author = {Randall B. Smith and John Maloney and David Ungar},
	booktitle = {Conference on Object-Oriented Programming Systems, Languages, and Applications ({OOPSLA})},
	date-modified = {2023-02-21 18:15:33 +0100},
	month = oct,
	pages = {47--60},
	title = {The Self-4.0 User Interface},
	year = {1995}}

@inproceedings{Begel2010,
	acmid = {1806821},
	author = {Begel, Andrew and Khoo, Yit Phang and Zimmermann, Thomas},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {978-1-60558-719-6},
	keywords = {inter-team coordination, knowledge management, mining software repositories, regular expression, regular language reachability, social networking},
	pages = {125--134},
	publisher = {ACM},
	title = {Codebook: discovering and exploiting relationships in software repositories},
	year = {2010},
	bdsk-url-1 = {http://doi.acm.org/10.1145/1806799.1806821},
	bdsk-url-2 = {https://doi.org/10.1145/1806799.1806821}}

@inproceedings{Bird2009,
	author = {Christian Bird and Peter C. Rigby and Earl T. Barr and David J. Hamilton and Daniel M. Germ{\'a}n and Premkumar T. Devanbu},
	booktitle = {International Working Conference on Mining Software Repositories ({MSR})},
	date-modified = {2022-11-29 14:26:22 +0100},
	pages = {1--10},
	publisher = {IEEE},
	title = {The promises and perils of mining git},
	year = {2009}}

@article{Robillard2015,
	author = {Martin P. Robillard and Yam B. Chhetri},
	date-modified = {2023-02-28 10:57:00 +0100},
	journal = {Empirical Software Engineering},
	number = {6},
	pages = {1558--1586},
	title = {Recommending reference {API} documentation},
	volume = {20},
	year = {2015},
	bdsk-url-1 = {http://dx.doi.org/10.1007/s10664-014-9323-y}}

@inproceedings{Sorbo2015,
	author = {Andrea Di Sorbo and Sebastiano Panichella and Corrado Aaron Visaggio and Massimiliano Di Penta and Gerardo Canfora and Harald C. Gall},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {12--23},
	title = {Development Emails Content Analyzer: Intention Mining in Developer Discussions {(T)}},
	year = {2015},
	bdsk-url-1 = {http://dx.doi.org/10.1109/ASE.2015.12}}

@inproceedings{Ducasse2005,
	abstract = {Software systems are complex and difficult to analyze. Reengineering is a
                   complex activity that usually involves combining different techniques and tools.
                   Moose is an reengineering environment designed to provide the necessary
                   infrastructure for building new tools and for integrating them. Moose centers on
                   a language independent meta-model, and offers services like grouping, querying,
                   navigation, and meta-descriptions. Several tools have been built on top of Moose
                   dealing with different aspects of reengineering like: visualization, evolution
                   analysis, semantic analysis, concept analysis or dynamic analysis.},
	annote = {tooldemo},
	author = {St\'ephane Ducasse and Tudor G\^irba and Oscar Nierstrasz},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-added = {2008-04-12 00:17:02 +0200},
	date-modified = {2023-02-28 11:02:39 +0100},
	month = sep,
	pages = {99--102},
	title = {{Moose}: an Agile Reengineering Environment},
	year = {2005}}

@inproceedings{Jones2002,
	author = {James A. Jones and Mary Jean Harrold and John Stasko},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2008-04-10 17:57:13 +0200},
	date-modified = {2022-12-06 12:13:10 +0100},
	pages = {467--477},
	publisher = {ACM},
	title = {Visualization of test information to assist fault localization},
	year = {2002}}

@inproceedings{Santos2000,
	author = {C. Russo Dos Santos and P. Gros and P. Abel and Didier Loisel and N. Trichaud and J. P. Paris},
	booktitle = {International Conference on Information Visualization ({IV})},
	date-added = {2008-04-10 17:13:40 +0200},
	date-modified = {2023-03-12 15:10:32 +0100},
	pages = {379--386},
	title = {Mapping Information onto 3D Virtual Worlds},
	year = {2000}}

@inproceedings{Andrews2002,
	author = {Andrews, K.},
	booktitle = {International Conference on Information Visualisation},
	date-modified = {2022-12-06 12:23:44 +0100},
	keywords = {data visualisation, tree data structuresdocuments, files, glyphs, information pyramids, interactive exploration, large hierarchies, leaf nodes, navigational facilities, plateau, subtrees, tree root, visual exploration, visualisation},
	pages = {793--798},
	title = {Visual exploration of large hierarchies with information pyramids},
	year = {2002}}

@article{Briand1998,
	author = {Lionel C. Briand and John W. Daly and J{\"u}rgen W{\"u}st},
	date-added = {2008-04-09 11:33:48 +0200},
	date-modified = {2008-04-09 11:33:48 +0200},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {65--117},
	publisher = {Kluwer Academic Publishers},
	title = {A {Unified} {Framework} for {Cohesion} {Measurement} in {Object}-{Oriented} {Systems}},
	volume = {3},
	year = {1998}}

@inproceedings{Bieman1995,
	author = {J. M. Bieman and B. K. Kang},
	booktitle = {ACM Symposium on Software Reusability},
	date-added = {2008-04-09 11:33:28 +0200},
	date-modified = {2022-12-06 12:18:40 +0100},
	keywords = {olit},
	month = apr,
	publisher = {ACM},
	title = {Cohesion and Reuse in an Object-Oriented System},
	year = {1995}}

@article{McCabe1976,
	author = {T. J. McCabe},
	date-added = {2008-04-09 11:33:08 +0200},
	date-modified = {2008-04-09 11:33:08 +0200},
	journal = {IEEE Transactions on Software Engineering},
	month = dec,
	number = {4},
	pages = {308--320},
	title = {A Measure of Complexity},
	volume = {2},
	year = {1976}}

@article{Chidamber1994,
	author = {Shyam R. Chidamber and Chris F. Kemerer},
	date-added = {2008-04-09 11:32:38 +0200},
	date-modified = {2023-03-12 15:15:50 +0100},
	journal = {Transactions on Software Engineering},
	keywords = {olit},
	month = jun,
	number = {6},
	pages = {476--493},
	publisher = {IEEE},
	title = {A Metrics Suite for Object Oriented Design},
	volume = {20},
	year = {1994}}

@phdthesis{Pinzger2005,
	author = {Martin Pinzger},
	date-added = {2008-04-09 11:29:25 +0200},
	date-modified = {2008-04-09 11:29:25 +0200},
	school = {Vienna University of Technology},
	title = {ArchView -- Analyzing Evolutionary Aspects of Complex Software Systems},
	year = {2005}}

@inproceedings{Shneiderman2001,
	author = {Shneiderman, B. and Wattenberg, M.},
	booktitle = {IEEE Symposium on Information Visualization (INFOVIS 2001)},
	date-added = {2008-04-08 17:59:21 +0200},
	date-modified = {2008-04-08 17:59:36 +0200},
	pages = {73--78},
	title = {Ordered treemap layouts},
	year = {2001}}

@article{Shneiderman1992,
	author = {Ben Shneiderman},
	date-added = {2008-04-08 17:48:23 +0200},
	date-modified = {2023-03-07 11:21:47 +0100},
	journal = {Trans. Graph.},
	number = {1},
	pages = {92--99},
	publisher = {ACM},
	title = {Tree visualization with tree-maps: 2-d space-filling approach},
	volume = {11},
	year = {1992}}

@inproceedings{Johnson1991,
	author = {Brian Johnson and Ben Shneiderman},
	booktitle = {Conference on Visualization ({VIS})},
	date-added = {2008-04-08 17:47:08 +0200},
	date-modified = {2022-12-06 12:13:00 +0100},
	pages = {284--291},
	publisher = {IEEE},
	title = {Tree-Maps: a space-filling approach to the visualization of hierarchical information structures},
	year = {1991}}

@article{Bederson2002,
	author = {Benjamin B. Bederson and Ben Shneiderman and Martin Wattenberg},
	date-added = {2008-04-08 17:38:42 +0200},
	date-modified = {2023-03-07 11:18:41 +0100},
	journal = {Trans. Graph.},
	number = {4},
	pages = {833--854},
	publisher = {ACM},
	title = {Ordered and quantum treemaps: Making effective use of {2D} space to display hierarchies},
	volume = {21},
	year = {2002}}

@inproceedings{Wang2006,
	author = {Weixin Wang and Hui Wang and Guozhong Dai and Hongan Wang},
	booktitle = {SIGCHI Conference on Human Factors in Computing Systems ({CHI})},
	date-added = {2008-04-08 17:28:35 +0200},
	date-modified = {2022-12-15 18:11:04 +0100},
	pages = {517--520},
	publisher = {ACM},
	title = {Visualization of large hierarchical data by circle packing},
	year = {2006}}

@inproceedings{Balzer2005,
	author = {Michael Balzer and Oliver Deussen and Claus Lewerentz},
	booktitle = {Symposium on Software Visualization ({SoftVis})},
	date-added = {2008-04-08 16:32:01 +0200},
	date-modified = {2023-02-21 18:02:02 +0100},
	pages = {165--172},
	publisher = {ACM},
	title = {Voronoi treemaps for the visualization of software metrics},
	year = {2005}}

@inproceedings{Hindle2007,
	author = {Hindle, Abram and Jiang, Zhen Ming and Koleilat, Walid and Godfrey, Michael W. and Holt, Richard C.},
	booktitle = {International Workshop on Visualizing Software for Understanding and Analysis ({VISSOFT})},
	date-added = {2008-04-04 17:08:24 +0200},
	date-modified = {2023-02-28 11:47:08 +0100},
	keywords = {computer animation, program visualisation, reverse engineering, software architecture, software prototypingPostgreSQL DBMS, YARN prototype tool, evolution animation, software system architectural evolution, yet another reverse-engineering narrative tool},
	pages = {129--136},
	title = {{YARN}: {A}nimating Software Evolution},
	year = {2007}}

@book{Few2004,
	author = {Stephen Few},
	date-added = {2008-03-29 22:53:10 +0100},
	date-modified = {2008-03-29 22:53:21 +0100},
	publisher = {Analytics Press},
	title = {Show me the numbers: Designing Tables and Graphs to Enlighten},
	year = {2004}}

@inproceedings{Muller1988,
	author = {Muller, H. A. and Klashinsky, K.},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2008-03-29 19:13:18 +0100},
	date-modified = {2023-02-21 17:58:00 +0100},
	pages = {80--86},
	publisher = {ACM},
	title = {Rigi: a system for programming-in-the-large},
	year = {1988}}

@inproceedings{Jerding1997,
	author = {Dean F. Jerding and John T. Stasko and Thomas Ball},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2008-03-29 19:09:25 +0100},
	date-modified = {2022-12-06 12:07:02 +0100},
	pages = {360--370},
	publisher = {ACM},
	title = {Visualizing interactions in program executions},
	year = {1997}}

@article{Kleyn1988,
	author = {Michael F. Kleyn and Paul C. Gingrich},
	booktitle = {Conference Proceedings on Object-Oriented Programming Systems, Languages and Applications},
	date-added = {2008-03-29 19:04:29 +0100},
	date-modified = {2008-03-29 19:04:43 +0100},
	journal = {SIGPLAN Not.},
	number = {11},
	pages = {191--205},
	publisher = {ACM},
	title = {GraphTrace\---understanding object-oriented systems using concurrently animated views},
	volume = {23},
	year = {1988}}

@inproceedings{Pauw1993,
	author = {Wim De Pauw and Richard Helm and Doug Kimelman and John Vlissides},
	booktitle = {Conference on Object-oriented programming systems, languages, and applications ({OOPSLA})},
	date-added = {2008-03-29 19:01:25 +0100},
	date-modified = {2023-02-21 18:17:50 +0100},
	pages = {326--337},
	publisher = {ACM},
	title = {Visualizing the behavior of object-oriented systems},
	year = {1993}}

@inproceedings{Storey1995,
	author = {Storey, Margaret-Anne and M\"uller, Hausi},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2008-03-29 18:55:58 +0100},
	date-modified = {2022-12-30 17:15:24 +0100},
	editor = {IEEE},
	title = {Manipulating and Documenting Software Structures using {SHriMP} Views},
	year = {1995}}

@article{Storey1999,
	author = {Storey, Margaret-Anne and F. D. Fracchia and M\"uller, Hausi},
	date-added = {2008-03-29 18:26:04 +0100},
	date-modified = {2022-12-30 17:16:31 +0100},
	journal = {Journal of Systems and Software},
	number = {3},
	pages = {171--185},
	publisher = {Elsevier Science Inc.},
	title = {Cognitive design elements to support the construction of a mental model during software exploration},
	volume = {44},
	year = {1999}}

@article{Erlikh2000,
	author = {Len Erlikh},
	date-added = {2008-03-29 17:25:54 +0100},
	date-modified = {2008-03-29 17:27:03 +0100},
	journal = {IT Professional},
	keywords = {business data processing, software development management, software maintenance, software reviewsAPIs, Relativity Technologies, RescueWare, Y2K, application backlog, application program interfaces, business knowledge, business requirements, business services, distributed architectures, e-business, e-components, legacy systems redevelopment, legacy transformation software, mainframe based mission-critical systems, modern industry-standard protocols, productive platforms, qualified personnel, technology enhancements},
	number = {3},
	pages = {17--23},
	title = {Leveraging legacy system dollars for e-business},
	volume = {2},
	year = {2000}}

@inproceedings{Neumann2005,
	author = {Neumann, Petra and Schlechtweg, Stefan and Carpendale, Sheelagh},
	booktitle = {Eurographics/IEEE VGTC Symposium on Data Visualization},
	date-added = {2008-03-27 20:48:49 +0100},
	date-modified = {2023-03-12 15:18:14 +0100},
	organization = {The Eurographics Association},
	pages = {53--60},
	title = {{A}rc{T}rees: {V}isualizing {R}elations in {H}ierarchical {D}ata},
	year = {2005}}

@inproceedings{Eiglsperger2003,
	author = {Markus Eiglsperger and Michael Kaufmann and Martin Siebenhaller},
	booktitle = {Symposium on Software Visualization ({SoftVis})},
	date-added = {2008-03-26 15:22:09 +0100},
	date-modified = {2022-12-06 12:09:02 +0100},
	pages = {189--199},
	publisher = {ACM},
	title = {A topology-shape-metrics approach for the automatic layout of {UML} class diagrams},
	year = {2003}}

@article{Bentley1975,
	author = {Jon Louis Bentley},
	date-added = {2008-03-25 17:58:37 +0100},
	date-modified = {2023-03-12 15:22:58 +0100},
	journal = {Communications of the {ACM}},
	number = {9},
	pages = {509--517},
	publisher = {ACM},
	title = {Multidimensional binary search trees used for associative searching},
	volume = {18},
	year = {1975}}

@article{Eisenstadt1990,
	author = {Marc Eisenstadt and John Domingue and Tim Rajan and Enrico Motta},
	date-added = {2008-03-18 16:28:37 +0100},
	date-modified = {2023-02-21 18:19:58 +0100},
	journal = {Transactions on Software Engineering},
	number = {10},
	pages = {1164--1177},
	publisher = {IEEE},
	title = {Visual Knowledge Engineering},
	volume = {16},
	year = {1990}}

@article{Price1993,
	author = {Blaine A. Price and Ronald M. Baecker and Ian S. Small},
	date-added = {2008-03-18 16:21:14 +0100},
	date-modified = {2008-03-18 16:21:14 +0100},
	journal = {Journal of Visual Languages and Computing},
	number = {3},
	pages = {211--266},
	title = {A Principled Taxonomy of Software Visualization},
	volume = {4},
	year = {1993}}

@article{Myers1986,
	author = {B. A. Myers},
	date-added = {2008-03-18 16:17:35 +0100},
	date-modified = {2023-03-12 15:26:59 +0100},
	journal = {SIGCHI Bulletin},
	number = {4},
	pages = {59--66},
	publisher = {ACM},
	read = {No},
	title = {Visual programming, programming by example, and program visualization: a taxonomy},
	volume = {17},
	year = {1986}}

@article{Chikofsky1990,
	author = {Chikofsky, E. J. and Cross, J. H.},
	date-added = {2008-03-18 16:11:38 +0100},
	date-modified = {2023-02-21 18:20:38 +0100},
	journal = {IEEE Software},
	keywords = {reeng reveng},
	number = {1},
	pages = {13--17},
	publisher = {IEEE},
	title = {Reverse Engineering and Design Recovery: A Taxonomy},
	volume = {7},
	year = {1990}}

@inproceedings{Soukup1978,
	author = {J. Soukup},
	booktitle = {Conference on Design Automation ({DAC})},
	date-added = {2008-03-18 16:06:20 +0100},
	date-modified = {2022-12-06 12:16:51 +0100},
	pages = {100--102},
	publisher = {IEEE},
	title = {Fast maze router},
	year = {1978}}

@inproceedings{Reinhard2006,
	author = {Tobias Reinhard and Christian Seybold and Silvio Meier and Martin Glinz and Nancy Merlo-Schett},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-added = {2008-03-18 16:03:23 +0100},
	date-modified = {2022-12-15 18:07:39 +0100},
	pages = {273--276},
	publisher = {IEEE},
	title = {Human-Friendly Line Routing for Hierarchical Diagrams},
	year = {2006}}

@article{Itoh2004,
	author = {Takayuki Itoh and Yumi Yamaguchi and Yuko Ikehata and Yasumasa Kajinaga},
	date-added = {2008-03-18 16:00:50 +0100},
	date-modified = {2023-03-07 11:15:55 +0100},
	journal = {Transactions on Visualization and Computer Graphics},
	number = {3},
	pages = {302--313},
	publisher = {IEEE},
	title = {Hierarchical Data Visualization Using a Fast Rectangle-Packing Algorithm},
	volume = {10},
	year = {2004}}

@inproceedings{Murata1995,
	abstract = {The first and the most critical stage in VLSI layout design is the placement, the background of which is the rectangle packing problem: Given many rectangular modules of arbitrary site, place them without overlapping on a layer in the smallest bounding rectangle. Since the variety of the packing is infinite (two-dimensionally continuous) many, the key issue for successful optimization is in the introduction of a P-admissible solution space, which is a finite set of solutions at least one of which is optimal. This paper proposes such a solution space where each packing is represented by a pair of module name sequences. Searching this space by simulated annealing, hundreds of modules could be successfully packed as demonstrated. Combining a conventional wiring method, the biggest MCNC benchmark ami49 is challenged},
	author = {Murata, H. and Fujiyoshi, K. and Nakatake, S. and Kajitani, Y.},
	booktitle = {International Conference on Computer-Aided Design ({ICCAD})},
	date-added = {2008-03-18 15:55:26 +0100},
	date-modified = {2023-03-12 15:23:25 +0100},
	keywords = {VLSI, circuit layout CAD, modules, simulated annealing MCNC benchmark ami49, P-admissible solution space, VLSI layout design, module name sequences, rectangle-packing-based module placement, simulated annealing, smallest bounding rectangle, solution space},
	pages = {472--479},
	title = {Rectangle-packing-based module placement},
	year = {1995}}

@article{Murata1996,
	abstract = {The earliest and the most critical stage in VLSI layout design is the placement. The background is the rectangle packing problem: given a set of rectangular modules of arbitrary sizes, place them without overlap on a plane within a rectangle of minimum area. Since the variety of the packing is uncountably infinite, the key issue for successful optimization is the introduction of a finite solution space which includes an optimal solution. This paper proposes such a solution space where each packing is represented by a pair of module name sequences, called a sequence-pair. Searching this space by simulated annealing, hundreds of modules have been packed efficiently as demonstrated. For applications to VLSI layout, we attack the biggest MCNC benchmark ami49 with a conventional wiring area estimation method, and obtain a highly promising placement},
	author = {Murata, H. and Fujiyoshi, K. and Nakatake, S. and Kajitani, Y.},
	date-added = {2008-03-18 15:53:01 +0100},
	date-modified = {2023-03-07 11:22:07 +0100},
	journal = {Transactions on Computer-Aided Design of Integrated Circuits and Systems},
	keywords = {VLSI, circuit layout CAD, circuit optimisation, integrated circuit design, modules, simulated annealing, wiringMCNC benchmark, VLSI module placement, ami49, finite solution space, layout, module name sequences, physical design, rectangle-packing, sequence-pair, wiring area estimation method},
	month = dec,
	number = {12},
	pages = {1518--1524},
	publisher = {IEEE},
	title = {VLSI module placement based on rectangle-packing by the sequence-pair},
	volume = {15},
	year = {1996}}

@article{Itoh2006,
	author = {Takayuki Itoh and Hiroki Takakura and Atsushi Sawada and Koji Koyamada},
	date-added = {2008-03-18 15:48:20 +0100},
	date-modified = {2023-02-21 18:20:47 +0100},
	journal = {IEEE Comput. Graph. Appl.},
	number = {2},
	pages = {40--47},
	publisher = {IEEE},
	title = {Hierarchical Visualization of Network Intrusion Detection Data},
	volume = {26},
	year = {2006}}

@inproceedings{Bohnet2006,
	author = {Johannes Bohnet and J\"{u}rgen D\"{o}llner},
	booktitle = {Symposium on Software Visualization ({SoftVis})},
	date-added = {2008-03-18 15:37:21 +0100},
	date-modified = {2022-12-06 12:22:49 +0100},
	pages = {95--104},
	publisher = {ACM},
	title = {Visual exploration of function call graphs for feature location in complex software systems},
	year = {2006}}

@article{Eick2001,
	author = {Stephen Eick and Todd Graves and Alan Karr and J. Marron and Audris Mockus},
	date-added = {2008-03-18 15:33:18 +0100},
	date-modified = {2023-02-21 18:21:52 +0100},
	issn = {0098-5589},
	journal = {Transactions on Software Engineering},
	number = {1},
	pages = {1--12},
	publisher = {IEEE},
	title = {Does Code Decay? Assessing the Evidence from Change Management Data},
	volume = {27},
	year = {2001}}

@book{Lehman1985,
	address = {London},
	author = {Lehman, Meir M. and B\'el\'ady, L\'aszl\'o},
	date-added = {2008-03-18 15:32:59 +0100},
	date-modified = {2022-12-30 17:24:14 +0100},
	isbn = {0-12-442440-6},
	keywords = {oorp evolution},
	pages = {538},
	publisher = {London Academic Press},
	title = {Program Evolution: Processes of Software Change},
	year = {1985}}

@phdthesis{Girba2005,
	abstract = {Over the past three decades, more and more research has been spent
                   on understanding software evolution. The development and spread of versioning
                   systems made valuable data available for study. Indeed, versioning systems
                   provide rich information for analyzing software evolution, but it is exactly
                   the richness of the information that raises the problem. The more versions we
                   consider, the more data we have at hand. The more data we have at hand, the
                   more techniques we need to employ to analyze it. The more techniques we need,
                   the more generic the infrastructure should be. The approaches developed so far
                   rely on ad-hoc models, or on too specific meta-models, and thus, it is
                   difficult to reuse or compare their results. We argue for the need of an
                   explicit and generic meta-model for allowing the expression and combination of
                   software evolution analyses. We review the state-of-the-art in software
                   evolution analysis and we conclude that: \emph{To provide a generic meta-model
                   for expressing software evolution analyses, we need to recognize the evolution
                   as an explicit phenomenon and model it as a first class entity.} Our solution
                   is to encapsulate the evolution in the explicit notion of history as a
                   sequence of versions, and to build a meta-model around these notions: Hismo.
                   To show the usefulness of our meta-model we exercise its dif ferent
                   characteristics by building several reverse engineering applications. This
                   dissertation of fers a meta-model for software evolution analysis yet, the
                   concepts of history and version do not necessarily depend on software. We show
                   how the concept of history can be generalized and how we can obtain our
                   meta-model by transformations applied on structural meta-models. As a
                   consequence, our approach of modeling evolution is not restricted to software
                   analysis, but can be applied to other fields as well.},
	address = {Berne},
	author = {Tudor G\^irba},
	cvs = {TGirbaPhD},
	date-added = {2008-03-18 15:07:19 +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	keywords = {scg-pub skipdoi scg-phd evolution girba jb06 recast06},
	month = nov,
	pages = {164},
	school = {University of Berne},
	title = {Modeling History to Understand Software Evolution},
	year = {2005},
	bdsk-url-1 = {http://www.iam.unibe.ch/~scg/Archive/PhD/girba-phd.pdf}}

@techreport{Demeyer2001,
	annote = {report notrefereed},
	author = {Serge Demeyer and Sander Tichelaar and St\'ephane Ducasse},
	date-added = {2008-03-18 15:07:09 +0100},
	date-modified = {2008-03-18 15:07:09 +0100},
	institution = {University of Bern},
	keywords = {olit sergedem-techrep tich-techrep stefPub},
	title = {{FAMIX} 2.1 --- {The} {FAMOOS} {Information} {Exchange} {Model}},
	year = {2001}}

@inproceedings{Wettel2007a,
	author = {Richard Wettel and Michele Lanza},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-added = {2008-03-18 14:44:10 +0100},
	date-modified = {2022-12-06 12:15:49 +0100},
	pages = {231--240},
	publisher = {IEEE},
	title = {Program Comprehension through Software Habitability},
	year = {2007}}

@inproceedings{Wettel2007,
	author = {Richard Wettel and Michele Lanza},
	booktitle = {International Workshop on Visualizing Software for Understanding and Analysis ({VISSOFT})},
	date-added = {2008-03-18 14:44:10 +0100},
	date-modified = {2022-12-06 12:15:04 +0100},
	pages = {92--99},
	publisher = {IEEE},
	title = {Visualizing Software Systems as Cities},
	year = {2007}}

@inproceedings{Ripley2007,
	author = {Ripley, R. M. and Sarma, A. and van der Hoek, A.},
	booktitle = {International Workshop on Visualizing Software for Understanding and Analysis ({VISSOFT})},
	date-added = {2008-03-18 14:41:41 +0100},
	date-modified = {2023-02-28 11:48:19 +0100},
	keywords = {data visualisation, program visualisation, software development managementcontextualized visualization, software project awareness, software project evolution, software tool},
	month = jun,
	pages = {137--144},
	title = {A Visualization for Software Project Awareness and Evolution},
	year = {2007}}

@inproceedings{Hendley1995,
	author = {R. J. Hendley and N. S. Drew and A. M. Wood and R. Beale},
	booktitle = {Symposium on Information Visualization ({InfoVis})},
	date-added = {2008-03-18 14:33:41 +0100},
	date-modified = {2022-12-06 12:01:51 +0100},
	publisher = {IEEE},
	title = {Narcissus: Visualising Information},
	year = {1995}}

@inproceedings{Maletic2002,
	author = {Jonathan I. Maletic and Andrian Marcus and Michael Collard},
	booktitle = {International Workshop on Visualizing Software for Understanding and Analysis ({VISSOFT})},
	date-added = {2008-03-18 14:29:13 +0100},
	date-modified = {2023-02-28 11:48:29 +0100},
	keywords = {visualization},
	month = jun,
	pages = {32--40},
	publisher = {IEEE},
	title = {A Task Oriented View of Software Visualization},
	year = {2002}}

@inproceedings{Marcus2005,
	author = {Andrian Marcus and Denise Comorski and Andrey Sergeyev},
	booktitle = {International Workshop on Program Comprehension ({IWPC})},
	date-added = {2008-03-18 14:26:00 +0100},
	date-modified = {2023-02-21 18:15:18 +0100},
	pages = {307--316},
	publisher = {IEEE},
	title = {Supporting the Evolution of a Software Visualization Tool Through Usability Studies},
	year = {2005}}

@inproceedings{Kot2005,
	author = {Blazej Kot and Burkhard Wuensche and John Grundy and John Hosking},
	booktitle = {SIGCHI New Zealand Chapter's International Conference on Computer-human interaction ({CHINZ})},
	date-added = {2008-03-18 14:19:44 +0100},
	date-modified = {2022-12-15 18:08:13 +0100},
	pages = {53--60},
	publisher = {ACM},
	title = {Information visualisation utilising 3D computer game engines case study: a source code comprehension tool},
	year = {2005}}

@article{Parker1998,
	author = {Greg Parker and Glenn Franck and Colin Ware},
	date-added = {2008-03-18 14:14:41 +0100},
	date-modified = {2008-03-18 14:14:56 +0100},
	journal = {Journal of Visual Languages and Computing},
	number = {3},
	pages = {299--317},
	title = {Visualization of Large Nested Graphs in 3D: Navigation and Interaction},
	volume = {9},
	year = {1998}}

@inproceedings{Aoki2001,
	author = {Atsushi Aoki and Kaoru Hayashi and Kouichi Kishida and Kumiyo Nakakoji and Yoshiyuki Nishinaka and Brent Reeves and Akio Takashima and Yasuhiro Yamamoto},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-added = {2008-03-18 12:57:33 +0100},
	date-modified = {2022-11-28 18:38:38 +0100},
	keywords = {olit},
	title = {A Case Study of the Evolution of {Jun}: an Object-Oriented Open-Source {3D} Multimedia Library},
	year = {2001}}

@inproceedings{Maass2007,
	author = {Stefan Maass and J{\"u}rgen D{\"o}llner},
	booktitle = {International Conference on Computer Graphics, Virtual Reality, Visualization and Interaction in Africa ({AFRIGRAPH})},
	date-added = {2008-03-18 12:55:55 +0100},
	date-modified = {2023-02-21 18:06:45 +0100},
	keywords = {Labeling, Annotation, Interactive Virtual 3D Environments},
	month = oct,
	pages = {53--59},
	publisher = {ACM},
	title = {Embedded Labels for Line Features in Interactive 3D Virtual Environments},
	year = {2007}}

@article{Holten2006,
	author = {Danny Holten},
	date-added = {2008-03-18 12:30:10 +0100},
	date-modified = {2023-03-07 11:16:21 +0100},
	journal = {Transactions on Visualization and Computer Graphics},
	number = {5},
	pages = {741--748},
	publisher = {IEEE},
	title = {Hierarchical Edge Bundles: Visualization of Adjacency Relations in Hierarchical Data},
	volume = {12},
	year = {2006}}

@mastersthesis{Lungu2004,
	author = {Mircea Lungu},
	date-added = {2008-03-18 12:12:18 +0100},
	date-modified = {2008-03-18 12:13:18 +0100},
	keywords = {metrics visualization},
	school = {Faculty of Automatics and Computer Science, "Politehnica" University of Timi\c{s}oara},
	title = {Conformity Strategies: Measures Of Software Design Rules},
	year = {2004}}

@inproceedings{Jazayeri1999,
	author = {Mehdi Jazayeri and Harald Gall and Claudio Riva},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2008-03-18 12:09:16 +0100},
	date-modified = {2022-12-06 12:06:09 +0100},
	keywords = {oorp},
	pages = {99--108},
	publisher = {IEEE},
	title = {Visualizing {Software} {Release} {Histories}: The {Use} of {Color} and {Third} {Dimension}},
	year = {1999}}

@inproceedings{Pinzger2005a,
	annote = {internationalconference},
	author = {Martin Pinzger and Harald Gall and Michael Fischer and Michele Lanza},
	booktitle = {Symposium on Software Visualization ({SoftVis})},
	date-added = {2008-03-18 12:08:44 +0100},
	date-modified = {2023-02-21 18:19:33 +0100},
	month = may,
	pages = {67--75},
	publisher = {ACM},
	title = {Visualizing Multiple Evolution Metrics},
	year = {2005}}

@inproceedings{Girba2005a,
	abstract = {Analyzing historical information can show how a software system
                   evolved into its current state, which parts of the system are stable and
                   which have changed more. However, historical analysis implies processing a
                   vast amount of information making the interpretation of the results
                   difficult. To address this issue, we introduce the notion of the history of
                   source code artifacts as a first class entity and define measurements which
                   summarize the evolution of such entities. We use these measurements to define
                   rules by which to detect different characteristics of the evolution of class
                   hierarchies. Furthermore, we discuss the results we obtained by visualizing
                   them using a polymetric view. We apply our approach on two large open source
                   case studies and classify their class hierarchies based on their history.},
	annote = {internationalconference},
	author = {Tudor G\^irba and Michele Lanza and St\'ephane Ducasse},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-added = {2008-03-18 12:08:13 +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	keywords = {scg-pub evolution visualization van recast05 girba stefPub jb05 moose},
	pages = {2--11},
	publisher = {IEEE},
	title = {Characterizing the Evolution of Class Hierarchies},
	year = {2005},
	bdsk-url-1 = {https://doi.org/10.1109/CSMR.2005.15}}

@inproceedings{Lanza2001,
	abstract = {One of the major problems in software evolution is coping with
                   the complexity which stems from the huge amount of data that must be
                   considered. The current approaches to deal with that problem all aim at a
                   reduction of complexity and a filtering of the relevant information. In this
                   paper we propose an approach based on a com- bination of software
                   visualization and software metrics which we have already successfully
                   applied in the field of software reverse engineering. Using this approach we
                   discuss a simple and effective way to visualize the evolution of software
                   systems which helps to recover the evolution of object oriented software
                   systems.},
	annote = {internationalworkshop},
	author = {Michele Lanza},
	booktitle = {International Workshop on Principles of Software Evolution ({IWPSE})},
	date-added = {2008-03-18 12:07:20 +0100},
	date-modified = {2023-02-21 18:01:03 +0100},
	keywords = {scg-pub snf01 jb01 moose},
	pages = {37--42},
	title = {The Evolution Matrix: Recovering Software Evolution using Software Visualization Techniques},
	year = {2001},
	bdsk-url-1 = {http://www.iam.unibe.ch/~scg/Archive/Papers/Lanz01cEvolutionMatrix.pdf},
	bdsk-url-2 = {http://doi.acm.org/10.1145/602461.602467}}

@inproceedings{Holt1996,
	author = {Richard Holt and Jason Pak},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-added = {2008-03-18 12:06:54 +0100},
	date-modified = {2022-12-06 12:07:40 +0100},
	keywords = {evolution visualization},
	pages = {163--167},
	publisher = {IEEE},
	title = {{GASE}: Visualizing Software Evolution-in-the-Large},
	year = {1996}}

@inproceedings{DAmbros2006,
	author = {Marco D'Ambros and Michele Lanza and Mircea Lungu},
	booktitle = {International Workshop on Mining Software Repositories ({MSR})},
	date-added = {2008-03-18 12:06:40 +0100},
	date-modified = {2023-02-21 17:56:31 +0100},
	pages = {26--32},
	title = {The Evolution Radar: Integrating Fine-grained and Coarse-grained Logical Coupling Information},
	year = {2006}}

@inproceedings{Lungu2007,
	author = {Mircea Lungu and Michele Lanza},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-added = {2008-03-18 12:06:26 +0100},
	date-modified = {2023-02-21 18:18:22 +0100},
	pages = {91--100},
	publisher = {IEEE},
	title = {Exploring Inter-Module Relationships in Evolving Software Systems},
	year = {2007}}

@inproceedings{DAmbros2006a,
	author = {Marco D'Ambros and Michele Lanza},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-added = {2008-03-18 12:06:15 +0100},
	date-modified = {2023-02-21 17:58:32 +0100},
	pages = {227--236},
	publisher = {IEEE},
	title = {Software Bugs and Evolution: A Visual Approach to Uncover Their Relationship},
	year = {2006}}

@article{Fischer2004,
	author = {Michael Fischer and Harald Gall},
	date-added = {2008-03-18 12:05:56 +0100},
	date-modified = {2008-03-18 12:05:56 +0100},
	journal = {Journal of Software Maintenance and Evolution: Research and Practice},
	keywords = {olit feature evolution},
	number = {6},
	pages = {385--403},
	publisher = {John Wiley \& Sons, Ltd.},
	title = {Visualizing Feature Evolution of Large-Scale Software based on Problem and Modification Report Data},
	volume = {16},
	year = {2004}}

@inproceedings{Gall1997,
	author = {Harald Gall and Mehdi Jazayeri and Ren{\'e} Kl{\"o}sch and Georg Trausmuth},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2008-03-18 11:57:47 +0100},
	date-modified = {2022-12-06 12:03:54 +0100},
	keywords = {oorp evolution},
	pages = {160--166},
	publisher = {IEEE},
	title = {Software Evolution Observations Based on Product Release History},
	year = {1997}}

@inproceedings{Ratiu2004,
	abstract = {As systems evolve and their structure decays, maintainers
                   need accurate and automatic identification of the design
                   problems. Current approaches for automatic detection of
                   design problems are not accurate enough because they
                   analyze only a single version of a system and consequently
                   they miss essential information as design problems appear
                   and evolve over time. Our approach is to use the historical
                   information of the suspected flawed structure to increase the
                   accuracy of the automatic problem detection. Our means is
                   to define measurements which summarize how persistent the
                   problem was and how much maintenance effort was spent
                   on the suspected structure. We apply our approach on a
                   large scale case study and show how it improves the accuracy
                   of the detection of God Classes and Data Classes, and
                   additionally how it adds valuable semantical information
                   about the evolution of flawed design structures.},
	annote = {internationalconference},
	author = {Daniel Ra\c{t}iu and St\'ephane Ducasse and Tudor G{\^\i}rba and Radu Marinescu},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-added = {2008-03-18 11:57:00 +0100},
	date-modified = {2023-02-21 17:59:51 +0100},
	pages = {223--232},
	publisher = {IEEE},
	title = {Using History Information to Improve Design Flaws Detection},
	year = {2004}}

@article{Lanza2003,
	abstract = {Reverse engineering software systems has become a major concern in
                   software industry because of their sheer size and complexity. This problem
                   needs to be tackled, since the systems in question are of considerable worth
                   to their owners an
                   d maintainers. In this article we present the concept of a polymetric view, a
                   lightweight software visualization technique enriched with software metrics
                   information. Polymetric views help to understand the structure and detect
                   problems of a software syst
                   em in the initial phases of a reverse engineering process. We discuss the
                   benefits and limits of several predefined polymetric views we have implemented
                   in our tool CodeCrawler. Moreover, based on clusters of different polymetric
                   views we have developed a
                   methodology which supports and guides a software engineer in the first phases
                   of a reverse engineering of a large software system. We have refined this
                   methodology by repeatedly applying it on industrial systems, and illustrate it
                   by applying a selection of polymetric views to a case study.},
	annote = {internationaljournal},
	author = {Michele Lanza and St\'ephane Ducasse},
	date-added = {2008-03-18 11:53:21 +0100},
	date-modified = {2023-02-21 18:25:00 +0100},
	journal = {Transactions on Software Engineering},
	month = sep,
	number = {9},
	pages = {782--795},
	publisher = {IEEE},
	title = {Polymetric Views---A Lightweight Visual Approach to Reverse Engineering},
	volume = {29},
	year = {2003},
	bdsk-url-1 = {http://www.iam.unibe.ch/~scg/Archive/Papers/Lanz03dTSEPolymetric.pdf},
	bdsk-url-2 = {http://doi.ieeecomputersociety.org/10.1109/TSE.2003.1232284},
	bdsk-url-3 = {https://doi.org/10.1109/TSE.2003.1232284}}

@book{Lanza2006,
	author = {Michele Lanza and Radu Marinescu},
	date-added = {2008-03-18 11:53:08 +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {3-540-24429-8},
	keywords = {metrics norex06},
	publisher = {Springer},
	title = {Object-Oriented Metrics in Practice},
	year = {2006},
	bdsk-url-1 = {http://www.springer.com/alert/urltracking.do?id=5907042}}

@inproceedings{Marinescu2004,
	annote = {internationalconference},
	author = {Radu Marinescu},
	booktitle = {International Conference on Software Maintenance ({ICSM})},
	date-added = {2008-03-18 11:52:49 +0100},
	date-modified = {2023-02-21 18:09:24 +0100},
	pages = {350--359},
	publisher = {IEEE},
	title = {Detection Strategies: Metrics-Based Rules for Detecting Design Flaws},
	year = {2004}}

@inproceedings{Andrews1997,
	author = {Keith Andrews and Josef Wolte and Michael Pichler},
	booktitle = {VIS},
	date-added = {2008-03-18 11:52:37 +0100},
	date-modified = {2022-12-06 12:18:20 +0100},
	month = oct,
	pages = {49--52},
	publisher = {IEEE},
	title = {Information Pyramids: A New Approach to Visualising Large Hierarchies},
	year = {1997}}

@book{Triola2006,
	author = {Mario Triola},
	publisher = {Addison-Wesley},
	title = {Elementary Statistics},
	year = {2006}}

@book{Tukey1977,
	author = {John W. Tukey},
	date-modified = {2008-03-18 15:19:13 +0100},
	publisher = {Addison-Wesley},
	title = {Exploratory Data Analysis},
	year = {1977}}

@inproceedings{Balzer2004,
	author = {Michael Balzer and Andreas Noack and Oliver Deussen and Claus Lewerentz},
	booktitle = {VisSym},
	date-modified = {2022-12-06 11:10:23 +0100},
	pages = {261--266},
	publisher = {Eurographics Association},
	title = {Software Landscapes: Visualizing the Structure of Large Software Systems},
	year = {2004}}

@inproceedings{Charters2002,
	author = {Stuart M. Charters and Claire Knight and Nigel Thomas and Malcolm Munro},
	booktitle = {Software Engineering and Knowledge Engineering ({SEKE})},
	date-modified = {2022-12-06 12:22:26 +0100},
	pages = {765--772},
	publisher = {ACM},
	title = {Visualisation for informed decision making; from code to components},
	year = {2002}}

@inproceedings{Knight2000,
	author = {Claire Knight and Malcolm C. Munro},
	booktitle = {International Conference on Information Visualization ({IV})},
	date-modified = {2023-02-21 18:20:29 +0100},
	pages = {198--205},
	publisher = {IEEE},
	title = {Virtual but Visible Software},
	year = {2000}}

@inproceedings{Panas2003,
	author = {Thomas Panas and Rebecca Berrigan and John Grundy},
	booktitle = {IV 2003},
	date-modified = {2022-11-28 18:38:18 +0100},
	pages = {314},
	publisher = {IEEE Computer Society},
	title = {A {3D} Metaphor for Software Production Visualization},
	year = {2003}}

@inproceedings{Wilhelm2005,
	author = {Michael Wilhelm and Stephan Diehl},
	booktitle = {International Workshop on Visualizing Software for Understanding and Analysis ({VISSOFT})},
	date-modified = {2023-02-28 11:47:53 +0100},
	title = {{DependencyViewer} - A Tool for Visualizing Package Design Quality Metrics},
	year = {2005}}

@inproceedings{Falke2005,
	author = {Raimar Falke and Raimund Klein and Rainer Koschke and Jochen Quante},
	booktitle = {International Workshop on Visualizing Software for Understanding and Analysis ({VISSOFT})},
	date-modified = {2023-02-28 11:47:36 +0100},
	pages = {83--88},
	title = {The Dominance Tree in Visualizing Software Dependencies},
	year = {2005}}

@inproceedings{Reiss2001,
	author = {Steven P. Reiss},
	booktitle = {ACM SIGPLAN/SIGSOFT workshop on Program Analysis for Software Tools and Engineering ({PASTE})},
	date-modified = {2023-02-21 17:45:52 +0100},
	pages = {2--5},
	publisher = {ACM},
	title = {An overview of BLOOM},
	year = {2001}}

@article{Gurp2002,
	author = {Jilles van Gurp and Jan Bosch},
	date-modified = {2022-12-06 11:27:22 +0100},
	journal = {Journal of Systems and Software},
	number = {2},
	pages = {105--119},
	publisher = {Elsevier},
	title = {Design erosion: problems and causes},
	volume = {61},
	year = {2002}}

@inproceedings{Marinescu2005,
	author = {Cristina Marinescu and Radu Marinescu and Petru Florin Mihancea and Daniel Ratiu and Richard Wettel},
	booktitle = {International Conference on Software Maintenance ({ICSM}) Industrial \& Tool Volume},
	date-modified = {2023-02-21 18:10:30 +0100},
	pages = {77--80},
	publisher = {IEEE},
	title = {i{P}lasma: An Integrated Platform for Quality Assessment of Object-Oriented Design.},
	year = {2005}}

@inproceedings{Beyer2006,
	author = {Dirk Beyer and Ahmed Hassan},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-modified = {2022-12-06 12:23:37 +0100},
	publisher = {IEEE},
	title = {Animated Visualization of Software History using Evolution Storyboards},
	year = {2006}}

@inproceedings{Ratzinger2005,
	author = {J. Ratzinger and M. Fischer and H. Gall},
	booktitle = {Eighth International Workshop on Principles of Software Evolution},
	pages = {103--112},
	title = {EvoLens: lens-view visualizations of evolution data},
	year = {2005}}

@inproceedings{Wu2004,
	author = {Wu, J. and Hassan, Ahmed E. and Holt, Richard C.},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-modified = {2022-12-15 18:28:15 +0100},
	pages = {80--89},
	publisher = {IEEE},
	title = {Exploring Software Evolution Using Spectrographs},
	year = {2004}}

@inproceedings{Fischer2006,
	author = {Michael Fischer and Harald C. Gall},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-modified = {2022-12-06 12:04:21 +0100},
	pages = {179--188},
	publisher = {IEEE},
	title = {EvoGraph: A Lightweight Approach to Evolutionary and Structural Analysis of Large Software Systems},
	year = {2006}}

@inproceedings{Voinea2006,
	author = {Lucian Voinea and Alexandru Telea},
	booktitle = {Symposium on Software Visualization},
	date-modified = {2022-12-06 12:14:10 +0100},
	pages = {115--124},
	publisher = {IEEE},
	title = {Multiscale and multivariate visualizations of software evolution},
	year = {2006}}

@inproceedings{Lange2007,
	author = {Christian F. J. Lange and Michel R. V. Chaudron},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-modified = {2023-02-21 18:09:35 +0100},
	pages = {221--230},
	title = {Interactive Views to Improve the Comprehension of UML Models - An Experimental Validation},
	year = {2007}}

@inproceedings{Alam2007,
	author = {Sazzadul Alam and Philippe Dugerdil},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-modified = {2023-02-21 18:07:59 +0100},
	pages = {269--270},
	publisher = {IEEE},
	title = {EvoSpaces Visualization Tool: Exploring Software Architecture in 3D},
	year = {2007}}

@inproceedings{Boccuzzo2007,
	author = {Sandro Boccuzzo and Harald C. Gall},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-modified = {2022-12-06 12:23:21 +0100},
	pages = {273--274},
	publisher = {IEEE},
	title = {{CocoViz}: Supported Cognitive Software Visualization},
	year = {2007}}

@inproceedings{Boccuzzo2007a,
	author = {Sandro Boccuzzo and Harald C. Gall},
	booktitle = {International Workshop on Visualizing Software for Understanding and Analysis ({VISSOFT})},
	date-modified = {2023-02-28 11:48:09 +0100},
	pages = {72--79},
	publisher = {IEEE},
	title = {{CocoViz}: Towards Cognitive Software Visualizations},
	year = {2007}}

@inproceedings{Hegde2008,
	author = {Rajesh Hegde and Prasun Dewan},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-modified = {2022-12-06 12:04:36 +0100},
	publisher = {IEEE},
	title = {Connecting Programming Environments to Support Ad-Hoc Collaboration},
	year = {2008}}

@book{Tonella2005,
	author = {Paolo Tonella and Alessandra Potrich},
	publisher = {Springer},
	title = {Reverse Engineering of Object Oriented Code},
	year = {2005}}

@book{Mens2008,
	date-modified = {2022-12-01 14:57:46 +0100},
	editor = {Mens, Tom and Demeyer, Serge},
	publisher = {Springer},
	title = {Software Evolution},
	year = {2008}}

@inproceedings{Shao2020,
	abstract = {Database-backed web applications are prone to performance bugs related to database accesses. While much work has been conducted on database-access antipatterns with some recent work focusing on performance impact, there still lacks a comprehensive view of database-access performance antipatterns in database-backed web applications. To date, no existing work systematically reports known antipatterns in the literature, and no existing work has studied database-access performance bugs in major types of web applications that access databases differently.To address this issue, we first summarize all known database-access performance antipatterns found through our literature survey, and we report all of them in this paper. We further collect database-access performance bugs from web applications that access databases through language-provided SQL interfaces, which have been largely ignored by recent work, to check how extensively the known antipatterns can cover these bugs. For bugs not covered by the known antipatterns, we extract new database-access performance antipatterns based on real-world performance bugs from such web applications. Our study in total reports 24 known and 10 new database-access performance antipatterns. Our results can guide future work to develop effective tool support for different types of web applications.},
	author = {Shao, Shudi and Qiu, Zhengyi and Yu, Xiao and Yang, Wei and Jin, Guoliang and Xie, Tao and Wu, Xintao},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-03-12 14:57:14 +0100},
	file = {:references/Shao2020.pdf:PDF},
	pages = {58--69},
	publisher = {IEEE},
	title = {Database-Access Performance Antipatterns in Database-Backed Web Applications},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME46990.2020.00016}}

@article{Muse2022a,
	abstract = {Data-intensive systems handle variable, high volume, and high-velocity data generated by human and digital devices. Like traditional software, data-intensive systems are prone to technical debts introduced to cope-up with the pressure of time and resource constraints on developers. Data-access is a critical component of data-intensive systems as it determines the overall performance and functionality of such systems. While data access technical debts are getting attention from the research community, technical debts affecting the performance, are not well investigated. Objective: Identify, categorize, and validate data access performance issues in the context of NoSQL-based and polyglot persistence data-intensive systems using qualitative study. Method: We collect issues from NoSQL-based and polyglot persistence open-source data-intensive systems and identify data access performance issues using inductive coding and build a taxonomy of the root causes. Then, we validate the perceived relevance of the newly identified performance issues using a developer survey.},
	author = {Muse, Biruk Asmare and Nafi, Kawser Wazed and Khomh, Foutse and Antoniol, Giuliano},
	copyright = {arXiv.org perpetual, non-exclusive license},
	date-modified = {2023-02-21 18:32:44 +0100},
	keywords = {Software Engineering (cs.SE), FOS: Computer and information sciences},
	publisher = {arXiv},
	title = {Data-access performance anti-patterns in data-intensive systems},
	year = {2022},
	bdsk-url-1 = {https://arxiv.org/abs/2208.08918},
	bdsk-url-2 = {https://doi.org/10.48550/ARXIV.2208.08918}}

@inproceedings{Muse2022b,
	author = {Muse, Biruk Asmare and Khomh, Foutse and Antoniol, Giuliano},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-21 18:07:19 +0100},
	file = {:references/Muse2022a.pdf:PDF},
	pages = {25--35},
	publisher = {IEEE},
	title = {Do Developers Refactor Data Access Code? An Empirical Study},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/SANER53432.2022.00014}}

@inproceedings{Pradhan2022,
	abstract = {Programs written in a high-level language such as C and Java, interleaved with declarative database processing and inter-service communication statements are common in Enterprise Information Systems (EIS). IT companies that offer re-engineering services for such EIS rely on manual analysis or code analysis tools to understand the flow of control and data within and across the programs during the reverse-engineering phase. Generally, the code analyzers are developed for commonly used programming languages, and lack support for analyzing database processing and inter-service communication statements. Therefore, such analysis tools cannot be readily re-used for re-engineering projects. In this paper, we share the key challenges of handling program analysis requirements for large embedded Structured Query Language (SQL) applications written in C language. We describe our approach to transform a program written in C and embedded SQL into a plain C program which can be automatically analyzed using any available C code analyzer that has no explicit support for domain specific extensions like SQL. We deployed the data dependency analysis based on our transformation approach as a feature in an industrial code analysis tool. We present the evaluation and results that show a precision improvement for slices as compared to the na{\"\i}ve translation provided by the standard pre-compiler.},
	author = {Pradhan, Shrishti and Medicherla, Raveendra Kumar and Kondewar, Shivani and Naik, Ravindra},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-21 18:02:19 +0100},
	file = {:references/Pradhan2022.pdf:PDF},
	pages = {68--72},
	title = {Program Transformations for Precise Analysis of Enterprise Information Systems},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/SANER53432.2022.00020}}

@inproceedings{Lyu2021,
	abstract = {Local databases underpin important features in many mobile applications, such as responsiveness in the face of poor connectivity. However, failure to use such databases correctly can lead to high resource consumption or even security vulnerabilities. We present SAND, an extensible static analysis approach that checks for misuse of local databases, also known as SQL antipatterns, in mobile apps. SAND features novel abstractions for common forms of application/database interactions, which enables concise and precise specification of the antipatterns that SAND checks for. To validate the efficacy of SAND, we have experimented with a diverse suite of 1,000 Android apps. We show that the abstractions that power SAND allow concise specification of all the known antipatterns from the literature (12-74 LOC), and that the antipatterns are modeled accurately (99.4-100% precision). As for performance, SAND requires on average 41 seconds to complete a scan on a mobile app.},
	author = {Lyu, Yingjun and Volokh, Sasha and Halfond, William G. J. and Tripp, Omer},
	booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
	date-modified = {2023-03-12 15:04:37 +0100},
	isbn = {9781450384599},
	keywords = {performance, Mobile applications, security, database},
	pages = {270--282},
	publisher = {ACM},
	title = {{SAND}: {A} Static Analysis Approach for Detecting {SQL} Antipatterns},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1145/3460319.3464818}}

@inproceedings{Grgurina2021,
	abstract = {The growing number of database management systems and applications that use them directly or through some form of proxy has led to the problems when trying to understand the queries sent from the application to the database. There are multiple ways to extract queries from the application, network or database management systems and the way to extract largely depends on the format of the application, technology used and the security concerns. Given these non-functional requirements, we generalize the possible functional features that can be used for evaluation: query extraction and subsequent query modification. The results are then presented using three dimensions: technique (approach), requirement (non-functional criterion), and feature (functional criterion) where applicable. Each combination is analyzed and given the possible use case. Developers can then use this to make an informed decision for their applications.},
	author = {Grgurina, Ivan and {\v S}kvorc, Dejan},
	booktitle = {International Convention on Information, Communication and Electronic Technology ({MIPRO})},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Grgurina2021.pdf:PDF},
	pages = {1648--1653},
	title = {Simplified Evaluation Framework for Query Extraction Techniques},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.23919/MIPRO52101.2021.9596923}}

@inproceedings{Lyu2017,
	abstract = {Local databases have become an important component within mobile applications. Developers use local databases to provide mobile users with a responsive and secure service for data storage and access. However, using local databases comes with a cost. Studies have shown that they are one of the most energy consuming components on mobile devices and misuseof their APIs can lead to performance and security problems. In this paper, we report the results of a large scale empirical study on 1,000 top ranked apps from the Google Play app store. Our results present a detailed look into the practices, costs, and potential problems associated with local database usage in deployed apps. We distill our findings into actionable guidance for developers and motivate future areas of research related to techniques to support mobile app developers.},
	author = {Lyu, Yingjun and Gui, Jiaping and Wan, Mian and Halfond, William G. J.},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {444--455},
	title = {An Empirical Study of Local Database Usage in {Android} Applications},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME.2017.75}}

@inproceedings{Anderson2017,
	author = {Anderson, David and Hills, Mark},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {452--456},
	title = {Query Construction Patterns in {PHP}},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2017.7884652}}

@inproceedings{Delplanque2017,
	abstract = {Relational databases (DB) play a critical role in many information systems. For different reasons, their schemas gather not only tables and columns but also views, triggers or stored functions (i.e., fragments of code describing treatments). As for any other code-related artefact, software quality in a DB schema helps avoiding future bugs. However, few tools exist to analyse DB quality and prevent the introduction of technical debt. Moreover, these tools suffer from limitations like the difficulty to deal with some entities (e.g., functions) or dependencies between entities. This paper presents research issues related to assessing the software quality of a DB schema by adapting existing source code analysis research to database schemas. We present preliminary results that have been validated through the implementation of DBCritics, a prototype tool to perform static analysis on the SQL source code of a database schema. DBCritics addresses the limitations of existing DB quality tools based on an internal representation considering all entities of the database and their relationships.},
	author = {Delplanque, Julien and Etien, Anne and Auverlot, Olivier and Mens, Tom and Anquetil, Nicolas and Ducasse, St{\'e}phane},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-21 18:05:33 +0100},
	file = {:references/Delplanque2017.pdf:PDF},
	pages = {432--436},
	title = {CodeCritics applied to database schema: Challenges and first results},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2017.7884648}}

@inproceedings{Anderson2017a,
	abstract = {The code behind dynamic webpages often includes calls to database libraries, with queries formed using a combination of static text and values computed at runtime. In this paper, we describe our work on a program analysis for extracting models of database queries that can compactly represent all queries that could be used in a specific database library call. We also describe our work on parsing partial queries, with holes representing parts of the query that are computed dynamically. Implemented in Rascal as part of the PHP AiR framework, the goal of this work is to enable empirical research on database usage in PHP scripts, to support developer tools for understanding existing queries, and to support program transformation tools to evolve existing systems and to improve the security of existing code.},
	author = {Anderson, David and Hills, Mark},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {153--158},
	title = {Supporting Analysis of {SQL} Queries in {PHP AiR}},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SCAM.2017.23}}

@inproceedings{Shimmi2020,
	abstract = {Files in the backup of iOS devices can be a potential source of evidentiary data. Particularly, the iOS backup (obtained through a logical acquisition technique) is widely used by many forensic tools to sift through the data. A significant challenge faced by several forensic tool developers is the changes in the data organization of the iOS backup. This is due to the fact that the iOS operating system is frequently updated by Apple Inc. Many iOS application developers release periodical updates to iOS mobile applications. Both these reasons can cause significant changes in the way user data gets stored in the iOS backup files. Moreover, approximately once every couple years, there could be a major iOS release which can cause the reorganization of files and folders in the iOS backup. Directories in the iOS backup contain SQLite databases, plist files, XML files, text files, and media files. Android/iOS devices generally use SQLite databases since it is a lightweight database. Our focus in this paper is to analyze the SQLite schema evolution specific to iOS and assist forensic tool developers in keeping their tools compatible with the latest iOS version. Our recommendations for updating the forensic data extraction tools is based on the observation of schema changes found in successive iOS versions.},
	author = {Shimmi, Samiha S. and Dorai, Gokila and Karabiyik, Umit and Aggarwal, Sudhir},
	booktitle = {International Symposium on Digital Forensics and Security ({ISDFS})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {1--7},
	title = {Analysis of {iOS} {SQLite} Schema Evolution for Updating Forensic Data Extraction Tools},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/ISDFS49300.2020.9116208}}

@inproceedings{Li2016,
	abstract = {Software artifacts constantly change during evolution and maintenance of software systems. One critical artifact that developers need to be able to maintain during evolution and maintenance of software systems is up-to-date and complete documentation. However, recent studies on the co-evolution of comments and code showed that the comments are rarely maintained or updated when the respective source code is changed. In order to understand developer practices regarding documenting two kinds of software artifacts, unit test cases and database-related operations, we designed two empirical studies both composed of (i) an online survey with contributors of open source projects and (ii) a mining-based analysis of method comments in these projects. Later, motivated by the findings of the studies, we proposed two novel approaches. UnitTestScribe is an approach for automatically documenting test cases, while DBScribe is an approach for automatically documenting test cases. We evaluated our tools by means of an online survey with industrial developers and graduate students. In general, participants indicated that descriptions generated by our tools are complete, concise, and easy to read.},
	author = {Li, Boyang},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Li2016.pdf:PDF},
	pages = {631--635},
	title = {Automatically Documenting Software Artifacts},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME.2016.56}}

@article{Oh2019,
	abstract = {Web applications typically interact with databases. Therefore, it is very crucial to understand which web components access which database resources when maintaining web apps. Existing research identifies interactions between Java web components, such as JavaServer Pages and servlets but does not extract dependencies between the web components and database resources, such as tables and attributes. This paper proposes a dynamic analysis of Java web apps, which extracts such dependencies from a Java web app and represents them as a graph. The key responsibility of our analysis method is to identify when web components access database resources. To fulfill this responsibility, our method dynamically observes the database-related objects provided in the Java standard library using the proxy pattern, which can be applied to control access to a desired object. This study also experiments with open source web apps to verify the feasibility of the proposed method.},
	author = {Oh, Jaewon and Ahn, Woo Hyun and Kim, Taegong},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Oh2019.pdf:PDF},
	issn = {2234-8255},
	journal = {Journal of Information and Communication Convergence Engineering},
	number = {2},
	pages = {149--160},
	title = {Automatic Extraction of Dependencies between Web Components and Database Resources in Java Web Applications},
	volume = {17},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.6109/jicce.2019.17.2.149}}

@inproceedings{Li2017,
	abstract = {Database-centric applications (DCAs) are widely used by many companies and organizations to perform various control and analytical tasks using large databases. Real-world databases are described by complex schemas that oftentimes contain hundreds of tables consisting of thousands of attributes. However, when software engineers develop DCAs, they may write code that can inadvertently violate the integrity of these databases. Alternatively, business analysts and database administrators can also make errors that lead to integrity violations (semantic bugs). To detect these violations, stakeholders must create assertions that check the validity of the data in the rows of the database tables. Unfortunately, creating assertions is a manual, laborious and error-prone task. Thus, a fundamental problem of testing DCAs is how to find such semantic bugs automatically. We propose a novel solution, namely DACITE, that enables stakeholders to automatically obtain constraints that semantically relate database attributes and code statements using a combination of static analysis of the source code and associative rule mining of the databases. We rely on SAT-solvers to validate if a solution to the combined constraints exists and issue warnings on possible semantic bugs to stakeholders. We evaluated our approach on eight open-source DCAs and our results suggest that semantic bugs can be found automatically with high precision. The results of the study with developers show that warnings produced by DACITE are useful and enable them to find semantic bugs faster.},
	author = {Li, Boyang and Poshyvanyk, Denys and Grechanik, Mark},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-modified = {2023-02-21 17:48:38 +0100},
	file = {:references/Li2017.pdf:PDF},
	pages = {251--262},
	title = {Automatically Detecting Integrity Violations in Database-Centric Applications},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICPC.2017.37}}

@article{Huang2022,
	abstract = {Code smells are symptoms of sub-optimal software design and implementation choices. Detection tools were actively developed for general code smell related to coupling and cohesion issues, but such tools cannot capture domain-specific problems. In this work, we fill the gap in data persistence and query code quality by proposing HBSniff, i.e., a static analysis tool for detecting 14 code smells as well as 4 mapping metrics in Java Hibernate Object-Relational Mapping (ORM) codes. HBSniff is tested, documented, and manually validated. It also generates readable and customizable reports for every project. Moreover, it is beneficial to Mining Software Repository (MSR) research requiring large-scale analysis since project compilation is not needed for detection.},
	author = {Zijie Huang and Zhiqing Shao and Guisheng Fan and Huiqun Yu and Kang Yang and Ziyi Zhou},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0167-6423},
	journal = {Science of Computer Programming},
	keywords = {Code smell, Object-relational mapping, Hibernate, Static analysis, Object-oriented programming},
	pages = {102778},
	title = {{HBSniff}: A static analysis tool for {Java Hibernate} object-relational mapping code smell detection},
	volume = {217},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1016/j.scico.2022.102778}}

@inproceedings{Vassiliadis2017,
	author = {Vassiliadis, Panos},
	booktitle = {Model and Data Engineering},
	date-modified = {2022-11-29 13:12:57 +0100},
	editor = {Ouhammou, Yassine and Ivanovic, Mirjana and Abell{\'o}, Alberto and Bellatreche, Ladjel},
	isbn = {978-3-319-66854-3},
	pages = {18--23},
	publisher = {Springer},
	title = {Schema Evolution and Gravitation to Rigidity: A Tale of Calmness in the Lives of Structured Data},
	year = {2017}}

@mastersthesis{Anderson2018,
	abstract = {PHP is a common language used for creating dynamic websites. These websites often include the use of databases to store data, with embedded SQL queries constructed within the PHP code and executed through the use of database access libraries. One of these libraries is the original MySQL library that, despite not being supported in current versions of PHP, is still widely used in existing PHP code. As a first step towards developing program comprehension and transformation tools for PHP systems that use this library, this research presents a query modeling tool that models embedded SQL queries in PHP systems and an empirical study conducted through analysis of these models. A main focus of this study was to establish common patterns developers use to construct SQL queries and to extract information about their occurrences in actual PHP systems. Using these patterns, the parts of queries that are generally static, and the parts that are often computed at runtime were extracted. For dynamically computed query parts, we also extracted data about which PHP language features are used to construct them. Finally, information about which clauses most often differ based on control flow was extracted as well as counts for how often each SQL query type and SQL clause is used in practice. We believe this information is useful for future work on building program understanding and transformation tools to renovate PHP code using database libraries.},
	author = {Anderson, David},
	date-modified = {2023-02-21 11:18:53 +0100},
	month = apr,
	school = {East Carolina University},
	title = {Modeling and Analysis of {SQL} Queries in {PHP} Systems},
	year = {2018},
	bdsk-url-1 = {http://hdl.handle.net/10342/6743}}

@inproceedings{Ersoy2022,
	abstract = {Architectural refactoring requires substantial effort. We introduce an approach and a tool to predict this effort prior to refactoring. We focus on PL/SQL programs that are developed as data access tiers of business software. There are two types of common refactoring needs for these programs. First, some of the modules might need to be migrated to a separate database. Second, some of the modules in the data tier might need to be migrated to the application tier. In both cases, the refactoring effort is proportional to the amount of coupling between the migrated modules and the rest of the modules in the database. Our tool can parse PL/SQL programs to reveal this coupling based on an analysis of SQL queries. Unlike prior studies, our tool can analyze queries that are created dynamically and that use multiple tables as well as PL/SQL-specific features. We evaluate our approach with an industrial PL/SQL program from the telecommunications domain. Our results are approved to be accurate by domain experts.},
	author = {Ersoy, Ersin and S{\"o}zer, Hasan},
	booktitle = {International Conference on Software Architecture ({ICSA})},
	date-modified = {2023-02-21 18:05:49 +0100},
	file = {:references/Ersoy2022.pdf:PDF},
	pages = {80--89},
	title = {Effort Estimation for Architectural Refactoring of Data Tier Software},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/ICSA53651.2022.00016}}

@phdthesis{Delplanque2020,
	abstract = {Relational databases have been at the core of many information systems for decades and continue to be used in new software development. Many of these databases reflect human or societal activities, for example, processes related to human re- sources, insurances, banks, etc. Reflecting such activities induce frequent evolu- tions of both the software system and the relational database. Relational databases do not only store and ensure data consistency, they can also define behavior taking the form of views, stored procedures, triggers, etc. Implementing behavior directly inside a database has the advantage to prevent code duplication when multiple programs using it perform similar tasks. However, the evolution of such database becomes complex and few approaches in the lit- erature address this problem. Most of the literature addressing relational database evolution focus either on the evolution of the database schema or on its co-evolution with software interacting with it. Approaches to reverse-engineer and evolve both structural and behavioral entities of relational databases are missing. In this thesis, we address this gap in the literature with four main contributions: (i) we report our observation of a relational database evolution made by an architect and identify problems from our observations; (ii) we propose a meta-model repre- senting both structural and behavioral parts of a database and simplifying depen- dencies analysis; (iii) we propose a tool to find quality issues in a database schema; and (iv) we propose a semi-automatic approach to evolve a relational database (its structural and its behavioral parts) based on recommendations that can be compiled into a SQL script. The results of the research reported in this thesis provide building bricks for the development of behavior-aware integrated development environment for relational databases.},
	author = {Julien Delplanque},
	file = {:references/Delplanque2020.pdf:PDF},
	school = {Universit{\'e} de Lille},
	title = {Managing structural and behavioral evolution in relational database: Application of Software engineering techniques},
	year = {2020}}

@inproceedings{Delplanque2020a,
	abstract = {Relational databases play a central role in many information systems. Their schemas contain structural and behavioral entity descriptions. Databases must continuously be adapted to new requirements of a world in constant change while: (1) relational database management systems (RDBMS) do not allow inconsistencies in the schema; (2) stored procedure bodies are not meta-described in RDBMS such as PostgreSQL that consider their bodies as plain text. As a consequence, evaluating the impact of an evolution of the database schema is cumbersome, being essentially manual. We present a semi-automatic approach based on recommendations that can be compiled into a SQL patch fulfilling RDBMS constraints. To support recommendations, we designed a meta-model for relational databases easing computation of change impact. We performed an experiment to validate the approach by reproducing a real evolution on a database. The results of our experiment show that our approach can set the database in the same state as the one produced by the manual evolution in 75{\%} less time.},
	author = {Delplanque, Julien and Etien, Anne and Anquetil, Nicolas and Ducasse, St{\'e}phane},
	booktitle = {International Conference on Advanced Information Systems Engineering ({CAiSE})},
	date-modified = {2022-11-29 13:15:01 +0100},
	editor = {Dustdar, Schahram and Yu, Eric and Salinesi, Camille and Rieu, Dominique and Pant, Vik},
	isbn = {978-3-030-49435-3},
	pages = {498--514},
	publisher = {Springer},
	title = {Recommendations for Evolving Relational Databases},
	year = {2020}}

@article{Overeem2021,
	abstract = {Event sourced systems are increasing in popularity because they are reliable, flexible, and scalable. In this article, we point a microscope at a software architecture pattern that is rapidly gaining popularity in industry, but has not received as much attention from the scientific community. We do so through constructivist grounded theory, which proves a suitable qualitative method for extracting architectural knowledge from practitioners. Based on the discussion of 19 event sourced systems we explore the rationale for and the context of the event sourcing pattern. A description of the pattern itself and its relation to other patterns as discussed with practitioners is given. The description itself is grounded in the experience of 25 engineers, making it a reliable source for both new practitioners and scientists. We identify five challenges that practitioners experience: event system evolution, the steep learning curve, lack of available technology, rebuilding projections, and data privacy. For the first challenge of event system evolution, we uncover five tactics and solutions that support practitioners in their design choices when developing evolving event sourced systems: versioned events, weak schema, upcasting, in-place transformation, and copy-and-transform.},
	author = {Michiel Overeem and Marten Spoor and Slinger Jansen and Sjaak Brinkkemper},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Overeem2021.pdf:PDF},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Event sourcing, CQRS, Event-driven architecture, Schema evolution, Software architecture patterns, Grounded theory},
	pages = {110970},
	title = {An empirical characterization of event sourced systems and their schema evolution -- Lessons from industry},
	volume = {178},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2021.110970}}

@inproceedings{Ersoy2021,
	author = {Ersoy, Ersin and S{\"o}zer, Hasan},
	booktitle = {Turkish National Software Engineering Symposium ({UYMS})},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Ersoy2021.pdf:PDF},
	pages = {1--6},
	title = {Data Model Extension Impact Analysis},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/UYMS54260.2021.9659747}}

@inproceedings{Drabikova2016,
	author = {Dr{\'a}bikov{\'a}, Ivana Lieskovsk{\'a} and Matia{\v s}ko, Karol and Lieskovsk{\'y}, Anton},
	booktitle = {International Conference on Software Engineering and Service Science ({ICSESS})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {186--188},
	title = {Database Object Dependencies Modeling},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/ICSESS.2016.7883045}}

@inproceedings{Drabikova2016a,
	abstract = {In companies from retail banking or telecommunication sector are continually developed information systems (IS). The core of these IS resides in efficient and elegant usage of database tools. In this paper we present a new approach of analyzing database objects with DB Object Mapper Tool that is being developed for mapping objects from large and complex database systems. The term ``object'' in this context is used to describe each object defined within the database layer, e.g. table, procedure, trigger, view. This paper discusses the importance of the tool, its basic concepts and functionality and presents a new concept of modeling such data - Database Objects Dependency Modeling.},
	author = {Dr{\'a}bikov{\'a}, Ivana Lieskovsk{\'a} and Matia{\v s}ko, Karol and Lieskovsk{\'y}, Anton},
	booktitle = {International Conference on Software Engineering and Service Science ({ICSESS})},
	date-modified = {2023-03-12 14:56:56 +0100},
	file = {:references/Drabikova2016a.pdf:PDF},
	pages = {1022--1027},
	publisher = {IEEE},
	title = {Database Object Dependency tool},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/ICSESS.2016.7883240}}

@inproceedings{Manousis2017,
	abstract = {Correctly identifying the embedded queries within the source code of an information system is a significant aid to developers and administrators, as it can facilitate the visualization of a map of the information system, the identification of areas affected by schema evolution, code migration, and the planning of the joint maintenance of code and data. In this paper, we provide a solution to the problem of identifying the location and semantics of embedded queries with a generic, language-independent method that identifies the embedded queries of a data-intensive ecosystem, regardless of the programming style and the host language, and represents them in a universal, also language-independent manner that facilitates the aforementioned maintenance, evolution and migration tasks with minimal user effort and significant effectiveness.},
	author = {Manousis, Petros and Zarras, Apostolos and Vassiliadis, Panos and Papastefanatos, George},
	booktitle = {Advanced Information Systems Engineering ({CAiSE})},
	date-modified = {2023-03-18 18:23:07 +0100},
	isbn = {978-3-319-59536-8},
	pages = {511--526},
	publisher = {Springer},
	title = {Extraction of Embedded Queries via Static Analysis of Host Code},
	year = {2017}}

@inproceedings{Cetin2019,
	author = {Cetin, Cagri and Goldgof, Dmitry and Ligatti, Jay},
	booktitle = {IEEE Conference on Communications and Network Security ({CNS})},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Cetin2019.pdf:PDF},
	pages = {151--159},
	title = {SQL-Identifier Injection Attacks},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/CNS.2019.8802743}}

@article{Balogh2019,
	abstract = {Maintaining and improving existing large-scale systems that are based on relational databases is proven to be a challenging task. Among many other aspects, it is crucial to develop actionable methods for estimating costs and durations in the process of assessing new feature requirements. This is a very frequent activity during the evolution of large database systems and data warehouses. This goal requires the analysis of program code, data structures and business level objectives at the same time, which is a daunting task if made manually by experts. Our industrial partner started to develop a static database analysis software package that would automate and ease this process in order to make more accurate estimations. The goal of this work was to create a quality assessment model that can effectively help developers to assess the data flow (lineage) quality and the database structure quality of data warehouse (DWH) and online transaction processing (OLTP) database systems. Based on related literature, we created different models for these two interconnected topics, which were then evaluated by independent developers. The evaluation showed that the models are suitable for implementation, which are now included in a commercial product developed by our industrial partner, Clarity.},
	author = {Gerg{\~o} Balogh and Tam{\'a}s Gergely and {\'A}rp{\'a}d Besz{\'e}des and Attila Szarka and Zolt{\'a}n F{\'a}bi{\'a}n},
	file = {:references/Balogh2019.pdf:PDF},
	journal = {Acta Polytechnica Hungarica},
	title = {Capturing Expert Knowledge to Guide Data Flow and Structure Analysis of Large Corporate Databases},
	year = {2019}}

@article{Mao2021,
	abstract = {The emergence of Hive greatly facilitates the management of massive data stored in various places. Meanwhile, data scientists face challenges during HiveQL programming - they may not use correct and/or efficient HiveQL statements in their programs; developers may also introduce anti-patterns indeliberately into HiveQL programs, leading to poor performance, low maintainability, and/or program crashes. This paper presents an empirical study on HiveQL programming, in which 38 HiveQL anti-patterns are revealed. We then design and implement DeFiHap, the first tool for automatically detecting and fixing HiveQL anti-patterns. DeFiHap detects HiveQL anti-patterns via analyzing the abstract syntax trees of HiveQL statements and Hive configurations, and generates fix suggestions by rule-based rewriting and performance tuning techniques. The experimental results show that DeFiHap is effective. In particular, DeFiHap detects 25 anti-patterns and generates fix suggestions for 17 of them.},
	author = {Mao, Yuetian and Yuan, Shuai and Cui, Nan and Du, Tianjiao and Shen, Beijun and Chen, Yuting},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {2150-8097},
	issue_date = {July 2021},
	journal = {VLDB Endowment},
	month = jul,
	number = {12},
	pages = {2671--2674},
	title = {{DeFiHap}: Detecting and Fixing {HiveQL} Anti-Patterns},
	volume = {14},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.14778/3476311.3476316}}

@inproceedings{Marashdeh2021,
	author = {Marashdeh, Zain and Suwais, Khaled and Alia, Mohammad},
	booktitle = {International Conference on Information Technology ({ICIT})},
	date-modified = {2023-02-21 17:43:28 +0100},
	file = {:references/Marashdeh2021.pdf:PDF},
	pages = {957--962},
	title = {A Survey on {SQ}L Injection Attack: Detection and Challenges},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICIT52682.2021.9491117}}

@inproceedings{Burzanska2018,
	abstract = {The modern world generates huge amounts of documents each day. Text data is ubiquitous in the digital space. They can contain information about products in an online store, the opinions of a blog author, reportage in a newspaper or questions and advice from online forums. Most of this data is managed using DBMS - mainly relational ones. Thus, the more crucial it becomes to find the most efficient use of the available text search mechanisms. This work examines the basic word search methods in the two of the most popular open DBMS: PostgreSQL and MariaDB. The results of the empirical tests will serve as a starting point for discussion is the ``Poor Man's Search Engine'' SQL antipattern still an antipattern?},
	author = {Burza{\'{n}}ska, Marta and Wi{\'{s}}niewski, Piotr},
	booktitle = {Beyond Databases, Architectures and Structures. Facing the Challenges of Data Proliferation and Growing Variety},
	date-modified = {2022-11-29 13:15:10 +0100},
	editor = {Kozielski, Stanis{\l}aw and Mrozek, Dariusz and Kasprowski, Pawe{\l} and Ma{\l}ysiak-Mrozek, Bo{\.{z}}ena and Kostrzewa, Daniel},
	isbn = {978-3-319-99987-6},
	pages = {294--305},
	publisher = {Springer},
	title = {How Poor Is the ``Poor Man's Search Engine''?},
	year = {2018}}

@inproceedings{Mathon2022,
	author = {Mathon, Leonardo and Miedema, Daphne},
	booktitle = {ACM Conference on International Computing Education Research ({ICER})},
	date-modified = {2023-03-12 15:11:55 +0100},
	isbn = {9781450391955},
	keywords = {anti-patterns, novices, Computer Science Education, SQL},
	pages = {42--43},
	publisher = {ACM},
	title = {Increasing Awareness of SQL Anti-Patterns for Novices: A Study Design},
	volume = {2},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3501709.3544282}}

@phdthesis{Alshemaimri2022,
	author = {Alshemaimri, Bader},
	file = {:references/Alshemaimri2022.pdf:PDF},
	school = {The University of Texas at Arlington},
	title = {Using Antipatterns to Improve Database Code Fragments, and Utilizing Knowledge Graphs and NLP Patterns to Extract Standardized Data Element Names},
	year = {2022}}

@article{Bessghaier2021,
	abstract = {Modern web applications have become one of the largest parts of the current software market over years, bringing cross-platform compatibility and data integration advantages that encouraged businesses to shift toward their adoption. Like any software application, code smells can be manifested as violations of implementation and design standards which could impact the maintainability, comprehensibility and performance of web applications. While there have been extensive studies on traditional code smells recently, little knowledge is available on code smells in web-based applications (web apps). As web applications are split into their client and server sides, we present in this study a first step in exploring the code smells diffuseness and effect on the server side of web applications. To this end, we conduct an exploratory study on a total of 430 releases from 10 long-lived open-source web-based applications on 12 common code smell types. We aim to better understand and gain insights into the diffuseness of code smells, their co-occurrences and effects on the change- and fault-proneness in server side code. Our study delivers several important findings. First, code smells are not equally diffused in web apps server side, among which smells related to complex, and large code components display high diffuseness and frequency rates. Second, the co-occurrence phenomenon is highly common, but the association degree between code smell pairs is weak. Code smells related to large size and high complexity exhibit a higher degree of co-occurrences. Third, smelly files are more likely to change than smell-free files, whereas not all smell types are likely to cause equal change sizes in the code base. Fourth, smelly files are more vulnerable to faults than smell-free files, and 86{\%} of smelly files are more likely to manifest more faults than other files. Hence, developers should be aware of the existence of code smells in their web applications and consider detecting and refactoring them from their code bases, using appropriate tools.},
	author = {Bessghaier, Narjes and Ouni, Ali and Mkaouer, Mohamed Wiem},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {1573-1367},
	journal = {Software Quality Journal},
	month = dec,
	number = {4},
	pages = {901--941},
	title = {A longitudinal exploratory study on code smells in server side web applications},
	volume = {29},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1007/s11219-021-09567-w}}

@inproceedings{Sharma2018,
	abstract = {Context: Databases are an integral element of enterprise applications. Similarly to code, database schemas are also prone to smells - best practice violations.Objective: We aim to explore database schema quality, associated characteristics and their relationships with other software artifacts.Method: We present a catalog of 13 database schema smells and elicit developers' perspective through a survey. We extract embedded sql statements and identify database schema smells by employing the DbDeo tool which we developed. We analyze 2925 production-quality systems (357 industrial and 2568 well-engineered open-source projects) and empirically study quality characteristics of their database schemas. In total, we analyze 629 million lines of code containing more than 393 thousand sql statements.Results: We find that the index abuse smell occurs most frequently in database code, that the use of an orm framework doesn't immune the application from database smells, and that some database smells, such as adjacency list, are more prone to occur in industrial projects compared to open-source projects. Our co-occurrence analysis shows that whenever the clone table smell in industrial projects and the values in attribute definition smell in open-source projects get spotted, it is very likely to find other database smells in the project.Conclusion: The awareness and knowledge of database smells are crucial for developing high-quality software systems and can be enhanced by the adoption of better tools helping developers to identify database smells early.},
	author = {Sharma, Tushar and Fragkoulis, Marios and Rizou, Stamatia and Bruntink, Magiel and Spinellis, Diomidis},
	booktitle = {International Conference on Software Engineering: Software Engineering in Practice ({ICSE-SEIP})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450356596},
	keywords = {database schema smells, software quality, code smells, antipatterns, technical debt, software maintenance},
	pages = {55--64},
	publisher = {ACM},
	title = {Smelly Relations: Measuring and Understanding Database Schema Quality},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3183519.3183529}}

@article{Kovacic2022,
	abstract = {Users of a business intelligence (BI) system employ an approach referred to as online analytical processing (OLAP) to view multidimensional data from different perspectives. Query languages, e.g., SQL or MDX, allow for flexible querying of multidimensional data but query formulation is often time-consuming and cognitively challenging for many users. Alternatives to using a query language, e.g., graphical OLAP clients, parameterized reports, or dashboards, are often not a full-blown alternative to using a query language. Experience in cooperative research projects with industry led to the following observations regarding the use of OLAP queries in practice. First, within the same organization, similar OLAP queries are repeatedly composed from scratch in order to satisfy similar information needs. Second, across different organizations and even domains, OLAP queries with similar structures are repeatedly composed from scratch. Finally, vague requirements regarding frequently composed OLAP queries in the early stages of a project potentially lead to rushed development in later stages, which can be alleviated by following best practices for OLAP query composition. In engineering, knowledge about best-practice solutions to frequently arising challenges is often documented and represented using patterns. In that spirit, an OLAP pattern describes a generic solution for composing a query that allows a BI user to satisfy a certain type of information need given fragments of a conceptual model. This paper introduces a formal definition of OLAP patterns as well as an expressive, flexible, and generally applicable definition language.},
	author = {Ilko Kovacic and Christoph G. Schuetz and Bernd Neumayr and Michael Schrefl},
	date-modified = {2023-03-12 15:09:32 +0100},
	issn = {0169-023X},
	journal = {Data and Knowledge Engineering},
	keywords = {Business intelligence, Conceptual modeling, Solution pattern, Online analytical processing, Data warehouse},
	title = {{OLAP} Patterns: A pattern-based approach to multidimensional data analysis},
	volume = {138},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1016/j.datak.2021.101948}}

@incollection{Felderer2019,
	abstract = {Today's software systems like cyber-physical production systems or big data systems have to process large volumes and diverse types of data which heavily influences the quality of these so-called data-intensive systems. However, traditional software testing approaches rather focus on functional behavior than on data aspects. Therefore, the role of data in testing has to be rethought, and specific testing approaches for data-intensive software systems are required. Thus, the aim of this chapter is to contribute to this area by (1) providing basic terminology and background on data-intensive software systems and their testing and (2) presenting the state of the research and the hot topics in the area. Finally, the directions of research and the new frontiers on testing data-intensive software systems are discussed.},
	author = {Felderer, Michael and Russo, Barbara and Auer, Florian},
	booktitle = {Security and Quality in Cyber-Physical Systems Engineering},
	date-modified = {2023-02-21 11:18:53 +0100},
	editor = {Biffl, Stefan and Eckhart, Matthias and L{\"u}der, Arndt and Weippl, Edgar},
	isbn = {978-3-030-25312-7},
	pages = {129--148},
	publisher = {Springer},
	title = {On Testing Data-Intensive Software Systems},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-030-25312-7_6}}

@article{Ji2020,
	abstract = {Big data applications are currently used in many application domains, ranging from statistical applications to prediction systems and smart cities. However, the quality of these applications is far from perfect, such as functional error, failure and low performance. Consequently, assuring the overall quality for big data applications plays an increasingly important role. This paper aims at summarizing and assessing existing quality assurance (QA) technologies addressing quality issues in big data applications. We have conducted a systematic literature review (SLR) by searching major scientific databases, resulting in 83 primary and relevant studies on QA technologies for big data applications. The SLR results reveal the following main findings: (1) the quality attributes that are focused for the quality of big data applications, including correctness, performance, availability, scalability and reliability, and the factors influencing them; (2) the existing implementation-specific QA technologies, including specification, architectural choice and fault tolerance, and the process-specific QA technologies, including analysis, verification, testing, monitoring and fault and failure prediction; (3) existing strengths and limitations of each kind of QA technology; (4) the existing empirical evidence of each QA technology. This study provides a solid foundation for research on QA technologies of big data applications and can help developers of big data applications apply suitable QA technologies.},
	article-number = {8052},
	author = {Ji, Shunhui and Li, Qingqiu and Cao, Wennan and Zhang, Pengcheng and Muccini, Henry},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {2076-3417},
	journal = {Applied Sciences},
	number = {22},
	title = {Quality Assurance Technologies of Big Data Applications: A Systematic Literature Review},
	volume = {10},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.3390/app10228052}}

@inproceedings{Altinisik2017,
	abstract = {PL/SQL procedures are grouped into packages for providing modularity. These procedures are indirectly coupled due to their use of common database tables. We define a cohesion metric and cluster PL/SQL procedures based on this type of coupling. The metric and clustering results are used for evaluating divergence from modularity as a result of architecture erosion. A divergence is detected for each package by a combination of two criteria: i) calculated cohesion metric for the package and ii) the number of clusters that are associated with the package. Low cohesion and high number of clusters indicate low modularity. We performed an industrial case study with a large-scale legacy system from the telecommunications domain. The results turned out to be promising, where some procedures are identified to be misplaced in packages from the modularity perspective. We also observed that divergence from modularity is consistently represented by our metric.},
	author = {Alt\i{}n\i{}\c{s}\i{}k, Metin and Ersoy, Ersin and S\"{o}zer, Hasan},
	booktitle = {European Conference on Software Architecture ({ECSA})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450352178},
	keywords = {PL/SQL programs, industrial case study, reverse engineering, software architecture erosion},
	pages = {159--165},
	publisher = {ACM},
	title = {Evaluating Software Architecture Erosion for {PL/SQL} Programs},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1145/3129790.3129811}}

@article{Rodriguez2021,
	abstract = {The migration of software is an economically important niche since the daily operations of many business still rely on systems based on legacy technologies. Migration to more recent technologies comes with major technical and management challenges mainly related to knowledge-loss issues on the specific technology but also on the architecture and design of the legacy. This article presents a method that addresses the reverse/forward engineering tasks as well as some management challenges such as the planning of the migration based on a better understanding of the system. The process relies on the use of models and transformations to create high-level abstraction views of the legacy. A big challenge with the migration of certain legacy applications is that much of the business logic is inside triggers which are written in the PL/SQL language and scattered across the application layers. Therefore, developers need to know what they need to migrate and where it is. The main contribution of our work is that the abstractions allow developers to understand and plan the migration without the need of having a vast knowledge on the initial technology. Furthermore, our views help developers to decide about the structure and business logic they want to have in the target system. In this article, we describe the application of the method to the Oracle Forms case study. Nevertheless, the approach can be generalized to other technologies through new bridges that transform from said technologies to the abstract views. The article ends by reporting lessons learned from our experience.},
	author = {Cristo Rodr{\'\i}guez and Kelly Garc{\'e}s and Jordi Cabot and Rubby Casallas and Fabi{\'a}n Melo and Daniel Escobar and Alejandro Salamanca},
	date-modified = {2022-12-06 11:54:19 +0100},
	journal = {Journal of Software: Practice and Experience},
	month = aug,
	number = {8},
	pages = {1641--1675},
	title = {Model-based assisted migration of oracle forms applications: The overall process in an industrial setting},
	volume = {51},
	year = {2021}}

@article{Taipalus2018,
	abstract = {SQL is taught in almost all university level database courses, yet SQL has received relatively little attention in educational research. In this study, we present a database management system independent categorization of SQL query errors that students make in an introductory database course. We base the categorization on previous literature, present a class of logical errors that has not been studied in detail, and review and complement these findings by analyzing over 33,000 SQL queries submitted by students. Our analysis verifies error findings presented in previous literature and reveals new types of errors, namely logical errors recurring in similar manners among different students. We present a listing of fundamental SQL query concepts we have identified and based our exercises on, a categorization of different errors and complications, and an operational model for designing SQL exercises.},
	author = {Taipalus, Toni and Siponen, Mikko and Vartiainen, Tero},
	date-modified = {2023-03-12 16:04:29 +0100},
	journal = {Transactions on Computing Education},
	keywords = {Human factors, languages, exercise design, errors, standardization, SQL, query languages},
	month = aug,
	number = {3},
	publisher = {ACM},
	title = {Errors and Complications in {SQL} Query Formulation},
	volume = {18},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3231712}}

@inproceedings{Overeem2017,
	author = {Overeem, Michiel and Spoor, Marten and Jansen, Slinger},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-03-12 15:25:32 +0100},
	file = {:references/Overeem2017.pdf:PDF},
	pages = {193--204},
	title = {The dark side of event sourcing: Managing data conversion},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2017.7884621}}

@inproceedings{LinaresVasquez2016,
	abstract = {Database-centric applications (DCAs) usually rely on database operations over a large number of tables and attributes. Understanding how database tables and attributes are used to implement features in DCAs along with the constraints related to these usages is an important component of any DCA's maintenance. However, manually documenting database related operations and their asynchronously evolving constraints in constantly changing source code is a hard and time-consuming problem. In this paper, we present a novel approach, namely DBScribe, aimed at automatically generating always up-to-date natural language descriptions of database operations and schema constraints in source code methods. DBScribe statically analyzes the code and database schema to detect database usages and then prop- agates these usages and schema constraints through the call-chains implementing database-related features. Finally, each method in these call-chains is automatically documented based on the underlying database usages and constraints. We evaluated DBScribe in a study with 52 participants analyzing generated documentation for database-related methods in five open-source DCAs. Additionally, we evaluated the descriptions generated by DBScribe on two commercial DCAs involving original developers. The results for the studies involving open-source and commercial DCAs demonstrate that generated descriptions are accurate and useful while understanding database usages and constraints, in particular during maintenance tasks.},
	author = {Linares-V\'{a}squez, Mario and Li, Boyang and Vendome, Christopher and Poshyvanyk, Denys},
	booktitle = {International Symposium on Software Testing and Analysis ({ISSTA})},
	date-modified = {2023-02-21 18:12:16 +0100},
	isbn = {9781450343909},
	keywords = {Schema constraints, Database-centric applications, SQL-data statements, Documentation},
	pages = {270--281},
	publisher = {ACM},
	title = {Documenting Database Usages and Schema Constraints in Database-Centric Applications},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2931037.2931072}}

@inproceedings{Albarak2018,
	abstract = {Database normalization is the one of main principles for designing relational databases. The benefits of normalization can be observed through improving data quality and performance, among the other qualities. We explore a new context of technical debt manifestation, which is linked to ill-normalized databases. This debt can have long-term impact causing systematic degradation of database qualities. Such degradation can be liken to accumulated interest on a debt. We claim that debts are likely to materialize for tables below the fourth normal form. Practically, achieving fourth normal form for all the tables in the database is a costly and idealistic exercise. Therefore, we propose a pragmatic approach to prioritize tables that should be normalized to the fourth normal form based on the metaphoric debt and interest of the ill-normalized tables, observed on data quality and performance. For data quality, tables are prioritized using the risk of data inconsistency metric. Unlike data quality, a suitable metric to estimate the impact of weakly or un-normalized tables on performance is not available. We estimate performance degradation and its costs using Input/Output (I/O) cost of the operations performed on the tables and we propose a model to estimate this cost for each table. We make use of Modern Portfolio Theory to prioritize tables that should be normalized based on the estimated I/O cost and the likely risk of cost accumulation in the future. To evaluate our methods, we use a case study from Microsoft, AdventureWorks. The results show that our methods can be effective in reducing normalization debt and improving the quality of the database.},
	author = {Albarak, Mashel and Bahsoon, Rami},
	booktitle = {International Conference on Technical Debt ({TechDebt})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450357135},
	keywords = {normalization, technical debt, database design},
	pages = {31--40},
	publisher = {ACM},
	title = {Prioritizing Technical Debt in Database Normalization Using Portfolio Theory and Data Quality Metrics},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3194164.3194170}}

@inproceedings{Vassiliadis2017a,
	abstract = {How can we plan development over an evolving schema? In this paper, we study the history of the schema of eight open source software projects that include relational databases and extract patterns related to the survival or death of their tables. Our findings are mostly summarized by a pattern, which we call ``electrolysis pattern'' due to its diagrammatic representation, stating that dead and survivor tables live quite different lives: tables typically die shortly after birth, with short durations and mostly no updates, whereas survivors mostly live quiet lives with few updates -- except for a small group of tables with high update ratios that are characterized by high durations and survival. Based on our findings, we recommend that development over newborn tables should be restrained, and wherever possible, encapsulated by views to buffer both infant mortality and high update rate of hyperactive tables. Once a table matures, developers can rely on a typical pattern of gravitation to rigidity, providing less disturbances due to evolution to the surrounding code.},
	author = {Vassiliadis, Panos and Zarras, Apostolos V.},
	booktitle = {Advanced Information Systems Engineering},
	date-modified = {2022-11-29 13:12:45 +0100},
	editor = {Dubois, Eric and Pohl, Klaus},
	isbn = {978-3-319-59536-8},
	pages = {333--347},
	publisher = {Springer},
	title = {Survival in Schema Evolution: Putting the Lives of Survivor and Dead Tables in Counterpoint},
	year = {2017}}

@article{Vassiliadis2019,
	abstract = {In this paper, we study the evolution of foreign keys in the context of schema evolution for relational databases. Specifically, we study the schema histories of a six free, open-source databases that contain foreign keys. Our findings verify previous results that schemata grow in the long run in terms of tables. To our surprise, we discovered that foreign keys appear to be fairly scarce in the projects that we have studied and they do not necessarily grow in sync with table growth. In fact, we have observed different ``cultures'' for the handling of foreign keys, ranging from treating foreign keys as an indispensable part of the schema, in full sync with the growth of tables, to the unexpected extreme of treating foreign keys as an optional add-on that twice resulted in their full removal from the schema of the database. Apart from the behavior of entire schemata, we have also studied the behavior of individual tables. We model the schema of any version of the history as a graph, with tables being nodes and foreign keys being edges. The union of these graphs is called the diachronic graph of the schema and contains all the tables and foreign keys that ever appeared in the schema history. The study of the total degree of tables at the diachronic graph, reveals several patterns. The population of tables with total degree in the range of [0--2] includes almost all the tables that were eventually removed from the schema, as well as the vast majority of survivor tables. These low-degree tables (especially the dead ones) tend to be mostly with zero or very few internal updates in their entire history. At the same time, the few tables with degree higher than 2 are typically born very early in the life of the schema, overwhelmingly survivors, and, unusually active, typically undergoing medium or high update activity.},
	author = {Vassiliadis, Panos and Kolozoff, Michail-Romanos and Zerva, Maria and Zarras, Apostolos V.},
	date-modified = {2023-02-21 11:18:53 +0100},
	day = {01},
	file = {:references/Vassiliadis2019.pdf:PDF},
	issn = {1436-5057},
	journal = {Computing},
	month = oct,
	number = {10},
	pages = {1431--1456},
	title = {Schema evolution and foreign keys: a study on usage, heartbeat of change and relationship of foreign keys to table activity},
	volume = {101},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/s00607-019-00702-x}}

@article{Vassiliadis2017b,
	abstract = {In this paper, we study the factors that relate to the survival of a table in the context of schema evolution in open-source software. We study the history of the schema of eight open-source software projects that include relational databases and extract patterns related to the survival or death of their tables. Our study shows that the probability of a table with a wide schema (i.e., a large number of attributes) being removed is systematically lower than average. Activity and duration are related to survival too. Rigid tables, without any change to their schema, are more likely to be removed than tables that sustain changes. Durations of dead and survival tables demonstrate a mirror image: dead tables' durations are mostly short, whereas survivor tables gravitate toward higher durations. Our findings are mostly summarized by a pattern, which we call electrolysis pattern, due to its diagrammatic representation, stating that dead and survivor tables live quite different lives: tables typically die shortly after birth, with short durations and mostly no updates, whereas survivors mostly live quiet lives with few updates---except for a small group of tables with high update ratios that are characterized by high durations and survival. Equally important is the evidence that schema evolution suffers from the antagonism of gravitation to rigidity, i.e., the tendency to minimize evolution as much as possible in order to minimize the resulting impact to the surrounding code. Several factors contribute to this observation: the absence of long durations in removed tables, the low percentage of tables whose schema size is scaled up or down, and the low numbers of tables with a high rate of updates, contrasted to the high numbers of tables with zero or few updates. We complement our findings with explanations and recommendations to developers.},
	author = {Vassiliadis, Panos and Zarras, Apostolos V.},
	date-modified = {2023-02-21 11:18:53 +0100},
	day = {01},
	file = {:references/Vassiliadis2017b.pdf:PDF},
	issn = {1861-2040},
	journal = {Journal on Data Semantics},
	month = dec,
	number = {4},
	pages = {221--241},
	title = {Schema Evolution Survival Guide for Tables: Avoid Rigid Childhood and You're En Route to a Quiet Life},
	volume = {6},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1007/s13740-017-0083-x}}

@inproceedings{Vassiliadis2021,
	author = {Vassiliadis, Panos},
	booktitle = {2021 IEEE 37th International Conference on Data Engineering (ICDE)},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Vassiliadis2021.pdf:PDF},
	pages = {1--12},
	title = {Profiles of Schema Evolution in Free Open Source Software Projects},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICDE51399.2021.00008}}

@inproceedings{Tarenskeen2018,
	abstract = {This study links business requirements and adaptability of existing software systems. Organizations expect flexibility of IT with regard to business requirements. We hypothesize that the flexibility of business requirements is difficult in IT systems, because of software dependencies in the way domain knowledge is implemented. In this paper, we, therefore, explore how Business requirements have been implemented in the source code of three open source healthcare systems. Outcomes suggest that a tight interdependency of business terminology and functionality in source code hides business requirements from view and thereby hinders IT flexibility on higher levels.},
	author = {Debbie Tarenskeen and Rogier van de Wetering and Ren{\'e} Bakker},
	booktitle = {FedCSIS},
	file = {:references/Tarenskeen2018.pdf:PDF},
	title = {Unintended effects of dependencies in source code on the flexibility of IT in organizations},
	year = {2018}}

@inproceedings{Dimolikas2020,
	abstract = {In this paper, we study the evolution of tables in a schema with respect to the structure of the foreign keys to which tables are related. We organize a hierarchy of topological complexity for the structure of foreign keys, based on a modeling of schemata as graphs, where tables are classified in increasing order of complexity as: isolated (not involved in foreign keys), source (with outgoing foreign keys only), lookup (with incoming foreign keys only) and internal (with both kinds). Our study reveals that this hierarchy reflects also the update behavior of tables: topologically simple tables are more likely to have a life with few or zero schema updates, whereas, topologically complex tables are more likely to undergo high numbers of updates. Early versions of the database attract the large majority of births of complex tables, as opposed to the simple ones, demonstrating a pattern of reducing the introduction of complex, heavily updated constructs in the schema as time progresses.},
	author = {Dimolikas, Konstantinos and Zarras, Apostolos V. and Vassiliadis, Panos},
	booktitle = {International Conference on Conceptual Modeling ({ER})},
	date-modified = {2023-03-04 18:51:40 +0100},
	isbn = {978-3-030-62522-1},
	pages = {456--470},
	publisher = {Springer},
	title = {A Study on the Effect of a Table's Involvement in Foreign Keys to its Schema Evolution},
	year = {2020}}

@inproceedings{Hamaji2016,
	author = {Hamaji, Kohei and Nakamoto, Yukikazu},
	booktitle = {2016 Fourth International Symposium on Computing and Networking (CANDAR)},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Hamaji2016.pdf:PDF},
	pages = {443--446},
	title = {Toward a Database Refactoring Support Tool},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/CANDAR.2016.0082}}

@inproceedings{Boukettaya2020,
	abstract = {As one of NoSQL data models, graph oriented databases are highly recommended to store and manage interconnected data. Used as back-end for today applications, NoSQL databases come with the challenge of effectively managing data evolution. In fact, NoSQL graph oriented databases offer a great flexibility. Usually such flexibility helps developers to manage huge data quantities with heterogeneous structure. Nevertheless, they may struggle to deal with legacy entities in production. The problem of evolution in NoSQL databases is not well treated. The common procedure is to migrate all data eagerly, but that comes with the cost of the application downtime. So lazy migration strategy may be more cost-efficient, as legacy entities are only migrated in case they are actually accessed by the application. In this paper, we propose an approach to control the evolution of data in the graph oriented databases by highlighting a lazy migration process.},
	author = {Boukettaya, Soumaya and Nabli, Ahlem and Gargouri, Faiez},
	booktitle = {Intelligent Systems Design and Applications},
	date-modified = {2022-11-29 13:12:33 +0100},
	editor = {Abraham, Ajith and Cherukuri, Aswani Kumar and Melin, Patricia and Gandhi, Niketa},
	isbn = {978-3-030-16660-1},
	pages = {392--399},
	publisher = {Springer},
	title = {Towards the Evolution of Graph Oriented Databases},
	year = {2020}}

@article{Hillenbrand2021,
	abstract = {During the development of NoSQL-backed software, the data model evolves naturally alongside the application code. Especially in agile development, new application releases are deployed frequently causing schema changes. Eventually, decisions have to be made regarding the migration of versioned legacy data which is persisted in the cloud-hosted production database. We solve this schema evolution problem and present the results of near-exhaustive calculations by means of which software project stakeholders can manage the operative costs for data model evolution and adapt their software release strategy accordingly in order to comply with service-level agreements regarding the competing metrics of migration costs and latency. We clarify conclusively how data model evolution in NoSQL databases impacts the metrics while taking all relevant characteristics of migration scenarios into account. As calculating all possible combinatorics in the search space of migration scenarios would by far exceed computational means, we used a probabilistic Monte Carlo method of repeated sampling, serving as a well-established means to bring the complexity of data model evolution under control. Our experiments show the qualitative and quantitative impact on the performance of migration strategies with respect to intensity and distribution of data entity accesses, the kinds of schema changes, and the characteristics of the underlying data model.},
	author = {Andrea Hillenbrand and Uta St{\"o}rl and Shamil Nabiyev and Stefanie Scherzinger},
	file = {:references/Hillenbrand2021.pdf:PDF},
	journal = {ArXiv},
	title = {MigCast in Monte Carlo: The Impact of Data Model Evolution in NoSQL Databases},
	volume = {abs/2104.11787},
	year = {2021}}

@inproceedings{Hillenbrand2021a,
	abstract = {During the development of NoSQL-backed software, the database schema evolves naturally alongside the application code. Especially in agile development, new application releases are deployed frequently. Eventually, decisions have to be made regarding the migration of versioned legacy data which is persisted in the cloud-hosted production database. We address this schema evolution problem and present results by means of which software project stakeholders can manage the operative costs for schema evolution and adapt their software release strategy accordingly in order to comply with service-level agreements regarding the competing metrics of migration costs and latency. We clarify conclusively how schema evolution in NoSQL databases impacts these metrics while taking all relevant characteristics of migration scenarios into account. As calculating all combinatorics in the search space of migration scenarios by far exceeds computational means, we use a probabilistic Monte Carlo method of repeated sampling, serving as a well-established method to bring the complexity of schema evolution under control.},
	author = {Hillenbrand, Andrea and Scherzinger, Stefanie and St{\"o}rl, Uta},
	booktitle = {International Conference on Conceptual Modeling ({ER})},
	date-modified = {2023-03-04 18:52:32 +0100},
	isbn = {978-3-030-89022-3},
	pages = {149--159},
	publisher = {Springer},
	title = {Remaining in Control of the Impact of Schema Evolution in {NoSQL} Databases},
	year = {2021}}

@article{Albarak2022,
	abstract = {Database normalization is one of the main principles for designing relational databases, which is the most popular database model, with the objective of improving data and system qualities, such as performance. Refactoring the database for normalization can be costly, if the benefits of the exercise are not justified. Developers often ignore the normalization process due to the time and expertise it requires, introducing technical debt into the system. Technical debt is a metaphor that describes trade-offs between short-term goals and applying optimal design and development practices. We consider database normalization debts are likely to be incurred for tables below the fourth normal form. To manage the debt, we propose a multi-attribute analysis framework that makes a novel use of the Portfolio Theory and the TOPSIS method (Technique for Order of Preference by Similarity to Ideal Solution) to rank the candidate tables for normalization to the fourth normal form. The ranking is based on the tables estimated impact on data quality, performance, maintainability, and cost. The techniques are evaluated using an industrial case study of a database-backed web application for human resource management. The results show that the debt-aware approach can provide an informed justification for the inclusion of critical tables to be normalized, while reducing the effort and cost of normalization.},
	author = {Albarak, Mashel and Bahsoon, Rami and Ozkaya, Ipek and Nord, Robert},
	date-modified = {2023-02-21 18:25:59 +0100},
	journal = {Transactions on Software Engineering},
	number = {3},
	pages = {755--772},
	publisher = {IEEE},
	title = {Managing Technical Debt in Database Normalization},
	volume = {48},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2020.3001339}}

@inproceedings{Kaur2017,
	abstract = {Lehman's laws of software evolution have been widely researched and validated but there exists very few studies that verified these laws for databases in open source. Database evolution jeopardize the semantical and syntactical cogency of an applications, but, is their incremental augmentation restrained by the growth and familiarity? To verify this, the current study explores the properties of growth for database evolution by analyzing Lehman's fifth and sixth law of software evolution: Law of Conservation of Familiarity and Continuous Growth on three open source Java databases spread across 63 releases for 17774 number of bugs. The study found that Lehman's laws of growth and familiarity applies on Open Source Java databases also and laws were validated by all the datasets.},
	author = {Kaur, Arvinder and Vig, Vidhi},
	booktitle = {Computer Communication, Networking and Internet Security},
	date-modified = {2022-12-30 17:23:21 +0100},
	isbn = {978-981-10-3226-4},
	pages = {429--436},
	publisher = {Springer},
	title = {Validation of {Lehman} Laws of Growth and Familiarity for Open Source {Java} Databases},
	year = {2017}}

@inproceedings{Scherzinger2021,
	abstract = {Databases are at the core of virtually any software product. Changes to database schemas cannot be made in isolation, as they are intricately coupled with application code. Such couplings enforce collateral evolution, which is a recognised, important research problem. In this demonstration, we show a new dimension to this problem, in software that supports alternative database backends: vendor-specific SQL dialects necessitate a simultaneous evolution of both, database schema and program code, for all supported DB variants. These near-same changes impose substantial manual effort for software developers. We introduce DeBinelle, a novel framework and domain-specific language for semantic patches that abstracts DB-variant schema changes and coupled program code into a single, unified representation. DeBinelle further offers a novel alternative to manually evolving coupled schemas and code. DeBinelle considerably extends established, seminal results in software engineering research, supporting several programming languages, and the many dialects of SQL. It effectively eliminates the need to perform vendor-specific changes, replacing them with intuitive semantic patches. Our demo of DeBinelle is based on real-world use cases from reference systems for schema evolution.},
	author = {Scherzinger, Stefanie and Mauerer, Wolfgang and Kondylakis, Haridimos},
	booktitle = {2021 IEEE 37th International Conference on Data Engineering (ICDE)},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Scherzinger2021.pdf:PDF},
	pages = {2697--2700},
	title = {DeBinelle: Semantic Patches for Coupled Database-Application Evolution},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICDE51399.2021.00307}}

@inproceedings{Goeminne2015,
	abstract = {Many software projects rely on a relational database in order to realize part of their functionality. Various database frameworks and object-relational mappings have been developed and used to facilitate data manipulation. Little is known about whether and how such frameworks co-occur, how they complement or compete with each other, and how this changes over time. We empirically studied these aspects for 5 Java database frameworks, based on a corpus of 3,707 GitHub Java projects. In particular, we analysed whether certain database frameworks co-occur frequently, and whether some database frameworks get replaced over time by others. Using the statistical technique of survival analysis, we explored the survival of the database frameworks in the considered projects. This provides useful evidence to software developers about which frameworks can be used successfully in combination and which combinations should be avoided.},
	author = {Goeminne, Mathieu and Mens, Tom},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781467375320},
	numpages = {5},
	pages = {551--555},
	publisher = {IEEE},
	title = {Towards a Survival Analysis of Database Framework Usage in Java Projects},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2015.7332512}}

@misc{McKnight2014,
	author = {McKnight},
	date-modified = {2023-02-21 11:18:53 +0100},
	title = {{NoSQL Evaluator's Guide}},
	year = {2014},
	bdsk-url-1 = {https://www.mcknightcg.com/nosql-evaluators-guide/}}

@inproceedings{Scherzinger2020,
	abstract = {We study how software engineers design and evolve their domain model when building applications against NoSQL data stores. Specifically, we target Java projects that use object-NoSQL mappers to interface with schema-free NoSQL data stores. This is a popular software stack. Given the source code of ten real-world database applications, we extract the NoSQL database schema thus implied in the application code. We can confirm that schemas are generally denormalized, as is recommended practice in data modeling for NoSQL data stores. Further, we analyze the entire project history, and with it, the evolution history of the NoSQL database schema. We show that NoSQL schemas evolve in all analyzed projects, and observe a comparatively high frequency in schema changes. In doing so, we conduct the so far largest empirical study on NoSQL schema design and evolution.},
	author = {Scherzinger, Stefanie and Sidortschuck, Sebastian},
	booktitle = {International Conference on Conceptual Modeling ({ER})},
	date-modified = {2023-03-04 18:51:50 +0100},
	isbn = {978-3-030-62522-1},
	pages = {441--455},
	publisher = {Springer},
	title = {An Empirical Study on the Design and Evolution of {NoSQL} Database Schemas},
	year = {2020}}

@inproceedings{Scherzinger2013,
	abstract = {The design of the NoSQL schema has a direct impact on the scalability of web applications. Especially for developers with little experience in NoSQL stores, the risks inherent in poor schema design can be incalculable. Worse yet, the issues will only manifest once the application has been deployed, and the growing user base causes highly concurrent writes. In this paper, we present a model checking approach to reveal scalability bottlenecks in NoSQL schemas. Our approach draws on formal methods from tree automata theory to perform a conservative static analysis on both the schema and the expected write-behavior of users. We demonstrate the impact of schema-inherent bottlenecks for a popular NoSQL store, and show how concurrent writes can ultimately lead to a considerable share of failed transactions.},
	author = {Scherzinger, Stefanie and De Almeida, Eduardo Cunha and Ickert, Felipe and Del Fabro, Marcos Didonet},
	booktitle = {International Workshop on Testing the Cloud ({TTC})},
	date-modified = {2023-03-07 11:18:14 +0100},
	keywords = {NoSQL Databases, Model Checking},
	publisher = {ACM},
	title = {On the Necessity of Model Checking {NoSQL} Database Schemas When Building {SaaS} Applications},
	year = {2013}}

@misc{Alger2022,
	author = {Ken W. Alger and Daniel Coupal},
	date-modified = {2023-02-21 11:18:53 +0100},
	note = {(accessed: 23.09.2022)},
	title = {Building with Patterns: The Polymorphic Pattern},
	year = {2022},
	bdsk-url-1 = {https://www.mongodb.com/developer/how-to/polymorphic-pattern/}}

@inproceedings{Stoerl2020,
	author = {Uta St{\"{o}}rl and Meike Klettke and Stefanie Scherzinger},
	booktitle = {International Conference on Extending Database Technology ({EDBT})},
	date-modified = {2023-02-21 17:35:53 +0100},
	pages = {655--658},
	title = {{NoSQL} Schema Evolution and Data Migration: State-of-the-Art and Opportunities},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.5441/002/edbt.2020.87}}

@inproceedings{Abdelhedi2021,
	author = {Fatma Abdelhedi and Amal Brahim and Hela Rajhi and Rabah Ferhat and Gilles Zurfluh},
	booktitle = {Int. Conf. Enterprise Information Systems},
	date-modified = {2022-12-06 10:50:00 +0100},
	title = {Automatic Extraction of a Document-oriented {NoSQL} Schema},
	year = {2021}}

@inproceedings{Ringlstetter2016,
	author = {Ringlstetter, Andreas and Scherzinger, Stefanie and Bissyand{\'e}, Tegawend{\'e} F.},
	booktitle = {International Workshop on BIG Data Software Engineering},
	date-modified = {2022-12-06 11:09:35 +0100},
	pages = {33--36},
	title = {Data model evolution using object-{NoSQL} mappers: Folklore or state-of-the-art?},
	year = {2016}}

@inproceedings{Gomez2020,
	abstract = {Popular document-oriented systems store JSON-like data (e.g. MongoDB). Such data formats combine the flexibility of semi-structured models and traditional data structures like records and arrays. This allows numerous structuring possibilities even for simple data. The data structure choice is important as it impacts many aspects such as memory footprint, data access performances and programming complexity. Our work aims at helping users in selecting data structuring from a set of automatically generated alternatives. These alternatives can be analyzed considering complexity metrics, query requirements and best practices using such ``schemaless'' databases. Our approach for ``schema'' generation has been inspired from Software Product Lines strategies based on feature models. From a UML class diagram that represents user's data, we generate automatically a feature model that implicitly contains the structure alternatives with their variations and common points. This feature model satisfies document-oriented constraints so as user constraints reflecting good practices or particular needs. It leads to a set of data structuring alternatives to be considered by the user for his operational choices.},
	author = {G{\'o}mez, Paola and Casallas, Rubby and Roncancio, Claudia},
	booktitle = {Database and Expert Systems Applications},
	isbn = {978-3-030-59003-1},
	pages = {152--163},
	publisher = {Springer},
	title = {Automatic Schema Generation for Document-Oriented Systems},
	year = {2020}}

@inproceedings{Mior2014,
	abstract = {Selecting appropriate indices and materialized views is critical for high performance in relational databases. By example, we show that the problem of schema optimization is also highly relevant for NoSQL databases. We explore the problem of schema design in NoSQL databases with a goal of optimizing query performance while minimizing storage overhead. Our suggested approach uses the cost of executing a given workload for a given schema to guide the mapping from the application data model to a physical schema. We propose a cost-driven approach for optimization and discuss its usefulness as part of an automated schema design tool.},
	author = {Mior, Michael J.},
	booktitle = {2014 SIGMOD PhD Symposium},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450329248},
	keywords = {workload modeling, nosql, schema optimization},
	numpages = {5},
	pages = {41--45},
	publisher = {ACM},
	title = {Automated Schema Design for {NoSQL} Databases},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2602622.2602624}}

@article{Imam2018,
	abstract = {New generation databases also called NoSQL (Not only SQL) databases are highly scalable, flexible, and low-latent. These types of databases emerge as a result of the rigidity shown by traditional databases to handle today's data which is voluminous, highly diversified and generated at a very high rate. With NoSQL, problems such as database expansion difficulties, low query performance and low storage capacity are addressed. However, the inherent complexity of contemporary datasets coupled with programmers' low NoSQL modeling competence are increasingly making database modeling and design vastly challenging, especially when parameters like consistency, availability and scalability are to be balanced in accordance with system requirements. As such, a schema suggestion model for NoSQL databases is posed to address this balancing issue. The proposed model aims to abstractly suggest schemas at the initial stage of system development based on user defined system requirements and CRUD (Create, Read, Update and Delete) operations among others. This is achieved through the adaptation of exploratory and experimental approaches of research. Also, few mathematical formulas are introduced to calculate clusters availability during entity mappings. A comparison was conducted between the schema produced using the proposed model and the one without. Results obtained shows substantial improvement in the areas of security and read-write query performance.},
	author = {Imam, Abdullahi Abubakar and Basri, Shuib and Ahmad, Rohiza and Watada, Junzu and Gonz{\'a}lez-Aparicio, Mar{\'\i}a T.},
	journal = {Journal of Big Data},
	publisher = {Springer},
	title = {Automatic schema suggestion model for {NoSQL} document-stores databases},
	volume = {5},
	year = {2018}}

@inproceedings{Afonso2020,
	author = {Afonso, Ariel and da Silva, Altigran and Conte, Tayana and Martins, Paulo and Cavalcanti, Jo{\~a}o and Garcia, Alessandro},
	booktitle = {IEEE 27th Int. Conf. Software Analysis, Evolution and Reengineering (SANER 2020)},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {138--148},
	title = {{LESSQL:} Dealing with Database Schema Changes in Continuous Deployment},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/SANER48275.2020.9054796}}

@inproceedings{Kashyap2014,
	author = {Kashyap, Vineeth and Dewey, Kyle and Kuefner, Ethan A. and Wagner, John and Gibbons, Kevin and Sarracino, John and Wiedermann, Ben and Hardekopf, Ben},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450330565},
	pages = {121--132},
	publisher = {ACM},
	title = {{JSAI}: {A} static analysis platform for {JavaScript}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2635868.2635904}}

@inproceedings{Andreasen2014,
	author = {Andreasen, Esben and M{\o}ller, Anders},
	booktitle = {Conference on Object-Oriented Programming Systems, Languages, and Applications ({OOPSLA})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450325851},
	keywords = {JavaScript, Program analysis},
	pages = {17--31},
	title = {Determinacy in static analysis for {jQuery}},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2660193.2660214}}

@article{Sun2017,
	abstract = {JavaScript has been a de facto standard language for client-side web programs, and now it is expanding its territory to general purpose programs. In this article, we classify the client-side JavaScript research for the last decade or so into six topics: static analysis, dynamic analysis, formalization and reasoning, type safety and JIT optimization, security for web applications, and empirical studies. Because the majority of the research has focused on static and dynamic analyses of JavaScript, we evaluate research trends in the analysis of JavaScript first and then the other topics. Finally, we discuss possible future research directions with open challenges.},
	articleno = {59},
	author = {Sun, Kwangwon and Ryu, Sukyoung},
	date-modified = {2023-03-04 18:56:51 +0100},
	issn = {0360-0300},
	journal = {ACM Computing Surveys},
	keywords = {dynamic analysis, JavaScript, security analysis, analysis framework, web applications, static analysis},
	month = aug,
	number = {4},
	numpages = {34},
	publisher = {ACM},
	title = {Analysis of {JavaScript} Programs: Challenges and Research Trends},
	volume = {50},
	year = {2017}}

@inproceedings{Jensen2009,
	abstract = {JavaScript is the main scripting language for Web browsers, and it is essential to modern Web applications. Programmers have started using it for writing complex applications, but there is still little tool support available during development.},
	author = {Jensen, Simon Holm and M{\o}ller, Anders and Thiemann, Peter},
	booktitle = {Static Analysis},
	isbn = {978-3-642-03237-0},
	pages = {238--255},
	publisher = {Springer},
	title = {Type Analysis for {JavaScript}},
	year = {2009}}

@inproceedings{Madsen2014,
	abstract = {Many static analyzers exploit sparseness techniques to reduce the amount of information being propagated and stored during analysis. Although several variations are described in the literature, no existing technique is suitable for analyzing JavaScript code. In this paper, we point out the need for a sparse analysis framework that supports pointers and reachability.We present such a framework, which uses static single assignment form for heap addresses and computes def-use information on-the-fly.We also show that essential information about dominating definitions can be maintained efficiently using quadtrees. The framework is presented as a systematic modification of a traditional dataflow analysis algorithm.},
	author = {Madsen, Magnus and M{\o}ller, Anders},
	booktitle = {Static Analysis},
	isbn = {978-3-319-10936-7},
	pages = {201--218},
	publisher = {Springer},
	title = {Sparse Dataflow Analysis with Pointers and Reachability},
	year = {2014}}

@inproceedings{Feldthaus2013,
	abstract = {The rapid rise of JavaScript as one of the most popular programming languages of the present day has led to a demand for sophisticated IDE support similar to what is available for Java or C\#. However, advanced tooling is hampered by the dynamic nature of the language, which makes any form of static analysis very difficult. We single out efficient call graph construction as a key problem to be solved in order to improve development tools for JavaScript. To address this problem, we present a scalable field-based flow analysis for constructing call graphs. Our evaluation on large real-world programs shows that the analysis, while in principle unsound, produces highly accurate call graphs in practice. Previous analyses do not scale to these programs, but our analysis handles them in a matter of seconds, thus proving its suitability for use in an interactive setting.},
	author = {Feldthaus, Asger and Sch\"{a}fer, Max and Sridharan, Manu and Dolby, Julian and Tip, Frank},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-modified = {2023-02-28 11:12:11 +0100},
	isbn = {9781467330763},
	numpages = {10},
	pages = {752--761},
	publisher = {IEEE},
	title = {Efficient Construction of Approximate Call Graphs for {JavaScript} {IDE} Services},
	year = {2013}}

@inproceedings{Christensen2003,
	abstract = {We perform static analysis of Java programs to answer a simple question: which values may occur as results of string expressions? The answers are summarized for each expression by a regular language that is guaranteed to contain all possible values. We present several applications of this analysis, including statically checking the syntax of dynamically generated expressions, such as SQL queries. Our analysis constructs flow graphs from class files and generates a context-free grammar with a nonterminal for each string expression. The language of this grammar is then widened into a regular language through a variant of an algorithm previously used for speech recognition. The collection of resulting regular languages is compactly represented as a special kind of multi-level automaton from which individual answers may be extracted. If a program error is detected, examples of invalid strings are automatically produced. We present extensive benchmarks demonstrating that the analysis is efficient and produces results of useful precision.},
	author = {Christensen, Aske Simon and M\o{}ller, Anders and Schwartzbach, Michael I.},
	booktitle = {International Conference on Static Analysis ({SAS})},
	date-modified = {2022-12-06 11:48:46 +0100},
	isbn = {3540403256},
	numpages = {18},
	pages = {1--18},
	publisher = {Springer},
	title = {Precise Analysis of String Expressions},
	year = {2003}}

@inproceedings{Gould2004,
	author = {Gould, C. and Su, Z. and Devanbu, P.},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {645--654},
	title = {Static checking of dynamically generated queries in database applications},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2004.1317486}}

@article{Wassermann2007,
	abstract = {Many data-intensive applications dynamically construct queries in response to client requests and execute them. Java servlets, for example, can create strings that represent SQL queries and then send the queries, using JDBC, to a database server for execution. The servlet programmer enjoys static checking via Java's strong type system. However, the Java type system does little to check for possible errors in the dynamically generated SQL query strings. Thus, a type error in a generated selection query (e.g., comparing a string attribute with an integer) can result in an SQL runtime exception. Currently, such defects must be rooted out through careful testing, or (worse) might be found by customers at runtime. In this article, we present a sound, static program analysis technique to verify that dynamically generated query strings do not contain type errors. We describe our analysis technique and provide soundness results for our static analysis algorithm. We also describe the details of a prototype tool based on the algorithm and present several illustrative defects found in senior software-engineering student-team projects, online tutorial examples, and a real-world purchase order system written by one of the authors.},
	author = {Wassermann, Gary and Gould, Carl and Su, Zhendong and Devanbu, Premkumar},
	date-modified = {2023-03-07 11:20:34 +0100},
	issn = {1049-331X},
	issue_date = {September 2007},
	journal = {Transactions on Software Engineering and Methodology},
	keywords = {JDBC, database queries, context-free language reachability, Static checking},
	month = sep,
	number = {4},
	numpages = {27},
	pages = {14},
	publisher = {ACM},
	title = {Static Checking of Dynamically Generated Queries in Database Applications},
	volume = {16},
	year = {2007},
	bdsk-url-1 = {https://doi.org/10.1145/1276933.1276935}}

@inproceedings{Maule2008,
	author = {Maule, Andy and Emmerich, Wolfgang and Rosenblum, David},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {451--460},
	title = {Impact analysis of database schema changes},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1145/1368088.1368150}}

@inproceedings{Brink2007,
	author = {van den Brink, Huib and van der Leek, Rob and Visser, Joost},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-modified = {2023-02-28 11:57:37 +0100},
	pages = {163--170},
	title = {Quality Assessment for Embedded {SQL}},
	year = {2007},
	bdsk-url-1 = {https://doi.org/10.1109/SCAM.2007.23}}

@article{Ngo2008,
	abstract = {Database interactions are among the most essential functional features in web applications. Therefore, for the testing and maintenance of a web application, it is important that the web engineer could identify all the database interactions in the web application. However, the highly dynamic nature of web applications makes it challenging to extract all the possible database interactions from source code. In this paper, we propose an automated approach to extract database interactions from source code by using symbolic execution and inference rules. Our approach automatically identifies all the possible database interaction points. After that, all the program paths, which pass through each interaction point, are also computed. Each of these paths is then symbolically executed following our proposed symbolic evaluation rules. We also develop inference rules to deduce the interaction types from the set of symbolic expressions derived during the symbolic execution. Experiments have been conducted to evaluate the performance and usefulness of the proposed approach. The results indicate that even with some limitations in handling function calls, pointers and polymorphism, our approach still gives an average precision of 79.2%, which is 45.4% more than that of the conservative approach.},
	author = {Minh Ngoc Ngo and Hee Beng Kuan Tan},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {Database interactions, Web applications, Automated extraction, Symbolic execution, Slicing},
	number = {3},
	pages = {160--175},
	title = {Applying static analysis for automated extraction of database interactions in web applications},
	volume = {50},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1016/j.infsof.2006.11.005}}

@inproceedings{Li2015,
	abstract = {String analysis is critical for many verification techniques. However, accurately modeling string variables is a challeng- ing problem. Current approaches are generally customized for certain problem domains or have critical limitations in handling loops, providing context-sensitive inter-procedural analysis, and performing efficient analysis on complicated apps. To address these limitations, we propose a general framework, Violist, for string analysis that allows researchers to more flexibly choose how they will address each of these challenges by separating the representation and interpreta- tion of string operations. In our evaluation, we show that our approach can achieve high accuracy on both Java and Android apps in a reasonable amount of time. We also com- pared our approach with a popular and widely used string analyzer and found that our approach has higher precision and shorter execution time while maintaining the same level of recall.},
	author = {Li, Ding and Lyu, Yingjun and Wan, Mian and Halfond, William G. J.},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-modified = {2023-02-28 11:01:00 +0100},
	isbn = {9781450336758},
	keywords = {String analysis, mobile apps},
	pages = {661--672},
	publisher = {ACM},
	title = {String Analysis for Java and Android Applications},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1145/2786805.2786879}}

@inproceedings{Annamaa2010,
	abstract = {It is conventional for Java developers to access database engines through standard JDBC API which requires passing SQL queries in plain Java strings. This is referred to as embedding of SQL queries into Java. The strings are not checked at compile time, and errors in the queries (e.g. syntax errors or misspelled names) are usually detected only by testing. In this paper we describe a tool which statically analyzes SQL queries embedded into Java programs. It combines a sound syntactic analyzer with a testing facility which generates small tests to detect errors in individual queries and runs them on an actual database engine. The tool is implemented as a plug-in for Eclipse IDE and allows for interactive use in real-life projects.},
	author = {Annamaa, Aivar and Breslav, Andrey and Kabanov, Jevgeni and Vene, Varmo},
	booktitle = {Asian Symposium on Programming Languages and Systems ({APLAS})},
	date-modified = {2022-12-06 11:12:48 +0100},
	isbn = {978-3-642-17164-2},
	pages = {131--138},
	publisher = {Springer},
	series = {Lecture Notes in Computer Science},
	title = {An Interactive Tool for Analyzing Embedded {SQL} Queries},
	volume = {6461},
	year = {2010}}

@inproceedings{Brahim2019,
	author = {Brahim, Amal Ait and Ferhat, Rabah Tighilt and Zurfluh, Gilles},
	booktitle = {Int. Joint Conf. on Knowledge Discovery, Knowledge Engineering and Knowledge Management},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9789897583827},
	keywords = {Big Data, Model Driven Architecture, Model Extraction, NoSQL, Schema Less},
	pages = {145--154},
	title = {Model driven extraction of {NoSQL} databases schema: Case of {MongodB}},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.5220/0008176201450154}}

@article{Gallinucci2018,
	author = {Gallinucci, Enrico and Golfarelli, Matteo and Rizzi, Stefano},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0306-4379},
	journal = {Inf. Systems},
	keywords = {Decision trees, Document-oriented databases, NoSQL, Schema discovery},
	pages = {13--25},
	publisher = {Elsevier},
	title = {Schema profiling of document-oriented databases},
	volume = {75},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1016/j.is.2018.02.007}}

@article{Baazizi2019,
	author = {Baazizi, Mohamed Amine and Colazzo, Dario and Ghelli, Giorgio and Sartiani, Carlo},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0949-877X},
	journal = {The VLDB Journal},
	keywords = {Big data collections, JSON, Map-reduce, Schema inference, Spark},
	number = {4},
	pages = {497--521},
	publisher = {Springer},
	title = {Parametric schema inference for massive {JSON} datasets},
	volume = {28},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1007/s00778-018-0532-7}}

@book{Karwin2010,
	author = {Bill Karwin},
	isbn = {978-1934356555},
	publisher = {Pragmatic Programmers},
	title = {SQL Antipatterns: Avoiding the Pitfalls of Database Programming},
	year = {2010}}

@inproceedings{Lehman1996,
	abstract = {Data obtained during a 1968 study of the software process [8] led to an investigation of the evolution of OS/360 [13] and and, over a period of twenty years, to formulation of eight Laws of Software Evolution. The FEAST project recently initiated (see sections 4--6 below) is expected to throw additional light on the phenomenology underlying these laws, to increase understanding of them, to explore their finer detail, to expose their wider relevance and implications and to develop means for their beneficial exploitation. This paper is intended to trigger wider interest in the laws and in the FEAST study of feedback and feedback control in the context of the software process and its improvement to ensure beneficial exploitation of their potential.},
	author = {Lehman, Meir M.},
	booktitle = {Software Process Technology},
	date-modified = {2022-12-30 17:24:30 +0100},
	editor = {Montangero, Carlo},
	isbn = {978-3-540-70676-2},
	pages = {108--124},
	publisher = {Springer},
	title = {Laws of software evolution revisited},
	year = {1996}}

@article{Sjoeberg1993,
	abstract = {Achieving correct changes is the dominant activity in the application software industry. Modification of database schemata is one kind of change which may have severe consequences for database applications. The paper presents a method for measuring modifications to database schemata and their consequences by using a thesaurus tool. Measurements of the evolution of a large-scale database application currently running in several hospitals in the UK are presented and interpreted. The kind of measurements provided by this in-depth study is useful input to the design of change management tools.},
	author = {D. Sj{\o}berg},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0950-5849},
	journal = {Information and Software Technology},
	keywords = {schema evolution, change statistics, change management tools},
	number = {1},
	pages = {35--44},
	title = {Quantifying schema evolution},
	volume = {35},
	year = {1993},
	bdsk-url-1 = {https://doi.org/10.1016/0950-5849(93)90027-Z}}

@inproceedings{Curino2008,
	author = {Carlo A. Curino and Letizia Tanca and Hyun J. Moon and Carlo Zaniolo},
	booktitle = {International Conference on Enterprise Information Systems ({ICEIS})},
	date-modified = {2022-12-03 18:43:46 +0100},
	title = {Schema evolution in {Wikipedia}: toward a web information system benchmark},
	year = {2008}}

@inproceedings{Vassiliadis2015,
	abstract = {In this paper, we study the version history of eight databases that are part of larger open source projects, and report on our observations on how evolution-related properties, like the possibility of deletion, or the amount of updates that a table undergoes, are related to observable table properties like the number of attributes or the time of birth of a table. Our findings indicate that (i) most tables live quiet lives; (ii) few top-changers adhere to a profile of long duration, early birth, medium schema size at birth; (iii) tables with large schemata or long duration are quite unlikely to be removed, and, (iv) early periods of the database life demonstrate a higher level of evolutionary activity compared to later ones.},
	author = {Vassiliadis, Panos and Zarras, Apostolos V. and Skoulis, Ioannis},
	booktitle = {International Conference on Conceptual Modeling ({ER})},
	date-modified = {2023-03-04 18:52:11 +0100},
	isbn = {978-3-319-25264-3},
	pages = {453--466},
	publisher = {Springer},
	title = {How is Life for a Table in an Evolving Relational Schema? Birth, Death and Everything in Between},
	year = {2015}}

@inproceedings{Chen2014,
	abstract = {Object-Relational Mapping (ORM) provides developers a conceptual abstraction for mapping the application code to the underlying databases. ORM is widely used in industry due to its convenience; permitting developers to focus on developing the business logic without worrying too much about the database access details. However, developers often write ORM code without considering the impact of such code on database performance, leading to cause transactions with timeouts or hangs in large-scale systems. Unfortunately, there is little support to help developers automatically detect suboptimal database accesses. In this paper, we propose an automated framework to detect ORM performance anti-patterns. Our framework automatically flags performance anti-patterns in the source code. Furthermore, as there could be hundreds or even thousands of instances of anti-patterns, our framework provides sup- port to prioritize performance bug fixes based on a statistically rigorous performance assessment. We have successfully evaluated our framework on two open source and one large-scale industrial systems. Our case studies show that our framework can detect new and known real-world performance bugs and that fixing the detected performance anti- patterns can improve the system response time by up to 98%.},
	author = {Chen, Tse-Hsun and Shang, Weiyi and Jiang, Zhen Ming and Hassan, Ahmed E. and Nasser, Mohamed and Flora, Parminder},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450327565},
	keywords = {Performance Anti-pattern, Dynamic Analysis, Static Analysis, Performance Evaluation, Performance},
	pages = {1001--1012},
	publisher = {ACM},
	title = {Detecting Performance Anti-Patterns for Applications Developed Using Object-Relational Mapping},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2568225.2568259}}

@inproceedings{Qiu2013,
	abstract = {Modern database applications are among the most widely used and complex software systems. They constantly evolve, responding to changes to data, database schemas, and code. It is challenging to manage these changes and ensure that everything co-evolves consistently. For example, when a database schema is modified, all the code that interacts with the database must be changed accordingly. Although database evolution and software evolution have been extensively studied in isolation, the co-evolution of schema and code has largely been unexplored. This paper presents the first comprehensive empirical analysis of the co-evolution of database schemas and code in ten popular large open-source database applications, totaling over 160K revisions. Our major findings include: 1) Database schemas evolve frequently during the application lifecycle, exhibiting a variety of change types with similar distributions across the studied applications; 2) Overall, schema changes induce significant code-level modifications, while certain change types have more impact on code than others; and 3) Co-change analyses can be viable to automate or assist with database application evolution. We have also observed that: 1) 80% of the schema changes happened in 20-30% of the tables, while nearly 40% of the tables did not change; and 2) Referential integrity constraints and stored procedures are rarely used in our studied subjects. We believe that our study reveals new insights into how database applications evolve and useful guidelines for designing assistive tools to aid their evolution.},
	author = {Qiu, Dong and Li, Bixin and Su, Zhendong},
	booktitle = {Joint Meeting on Foundations of Software Engineering ({ESEC/FSE})},
	date-modified = {2023-02-21 16:45:15 +0100},
	isbn = {9781450322379},
	keywords = {database application, empirical analysis, Co-evolution},
	pages = {125--135},
	publisher = {ACM},
	title = {An Empirical Analysis of the Co-Evolution of Schema and Code in Database Applications},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1145/2491411.2491431}}

@inproceedings{Stonebraker2017,
	abstract = {In a recent IEEE paper [2] we discussed the concept of database
               decay. Specifically, as business conditions change in large enterprises, applications and/or the database schema must change.
               However, ``in the wild'' DBAs try very hard to minimize application maintenance by avoiding changing the schema. Instead they
               ``kluge'' the schema, thereby cause it to decay over time. In this
               short paper, we extend the discussion to consider application decay. If a DBA ``does the right thing'' and changes the schema to
               conform to well known database design principles, then extensive
               application maintenance is likely to be required. Patching applications will generally cause them to decay over time, as multiple
               patches, often by different programmers, will generate dirtier and
               dirtier code. Recent DBMS application frameworks support exactly this point of view. In our opinion, the two extremes (dirty
               data, clean application) and (clean data, dirty application) are both
               inferior to a strategy of co-evolution, which we present herein. We
               briefly outline a prototype co-evolution system and sketch its construction.},
	author = {Michael Stonebraker and Dong Deng and Michael L. Brodie},
	booktitle = {New England Database Day},
	title = {Application-Database Co-Evolution: A New Design and Development Paradigm},
	year = {2017}}

@inproceedings{Stonebraker2016,
	author = {M. {Stonebraker} and D. {Deng} and M. L. {Brodie}},
	booktitle = {Proc. Big Data},
	date-modified = {2023-02-21 11:18:53 +0100},
	keywords = {data models;relational databases;Unified Modeling Language;database decay;database schemas;initial data model;3rd normal form relations;table resulting collection;application maintenance minimization;E-R model;UML model;actual database semantics;ODBC;JDBC;design tool},
	pages = {7--16},
	title = {Database decay and how to avoid it},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/BigData.2016.7840584}}

@inproceedings{Ireland2009,
	author = {Ireland, Christopher and Bowers, David and Newton, Michael and Waugh, Kevin},
	booktitle = {1st International Confernce on Advances in Databases, Knowledge, and Data Applications},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {36--43},
	title = {A Classification of Object-Relational Impedance Mismatch},
	year = {2009},
	bdsk-url-1 = {https://doi.org/10.1109/DBKDA.2009.11}}

@inproceedings{Brass2004,
	author = {Stefan Brass and Christian Goldberg},
	booktitle = {Workshop on Foundations of Databases},
	date-modified = {2022-12-06 11:29:37 +0100},
	title = {Detecting Logical Errors in {SQL} Queries},
	year = {2004}}

@article{Brass2006,
	abstract = {We investigate classes of SQL queries which are syntactically correct, but certainly not intended, no matter for which task the query was written. For instance, queries that are contradictory, i.e. always return the empty set, are obviously not intended. However, current database management systems (DBMS) execute such queries without any warning. In this paper, we give an extensive list of conditions that are strong indications of semantic errors. Of course, questions like the satisfiability are in general undecidable, but a significant subset of SQL queries can actually be checked. We believe that future DBMS will perform such checks and that the generated warnings will help to develop application programs with fewer bugs in less time.},
	author = {Stefan Brass and Christian Goldberg},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Databases, SQL, Queries, Bugs, Errors, Semantic errors, Logical errors, Software correctness, Static analysis, Teaching, Database courses, SQL exams},
	number = {5},
	pages = {630--644},
	title = {Semantic errors in {SQL} queries: A quite complete list},
	volume = {79},
	year = {2006},
	bdsk-url-1 = {https://doi.org/10.1016/j.jss.2005.06.028}}

@techreport{Goldberg2008,
	author = {Christian Goldberg},
	institution = {Higher Education Academy},
	title = {Do You Know {SQL}? About Semantic Errors in Database Queries},
	year = {2008}}

@book{Faroult2006,
	author = {Stephane Faroult and Peter Robson},
	isbn = {978-0596008949},
	publisher = {O'Reilly Media},
	title = {The Art of SQL},
	year = {2006}}

@book{Faroult2008,
	author = {Stephane Faroult and Pascal L'Hermite},
	publisher = {O'Reilly Media},
	title = {Refactoring SQL Applications},
	year = {2008}}

@inproceedings{Gould2004a,
	author = {Gould, C. and Zhendong Su and Devanbu, P.},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 18:03:06 +0100},
	pages = {697--698},
	title = {{JDBC Checker}: {A} static analysis tool for {SQL/JDBC} applications},
	year = {2004},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE.2004.1317494}}

@inproceedings{VanDenBrink2007,
	author = {Van Den Brink, Huib J and van der Leek, Rob},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-modified = {2023-02-21 17:29:28 +0100},
	title = {Quality metrics for {SQL} queries embedded in host languages},
	year = {2007}}

@inproceedings{Sonoda2011,
	abstract = {The SQL injection attack causes very serious problem to web applications which have database including personal data. To detect the SQL injection attack, the parsing and the black list based on the existed attack have been widely used. However, a new attack method that is not included by the black list has still been developed. In this paper, we proposed the detecting method based on single character, and show the effectiveness of the proposed method experimentally using both attack and normal samples.},
	author = {Sonoda, Michio and Matsuda, Takeshi and Koizumi, Daiki and Hirasawa, Shigeichi},
	booktitle = {International Conference on Security of Information and Networks ({SIN})},
	date-modified = {2023-02-21 11:18:53 +0100},
	isbn = {9781450310208},
	keywords = {web application, single character, detection, sql injection attack},
	pages = {81--86},
	publisher = {ACM},
	title = {On Automatic Detection of {SQL} Injection Attacks by the Feature Extraction of the Single Character},
	year = {2011},
	bdsk-url-1 = {https://doi.org/10.1145/2070425.2070440}}

@inproceedings{Yeole2011,
	abstract = {Vulnerability in web applications allows malicious users to obtain unrestricted access to private and confidential information. SQL Injection vulnerabilities are particularly relevant, as web services frequently access a relational database using SQL commands. SQL injection is ranked at the top in web application attack mechanisms used by hackers to steal data from organizations. Hackers' can take advantages due to flawed design, improper coding practices, improper validations of user input, configuration errors, or other weaknesses in the infrastructure. Reference has said that researchers have proposed different techniques to provide a solution for SQLIAs (SQL Injection Attacks), but many of these solutions have limitations that affect their effectiveness and practicability. The OWASP 2010 report places Injection Attacks, including SQLIAs, as the most likely and damaging. SQLIAs are caused by attackers inserting a malicious SQL query into the web application to manipulate data, or even to gain access to the back-end database. The main reason contributing to the successful SQLIAs is due to bad web application design and implementation. In this paper we are going to discuss different mechanisms available for detection of SQL injection. At the end we are going to conclude which mechanism is better.},
	author = {Yeole, A. S. and Meshram, B. B.},
	booktitle = {International Conference \& Workshop on Emerging Trends in Technology ({ICWET})},
	date-modified = {2023-02-21 17:12:40 +0100},
	isbn = {9781450304498},
	keywords = {SQL injection, security, vulnerability},
	numpages = {4},
	pages = {963--966},
	publisher = {ACM},
	title = {Analysis of Different Technique for Detection of {SQL} Injection},
	year = {2011},
	bdsk-url-1 = {https://doi.org/10.1145/1980022.1980229}}

@inproceedings{Clark2011,
	author = {Clark, Sarah R. and Cobb, Jake and Kapfhammer, Gregory M. and Jones, James A. and Harrold, Mary Jean},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {213--222},
	publisher = {ACM},
	title = {Localizing {SQL} faults in database applications},
	year = {2011},
	bdsk-url-1 = {https://doi.org/10.1109/ASE.2011.6100056}}

@article{Reiss1995,
	author = {Reiss, Steven P.},
	journal = {J. Visual Languages \& Computing},
	number = {3},
	numpages = {25},
	pages = {299--323},
	publisher = {Academic Press, Inc.},
	title = {An Engine for the {3D} Visualization of Program Information},
	volume = {6},
	year = {1995}}

@inproceedings{Young1998,
	author = {Peter Young and Malcolm Munro},
	booktitle = {International Workshop on Program Comprehension ({IWPC})},
	date-modified = {2023-02-21 17:12:12 +0100},
	organization = {IEEE},
	pages = {19--26},
	title = {Visualising software in virtual reality},
	year = {1998}}

@inproceedings{Panas2005,
	author = {Panas, Thomas and Lincke, R\"{u}diger and L\"{o}we, Welf},
	booktitle = {Symposium on Software Visualization ({SoftVis})},
	date-modified = {2023-03-12 15:09:05 +0100},
	pages = {173--182},
	publisher = {ACM},
	title = {Online-configuration of Software Visualizations with {Vizz3D}},
	year = {2005}}

@inproceedings{Panas2007,
	author = {T. {Panas} and T. {Epperly} and D. {Quinlan} and A. {Saebjornsen} and R. {Vuduc}},
	booktitle = {International Conference on Engineering Complex Computer Systems ({ECCS})},
	date-modified = {2023-03-12 14:56:19 +0100},
	organization = {IEEE},
	pages = {217--228},
	title = {Communicating Software Architecture using a Unified Single-View Visualization},
	year = {2007}}

@inproceedings{Langelier2005,
	author = {Langelier, Guillaume and Sahraoui, Houari and Poulin, Pierre},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-modified = {2023-03-12 15:00:07 +0100},
	pages = {214--223},
	publisher = {ACM},
	title = {Visualization-based Analysis of Quality for Large-scale Software Systems},
	year = {2005}}

@inproceedings{Wettel2008,
	author = {Wettel, Richard and Lanza, Michele},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 17:23:48 +0100},
	numpages = {2},
	organization = {ACM},
	pages = {921--922},
	title = {{CodeCity:} {3D} Visualization of Large-Scale Software},
	year = {2008}}

@inproceedings{Steinbrueckner2010,
	author = {Steinbr\"{u}ckner, Frank and Lewerentz, Claus},
	booktitle = {International Symposium on Software Visualization},
	date-modified = {2023-02-21 17:37:22 +0100},
	isbn = {978-1-4503-0028-5},
	keywords = {software cities, software evolution, software landscapes, software visualization},
	pages = {193--202},
	publisher = {ACM},
	title = {Representing Development History in Software Cities},
	year = {2010},
	bdsk-url-1 = {https://doi.org/10.1145/1879211.1879239}}

@inproceedings{Balogh2013,
	author = {Balogh, Gerg{\H{o}} and Beszedes, Arpad},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-modified = {2022-12-06 11:21:46 +0100},
	organization = {IEEE},
	pages = {136--141},
	title = {{CodeMetropolis} - code visualisation in {MineCraft}},
	year = {2013}}

@inproceedings{Vincur2017,
	author = {J. {Vincur} and P. {Navrat} and I. {Polasek}},
	booktitle = {Int. Conf. Software Quality, Reliability and Security},
	date-modified = {2023-02-21 17:28:48 +0100},
	keywords = {data visualisation;software metrics;virtual reality;software analysis;virtual reality environment;VR City;software visualization tool;modified city metaphor;software system;software aspects;new layouting algorithm;software metrics;source code modifications;visualize method;program execution;source code browsing feature;Visualization;Urban areas;Buildings;Three-dimensional displays;Layout;Software systems;software cities;software visualization;virtual reality;software analysis},
	month = jul,
	organization = {IEEE},
	pages = {509--516},
	title = {{VR City}: {S}oftware Analysis in Virtual Reality Environment},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/QRS-C.2017.88}}

@techreport{Zirkelbach2019,
	author = {Zirkelbach, Christian and Hasselbring, Wilhelm},
	institution = {Department of Computer Science, Kiel University},
	title = {Live Visualization of Database Behavior for Large Software Landscapes: The {RACCOON} Approach},
	year = {2019}}

@inproceedings{Marinescu2019,
	author = {Cristina Marinescu},
	booktitle = {International Conference on Software Technologies ({ICSOFT})},
	date-modified = {2023-03-12 14:54:26 +0100},
	pages = {254--261},
	publisher = {SCITEPRESS},
	title = {Applications of Automated Model's Extraction in Enterprise Systems},
	year = {2019}}

@inproceedings{Nagy2018,
	author = {Nagy, Csaba and Cleve, Anthony},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {93--96},
	title = {{SQLInspect}: A Static Analyzer to Inspect Database Usage in {Java} Applications},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3183440.3183496}}

@inproceedings{Muse2020,
	author = {Muse, Biruk Asmare and Rahman, Masud and Nagy, Csaba and Cleve, Anthony and Khomh, Foutse and Antoniol, Giuliano},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {327--338},
	publisher = {ACM},
	title = {On the Prevalence, Impact, and Evolution of {SQL} code smells in Data-Intensive Systems},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3379597.3387467}}

@inproceedings{Ardigo2021,
	author = {Ardig{\`o}, Susanna and Nagy, Csaba and Minelli, Roberto and Lanza, Michele},
	booktitle = {Working Conference on Software Visualization ({VISSOFT}), NIER/TD},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {145--149},
	publisher = {IEEE},
	title = {Visualizing Data in Software Cities},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/VISSOFT52517.2021.00028}}

@inproceedings{Cherry2022,
	author = {Cherry, Boris and Benats, Pol and Gobert, Maxime and Meurice, Loup and Nagy, Csaba and Cleve, Anthony},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {930--934},
	publisher = {IEEE},
	title = {Static Analysis of Database Accesses in MongoDB Applications},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/SANER2022.2022.00111}}

@article{Muse2022,
	author = {Muse, Biruk Asmare and Nagy, Csaba and Cleve, Anthony and Khomh, Foutse and Antoniol, Giuliano},
	date-modified = {2023-02-21 11:18:53 +0100},
	journal = {Empirical Software Engineering},
	number = {6},
	publisher = {Kluwer Academic Publishers},
	title = {{FIXME}: Synchronize with Database An Empirical Study of Data Access Self-Admitted Technical Debt},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-022-10119-4}}

@inproceedings{Ardigo2022,
	author = {Ardig{\`o}, Susanna and Nagy, Csaba and Minelli, Roberto and Lanza, Michele},
	booktitle = {International Conference on Software Engineering ({ICSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {130--133},
	publisher = {IEEE},
	title = {{M3triCity}: Visualizing Evolving Software \& Data Cities},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3510454.3516831}}

@inproceedings{Meurice2016,
	author = {Meurice, Loup and Nagy, Csaba and Cleve, Anthony},
	booktitle = {International Conference on Advanced Information Systems Engineering ({CAiSE})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {491--506},
	publisher = {Springer},
	title = {Static Analysis of Dynamic Database Usage in {Java} Systems},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-319-39696-5%5C_30}}

@inproceedings{Meurice2016a,
	author = {Meurice, Loup and Nagy, Csaba and Cleve, Anthony},
	booktitle = {International Conference on Software Quality, Reliability \& Security ({QRS})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {262--273},
	publisher = {IEEE},
	title = {Detecting and Preventing Program Inconsistencies Under Database Schema Evolution},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/QRS.2016.38}}

@inproceedings{Nagy2017,
	author = {Nagy, Csaba and Cleve, Anthony},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {147--152},
	publisher = {IEEE},
	title = {Static Code Smell Detection in {SQL} Queries Embedded in {Java} Code},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SCAM.2017.19}}

@inproceedings{Meurice2017,
	author = {Meurice, Loup and Cleve, Anthony},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-21 18:02:31 +0100},
	pages = {457--461},
	title = {Supporting schema evolution in schema-less {NoSQL} data stores},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/SANER.2017.7884653}}

@inproceedings{Meurice2016b,
	author = {Meurice, Loup and Cleve, Anthony},
	booktitle = {Working Conference on Software Visualization ({VISSOFT})},
	date-modified = {2023-02-21 18:13:36 +0100},
	pages = {76--80},
	publisher = {IEEE},
	title = {{DAHLIA 2.0}: A Visual Analyzer of Database Usage in Dynamic and Heterogeneous Systems},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1109/VISSOFT.2016.15}}

@article{Gobert2023,
	author = {Gobert, Maxime and Nagy, Csaba and Rocha, Henrique and Demeyer, Serge and Cleve, Anthony},
	date-modified = {2023-02-21 11:18:53 +0100},
	journal = {Information Systems},
	pages = {102105},
	title = {Best practices of testing database manipulation code},
	volume = {111},
	year = {2023},
	bdsk-url-1 = {https://doi.org/10.1016/j.is.2022.102105}}

@inproceedings{Gobert2021,
	author = {Gobert, Maxime and Nagy, Csaba and Rocha, Henrique and Demeyer, Serge and Cleve, Anthony},
	booktitle = {International Conference on Advanced Information Systems Engineering ({CAiSE})},
	date-modified = {2022-12-06 11:16:05 +0100},
	pages = {229--245},
	publisher = {Springer},
	title = {Challenges and Perils of Testing Database Manipulation Code},
	year = {2021}}

@phdthesis{Noughi2018,
	abstract = {Most software systems need to be adapted during their life-cycle. It is estimated that more than 60% of the cost of a software system is related to its
                   maintenance and evolution. The evolution of a software system not only involves the modification made to its various components, but it also includes
                   an indispensable preliminary phase, which is the in-depth understanding of each component of the system. This is especially true for a certain type of systems called data-intensive systems. Within such a system, the interactions between the application programs and the database are becoming increasingly difficult to analyze, and therefore to understand. This is why program understanding in general has become a important
                   topic of interest for software engineering researchers and developers. In particular, understanding today's data-intensive systems clearly calls for automated support.
                   The goal of this thesis is to facilitate the understanding of large dataintensive systems using dynamic analysis, visualization and process mining techniques. The dynamic analysis techniques seek to analyze and visualize the data-manipulation behavior of data-intensive systems via the analysis of their SQL execution traces. The process mining techniques seek to retrieve recurring patterns and extract the data-manipulation processes followed by the program itself.},
	author = {Noughi, Nesrine},
	date-modified = {2023-02-21 18:23:18 +0100},
	file = {:references/Noughi2018.pdf:PDF},
	school = {University of Namur},
	title = {Understanding Data-Intensive Systems Through The Analysis of {SQL} Execution Traces},
	year = {2018}}

@inproceedings{Fink2020,
	abstract = {Database schema change has long been recognized as a complex, time-consuming and risky process. It requires not only the modification of database structures and contents, but also the joint evolution of related application programs. This coevolution process mainly consists in converting database queries expressed on the source database schema, into equivalent queries expressed on the target database schema. Several approaches, techniques and tools have been proposed to address this problem, by considering software systems relying on a single database. In this paper, we propose an automated approach to query adaptation for schema changes in hybrid polystores, i.e., data-intensive systems relying on several, possibly heterogeneous, databases. The proposed approach takes advantage of a conceptual modeling language for representing the polystore schema, and considers a generic query language for expressing queries on top of this schema. Given a source polystore schema, a set of input queries and a list of schema change operators, our approach (1) identifies those input queries that cannot be transformed into equivalent queries expressed on the target schema, (2) automatically transforms those input queries that can be adapted to the target schema, and (3) generates warnings for those output queries requiring further manual inspection.},
	author = {Fink, J{\'e}r{\^o}me and Gobert, Maxime and Cleve, Anthony},
	booktitle = {International Working Conference on Source Code Analysis and Manipulation ({SCAM})},
	date-modified = {2023-02-28 11:56:58 +0100},
	pages = {127--131},
	title = {Adapting Queries to Database Schema Changes in Hybrid Polystores},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/SCAM51674.2020.00019}}

@inproceedings{Meurice2014,
	author = {Meurice, Loup and Cleve, Anthony},
	booktitle = {Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering ({CSMR-WCRE})},
	date-modified = {2023-03-07 10:31:53 +0100},
	pages = {464--468},
	publisher = {IEEE},
	title = {{DAHLIA}: A visual analyzer of database schema evolution},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/CSMR-WCRE.2014.6747219}}

@inproceedings{Benats2021,
	author = {Benats, Pol and Gobert, Maxime and Meurice, Loup and Nagy, Csaba and Cleve, Anthony},
	booktitle = {International Conference on Conceptual Modeling ({ER})},
	date-modified = {2022-12-06 11:15:30 +0100},
	pages = {87--101},
	publisher = {Springer},
	title = {An Empirical Study of (Multi-) Database Models in Open-Source Projects},
	year = {2021}}

@inproceedings{Nagy2015,
	author = {Nagy, Csaba and Cleve, Anthony},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {516--520},
	publisher = {IEEE},
	title = {Mining Stack Overflow for Discovering Error Patterns in {SQL} Queries},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1109/ICSM.2015.7332505}}

@incollection{Meurice2018,
	author = {Meurice, Loup and Goeminne, Mathieu and Mens, Tom and Nagy, Csaba and Decan, Alexandre and Cleve, Anthony},
	booktitle = {Software Technology: 10 Years of Innovation},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Meurice2018.pdf:PDF},
	pages = {208--240},
	publisher = {Wiley},
	title = {Analyzing the Evolution of Database Usage in Data-Intensive Software Systems},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1002/9781119174240.ch12}}

@mastersthesis{Bernard2021,
	author = {Jehan Bernard and Thomas Kintziger},
	school = {Universit{\'e} de Namur},
	title = {MongoDB Code Smells: Defining, Classifyingand Detecting Code Smells for MongoDBInteractions in Java Programs},
	year = {2021}}

@inproceedings{Nagy2013,
	author = {Nagy, Csaba},
	booktitle = {European Conference on Software Maintenance and Reengineering ({CSMR})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {435--438},
	publisher = {IEEE},
	title = {Static Analysis of Data-Intensive Applications},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1109/CSMR.2013.66}}

@inproceedings{Gobert2022,
	abstract = {Data-intensive system evolution is a complex and error-prone process, as most evolution scenarios impact several interdependent artefacts such as the application code, the data structures or data instances. This process is becoming even more challenging with the emergence of heterogeneous database architectures, commonly called hybrid polystores, that rely on a combination of several, possibly overlapping relational and NoSQL databases. This paper presents HyDRa, a framework aiming to facilitate the evolution of polystores thanks to automatically generated data access APIs. For a given polystore, a conceptual API can be derived from the conceptual schema of the polystore and its correspondences with the physical schemas of the underlying databases. Applications built on top of the generated API are then protected from future schema and data reconfiguration changes applied to the polystore. Furthermore, HyDRa automatically enforces cross-database data integrity constraints and does not require developers to master multiple data models and query languages. This paper presents HyDRa and demonstrates its main features based on open-source datasets and realistic use cases.},
	author = {Gobert, Maxime and Meurice, Loup and Cleve, Anthony},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-02-28 10:59:45 +0100},
	pages = {652--656},
	title = {{HyDRa}: A Framework for Modeling, Manipulating and Evolving Hybrid Polystores},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/SANER53432.2022.00082}}

@phdthesis{Meurice2017a,
	author = {Loup Meurice},
	date-modified = {2023-02-21 11:18:53 +0100},
	file = {:references/Meurice2017a.pdf:PDF},
	school = {University of Namur},
	title = {Analyzing, Understanding and Supporting the Evolution of Dynamic and Heterogeneous Data-Intensive Software Systems},
	year = {2017},
	bdsk-url-1 = {https://loupmeurice.github.io/PhD.pdf}}

@article{Cleve2015,
	abstract = {Database reverse engineering (DRE) has traditionally been carried out by considering three main information sources: (1) the database schema, (2) the stored data, and (3) the application programs. Not all of these information sources are always available, or of sufficient quality to inform the DRE process. For example, getting access to real-world data is often extremely problematic for information systems that maintain private data. In recent years, the analysis of the evolution history of software programs have gained an increasing role in reverse engineering in general, but comparatively little such research has been carried out in the context of database reverse engineering. The goal of this paper is to contribute to narrowing this gap and exploring the use of the database evolution history as an additional information source to aid database schema reverse engineering. We present a tool-supported method for analyzing the evolution history of legacy databases, and we report on a large-scale case study of reverse engineering a complex information system and curate it as a benchmark for future research efforts within the community.},
	author = {Anthony Cleve and Maxime Gobert and Loup Meurice and Jerome Maes and Jens Weber},
	date-modified = {2023-03-12 16:00:16 +0100},
	doi = {10.1016/j.scico.2013.11.025},
	issn = {0167-6423},
	journal = {Science of Computer Programming},
	keywords = {Database understanding, Schema evolution, Software repository mining},
	note = {Special Issue on New Ideas and Emerging Results in Understanding Software},
	pages = {113--121},
	title = {Understanding database schema evolution: A case study},
	volume = {97},
	year = {2015},
	bdsk-url-1 = {https://doi.org/10.1016/j.scico.2013.11.025}}

@inproceedings{Weber2014,
	author = {Weber, Jens H. and Cleve, Anthony and Meurice, Loup and Bermudez Ruiz, Francisco Javier},
	booktitle = {International Workshop on Managing Technical Debt},
	date-modified = {2023-02-21 17:26:59 +0100},
	pages = {43--46},
	title = {Managing Technical Debt in Database Schemas of Critical Software},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1109/MTD.2014.17}}

@inproceedings{Jong2017,
	abstract = {When a web service or application evolves, its database schema - tables, constraints, and indices - often need to evolve along with it. Depending on the database, some of these changes require a full table lock, preventing the service from accessing the tables under change. To deal with this, web services are typically taken offline momentarily to modify the database schema. However with the introduction of concepts like Continuous Deployment, web services are deployed into their production environments every time the source code is modified. Having to take the service offline - potentially several times a day - to perform schema changes is undesirable. In this paper we introduce QuantumDB - a tool-supported approach that abstracts this evolution process away from the web service without locking tables. This allows us to redeploy a web service without needing to take it offline even when a database schema change is necessary. In addition QuantumDB puts no restrictions on the method of deployment, supports schema changes to multiple tables using changesets, and does not subvert foreign key constraints during the evolution process. We evaluate QuantumDB by applying 19 synthetic and 95 industrial evolution scenarios to our open source implementation of QuantumDB. These experiments demonstrate that QuantumDB realizes zero downtime migrations at the cost of acceptable overhead, and is applicable in industrial continuous deployment contexts.},
	author = {de Jong, Michael and van Deursen, Arie and Cleve, Anthony},
	booktitle = {International Conference on Software Engineering: Software Engineering in Practice Track ({ICSE-SEIP})},
	date-modified = {2023-02-21 18:19:23 +0100},
	file = {:references/Jong2017.pdf:PDF},
	isbn = {978-1-5386-2717-4},
	pages = {143--152},
	publisher = {IEEE},
	title = {Zero-Downtime SQL Database Schema Evolution for Continuous Deployment},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSE-SEIP.2017.5}}

@inproceedings{Cleve2013,
	abstract = {The maintenance and evolution of data-intensive systems should ideally rely on a complete and accurate database documentation. Unfortunately, this documentation is often missing, or, at best, outdated. Database redocumentation, a process also known as database reverse engineering, then comes to the rescue. This process typically involves the elicitation of implicit schema constructs, that is, data structures and constraints that have been incompletely translated into the operational database schema. In this context, the SQL statements executed by the programs may be a particularly rich source of information. SQL APIs come in two variants, namely static and dynamic. The latter is intensively used in object-oriented and web applications, notably through ODBC and JDBC APIs. While the static analysis of SQL queries has long been studied, coping with automatically generated SQL statements requires other weapons. This tutorial provides an in-depth exploration of the use of dynamic program analysis as a basis for reverse engineering relational databases. It describes and illustrates several automated techniques allowing to capture the trace of the SQL-related events occuring during the execution of data-intensive programs. It then presents and evaluates several heuristics and techniques supporting the automatic recovery of implicit schema constructs from SQL execution traces. Other applications of SQL execution trace analysis are also identified.},
	author = {Cleve, Anthony and Noughi, Nesrine and Hainaut, Jean-Luc},
	booktitle = {International Summer School on Generative and Transformational Techniques in Software Engineering ({GTTSE})},
	date-modified = {2023-03-12 15:59:30 +0100},
	isbn = {978-3-642-35992-7},
	pages = {297--321},
	publisher = {Springer},
	title = {Dynamic Program Analysis for Database Reverse Engineering},
	year = {2013},
	bdsk-url-1 = {https://doi.org/10.1007/978-3-642-35992-7_8}}

@inproceedings{Noughi2014,
	abstract = {Due to the lack of (up-do-date) documentation, software maintenance and evolution processes often necessitate the recovery of a sucient understanding of the software system, before the latter can be adapted to new or changing requirements. To address this problem, several program comprehension techniques have been proposed to support this preliminary phase of software maintenance and evolution. Nevertheless, those techniques generally fail in gaining a complete and accurate understanding in the case of modern data-intensive systems, which are characterized by complex, dynamic and continuous interactions between the application programs and their database. In particular, understanding the database manipulation behavior of a given program involves dierent levels of comprehension ranging from identifying to relating and interpreting the successive database access operations. In this paper, we present our early research achievements in the development of a tool-supported framework aiming to extract and understand the database manipulation behavior of data-intensive programs.},
	author = {Noughi, Nesrine and Mori, Marco and Meurice, Loup and Cleve, Anthony},
	booktitle = {International Conference on Program Comprehension ({ICPC})},
	date-modified = {2023-02-21 17:59:29 +0100},
	isbn = {9781450328791},
	keywords = {data-intensive programs, Dynamic analysis},
	numpages = {4},
	pages = {64--67},
	publisher = {ACM},
	title = {Understanding the Database Manipulation Behavior of Programs},
	year = {2014},
	bdsk-url-1 = {https://doi.org/10.1145/2597008.2597790}}

@inproceedings{Cleve2008,
	author = {Cleve, Anthony and Hainaut, Jean-Luc},
	booktitle = {Working Conference on Reverse Engineering ({WCRE})},
	date-modified = {2023-03-07 10:32:10 +0100},
	pages = {192--196},
	title = {Dynamic Analysis of {SQL} Statements for Data-Intensive Applications Reverse Engineering},
	year = {2008},
	bdsk-url-1 = {https://doi.org/10.1109/WCRE.2008.38}}

@inproceedings{Mori2014,
	author = {Mori, Marco and Noughi, Nesrine and Cleve, Anthony},
	booktitle = {International Conference on Advanced Information Systems Engineering ({CAiSE})},
	date-modified = {2023-03-07 10:33:08 +0100},
	title = {Mining {SQL} Execution Traces for Data Manipulation Behavior Recovery},
	year = {2014}}

@inproceedings{Pfahler2020,
	author = {Pfahler, Federico and Minelli, Roberto and Nagy, Csaba and Lanza, Michele},
	booktitle = {Working Conference on Software Visualization ({VISSOFT})},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {22--26},
	title = {Visualizing Evolving Software Cities},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1109/VISSOFT51673.2020.00007}}

@inproceedings{Kexin_etAl,
	author = {Sun, Kexin and Shi, Xiaobo and Gao, Hui and Kuang, Hongyu and Ma, Xiaoxing and Rong, Guoping and Shao, Dong and Zhao, Zheng and Zhang, He},
	booktitle = {Asia-Pacific Symposium on Internetware},
	date-modified = {2023-02-21 17:35:17 +0100},
	isbn = {9781450397803},
	keywords = {Sentiment Analysis, Software Mining, Nature Language Processing, Pre-trained Models},
	pages = {127--136},
	publisher = {ACM},
	title = {Incorporating Pre-Trained Transformer Models into TextCNN for Sentiment Analysis on Software Engineering Texts},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3545258.3545273}}

@article{vandenHooff2012,
	author = {van den Hooff, Bart and Schouten, Alexander P. and Simonovski, Stojan},
	date-modified = {2023-02-21 11:18:53 +0100},
	day = {01},
	issn = {1367-3270},
	journal = {Journal of Knowledge Management},
	month = {Jan},
	number = {1},
	pages = {148--158},
	publisher = {Emerald Group Publishing Limited},
	title = {What one feels and what one knows: the influence of emotions on attitudes and intentions towards knowledge sharing},
	volume = {16},
	year = {2012},
	bdsk-url-1 = {https://doi.org/10.1108/13673271211198990}}

@article{10.1145/3512945,
	abstract = {Code review consists of manual inspection, discussion, and judgment of source code by developers other than the code's author. Due to discussions around competing ideas and group decision-making processes, interpersonal conflicts during code reviews are expected. This study systematically investigates how developers perceive code review conflicts and addresses interpersonal conflicts during code reviews as a theoretical construct. Through the thematic analysis of interviews conducted with 22 developers, we confirm that conflicts during code reviews are commonplace, anticipated and seen as normal by developers. Even though conflicts do happen and carry a negative impact for the review, conflicts-if resolved constructively-can also create value and bring improvement. Moreover, the analysis provided insights on how strongly conflicts during code review and its context (i.e., code, developer, team, organization) are intertwined. Finally, there are aspects specific to code review conflicts that call for the research and application of customized conflict resolution and management techniques, some of which are discussed in this paper. Preprint: https://arxiv.org/abs/2201.05425 Data and material: https://doi.org/10.5281/zenodo.5848794},
	articleno = {98},
	author = {Wurzel Gon\c{c}alves, Pavl\`{\i}na and \c{C}alikli, G\``{u}l and Bacchelli, Alberto},
	date-modified = {2023-03-12 15:11:23 +0100},
	issue_date = {April 2022},
	journal = {Proc. ACM Hum.-Comput. Interact.},
	keywords = {interpersonal conflicts, code review, conflict management, human factors},
	month = {apr},
	number = {CSCW1},
	numpages = {33},
	publisher = {ACM},
	title = {Interpersonal Conflicts During Code Review: Developers' Experience and Practices},
	volume = {6},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3512945}}

@inproceedings{tsuru2021type,
	author = {Tsuru, Tomoaki and Nakagawa, Tasuku and Matsumoto, Shinsuke and Higo, Yoshiki and Kusumoto, Shinji},
	booktitle = {International Workshop on Software Clones ({IWSC})},
	date-modified = {2023-02-21 17:32:03 +0100},
	organization = {IEEE},
	title = {Type-2 Code Clone Detection for {D}ockerfiles},
	year = {2021}}

@inproceedings{oumaziz2019handling,
	author = {Oumaziz, Mohamed A and Falleri, Jean-R{\'e}my and Blanc, Xavier and Bissyand{\'e}, Tegawend{\'e} F and Klein, Jacques},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-03-12 15:48:38 +0100},
	organization = {IEEE},
	pages = {524--535},
	title = {Handling duplicates in {D}ockerfiles families: Learning from experts},
	year = {2019}}

@inproceedings{gholami2021should,
	author = {Gholami, Sara and Khazaei, Hamzeh and Bezemer, Cor-Paul},
	booktitle = {International Conference on Software Engineering - New Ideas and Emerging Results ({ICSE-NIER})},
	date-modified = {2023-03-12 16:05:29 +0100},
	organization = {IEEE},
	pages = {101--105},
	title = {Should you upgrade official {D}ocker {H}ub images in production environments?},
	year = {2021}}

@inproceedings{sabuhi2022studying,
	author = {Sabuhi, Mikael and Musilek, Petr and Bezemer, Cor-Paul},
	booktitle = {International Conference on Performance Engineering},
	date-modified = {2023-02-21 17:57:22 +0100},
	pages = {97--104},
	publisher = {ACM},
	title = {Studying the Performance Risks of Upgrading {D}ocker {H}ub Images: A Case Study of {WordPress}},
	year = {2022}}

@inproceedings{eng2021revisiting,
	author = {Eng, Kalvin and Hindle, Abram},
	booktitle = {2021 IEEE/ACM 18th International Conference on Mining Software Repositories (MSR)},
	organization = {IEEE},
	pages = {449--459},
	title = {Revisiting {D}ockerfiles in open source software over time},
	year = {2021}}

@misc{ansiblemoleculedocs,
	author = {{Red Hat, Inc.}},
	howpublished = {https://molecule.readthedocs.io/en/latest/},
	note = {accessed: 02/02/2023},
	title = {Ansible Molecule},
	year = {2023}}

@misc{semver,
	author = {Preston-Werner, Tom},
	howpublished = {https://semver.org/},
	note = {accessed: 02/02/2023},
	title = {Semantic Versioning 2.0.0},
	year = {2013}}

@article{raemaekers2017semantic,
	author = {S. Raemaekers and A. {van Deursen} and J. Visser},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	pages = {140-158},
	title = {Semantic versioning and impact of breaking changes in the Maven repository},
	volume = {129},
	year = {2017},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S0164121216300243},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2016.04.008}}

@article{decan2021what,
	author = {Decan, Alexandre and Mens, Tom},
	date-modified = {2023-02-21 18:23:01 +0100},
	journal = {Transactions on Software Engineering},
	number = {6},
	pages = {1226-1240},
	publisher = {IEEE},
	title = {What Do Package Dependencies Tell Us About Semantic Versioning?},
	volume = {47},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/TSE.2019.2918315}}

@inproceedings{lam2020putting,
	author = {Lam, Patrick and Dietrich, Jens and Pearce, David J.},
	booktitle = {ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software ({Onward!})},
	date-modified = {2023-02-21 18:14:37 +0100},
	isbn = {9781450381789},
	keywords = {program analysis, semantic versioning, code contracts, program evolution, verification},
	pages = {157--179},
	publisher = {ACM},
	title = {Putting the Semantics into Semantic Versioning},
	year = {2020},
	bdsk-url-1 = {https://doi.org/10.1145/3426428.3426922}}

@article{pahl2015containerization,
	author = {Pahl, Claus},
	journal = {IEEE Cloud Computing},
	number = {3},
	pages = {24--31},
	publisher = {IEEE},
	title = {Containerization and the {PaaS} cloud},
	volume = {2},
	year = {2015}}

@book{turnbull2014docker,
	author = {Turnbull, James},
	date-modified = {2018-10-25 16:33:50 +0200},
	publisher = {James Turnbull},
	title = {The {Docker} Book: Containerization is the new virtualization},
	year = {2014}}

@article{dragoni2017microservices,
	author = {Dragoni, Nicola and Giallorenzo, Saverio and Lafuente, Alberto Lluch and Mazzara, Manuel and Montesi, Fabrizio and Mustafin, Ruslan and Safina, Larisa},
	journal = {Present and ulterior software engineering},
	pages = {195--216},
	publisher = {Springer},
	title = {Microservices: yesterday, today, and tomorrow},
	year = {2017}}

@article{10.2307/3250929,
	abstract = {Researchers from a wide range of management areas agree that conflicts are an important part of organizational life and that their study is important. Yet, interpersonal conflict is a neglected topic in information system development (ISD). Based on definitional properties of interpersonal conflict identified in the management and organizational behavior literatures, this paper tests a model of how individuals participating in ISD projects perceive interpersonal conflict and examines the relationships between interpersonal conflict, management of the conflict, and ISD outcomes. Questionnaire data was obtained from 265 IS staff and 272 users working on 162 ISD projects. Results indicated that the construct of interpersonal conflict was reflected by three key dimensions: disagreement, interference, and negative emotion. While conflict management was found to have positive effects on ISD outcomes, it did not substantially mitigate the negative effects of interpersonal conflict on these outcomes. In other words, the impact of interpersonal conflict was perceived to be negative, regardless of how it was managed or resolved.},
	author = {Henri Barki and Jon Hartwick},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {02767783},
	journal = {MIS Quarterly},
	number = {2},
	pages = {195--228},
	publisher = {Management Information Systems Research Center, University of Minnesota},
	title = {Interpersonal Conflict and Its Management in Information System Development},
	urldate = {2023-01-27},
	volume = {25},
	year = {2001},
	bdsk-url-1 = {http://www.jstor.org/stable/3250929}}

@article{stol2014inner,
	author = {Stol, Klaas-Jan and Fitzgerald, Brian},
	journal = {IEEE Software},
	number = {4},
	pages = {60--67},
	publisher = {IEEE},
	title = {Inner source--adopting open source development practices in organizations: a tutorial},
	volume = {32},
	year = {2014}}

@article{kannee2022intertwining,
	author = {Kannee, Kanchanok and Wattanakriengkrai, Supatsara and Rojpaisarnkit, Ruksit and Kula, Raula Gaikovina and Matsumoto, Kenichi},
	journal = {arXiv preprint arXiv:2208.06655},
	title = {Intertwining Ecosystems: A Large Scale Empirical Study of Libraries that Cross Software Ecosystems},
	year = {2022}}

@article{MANIKAS20131294,
	author = {Konstantinos Manikas and Klaus Marius Hansen},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {0164-1212},
	journal = {Journal of Systems and Software},
	keywords = {Software ecosystems, Software ecosystem, Systematic literature review},
	number = {5},
	pages = {1294-1306},
	title = {Software ecosystems -- A systematic literature review},
	volume = {86},
	year = {2013},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S016412121200338X},
	bdsk-url-2 = {https://doi.org/10.1016/j.jss.2012.12.026}}

@book{messerschmitt2003software,
	author = {Messerschmitt, David G and Szyperski, Clemens},
	publisher = {MIT press},
	title = {Software ecosystem: understanding an indispensable technology and industry},
	year = {2003}}

@inproceedings{GolzadehBotse2021,
	author = {Golzadeh, Mehdi and Decan, Alexandre and Constantinou, Eleni and Mens, Tom},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-modified = {2023-02-21 18:28:21 +0100},
	pages = {21-25},
	publisher = {IEEE/ACM},
	title = {Identifying bot activity in {GitHub} pull request and issue comments},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/BotSE52550.2021.00012}}

@article{Wessel2018,
	author = {Wessel, Mairieli and {De Souza}, Bruno Mendes and Steinmacher, Igor and Wiese, Igor S. and Polato, Ivanilton and Chaves, Ana Paula and Gerosa, Marco A.},
	date-modified = {2023-02-21 11:18:53 +0100},
	issn = {25730142},
	journal = {The ACM International Conference on Human-Computer Interaction},
	keywords = {Automated agents,Bots,Chatbots,Open source software,Pull request,Pull-based model},
	title = {The power of bots: Understanding bots in {OSS} projects},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3274451}}

@article{developer_credits,
	author = {Hann, Il-Horn and Roberts, Jeff and Slaughter, Sandra and Fielding, Roy},
	date-modified = {2023-03-12 15:13:52 +0100},
	journal = {International Conference on Information Systems ({ICIS})},
	pages = {33},
	title = {Economic incentives for participating in open source software projects},
	year = {2002}}

@inproceedings{botusage2,
	author = {Lebeuf, Carlene and Zagalsky, Alexey and Foucault, Matthieu and Storey, Margaret-Anne},
	booktitle = {International Workshop on Bots in Software Engineering ({BotSE})},
	date-modified = {2023-02-21 18:32:19 +0100},
	pages = {1-6},
	title = {Defining and Classifying Software Bots: A Faceted Taxonomy},
	year = {2019},
	bdsk-url-1 = {https://doi.org/10.1109/BotSE.2019.00008}}

@inproceedings{bot_desruptive,
	author = {Storey, Margaret-Anne and Zagalsky, Alexey},
	booktitle = {International Symposium on Foundations of Software Engineering ({FSE})},
	date-added = {2022-01-12 2:27:30 PM +0100},
	date-modified = {2023-02-21 11:18:53 +0100},
	keywords = {computer supported collaborative work, Human computer interaction, productivity, software engineering},
	pages = {928-931},
	publisher = {ACM SIGSOFT},
	title = {Disrupting Developer Productivity One Bot at a Time},
	year = {2016},
	bdsk-url-1 = {https://doi.org/10.1145/2950290.2983989}}

@inproceedings{Ponta2018,
	author = {S. Ponta and H. Plate and A. Sabetta},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-03-07 16:06:22 +0100},
	doi = {10.1109/ICSME.2018.00054},
	month = {sep},
	pages = {449-460},
	publisher = {IEEE},
	title = {Beyond Metadata: Code-Centric and Usage-Based Analysis of Known Vulnerabilities in Open-Source Software},
	year = {2018},
	bdsk-url-1 = {https://doi.ieeecomputersociety.org/10.1109/ICSME.2018.00054},
	bdsk-url-2 = {https://doi.org/10.1109/ICSME.2018.00054}}

@article{CogoDown2019,
	author = {Cogo, Filipe Roseiro and Oliva, Gustavo Ansaldi and Hassan, Ahmed E.},
	date-modified = {2023-02-21 18:41:38 +0100},
	journal = {Transactions on Software Engineering},
	pages = {1-1},
	title = {An Empirical Study of Dependency Downgrades in the npm Ecosystem},
	year = {2019}}

@inproceedings{2019_promise_mockus,
	author = {Dey, Tapajit and Ma, Yuxing and Mockus, Audris},
	pages = {36--45},
	title = {Patterns of Effort Contribution and Demand and User Classification Based on Participation Patterns in NPM Ecosystem},
	year = {2019}}

@inproceedings{Ait2022,
	author = {Ait, Adem and Izquierdo, Javier Luis C{\'a}novas and Cabot, Jordi},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-modified = {2023-02-21 18:40:49 +0100},
	pages = {365-375},
	title = {An Empirical Study on the Survival Rate of {GitHub} Projects},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3524842.3527941}}

@inproceedings{coelho2017modern,
	author = {Coelho, Jailton and Valente, Marco Tulio},
	booktitle = {Joint Meeting on Foundations of Software Engineering ({FSE})},
	date-modified = {2023-02-21 17:54:52 +0100},
	pages = {186--196},
	title = {Why modern open source projects fail},
	year = {2017}}

@article{KulaMicro17,
	author = {Raula Gaikovina Kula and Ali Ouni and Daniel M. Germ{\'{a}}n and Katsuro Inoue},
	date-modified = {2023-02-21 11:18:53 +0100},
	eprint = {1709.04638},
	eprinttype = {arXiv},
	journal = {CoRR},
	title = {On the Impact of Micro-Packages: An Empirical Study of the npm JavaScript Ecosystem},
	volume = {abs/1709.04638},
	year = {2017},
	bdsk-url-1 = {http://arxiv.org/abs/1709.04638}}

@article{DiscussHata22,
	address = {USA},
	author = {Hata, Hideaki and Novielli, Nicole and Baltes, Sebastian and Kula, Raula Gaikovina and Treude, Christoph},
	date-modified = {2023-02-21 18:35:57 +0100},
	issn = {1382-3256},
	issue_date = {Jan 2022},
	journal = {Empirical Software Engineering},
	keywords = {GitHub discussions, Exploratory study, Sentiment, Communications, Empirical study},
	month = {jan},
	number = {1},
	numpages = {32},
	publisher = {Kluwer Academic Publishers},
	title = {GitHub Discussions: An Exploratory Study of Early Adoption},
	volume = {27},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1007/s10664-021-10058-6}}

@inproceedings{kikas.2017,
	author = {Kikas, Riivo and Gousios, Georgios and Dumas, Marlon and Pfahl, Dietmar},
	booktitle = {International Conference on Mining Software Repositories ({MSR})},
	date-modified = {2023-02-21 17:57:34 +0100},
	pages = {102--112},
	title = {Structure and Evolution of Package Dependency Networks},
	year = {2017}}

@inproceedings{Mirsaeedi:icse2020,
	author = {Mirsaeedi, Ehsan and Rigby, Peter C.},
	booktitle = {International Conference on Software Engineering {(ICSE})},
	date-modified = {2023-02-21 18:11:34 +0100},
	pages = {1183--1195},
	title = {Mitigating Turnover with Code Review Recommendation: Balancing Expertise, Workload, and Knowledge Distribution},
	year = {2020}}

@article{Brindescu:emse2020,
	author = {Brindescu, Caius and Ahmed, Iftekhar and Jensen, Carlos and Sarma, Anita},
	journal = {Empirical Software Engineering},
	number = {1},
	pages = {562--590},
	title = {An Empirical Investigation into Merge Conflicts and Their Effect on Software Quality},
	volume = {25},
	year = {2020}}

@inproceedings{Nassif:icsme2017,
	author = {Nassif, Mathieu and Robillard, Martin},
	booktitle = {2017 IEEE International Conference on Software Maintenance and Evolution},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {261-272},
	title = {Revisiting Turnover-Induced Knowledge Loss in Software Projects},
	year = {2017},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME.2017.64}}

@inproceedings{Chinthanet:ASE2020,
	author = {Chinthanet, Bodin and Ponta, Serena Elisa and Plate, Henrik and Sabetta, Antonino and Kula, Raula Gaikovina and Ishio, Takashi and Matsumoto, Kenichi},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-modified = {2023-03-07 15:56:52 +0100},
	month = dec,
	numpages = {5},
	pages = {1199--1203},
	title = {Code-Based Vulnerability Detection in {Node.Js} Applications: How Far Are We?},
	year = {2020}}

@inproceedings{Zapata:ICSME2018,
	author = {Zapata, Rodrigo Elizalde and Kula, Raula Gaikovina and Chinthanet, Bodin and Ishio, Takashi and Matsumoto, Kenichi and Ihara, Akinori},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-03-07 15:50:25 +0100},
	month = sep,
	pages = {559-563},
	publisher = {IEEE},
	title = {Towards Smoother Library Migrations: A Look at Vulnerable Dependency Migrations at Function Level for npm {JavaScript} Packages},
	year = {2018}}

@inproceedings{Islam,
	author = {Islam, Syful and Kula, Raula Gaikovina and Treude, Christoph and Chinthanet, Bodin and Ishio, Takashi and Matsumoto, Kenichi},
	booktitle = {International Conference on Software Maintenance and Evolution ({ICSME})},
	date-modified = {2023-03-12 15:20:08 +0100},
	pages = {664-668},
	title = {Contrasting Third-Party Package Management User Experience},
	year = {2021},
	bdsk-url-1 = {https://doi.org/10.1109/ICSME52107.2021.00077}}

@article{10.1145/3555183,
	abstract = {The software industry lacks gender diversity. Recent research has suggested that a toxic working culture is to blame. Studies have found that communications in software repositories directed towards women are more negative in general. In this study, we use a destructive criticism lens to examine gender differences in software code review feedback. Software code review is a practice where code is peer reviewed and negative feedback is often delivered. We explore differences in perceptions, frequency, and impact of destructive criticism across genders. We surveyed 93 software practitioners eliciting perceived reactions to hypothetical scenarios (or vignettes) where participants are asked to imagine receiving either constructive or destructive criticism. In addition, the survey collected general opinions on feedback obtained during software code review as well as the frequency that participants give and receive destructive criticism.We found that opinions on destructive criticism vary. Women perceive destructive criticism as less appropriate and are less motivated to continue working with the developer after receiving destructive criticism. Destructive criticism is fairly common with more than half of respondents having received nonspecific negative feedback and nearly a quarter having received inconsiderate negative feedback in the past year. Our results suggest that destructive criticism in code review could be a contributing factor to the lack of gender diversity observed in the software industry.},
	author = {Gunawardena, Sanuri Dananja and Devine, Peter and Beaumont, Isabelle and Garden, Lola Piper and Murphy-Hill, Emerson and Blincoe, Kelly},
	date-modified = {2023-03-12 14:59:15 +0100},
	journal = {International Conference on Human-Computer Interaction ({CSCW})},
	keywords = {software engineering, diversity and inclusion, software code review, destructive criticism},
	month = {nov},
	publisher = {ACM},
	title = {Destructive Criticism in Software Code Review Impacts Inclusion},
	volume = {6},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1145/3555183}}

@inproceedings{10020161,
	author = {Bleyl, Donald and Buxton, Elham Khorasani},
	booktitle = {2022 IEEE International Conference on Big Data (Big Data)},
	date-modified = {2023-02-21 11:18:53 +0100},
	pages = {5881-5885},
	title = {Emotion Recognition on StackOverflow Posts Using BERT},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/BigData55660.2022.10020161}}

@inproceedings{9953808,
	author = {Novielli, Nicole and Grassi, Daniela and Lanubile, Filippo and Serebrenik, Alexander},
	booktitle = {International Conference on Affective Computing and Intelligent Interaction ({ACII})},
	date-modified = {2023-02-21 17:04:59 +0100},
	title = {Sensor-Based Emotion Recognition in Software Development: Facial Expressions as Gold Standard},
	year = {2022},
	bdsk-url-1 = {https://doi.org/10.1109/ACII55700.2022.9953808}}

@inproceedings{chou2001empirical,
	author = {Chou, Andy and Yang, Junfeng and Chelf, Benjamin and Hallem, Seth and Engler, Dawson},
	booktitle = {ACM Symposium on Operating Systems Principles},
	date-modified = {2023-03-12 14:52:30 +0100},
	pages = {73--88},
	title = {An empirical study of operating systems errors},
	year = {2001}}

@article{businge2015eclipse,
	author = {Businge, John and Serebrenik, Alexander and Van Den Brand, Mark GJ},
	journal = {Software Quality Journal},
	pages = {107--141},
	publisher = {Springer},
	title = {Eclipse {API} usage: the good and the bad},
	volume = {23},
	year = {2015}}

@inproceedings{ramkisoen2022pareco,
	author = {Ramkisoen, Poedjadevie Kadjel and Businge, John and van Bladel, Brent and Decan, Alexandre and Demeyer, Serge and De Roover, Coen and Khomh, Foutse},
	booktitle = {Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering ({ESEC/FSE})},
	date-modified = {2023-03-12 15:08:35 +0100},
	pages = {646--658},
	title = {PaReco: patched clones and missed patches among the divergent variants of a software family},
	year = {2022}}

@article{dig2006apis,
	author = {Dig, Danny and Johnson, Ralph},
	journal = {Journal of software maintenance and evolution: Research and Practice},
	number = {2},
	pages = {83--107},
	publisher = {Wiley Online Library},
	title = {How do {API}s evolve? A story of refactoring},
	volume = {18},
	year = {2006}}

@inproceedings{xavier2017historical,
	author = {Xavier, Laerte and Brito, Aline and Hora, Andre and Valente, Marco Tulio},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-03-12 15:48:56 +0100},
	organization = {IEEE},
	pages = {138--147},
	title = {Historical and impact analysis of {API} breaking changes: A large-scale study},
	year = {2017}}

@inproceedings{brito2018and,
	author = {Brito, Aline and Xavier, Laerte and Hora, Andre and Valente, Marco Tulio},
	booktitle = {International Conference on Software Analysis, Evolution and Reengineering ({SANER})},
	date-modified = {2023-03-12 15:49:53 +0100},
	organization = {IEEE},
	pages = {255--265},
	title = {Why and how Java developers break {API}s},
	year = {2018}}

@article{brito2020you,
	author = {Brito, Aline and Valente, Marco Tulio and Xavier, Laerte and Hora, Andre},
	date-modified = {2023-03-12 15:50:07 +0100},
	journal = {Empirical Software Engineering},
	pages = {1458--1492},
	publisher = {Springer},
	title = {You broke my code: understanding the motivations for breaking changes in {API}s},
	volume = {25},
	year = {2020}}

@inproceedings{andersen2012semantic,
	author = {Andersen, Jesper and Nguyen, Anh Cuong and Lo, David and Lawall, Julia L and Khoo, Siau-Cheng},
	booktitle = {International Conference on Automated Software Engineering ({ASE})},
	date-modified = {2023-03-12 15:04:07 +0100},
	pages = {382--385},
	title = {Semantic patch inference},
	year = {2012}}

@inproceedings{swh-venti-cas,
	author = {Sean Quinlan and Sean Dorward},
	booktitle = {Conference on File and Storage Technologies ({FAST})},
	date-modified = {2023-03-12 15:26:43 +0100},
	month = jan,
	publisher = {USENIX Association},
	title = {Venti: A New Approach to Archival Data Storage},
	url = {https://www.usenix.org/conference/fast-02/venti-new-approach-archival-data-storage},
	year = {2002},
	bdsk-url-1 = {https://www.usenix.org/conference/fast-02/venti-new-approach-archival-data-storage}}

@article{heckman-1990-selection-bias,
	author = {Heckman, James},
	journal = {The American Economic Review},
	number = {2},
	pages = {313--318},
	publisher = {JSTOR},
	title = {Varieties of selection bias},
	volume = {80},
	year = {1990}}

@article{ivie-2018-reproducibility-survey,
	author = {Peter Ivie and Douglas Thain},
	bibsource = {dblp computer science bibliography, https://dblp.org},
	biburl = {https://dblp.org/rec/journals/csur/IvieT18.bib},
	doi = {10.1145/3186266},
	journal = {{ACM} Comput. Surv.},
	number = {3},
	pages = {63:1--63:36},
	timestamp = {Sat, 08 Jan 2022 02:23:07 +0100},
	title = {Reproducibility in Scientific Computing},
	url = {https://doi.org/10.1145/3186266},
	volume = {51},
	year = {2018},
	bdsk-url-1 = {https://doi.org/10.1145/3186266}}

@inproceedings{2022:icsr:makari,
	author = {Makari, {Ilyas Sa{\"\i}d} and Ahmed Zerouali and {De Roover}, Coen},
	booktitle = {Proceedings of the 20th International Conference on Software and Systems Reuse (ICSR 2022)},
	pages = {85--100},
	publisher = {Springer},
	title = {Prevalence and Evolution of License Violations in npm and RubyGems Dependency Networks},
	year = {2022}}


@inproceedings{dicosmo:hal-01590958,
title = {Software Heritage: Why and How to Preserve Software Source Code},
author = {Roberto Di Cosmo and Stefano Zacchiroli},
url = {https://www.softwareheritage.org/wp-content/uploads/2020/01/ipres-2017-swh.pdf
https://hal.archives-ouvertes.fr/hal-01590958},
year = {2017},
date = {2017-09-25},
booktitle = {iPRES 2017: 14th International Conference on Digital Preservation},
address = {Kyoto, Japan},
keywords = {},
pubstate = {published},
tppubtype = {inproceedings}
}

@inproceedings{msr-2022-foss-geography,
title = {Geographic Diversity in Public Code Contributions: An Exploratory Large-Scale Study Over 50 Years},
author = {Davide Rossi and Stefano Zacchiroli},
url = {https://www.softwareheritage.org/wp-content/uploads/2022/12/msr-2022-foss-geography.pdf},
doi = {10.1145/3524842.3528471},
year = {2022},
date = {2022-01-01},
urldate = {2022-01-01},
booktitle = {The 2022 Mining Software Repositories Conference (MSR 2022)},
pages = {80-85},
publisher = {ACM},
pubstate = {published},
tppubtype = {inproceedings}
}

@inproceedings{oss-2022-swh-scanner,
title = {Efficient Prior Publication Identification for Open Source Code},
author = {Daniele Serafini and Stefano Zacchiroli},
url = {https://www.softwareheritage.org/wp-content/uploads/2022/12/oss-2022-swh-scanner.pdf},
doi = {10.1145/3555051.3555068},
year = {2022},
date = {2022-01-01},
urldate = {2022-01-01},
booktitle = {18th International Conference on Open Source Systems (OSS 2022)},
publisher = {ACM},
keywords = {},
pubstate = {published},
tppubtype = {inproceedings}
}

@inproceedings{vAchilles22,
author = {Jarukitpipat, Vipawan and Chhun, Klinton and Wanprasert, Wachirayana and Ragkhitwetsagul, Chaiyong and Choetkiertikul, Morakot and Sunetnanta, Thanwadee and Kula, Raula Gaikovina and Chinthanet, Bodin and Ishio, Takashi and Matsumoto, Kenichi},
title = {V-Achilles: An Interactive Visualization of Transitive Security Vulnerabilities},
year = {2023},
isbn = {9781450394758},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3551349.3559526},
doi = {10.1145/3551349.3559526},
booktitle = {Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
articleno = {169},
numpages = {4},
keywords = {software libraries, fixing known vulnerabilities},
location = {Rochester, MI, USA},
series = {ASE '22}
}

@inproceedings{stcCataldo2008,
author = {Cataldo, Marcelo and Herbsleb, James D. and Carley, Kathleen M.},
title = {Socio-Technical Congruence: A Framework for Assessing the Impact of Technical and Work Dependencies on Software Development Productivity},
year = {2008},
isbn = {9781595939715},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1414004.1414008},
doi = {10.1145/1414004.1414008},
booktitle = {Proceedings of the Second ACM-IEEE International Symposium on Empirical Software Engineering and Measurement},
pages = {2–11},
numpages = {10},
keywords = {collaborative software development, coordination, software dependencies},
location = {Kaiserslautern, Germany},
series = {ESEM '08}
}

@article{Lum2013ExtractingIF,
  title={Extracting insights from the shape of complex data using topology},
  author={Pek Yee Lum and G. Singh and Alan Lehman and T. Ishkanov and Mikael Vejdemo-Johansson and M. Alagappan and J. Carlsson and Gunnar E. Carlsson},
  journal={Scientific Reports},
  year={2013},
  volume={3}
}