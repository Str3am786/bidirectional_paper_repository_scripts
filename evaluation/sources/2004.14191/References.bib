@misc{IntelPTLinuxDocs,
author = {Kernel, Linux},
title = {{Intel Processor Trace Documentation}},
url = {https://github.com/torvalds/linux/blob/master/tools/perf/Documentation/perf-intel-pt.txt}
}
@misc{DyninstWeb,
author = {Dyninst},
title = {{Tools for binary instrumentation, analysis, and modification}},
url = {https://github.com/dyninst/dyninst}
}
@article{Zhang2018,
author = {Zhang, Gen and Zhou, Xu and Luo, Yingqi and Wu, Xugang and Min, Erxue},
doi = {10.1109/ACCESS.2018.2851237},
issn = {2169-3536},
journal = {IEEE Access},
pages = {37302--37313},
title = {{PTfuzz: Guided Fuzzing With Processor Trace Feedback}},
url = {https://ieeexplore.ieee.org/document/8399803/},
volume = {6},
year = {2018}
}
@misc{DynamoRIOWeb,
author = {Bruening, Derek},
title = {{DynamoRIO: Dynamic Instrumentation Tool Platform}},
url = {https://github.com/DynamoRIO/dynamorio}
}
@misc{IntelPinWeb,
author = {Pin},
title = {{A Dynamic Binary Instrumentation Tool}},
url = {https://software.intel.com/en-us/articles/pin-a-dynamic-binary-instrumentation-tool}
}
@misc{SyzkallerPage,
author = {Vyukov, Dmitry},
title = {{Syzkaller: a coverage-guided kernel fuzzer}},
url = {https://github.com/google/syzkaller}
}
@misc{LLVMBug34636,
author = {LLVM},
title = {sancov bug},
url = {https://bugs.llvm.org/show_bug.cgi?id=34636}
}
@inproceedings{AndriesseUsenixSec16,
address = {Austin, TX},
author = {Andriesse, Dennis and Chen, Xi and van der Veen, Victor and Slowinska, Asia and Bos, Herbert},
booktitle = {25th USENIX Security Symposium},
isbn = {978-1-931971-32-4},
month = {aug},
pages = {583--600},
publisher = {USENIX Association},
title = {{An In-Depth Analysis of Disassembly on Full-Scale x86/x64 Binaries}},
url = {https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/andriesse},
year = {2016}
}
@misc{CapstoneEngine,
author = {Capstone},
title = {{Multi-architecture disassembly framework}},
url = {https://github.com/aquynh/capstone}
}
@misc{UnicornEngine,
author = {Unicorn},
title = {{CPU emulator framework}},
url = {https://github.com/unicorn-engine/unicorn}
}
@inproceedings{RetroWriteSP2020,
author = {Dinesh, Sushant and Burow, Nathan and Xu, Dongyan and Payer, Mathias},
booktitle = {IEEE International Symposium on Security and Privacy - S{\&}P'20},
title = {{RetroWrite: Statically Instrumenting COTS Binaries for Fuzzing and Sanitization}},
year = {2020}
}
@misc{RetpolineTurner,
author = {Turner, Paul},
title = {{Retpoline: a software construct for preventing branch-target-injection}},
url = {https://support.google.com/faqs/answer/7625886},
urldate = {2019-10-17}
}
@inproceedings{Andriesse2017,
author = {Andriesse, Dennis and Slowinska, Asia and Bos, Herbert},
booktitle = {IEEE European Symposium on Security and Privacy - EuroS{\{}$\backslash${\&}{\}}P'17},
doi = {10.1109/EuroSP.2017.11},
isbn = {978-1-5090-5762-7},
month = {apr},
pages = {177--189},
publisher = {IEEE},
title = {{Compiler-Agnostic Function Detection in Binaries}},
url = {http://ieeexplore.ieee.org/document/7961979/},
year = {2017}
}
@misc{SanitizeCoverageURL,
author = {SanitizerCoverage},
title = {{LLVM coverage instrumentation}},
url = {https://clang.llvm.org/docs/SanitizerCoverage.html},
urldate = {2019-10-08}
}
@misc{IntelSyscallIntercept,
author = {Syscall-intercept},
title = {a system call intercepting library},
url = {https://github.com/pmem/syscall_intercept}
}
@misc{MicrosoftDetours,
author = {Detours},
title = {{a software package for monitoring and instrumenting API calls on Windows.}},
url = {https://github.com/microsoft/Detours}
}
@inproceedings{UnTracer:SP2019,
author = {Nagy, Stefan and Hicks, Matthew},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P'19},
doi = {10.1109/SP.2019.00069},
isbn = {978-1-5386-6660-9},
month = {may},
pages = {787--802},
publisher = {IEEE},
title = {{Full-Speed Fuzzing: Reducing Fuzzing Overhead through Coverage-Guided Tracing}},
url = {https://ieeexplore.ieee.org/document/8835316/},
year = {2019}
}
@misc{PeachFuzzer,
author = {Peach},
title = {{Grammar-aware fuzzer}},
url = {https://www.peach.tech/products/peach-fuzzer/}
}
@inproceedings{Woo:CCS2013,
address = {New York, New York, USA},
author = {Woo, Maverick and Cha, Sang Kil and Gottlieb, Samantha and Brumley, David},
booktitle = {Proceedings of the 2013 ACM SIGSAC conference on Computer and Communications Security - CCS'13},
doi = {10.1145/2508859.2516736},
isbn = {9781450324779},
keywords = {fuzz configuration scheduling,software security},
pages = {511--522},
publisher = {ACM Press},
title = {{Scheduling black-box mutational fuzzing}},
url = {http://dl.acm.org/citation.cfm?doid=2508859.2516736},
year = {2013}
}
@misc{DharmaFuzzer,
author = {Dharma},
title = {{Generation-based, context-free grammar fuzzer}},
url = {https://github.com/MozillaSecurity/dharma}
}
@inproceedings{Superion:ICSE2019,
author = {Wang, Junjie and Chen, Bihuan and Wei, Lei and Liu, Yang},
booktitle = {IEEE/ACM 41st International Conference on Software Engineering - ICSE'19},
doi = {10.1109/ICSE.2019.00081},
isbn = {978-1-7281-0869-8},
keywords = {ASTs,greybox fuzzing,structured inputs},
month = {may},
pages = {724--735},
publisher = {IEEE},
title = {{Superion: Grammar-Aware Greybox Fuzzing}},
url = {https://ieeexplore.ieee.org/document/8811923/},
year = {2019}
}
@inproceedings{Rebert:USENIX2014,
address = {San Diego, CA},
author = {Rebert, Alexandre and Cha, Sang Kil and Avgerinos, Thanassis and Foote, Jonathan and Warren, David and Grieco, Gustavo and Brumley, David},
booktitle = {23rd USENIX Security Symposium},
isbn = {978-1-931971-15-7},
month = {aug},
pages = {861--875},
publisher = {{\{}USENIX{\}} Association},
title = {{Optimizing Seed Selection for Fuzzing}},
url = {https://www.usenix.org/conference/usenixsecurity14/technical-sessions/presentation/rebert},
year = {2014}
}
@inproceedings{GRIMOIRE:USENIX2019,
author = {Blazytko, Tim and Aschermann, Cornelius and Schl{\"{o}}gel, Moritz and Abbasi, Ali and Schumilo, Sergej and W{\"{o}}rner, Simon and Holz, Thorsten},
booktitle = {28th USENIX Security Symposium},
isbn = {978-1-939133-06-9},
pages = {1985--2002},
title = {{GRIMOIRE: Synthesizing Structure while Fuzzing}},
url = {https://www.usenix.org/conference/usenixsecurity19/presentation/blazytko},
year = {2019}
}
@inproceedings{TFUZZ:IEEESP2018,
author = {Peng, Hui and Shoshitaishvili, Yan and Payer, Mathias},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P18},
doi = {10.1109/SP.2018.00056},
isbn = {978-1-5386-4353-2},
pages = {697--710},
title = {{T-Fuzz: Fuzzing by Program Transformation}},
url = {https://ieeexplore.ieee.org/document/8418632/},
year = {2018}
}
@inproceedings{PLDI:Mathis2019,
author = {Mathis, Bj{\"{o}}rn and Gopinath, Rahul and Mera, Micha{\"{e}}l and Kampmann, Alexander and H{\"{o}}schele, Matthias and Zeller, Andreas},
booktitle = {Proceedings of the 40th ACM Conference on Programming Language Design and Implementation - PLDI'19},
doi = {10.1145/3314221.3314651},
isbn = {9781450367127},
keywords = {fuzzing,parsers,security,test generation},
pages = {548--560},
title = {{Parser-directed fuzzing}},
url = {http://dl.acm.org/citation.cfm?doid=3314221.3314651},
year = {2019}
}
@inproceedings{NEUZZ:She2019,
author = {She, Dongdong and Pei, Kexin and Epstein, Dave and Yang, Junfeng and Ray, Baishakhi and Jana, Suman},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P'19},
doi = {10.1109/SP.2019.00052},
isbn = {978-1-5386-6660-9},
month = {may},
pages = {803--817},
publisher = {IEEE},
title = {{NEUZZ: Efficient Fuzzing with Neural Program Smoothing}},
url = {https://ieeexplore.ieee.org/document/8835342/},
year = {2019}
}
@inproceedings{INSTRIM:BAR2018,
author = {Hsu, Chin-Chia and Wu, Che-Yu and Hsiao, Hsu-Chun and Huang, Shih-Kun},
booktitle = {Symposium on Network and Distributed System Security (NDSS), Workshop on Binary Analysis Research - BAR'18},
title = {{INSTRIM: Lightweight instrumentation for coverage-guided fuzzing}},
url = {https://www.ndss-symposium.org/wp-content/uploads/2018/07/bar2018_14_Hsu_paper.pdf},
year = {2018}
}
@inproceedings{Godefroid2017,
author = {Godefroid, Patrice and Peleg, Hila and Singh, Rishabh},
booktitle = {Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering - ASE'17},
isbn = {9781538626849},
pages = {50--59},
publisher = {IEEE Press},
title = {{Learn{\&}Fuzz: machine learning for input fuzzing}},
url = {https://dl.acm.org/citation.cfm?id=3155573},
year = {2017}
}
@inproceedings{Hoschele2016,
address = {New York, New York, USA},
author = {H{\"{o}}schele, Matthias and Zeller, Andreas},
booktitle = {Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering - ASE'16},
doi = {10.1145/2970276.2970321},
isbn = {9781450338455},
keywords = {Input formats,context-free grammars,dynamic tainting,fuzzing},
pages = {720--725},
publisher = {ACM Press},
title = {{Mining input grammars from dynamic taints}},
url = {http://dl.acm.org/citation.cfm?doid=2970276.2970321},
year = {2016}
}
@inproceedings{WangRAID2019,
address = {Chaoyang District, Beijing},
author = {Wang, Jinghan and Duan, Yue and Song, Wei and Yin, Heng and Song, Chengyu},
booktitle = {22nd International Symposium on Research in Attacks, Intrusions and Defenses - RAID'19},
isbn = {978-1-939133-07-6},
month = {sep},
pages = {1--15},
publisher = {{\{}USENIX{\}} Association},
title = {{Be Sensitive and Collaborative: Analyzing Impact of Coverage Metrics in Greybox Fuzzing}},
url = {https://www.usenix.org/conference/raid2019/presentation/wang},
year = {2019}
}
@article{AFLSmartTSE2019,
author = {Pham, Van-Thuan and B{\"{o}}hme, Marcel and Santosa, Andrew E and Caciulescu, Alexandru R and Roychoudhury, Abhik},
doi = {10.1109/TSE.2019.2941681},
journal = {IEEE Transactions on Software Engineering},
title = {{Smart Greybox Fuzzing}},
url = {https://ieeexplore.ieee.org/document/8839290},
year = {2019}
}
@inproceedings{Gao2019,
address = {New York, New York, USA},
author = {Gao, Xiang and Mechtaev, Sergey and Roychoudhury, Abhik},
booktitle = {Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis - ISSTA'19},
doi = {10.1145/3293882.3330558},
isbn = {9781450362245},
keywords = {Automated program repair,Fuzzing,Overfitting},
pages = {8--18},
publisher = {ACM Press},
title = {{Crash-avoiding program repair}},
url = {http://dl.acm.org/citation.cfm?doid=3293882.3330558},
year = {2019}
}
@inproceedings{AFLGoCCS2017,
address = {New York, New York, USA},
author = {B{\"{o}}hme, Marcel and Pham, Van-Thuan and Nguyen, Manh-Dung and Roychoudhury, Abhik},
booktitle = {Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security - CCS '17},
doi = {10.1145/3133956.3134020},
isbn = {9781450349468},
keywords = {coverage-based greybox fuzzing,crash reproduction,directed testing,patch testing,reachability,verifying true positives},
pages = {2329--2344},
publisher = {ACM Press},
title = {{Directed Greybox Fuzzing}},
url = {http://dl.acm.org/citation.cfm?doid=3133956.3134020},
year = {2017}
}
@inproceedings{FairFuzzASE2018,
address = {New York, New York, USA},
author = {Lemieux, Caroline and Sen, Koushik},
booktitle = {Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering - ASE'18},
doi = {10.1145/3238147.3238176},
isbn = {9781450359375},
keywords = {coverage-guided greybox fuzzing,fuzz testing,rare branches},
pages = {475--485},
publisher = {ACM Press},
title = {{FairFuzz: a targeted mutation strategy for increasing greybox fuzz testing coverage}},
url = {http://dl.acm.org/citation.cfm?doid=3238147.3238176},
year = {2018}
}
@misc{SwieckiHonggfuzz,
author = {Swiecki, Robert},
keywords = {SwieckiHonggfuzz},
title = {{Honggfuzz: a security oriented fuzzer}},
url = {https://github.com/google/honggfuzz}
}
@inproceedings{NAUTILUSNDSS19,
author = {Aschermann, Cornelius and Frassetto, Tommaso and Holz, Thorsten and Jauernig, Patrick and Sadeghi, Ahmad-Reza and Teuchert, Daniel},
booktitle = {26th Annual Network and Distributed System Security Symposium - NDSS'19},
title = {{NAUTILUS: Fishing for Deep Bugs with Grammars}},
url = {https://www.ndss-symposium.org/ndss-paper/nautilus-fishing-for-deep-bugs-with-grammars/},
year = {2019}
}
@misc{Vyukov,
author = {Vyukov, Dmitry},
title = {syzkaller: an unsupervised coverage-guided kernel fuzzer},
url = {https://github.com/google/syzkaller}
}
@misc{ZalewskiAFL,
author = {Zalewski, Michal},
title = {{American fuzzy lop}},
url = {http://lcamtuf.coredump.cx/afl/}
}
@misc{LibFuzzerWebsite,
author = {LibFuzzer},
title = {a library for coverage-guided fuzz testing},
url = {https://llvm.org/docs/LibFuzzer.html}
}
@misc{OSSFUZZ,
author = {OSS-Fuzz},
title = {continuous fuzzing of open source software},
url = {https://github.com/google/oss-fuzz}
}
@misc{ZalewskiAFLWhitePaper,
author = {Zalewski, Michal},
title = {{Technical whitepaper for afl-fuzz}},
url = {http://lcamtuf.coredump.cx/afl/technical_details.txt},
urldate = {2019-09-23}
}
@inproceedings{REDQUEEN:NDSS19,
author = {Aschermann, Cornelius and Schumilo, Sergej and Blazytko, Tim and Gawlik, Robert and Holz, Thorsten},
booktitle = {26th Annual Network and Distributed System Security Symposium - NDSS'19},
title = {{REDQUEEN: Fuzzing with Input-to-State Correspondence}},
url = {https://www.ndss-symposium.org/ndss-paper/redqueen-fuzzing-with-input-to-state-correspondence/},
year = {2019}
}
@inproceedings{CollAFLGan2018,
author = {Gan, Shuitao and Zhang, Chao and Qin, Xiaojun and Tu, Xuwen and Li, Kang and Pei, Zhongyu and Chen, Zuoning},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P'18},
doi = {10.1109/SP.2018.00040},
isbn = {978-1-5386-4353-2},
month = {may},
pages = {679--696},
publisher = {IEEE},
title = {{CollAFL: Path Sensitive Fuzzing}},
url = {https://ieeexplore.ieee.org/document/8418631/},
year = {2018}
}
@article{Wong2016,
author = {Wong, W. Eric and Gao, Ruizhi and Li, Yihao and Abreu, Rui and Wotawa, Franz},
doi = {10.1109/TSE.2016.2521368},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
month = {aug},
number = {8},
pages = {707--740},
title = {{A Survey on Software Fault Localization}},
url = {http://ieeexplore.ieee.org/document/7390282/},
volume = {42},
year = {2016}
}
@inproceedings{Pearson2017,
author = {Pearson, Spencer and Campos, Jose and Just, Rene and Fraser, Gordon and Abreu, Rui and Ernst, Michael D. and Pang, Deric and Keller, Benjamin},
booktitle = {IEEE/ACM 39th International Conference on Software Engineering - ICSE'17},
doi = {10.1109/ICSE.2017.62},
isbn = {978-1-5386-3868-2},
month = {may},
pages = {609--620},
publisher = {IEEE},
title = {{Evaluating and Improving Fault Localization}},
url = {http://ieeexplore.ieee.org/document/7985698/},
year = {2017}
}
@inproceedings{Petrovic2018,
address = {New York, New York, USA},
author = {Petrovi{\'{c}}, Goran and Ivankovi{\'{c}}, Marko},
booktitle = {Proceedings of the 40th International Conference on Software Engineering: Software Engineering in Practice - ICSE-SEIP '18},
doi = {10.1145/3183519.3183521},
isbn = {9781450356596},
pages = {163--171},
publisher = {ACM Press},
title = {{State of mutation testing at google}},
url = {http://dl.acm.org/citation.cfm?doid=3183519.3183521},
year = {2018}
}
@misc{ISO26262:2018,
author = {ISO-26262},
title = {{Road vehicles – Functional safety - Part 6: Product development at the software level}},
url = {https://www.iso.org/obp/ui/#iso:std:iso:26262:-1:ed-2:v1:en}
}
@misc{DO178C,
author = {DO178C},
publisher = {RTCA},
title = {{Software Considerations in Airborne Systems and Equipment Certification}},
url = {https://www.rtca.org}
}
@book{Ammann2016,
author = {Ammann, Paul and Offutt, Jeff},
doi = {10.1017/9781316771273},
isbn = {9781107172012},
month = {dec},
publisher = {Cambridge University Press},
title = {{Introduction to Software Testing}},
url = {https://www.cambridge.org/core/product/identifier/9781316771273/type/book},
year = {2016}
}
@book{Perry2006,
abstract = {3rd ed. Accompanying CD-ROM contains ... "work papers and quality control checklists your organization needs to implement an effective software testing process."--Page 4 of cover. Effective Methods for Software Testing, Third Edition; About the Author; Contents; Introduction; Part I: Assessing Testing Capabilities and Competencies; Chapter 1: Assessing Capabilities, Staff Competency, and User Satisfaction; Part II: Building a Software Testing Environment; Chapter 2: Creating an Environment Supportive of Software Testing; Chapter 3: Building the Software Testing Process; Chapter 4: Selecting and Installing Software Testing Tools; Chapter 5: Building Software Tester Competency; Part III: The Seven-Step Testing Process; Chapter 6: Overview of the Software Testing Process.},
author = {Perry, William E.},
isbn = {9780764598371},
pages = {973},
publisher = {Wiley},
title = {{Effective methods for software testing}},
url = {https://www.oreilly.com/library/view/effective-methods-for/9780764598371/},
year = {2006}
}
@inproceedings{Bernat2011,
address = {New York, New York, USA},
author = {Bernat, Andrew R. and Miller, Barton P.},
booktitle = {Proceedings of the 10th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools - PASTE '11},
doi = {10.1145/2024569.2024572},
isbn = {9781450308496},
keywords = {binary instrumentation,binary rewriting,dynamic instrumentation},
pages = {9},
publisher = {ACM Press},
title = {{Anywhere, any-time binary instrumentation}},
url = {http://dl.acm.org/citation.cfm?doid=2024569.2024572},
year = {2011}
}
@inproceedings{Berner2007,
author = {Berner, Stefan and Weber, Roland and Keller, Rudolf K.},
booktitle = {29th International Conference on Software Engineering - ICSE'07},
doi = {10.1109/ICSE.2007.34},
isbn = {0-7695-2828-7},
issn = {0270-5257},
month = {may},
pages = {612--620},
publisher = {IEEE},
title = {{Enhancing Software Testing by Judicious Use of Code Coverage Information}},
url = {http://ieeexplore.ieee.org/document/4222622/},
year = {2007}
}
@inproceedings{Chekam2017,
author = {Chekam, Thierry Titcheu and Papadakis, Mike and {Le Traon}, Yves and Harman, Mark},
booktitle = {IEEE/ACM 39th International Conference on Software Engineering - ICSE'17},
doi = {10.1109/ICSE.2017.61},
isbn = {978-1-5386-3868-2},
month = {may},
pages = {597--608},
publisher = {IEEE},
title = {{An Empirical Study on Mutation, Statement and Branch Coverage Fault Revelation That Avoids the Unreliable Clean Program Assumption}},
url = {http://ieeexplore.ieee.org/document/7985697/},
year = {2017}
}
@inproceedings{Adler2011,
address = {New York, New York, USA},
author = {Adler, Yoram and Behar, Noam and Raz, Orna and Shehory, Onn and Steindler, Nadav and Ur, Shmuel and Zlotnick, Aviad},
booktitle = {Proceeding of the 33rd international conference on Software engineering - ICSE '11},
doi = {10.1145/1985793.1985897},
isbn = {9781450304450},
keywords = {code coverage analysis,substring hole analysis,system test},
pages = {736},
publisher = {ACM Press},
title = {{Code coverage analysis in practice for large systems}},
url = {https://ieeexplore.ieee.org/abstract/document/6032515},
year = {2011}
}
@inproceedings{Yang2019,
author = {Yang, Yibiao and Zhou, Yuming and Sun, Hao and Su, Zhendong and Zuo, Zhiqiang and Xu, Lei and Xu, Baowen},
booktitle = {IEEE/ACM 41st International Conference on Software Engineering - ICSE'19},
doi = {10.1109/ICSE.2019.00061},
isbn = {978-1-7281-0869-8},
month = {may},
pages = {488--499},
publisher = {IEEE},
title = {{Hunting for Bugs in Code Coverage Tools via Randomized Differential Testing}},
url = {https://ieeexplore.ieee.org/document/8812045/},
year = {2019}
}
@article{Yang2009,
author = {Yang, Q. and Li, J. J. and Weiss, D. M.},
doi = {10.1093/comjnl/bxm021},
issn = {0010-4620},
journal = {The Computer Journal},
month = {aug},
number = {5},
pages = {589--597},
title = {{A Survey of Coverage-Based Testing Tools}},
url = {https://academic.oup.com/comjnl/article-lookup/doi/10.1093/comjnl/bxm021},
volume = {52},
year = {2009}
}
@inproceedings{IvankovicFSE19,
author = {Ivankovic, Marko and Petrovic, Goran and Just, Ren{\'{e}} and Fraser, Gordon},
booktitle = {Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering - ESEC/FSE'19},
pages = {955--963},
title = {{Code coverage at Google}},
year = {2019}
}
@inproceedings{Gopinath2014,
address = {New York, New York, USA},
author = {Gopinath, Rahul and Jensen, Carlos and Groce, Alex},
booktitle = {Proceedings of the 36th International Conference on Software Engineering - ICSE 2014},
doi = {10.1145/2568225.2568278},
isbn = {9781450327565},
keywords = {evaluation of coverage criteria,statistical analysis,test frameworks},
pages = {72--82},
publisher = {ACM Press},
title = {{Code coverage for suite evaluation by developers}},
url = {http://dl.acm.org/citation.cfm?doid=2568225.2568278},
year = {2014}
}
@inproceedings{Raz2007,
address = {Berlin, Heidelberg},
author = {Raz, Orna and Klausner, Moshe and Peleg, Nitzan and Haber, Gad and Farchi, Eitan and Fienblit, Shachar and Filiarsky, Yakov and Gammer, Shay and Novikov, Sergey},
booktitle = {Haifa Verification Conference},
doi = {10.1007/978-3-540-77966-7_19},
month = {oct},
pages = {235--251},
publisher = {Springer Berlin Heidelberg},
title = {{The Advantages of Post-Link Code Coverage}},
url = {http://link.springer.com/10.1007/978-3-540-77966-7_19},
year = {2007}
}
@inproceedings{EBaumanLH18,
author = {Bauman, Erick and Lin, Zhiqiang and Hamlen, Kevin W},
booktitle = {25th Annual Network and Distributed System Security Symposium - NDSS'18},
keywords = {reassembly},
mendeley-tags = {reassembly},
title = {{Superset Disassembly: Statically Rewriting x86 Binaries Without Heuristics}},
url = {http://wp.internetsociety.org/ndss/wp-content/uploads/sites/25/2018/02/ndss2018_05A-4_Bauman_paper.pdf},
year = {2018}
}
@inproceedings{Laurenzano2010,
author = {Laurenzano, Michael A. and Tikir, Mustafa M. and Carrington, Laura and Snavely, Allan},
booktitle = {IEEE International Symposium on Performance Analysis of Systems {\&} Software - ISPASS'10},
doi = {10.1109/ISPASS.2010.5452024},
isbn = {978-1-4244-6023-6},
month = {mar},
pages = {175--183},
publisher = {IEEE},
title = {{PEBIL: Efficient static binary instrumentation for Linux}},
url = {http://ieeexplore.ieee.org/document/5452024/},
year = {2010}
}
@article{wang2017ramblr,
address = {San Diego, California, USA},
author = {Wang, Ruoyu and Shoshitaishvili, Yan and Bianchi, Antonio and Machiry, Aravind and Grosen, John and Grosen, Paul and Kruegel, Christopher and Vigna, Giovanni},
journal = {24th Annual Network and Distributed System Security Symposium - NDSS'17},
keywords = {reassembly},
mendeley-tags = {reassembly},
title = {{Ramblr: Making Reassembly Great Again}},
year = {2017}
}
@inproceedings{Arnold2009,
address = {New York, New York, USA},
author = {Arnold, Jeff and Kaashoek, M. Frans},
booktitle = {Proceedings of the 4th ACM european conference on Computer systems - EuroSys '09},
doi = {10.1145/1519065.1519085},
isbn = {9781605584829},
pages = {187--198},
publisher = {ACM Press},
title = {{Ksplice: automatic rebootless kernel updates}},
url = {http://portal.acm.org/citation.cfm?doid=1519065.1519085},
year = {2009}
}
@inproceedings{Neamtiu2006,
address = {New York, New York, USA},
author = {Neamtiu, Iulian and Hicks, Michael and Stoyle, Gareth and Oriol, Manuel},
booktitle = {Proceedings of the 2006 ACM SIGPLAN conference on Programming language design and implementation  - PLDI '06},
doi = {10.1145/1133981.1133991},
isbn = {1595933204},
pages = {72--83},
publisher = {ACM Press},
title = {{Practical dynamic software updating for C}},
url = {http://portal.acm.org/citation.cfm?doid=1133981.1133991},
year = {2006}
}
@inproceedings{Johansson2014,
author = {Johansson, William and Svensson, Martin and Larson, Ulf E. and Almgren, Magnus and Gulisano, Vincenzo},
booktitle = {IEEE 7th International Conference on Software Testing, Verification and Validation},
doi = {10.1109/ICST.2014.45},
isbn = {978-1-4799-2255-0},
month = {mar},
pages = {323--332},
publisher = {IEEE},
title = {{T-Fuzz: Model-Based Fuzzing for Robustness Testing of Telecommunication Protocols}},
url = {http://ieeexplore.ieee.org/document/6823894/},
year = {2014}
}
@inproceedings{Angora:Chen2018,
author = {Chen, Peng and Chen, Hao},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P'18},
doi = {10.1109/SP.2018.00046},
isbn = {978-1-5386-4353-2},
month = {may},
pages = {711--725},
publisher = {IEEE},
title = {{Angora: Efficient Fuzzing by Principled Search}},
url = {https://ieeexplore.ieee.org/document/8418633/},
year = {2018}
}
@inproceedings{QuachPrakashYan18,
address = {Baltimore, MD, USA},
author = {Quach, Anh and Prakash, Aravind and Yan, Lok-Kwong},
booktitle = {27th USENIX Security Symposium},
pages = {869--886},
title = {{Debloating Software through Piece-Wise Compilation and Loading}},
url = {https://www.usenix.org/conference/usenixsecurity18/presentation/quach},
year = {2018}
}
@inproceedings{QSYMYun2018,
author = {Yun, Insu and Lee, Sangho and Xu, Meng and Jang, Yeongjin and Kim, Taesoo},
booktitle = {27th USENIX Security Symposium},
isbn = {978-1-931971-46-1},
pages = {745--761},
title = {{QSYM: A Practical Concolic Execution Engine Tailored for Hybrid Fuzzing}},
url = {https://www.usenix.org/conference/usenixsecurity18/presentation/yun},
year = {2018}
}
@inproceedings{kAFL:Schumilo2017,
author = {Schumilo, Sergej and Aschermann, Cornelius and Gawlik, Robert and Schinzel, Sebastian and Holz, Thorsten},
booktitle = {Proceedings of the 26th USENIX Security Symposium},
isbn = {9781931971409},
pages = {167--182},
publisher = {USENIX Association},
title = {{kAFL: hardware-assisted feedback fuzzing for OS kernels}},
url = {https://dl.acm.org/citation.cfm?id=3241204},
year = {2017}
}
@phdthesis{Georgiadis2005,
author = {Georgiadis, Loukas},
pages = {156},
school = {Princeton University},
title = {{Linear-Time Algorithms for Dominators and Related Problems}},
url = {https://www.cs.princeton.edu/research/techreps/TR-737-05},
year = {2005}
}
@inproceedings{Cojocar2017a,
author = {Cojocar, Lucian and Kroes, Taddeus and Bos, Herbert},
booktitle = {International Symposium on Engineering Secure Software and Systems - ESSoS'17},
doi = {10.1007/978-3-319-62105-0_12},
pages = {177--195},
publisher = {Springer, Cham},
title = {{JTR: A Binary Solution for Switch-Case Recovery}},
url = {http://link.springer.com/10.1007/978-3-319-62105-0_12},
year = {2017}
}
@inproceedings{revng:CCS2017,
address = {New York, New York, USA},
author = {{Di Federico}, Alessandro and Payer, Mathias and Agosta, Giovanni},
booktitle = {Proceedings of the 26th International Conference on Compiler Construction - CC'17},
doi = {10.1145/3033019.3033028},
isbn = {9781450352338},
keywords = {control-flow graph recovery,function boundary detection,static binary analysis},
pages = {131--141},
publisher = {ACM Press},
title = {{rev.ng: a unified binary analysis framework to recover CFGs and function boundaries}},
url = {http://dl.acm.org/citation.cfm?doid=3033019.3033028},
year = {2017}
}
@techreport{Marick1997,
abstract = {Code coverage tools measure how thoroughly tests exercise programs. I believe they are misused more often than they're used well. This paper describes common misuses in detail, then argues for a particular cautious approach to the use of coverage. There are other ways to measure the thoroughness of tests. See [Kaner96] for a list. These ways all fit under the umbrella term "test coverage." My claims in this paper are specific to code coverage. To avoid tedious repetition of the phrase "code coverage," I'll follow common practice and use the shorthand term "coverage". I'll use the full phrase occasionally to remind you of the scope of the paper. Like code coverage itself, this paper is most useful to programmers testing their own code or to testers who read the source code while testing. It also describes coverage's relevance to the independent product tester (someone who doesn't look at the code) and to managers of developers and testers.},
author = {Marick, Brian},
title = {{How to Misuse Code Coverage}},
url = {http://www.exampler.com/testing-com/writings/coverage.pdf},
year = {1997}
}
@inproceedings{Inozemtseva2014,
author = {Inozemtseva, Laura and Holmes, Reid},
booktitle = {Proceedings of the 36th International Conference on Software Engineering - ICSE'14},
doi = {10.1145/2568225.2568271},
isbn = {9781450327565},
keywords = {Coverage,test suite effectiveness,test suite quality},
pages = {435--445},
title = {{Coverage is not strongly correlated with test suite effectiveness}},
url = {http://dl.acm.org/citation.cfm?doid=2568225.2568271},
year = {2014}
}
@article{Jones2003,
author = {Jones, J.A. and Harrold, M.J.},
doi = {10.1109/TSE.2003.1183927},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
month = {mar},
number = {3},
pages = {195--209},
title = {{Test-suite reduction and prioritization for modified condition/decision coverage}},
url = {http://ieeexplore.ieee.org/document/1183927/},
volume = {29},
year = {2003}
}
@article{Yoo2010,
author = {Yoo, S. and Harman, M.},
doi = {10.1002/stvr.430},
issn = {09600833},
journal = {Software Testing, Verification and Reliability},
keywords = {regression test selection,regression testing,test case prioritization,test suite minimization},
month = {mar},
number = {2},
pages = {n/a--n/a},
publisher = {Wiley-Blackwell},
title = {{Regression testing minimization, selection and prioritization: a survey}},
url = {http://doi.wiley.com/10.1002/stvr.430},
volume = {22},
year = {2010}
}
@inproceedings{Tikir2002,
address = {New York, New York, USA},
author = {Tikir, Mustafa M. and Hollingsworth, Jeffrey K.},
booktitle = {Proceedings of the international symposium on Software testing and analysis - ISSTA '02},
doi = {10.1145/566172.566186},
isbn = {1581135629},
issn = {01635948},
keywords = {code coverage,dominator tree,dynamic code deletion,dynamic code patching,on-demand instrumentation,testing},
number = {4},
pages = {86},
publisher = {ACM Press},
title = {{Efficient instrumentation for code coverage testing}},
url = {http://portal.acm.org/citation.cfm?doid=566172.566186},
volume = {27},
year = {2002}
}
@inproceedings{Agrawal1994,
address = {New York, New York, USA},
author = {Agrawal, Hiralal},
booktitle = {Proceedings of the 21st ACM symposium on principles of programming languages - POPL '94},
doi = {10.1145/174675.175935},
isbn = {0897916360},
pages = {25--34},
publisher = {ACM Press},
title = {{Dominators, super blocks, and program coverage}},
url = {http://portal.acm.org/citation.cfm?doid=174675.175935},
year = {1994}
}
@inproceedings{Meng:ISSTA2016,
address = {New York, New York, USA},
author = {Meng, Xiaozhu and Miller, Barton P.},
booktitle = {Proceedings of the 25th International Symposium on Software Testing and Analysis - ISSTA'16},
doi = {10.1145/2931037.2931047},
isbn = {9781450343909},
keywords = {Challenging code constructs,Jump table model,Static binary code analysis},
pages = {24--35},
publisher = {ACM Press},
title = {{Binary code is not easy}},
url = {http://dl.acm.org/citation.cfm?doid=2931037.2931047},
year = {2016}
}
@inproceedings{Skyfire:Wang2017b,
author = {Wang, Junjie and Chen, Bihuan and Wei, Lei and Liu, Yang},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P'17},
doi = {10.1109/SP.2017.23},
isbn = {978-1-5090-5533-3},
month = {may},
pages = {579--594},
publisher = {IEEE},
title = {{Skyfire: Data-Driven Seed Generation for Fuzzing}},
url = {http://ieeexplore.ieee.org/document/7958599/},
year = {2017}
}
@inproceedings{Driller:Stephens16,
author = {Stephens, Nick and Grosen, John and Salls, Christopher and Dutcher, Andrew and Wang, Ruoyu and Corbetta, Jacopo and Shoshitaishvili, Yan and Kruegel, Christopher and Vigna, Giovanni},
booktitle = {Proceedings of Network and Distributed System Security Symposium - NDSS'16},
title = {{Driller: Augmenting Fuzzing Through Selective Symbolic Execution}},
url = {http://wp.internetsociety.org/ndss/wp-content/uploads/sites/25/2017/09/driller-augmenting-fuzzing-through-selective-symbolic-execution.pdf},
year = {2016}
}
@inproceedings{VUzzerRawat2017,
author = {Rawat, Sanjay and Jain, Vivek and Kumar, Ashish and Cojocar, Lucian and Giuffrida, Cristiano and Bos, Herbert},
booktitle = {Network and Distributed System Security Symposium - NDSS'17},
title = {{VUzzer: Application-aware Evolutionary Fuzzing}},
url = {https://www.vusec.net/download/?t=papers/vuzzer_ndss17.pdf},
year = {2017}
}
@inproceedings{Bohme2016a,
address = {New York, New York, USA},
author = {B{\"{o}}hme, Marcel and Pham, Van-Thuan and Roychoudhury, Abhik},
booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security - CCS'16},
doi = {10.1145/2976749.2978428},
isbn = {9781450341394},
keywords = {foundations,fuzzing,software security,testing efficiency,vulnerability detection},
pages = {1032--1043},
publisher = {ACM Press},
title = {{Coverage-based Greybox Fuzzing as Markov Chain}},
url = {http://dl.acm.org/citation.cfm?doid=2976749.2978428},
year = {2016}
}
@inproceedings{angr:Shoshitaishvili2016,
author = {Shoshitaishvili, Yan and Wang, Ruoyu and Salls, Christopher and Stephens, Nick and Polino, Mario and Dutcher, Andrew and Grosen, John and Feng, Siji and Hauser, Christophe and Kruegel, Christopher and Vigna, Giovanni},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P'16},
doi = {10.1109/SP.2016.17},
isbn = {978-1-5090-0824-7},
pages = {138--157},
publisher = {IEEE},
title = {{SOK: (State of) The Art of War: Offensive Techniques in Binary Analysis}},
url = {http://ieeexplore.ieee.org/document/7546500/},
year = {2016}
}
@inproceedings{Steelix:FSE2017,
address = {New York, New York, USA},
author = {Li, Yuekang and Chen, Bihuan and Chandramohan, Mahinthan and Lin, Shang-Wei and Liu, Yang and Tiu, Alwen},
booktitle = {Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering - ESEC/FSE 2017},
doi = {10.1145/3106237.3106295},
isbn = {9781450351058},
keywords = {binary fuzzing,binary instrumentation,coverage-based fuzzing},
pages = {627--637},
publisher = {ACM Press},
title = {{Steelix: program-state based binary fuzzing}},
url = {http://dl.acm.org/citation.cfm?doid=3106237.3106295},
year = {2017}
}
@inproceedings{USENIXAssociation.2003,
author = {Peng, Fei and Deng, Zhui and Zhang, Xiangyu and Xu, Dongyan and Lin, Zhiqiang and Su, Zhendong},
booktitle = {Proceedings of the 23rd USENIX Security Symposium},
isbn = {9781931971157},
pages = {829--844},
publisher = {USENIX Association},
title = {{X-force: force-executing binary programs for security applications}},
url = {https://dl.acm.org/citation.cfm?id=2671278},
year = {2003}
}
@inproceedings{Godefroid2014,
address = {New York, New York, USA},
author = {Godefroid, Patrice},
booktitle = {Proceedings of the 36th International Conference on Software Engineering - ICSE'14},
doi = {10.1145/2568225.2568273},
isbn = {9781450327565},
keywords = {Program Execution,Testing,Virtual Machine},
pages = {539--549},
publisher = {ACM Press},
title = {{Micro execution}},
url = {http://dl.acm.org/citation.cfm?doid=2568225.2568273},
year = {2014}
}
@inproceedings{Wang2010,
author = {Wang, Tielei and Wei, Tao and Gu, Guofei and Zou, Wei},
booktitle = {IEEE Symposium on Security and Privacy - S{\&}P'10},
doi = {10.1109/SP.2010.37},
isbn = {978-1-4244-6894-2},
pages = {497--512},
publisher = {IEEE},
title = {{TaintScope: A Checksum-Aware Directed Fuzzing Tool for Automatic Software Vulnerability Detection}},
url = {http://ieeexplore.ieee.org/document/5504701/},
year = {2010}
}
@inproceedings{Drewry2007,
author = {Drewry, Will and Ormandy, Tavis},
booktitle = {Proceedings of the first USENIX workshop on Offensive Technologies},
pages = {1},
publisher = {USENIX Association},
title = {{Flayer: exposing application internals}},
url = {https://dl.acm.org/citation.cfm?id=1323277},
year = {2007}
}
@article{Bohme:TSE2016,
author = {Bohme, Marcel and Paul, Soumya},
doi = {10.1109/TSE.2015.2487274},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
month = {apr},
number = {4},
pages = {345--360},
title = {{A Probabilistic Analysis of the Efficiency of Automated Software Testing}},
url = {http://ieeexplore.ieee.org/document/7289448/},
volume = {42},
year = {2016}
}
@inproceedings{BenKhadra2016,
address = {Pittsburgh, PA, USA},
author = {{Ben Khadra}, M. Ammar and Stoffel, Dominik and Kunz, Wolfgang},
booktitle = {International Conference on Compilers, Architecture and Synthesis for Embedded Systems - CASES'16},
doi = {10.1145/2968455.2968505},
title = {{Speculative disassembly of binary code}},
url = {https://dl.acm.org/citation.cfm?id=2968505},
year = {2016}
}
@article{Wang2015,
author = {Wang, Shuai and Wang, Pei and Wu, Dinghao},
isbn = {978-1-931971-232},
journal = {Proceedings of the 24th USENIX Security Symposium},
keywords = {reassembly},
mendeley-tags = {reassembly},
pages = {627--642},
publisher = {USENIX Association},
title = {{Reassembleable disassembling}},
url = {https://www.usenix.org/node/190921},
year = {2015}
}
@inproceedings{Le2014,
author = {Le, Vu and Afshari, Mehrdad and Su, Zhendong},
booktitle = {Proceedings of the 35th Conference on Programming Languages Design and Implementation - PLDI'14},
doi = {10.1145/2666356.2594334},
isbn = {978-1-4503-2784-8},
issn = {03621340},
keywords = {automated testing,compiler testing,equivalent program variants,miscompilation},
month = {jun},
pages = {216--226},
publisher = {ACM},
title = {{Compiler validation via equivalence modulo inputs}},
url = {http://dl.acm.org/citation.cfm?id=2666356.2594334},
year = {2014}
}
@inproceedings{Cifuentes1999,
abstract = {One of the fundamental problems with the analysis of binary (executable) code is that of recognizing, in a machine-independent way, the target addresses of n-conditional branches implemented via a jump table. Without these addresses, the decoding of the machine instructions for a given procedure is incomplete, as well as any analysis on that procedure. We present a technique for recovering jump tables and their target addresses in a machine and compiler independent way. The technique is based on slicing and expression substitution. The assembly code of a procedure that contains an indexed jump is transformed into a normal form which allows us to determine where the jump table is located and what information it contains (e.g. offsets from the table or absolute addresses). The technique has been tested on SPARC and Pentium code generated by C, C++, Fortran and Pascal compilers. Our tests show that up to 90{\%} more of the code in a text segment can be found by using this technique},
author = {Cifuentes, C. and {Van Emmerik}, M.},
booktitle = {Proceedings of the 7th International Workshop on Program Comprehension},
doi = {10.1109/WPC.1999.777758},
isbn = {0-7695-0180-X},
issn = {1092-8138},
keywords = {Binary codes,C,C++,Computer aided software engineering,Computer science,Decoding,Electronic switching systems,Fortran,Pascal compilers,Pentium code,Read only memory,SPARC,Software debugging,Software tools,Target recognition,Testing,absolute addresses,assembly code,binary code,decoding,expression substitution,indexed jump,jump table case statement recovery,machine instructions,n-conditional branches,program control structures,program slicing,reverse engineering,target addresses,text segment},
pages = {192--199},
publisher = {IEEE Comput. Soc},
shorttitle = {Program Comprehension, 1999. Proceedings. Seventh},
title = {{Recovery of jump table case statements from binary code}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=777758},
year = {1999}
}
@inproceedings{BYTEWEIGHT2014Bao,
address = {San Diego, CA},
author = {Bao, Tiffany and Burket, Jonathan and Woo, Maverick and Turner, Rafael and Brumley, David},
booktitle = {Proceeding of the 23rd USENIX Security Symposium},
isbn = {978-1-931971-15-7},
pages = {845--860},
publisher = {USENIX Association},
title = {{BYTEWEIGHT: Learning to Recognize Functions in Binary Code}},
url = {https://www.usenix.org/conference/usenixsecurity14/technical-sessions/presentation/bao},
year = {2014}
}
@inproceedings{BAP:CAV2011Brumley,
abstract = {Although testing is the most widely used technique to control the quality of software systems, it is a topic that, until relatively recently, has received scant attention from the computer research community. Although some pioneering work was already done a considerable time ago [Cho78,GG83,How78,Mye79], the testing of software systems has never become a mainstream activity of scientific research. The reasons that are given to explain this situation usually include arguments to the effect that testing as a technique is inferior to verification — testing can show only the presence of errors, not their absence — and that we should therefore concentrate on developing theory and tools for the latter. It has also been frequently said that testing is by its very nature a non-formal activity, where formal methods and related tools are at best of little use. The first argument is incorrect in the sense that it gives an incomplete picture of the situation. Testing is inferior to verification if the verification model can be assumed to be correct and if its complexity can be handled correctly by the person and or tool involved in the verification task. If these conditions are not fulfilled, which is frequently the case, then testing is often the only available technique to increase the confidence in the correctness of a system. In this talk we will show that the second argument is flawed as well. It is based on the identification of testing with robustness testing, where it is precisely the objective to find out how the system behaves under unspecified circumstances. This excludes the important activity of conformance testing, which tries to test the extent to which system behaviour conforms to its specification. It is precisely in this area where formal methods and tools can help to derive tests systematically from specifications, which is a great improvement over laborious, error-prone and costly manual test derivation. In our talk we show how the process algebraic testing theory due to De Nicola and Hennessy [DNH84,DeN87], originally conceived out of semantic considerations, may be used to obtain principles for test derivation. We will give an overview of the evolution of these ideas over the past ten years or so, starting with the conformance testing theory of simple synchronously communicating reactive systems [Bri88,Lan90] and leading to realistic systems that involve sophisticated asynchronous message passing mechanisms [Tre96,HT97]. Written accounts can be found in [BHT97,He98]. We discuss how such ideas have been used to obtain modern test derivation tools, such as TVEDA and TGV [Pha94, CGPT96,FJJV96], and the tool set that is currently being developed in the C{\^{o}}te-de-Resyste project [STW96]. The advantage of a test theory that is based on well-established process algebraic theory is that in principle there exists a clear link between testing and verification, which allows the areas to share ideas and algorithms [FJJV96,VT98]. Time allowing, we look at some of the methodological differences and commonalities between model checking techniques and testing, one of the differences being that of state space coverage, and an important commonality that of test property selection. In recent years the research into the use of formal methods and tools for testing reactive systems has seen a considerable growth. An overview of different approaches and school of thought can be found in [BPS98], reporting on the first ever Dagstuhl seminar devoted to testing. The formal treatment of conformance testing based on process algebra and/or concurrency theory is certainly not the only viable approach. An important school of thought is the FSM-testing theory grown out of the seminal work of Chow [Cho78], of which a good overview is given in [LY96]. Another interesting formal approach to testing is based on abstract data type theory [Gau95,BGM91].},
archivePrefix = {arXiv},
arxivId = {1301.4779},
author = {Brumley, David and Jager, Ivan and Avgerinos, Thanassis and Schwartz, Edward J.},
booktitle = {Computer Aided Verification},
editor = {Gopalakrishnan, Ganesh and Qadeer, Shaz},
isbn = {9783540272311},
issn = {0018-9235},
pages = {463--469},
publisher = {Springer Berlin Heidelberg},
series = {LNCS},
title = {{BAP: A Binary Analysis Platform}},
url = {https://link.springer.com/chapter/10.1007/978-3-642-22110-1_37},
year = {2011}
}
@inproceedings{Anand:EuroSys2013,
address = {Prague, Czech Republic},
author = {Anand, Kapil and Smithson, Matthew and Elwazeer, Khaled and Kotha, Aparna and Gruen, Jim and Giles, Nathan and Barua, Rajeev},
booktitle = {Proceedings of 8th ACM European Conference on Computer Systems (EuroSys '13)},
doi = {10.1145/2465351.2465380},
isbn = {9781450319942},
keywords = {llvm},
mendeley-tags = {llvm},
month = {apr},
pages = {295--308},
publisher = {ACM Press},
title = {{A compiler-level intermediate representation based binary analysis and rewriting system}},
url = {http://dl.acm.org/citation.cfm?id=2465351.2465380},
year = {2013}
}
@inproceedings{BinIR:ASE17,
    author = {Kim, Soomin and Faerevaag, Markus and Jung, Minkyu and Jung, Seungll and Oh, DongYeop and Lee, JongHyup and Cha, Sang Kil},
    booktitle = {32nd IEEE/ACM International Conference on Automated Software Engineering - ASE'17},
    doi = {10.1109/ASE.2017.8115648},
    isbn = {978-1-5386-2684-9},
    mendeley-groups = {2020/phd-thesis,2020/2020-fse},
    month = {oct},
    pages = {353--364},
    publisher = {IEEE},
    title = {{Testing intermediate representations for binary analysis}},
    url = {http://ieeexplore.ieee.org/document/8115648/},
    year = {2017}
}